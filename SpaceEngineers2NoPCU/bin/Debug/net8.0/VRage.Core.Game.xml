<?xml version="1.0"?>
<doc>
    <assembly>
        <name>VRage.Core.Game</name>
    </assembly>
    <members>
        <member name="T:Keen.VRage.Core.Game.Components.ActivationComponent">
            <summary>
            Component used to propagate tool's or block activation state to the hierarchy.
            VFX/animations/SFX and subscribe to <see cref="P:Keen.VRage.Core.Game.Components.ActivationComponent.OnActivationStatusChanged"/> to get notified of the change
            and react by playing the effect/animation/sound.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.Components.ChildTransformComponentObjectBuilder">
            <see cref="T:Keen.VRage.Core.Game.Components.ChildTransformComponent"/>
        </member>
        <member name="P:Keen.VRage.Core.Game.Components.ChildTransformComponentObjectBuilder.Transform">
            <summary>
            Transformation Data
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.Components.ChildTransformComponentObjectBuilder.TransformWithEulerHint">
            <summary>
            Transformation Data, including quaternion EulerHint (for editor support)
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.Components.ChildTransformComponentObjectBuilder.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.ChildTransformComponentObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.ChildTransformComponentObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Game.Components.ChildTransformComponentObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.ChildTransformComponentObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.ChildTransformComponentObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Game.Components.ChildTransformComponentObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.ChildTransformComponentObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.ChildTransformComponentObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Game.Components.ChildTransformComponentObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.ChildTransformComponentObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.ChildTransformComponentObjectBuilder.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.ChildTransformComponentObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.ChildTransformComponentObjectBuilder.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.ChildTransformComponentObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Game.Components.ChildTransformComponentObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.ChildTransformComponentObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.ChildTransformComponentObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Game.Components.ChildTransformComponentObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.ChildTransformComponentObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.ChildTransformComponentObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Game.Components.ChildTransformComponentObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.ChildTransformComponentObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.ChildTransformComponentObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Game.Components.ChildTransformComponentObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.ChildTransformComponentObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.Components.ChildTransformComponentObjectBuilder.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Components.ChildTransformComponentObjectBuilder.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.ChildTransformComponentObjectBuilder.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Components.ChildTransformComponentObjectBuilder.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Game#Components#ChildTransformComponentObjectBuilder}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.ChildTransformComponentObjectBuilder.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Game.Components.ChildTransformComponentObjectBuilder.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.Components.ChildTransformComponentObjectBuilder.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.Components.ChildTransformComponentObjectBuilder.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.Components.ChildTransformComponentObjectBuilder.TypeInfoHolder.TransformAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Components.ChildTransformComponentObjectBuilder.TypeInfoHolder.TransformAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Components.ChildTransformComponentObjectBuilder.TypeInfoHolder.TransformAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Components.ChildTransformComponentObjectBuilder.TypeInfoHolder.TransformAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Components.ChildTransformComponentObjectBuilder.TypeInfoHolder.TransformAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Components.ChildTransformComponentObjectBuilder.TypeInfoHolder.TransformAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Components.ChildTransformComponentObjectBuilder.TypeInfoHolder.TransformAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Components.ChildTransformComponentObjectBuilder.TypeInfoHolder.TransformAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Components.ChildTransformComponentObjectBuilder.TypeInfoHolder.TransformAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.ChildTransformComponentObjectBuilder.TypeInfoHolder.TransformAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.ChildTransformComponentObjectBuilder.TypeInfoHolder.TransformAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.ChildTransformComponentObjectBuilder.TypeInfoHolder.TransformAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.ChildTransformComponentObjectBuilder.TypeInfoHolder.TransformAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.ChildTransformComponentObjectBuilder.TypeInfoHolder.TransformAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.ChildTransformComponentObjectBuilder.TypeInfoHolder.TransformAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#RelativeTransform}#Set(System.Object,Keen.VRage.Core.RelativeTransform@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.ChildTransformComponentObjectBuilder.TypeInfoHolder.TransformAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#RelativeTransform}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.ChildTransformComponentObjectBuilder.TypeInfoHolder.TransformAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#RelativeTransform}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.ChildTransformComponentObjectBuilder.TypeInfoHolder.TransformAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#RelativeTransform}#Set(System.Byte@,Keen.VRage.Core.RelativeTransform@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.ChildTransformComponentObjectBuilder.TypeInfoHolder.TransformAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.ChildTransformComponentObjectBuilder.TypeInfoHolder.TransformAccessor.Set(Keen.VRage.Core.Game.Components.ChildTransformComponentObjectBuilder@,Keen.VRage.Core.RelativeTransform@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.ChildTransformComponentObjectBuilder.TypeInfoHolder.TransformAccessor.Get(Keen.VRage.Core.Game.Components.ChildTransformComponentObjectBuilder@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Components.ChildTransformComponentObjectBuilder.TypeInfoHolder.TransformWithEulerHintAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Components.ChildTransformComponentObjectBuilder.TypeInfoHolder.TransformWithEulerHintAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Components.ChildTransformComponentObjectBuilder.TypeInfoHolder.TransformWithEulerHintAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Components.ChildTransformComponentObjectBuilder.TypeInfoHolder.TransformWithEulerHintAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Components.ChildTransformComponentObjectBuilder.TypeInfoHolder.TransformWithEulerHintAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Components.ChildTransformComponentObjectBuilder.TypeInfoHolder.TransformWithEulerHintAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Components.ChildTransformComponentObjectBuilder.TypeInfoHolder.TransformWithEulerHintAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Components.ChildTransformComponentObjectBuilder.TypeInfoHolder.TransformWithEulerHintAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Components.ChildTransformComponentObjectBuilder.TypeInfoHolder.TransformWithEulerHintAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.ChildTransformComponentObjectBuilder.TypeInfoHolder.TransformWithEulerHintAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.ChildTransformComponentObjectBuilder.TypeInfoHolder.TransformWithEulerHintAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.ChildTransformComponentObjectBuilder.TypeInfoHolder.TransformWithEulerHintAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.ChildTransformComponentObjectBuilder.TypeInfoHolder.TransformWithEulerHintAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.ChildTransformComponentObjectBuilder.TypeInfoHolder.TransformWithEulerHintAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.ChildTransformComponentObjectBuilder.TypeInfoHolder.TransformWithEulerHintAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#RelativeTransformWithEulerHint}#Set(System.Object,Keen.VRage.Core.RelativeTransformWithEulerHint@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.ChildTransformComponentObjectBuilder.TypeInfoHolder.TransformWithEulerHintAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#RelativeTransformWithEulerHint}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.ChildTransformComponentObjectBuilder.TypeInfoHolder.TransformWithEulerHintAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#RelativeTransformWithEulerHint}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.ChildTransformComponentObjectBuilder.TypeInfoHolder.TransformWithEulerHintAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#RelativeTransformWithEulerHint}#Set(System.Byte@,Keen.VRage.Core.RelativeTransformWithEulerHint@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.ChildTransformComponentObjectBuilder.TypeInfoHolder.TransformWithEulerHintAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.ChildTransformComponentObjectBuilder.TypeInfoHolder.TransformWithEulerHintAccessor.Set(Keen.VRage.Core.Game.Components.ChildTransformComponentObjectBuilder@,Keen.VRage.Core.RelativeTransformWithEulerHint@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.ChildTransformComponentObjectBuilder.TypeInfoHolder.TransformWithEulerHintAccessor.Get(Keen.VRage.Core.Game.Components.ChildTransformComponentObjectBuilder@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Game.Components.ChildTransformComponent">
            <summary>
            Assumes ownership of <see cref="T:Keen.VRage.Core.RelativeTransform"/>
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.Components.EntityParentData">
            <summary>
            Data for entity to be rigid-parented to some other world entity. Entity will be positioned per-frame in such way to be relative to its parent.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.Components.GameComponent">
            <summary>
            <see cref="T:Keen.VRage.DCS.Components.Component"/> derivate with useful gameplay/simulation related helpers and accessors.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.Components.GameComponent.Session">
            <summary>
            Reference to owning <see cref="P:Keen.VRage.Core.Game.Components.GameComponent.Session"/>
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.Components.GameEntityExtensions">
            <summary>
            <seealso cref="T:Keen.VRage.DCS.Components.Entity"/>
            <seealso cref="T:Keen.VRage.Core.Game.Systems.Session"/>
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.Components.EntityMarshal">
            <summary>
            Thread-unsafe extensions
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.Components.HierarchyComponent">
            <summary>
            Implements parent-child relation for Entity.
            <br/> <br/>
            The rules: <br/>
            Init &amp; PostInit access rules apply transitively to children Inits. <br/>
            During child Init, free access to parents is guaranteed and parent Components are always in valid/initialized state (Init was run; not necessary PostInit). <br/>
            Parents are always Created, Staged and Added to Scene before children, destroyed in reverse order. <br/>
            At the end of transition, entire hierarchy always agrees on the current state (e.g. In-scene parents never have Staged children, or vice versa). <br/>
            Assumes ownership of <see cref="T:Keen.VRage.Core.Game.Data.ParentData"/>
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.HierarchyComponent.AddChild(Keen.VRage.DCS.ObjectBuilders.EntityObjectBuilder,Keen.VRage.DCS.Builders.DEntityBuilder)">
            <summary>
            Adds children to this <see cref="T:Keen.VRage.DCS.Components.Entity"/> and automatically transitions it into Scene, if necessary.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.HierarchyComponent.AddChild(Keen.VRage.DCS.Components.Entity)">
            <summary>
            Adds children to this <see cref="T:Keen.VRage.DCS.Components.Entity"/>. 
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.Components.HierarchyComponentExtensions">
            <summary>
            Extensions for <see cref="T:Keen.VRage.Core.Game.Components.HierarchyComponent"/>.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.HierarchyComponentExtensions.GetDescendants(Keen.VRage.DCS.Components.Entity,System.Boolean,System.Boolean,System.Boolean,System.Predicate{Keen.VRage.DCS.Components.Entity})">
            <inheritdoc cref="T:Keen.VRage.Core.Game.Components.HierarchyComponentExtensions.HierarchyEnumerable"/>
        </member>
        <member name="T:Keen.VRage.Core.Game.Components.HierarchyComponentExtensions.HierarchyEnumerable">
            <summary>
            Iterate over the <see cref="T:Keen.VRage.Core.Game.Components.HierarchyComponent"/> tree starting at the <paramref name="root"/> entity.
            </summary>
            <param name="root"></param>
            <param name="includeRoot">Should the <paramref name="root"/> be returned.</param>
            <param name="recursive">Should the enumerable continue after iterating over all direct children.</param>
            <param name="depthFirst">https://www.geeksforgeeks.org/bfs-vs-dfs-binary-tree/</param>
            <param name="filter">Filter to run the entities through</param>
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.HierarchyComponentExtensions.HierarchyEnumerable.#ctor(Keen.VRage.DCS.Components.Entity,System.Boolean,System.Boolean,System.Boolean,System.Predicate{Keen.VRage.DCS.Components.Entity})">
            <summary>
            Iterate over the <see cref="T:Keen.VRage.Core.Game.Components.HierarchyComponent"/> tree starting at the <paramref name="root"/> entity.
            </summary>
            <param name="root"></param>
            <param name="includeRoot">Should the <paramref name="root"/> be returned.</param>
            <param name="recursive">Should the enumerable continue after iterating over all direct children.</param>
            <param name="depthFirst">https://www.geeksforgeeks.org/bfs-vs-dfs-binary-tree/</param>
            <param name="filter">Filter to run the entities through</param>
        </member>
        <member name="T:Keen.VRage.Core.Game.Components.HierarchyComponentExtensions.HierarchyEnumerable.Enumerator">
            <summary />
        </member>
        <member name="T:Keen.VRage.Core.Game.Components.HierarchyComponentObjectBuilder">
            <summary>
            <see cref="T:Keen.VRage.Core.Game.Components.HierarchyComponent"/>
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.Components.HierarchyComponentObjectBuilder.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.HierarchyComponentObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.HierarchyComponentObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Game.Components.HierarchyComponentObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.HierarchyComponentObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.HierarchyComponentObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Game.Components.HierarchyComponentObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.HierarchyComponentObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.HierarchyComponentObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Game.Components.HierarchyComponentObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.HierarchyComponentObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.HierarchyComponentObjectBuilder.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.HierarchyComponentObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.HierarchyComponentObjectBuilder.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.HierarchyComponentObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Game.Components.HierarchyComponentObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.HierarchyComponentObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.HierarchyComponentObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Game.Components.HierarchyComponentObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.HierarchyComponentObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.HierarchyComponentObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Game.Components.HierarchyComponentObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.HierarchyComponentObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.HierarchyComponentObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Game.Components.HierarchyComponentObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.HierarchyComponentObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.Components.HierarchyComponentObjectBuilder.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Components.HierarchyComponentObjectBuilder.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.HierarchyComponentObjectBuilder.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Components.HierarchyComponentObjectBuilder.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Game#Components#HierarchyComponentObjectBuilder}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.HierarchyComponentObjectBuilder.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Game.Components.HierarchyComponentObjectBuilder.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.Components.HierarchyComponentObjectBuilder.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.Components.HierarchyComponentObjectBuilder.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.Components.HierarchyComponentObjectBuilder.TypeInfoHolder.ChildrenAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Components.HierarchyComponentObjectBuilder.TypeInfoHolder.ChildrenAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Components.HierarchyComponentObjectBuilder.TypeInfoHolder.ChildrenAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Components.HierarchyComponentObjectBuilder.TypeInfoHolder.ChildrenAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Components.HierarchyComponentObjectBuilder.TypeInfoHolder.ChildrenAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Components.HierarchyComponentObjectBuilder.TypeInfoHolder.ChildrenAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Components.HierarchyComponentObjectBuilder.TypeInfoHolder.ChildrenAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Components.HierarchyComponentObjectBuilder.TypeInfoHolder.ChildrenAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Components.HierarchyComponentObjectBuilder.TypeInfoHolder.ChildrenAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.HierarchyComponentObjectBuilder.TypeInfoHolder.ChildrenAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.HierarchyComponentObjectBuilder.TypeInfoHolder.ChildrenAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.HierarchyComponentObjectBuilder.TypeInfoHolder.ChildrenAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.HierarchyComponentObjectBuilder.TypeInfoHolder.ChildrenAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.HierarchyComponentObjectBuilder.TypeInfoHolder.ChildrenAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.HierarchyComponentObjectBuilder.TypeInfoHolder.ChildrenAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Collections#KeyedList{System#Guid,Keen#VRage#DCS#ObjectBuilders#EntityObjectBuilder}}#Set(System.Object,Keen.VRage.Library.Collections.KeyedList{System.Guid,Keen.VRage.DCS.ObjectBuilders.EntityObjectBuilder}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.HierarchyComponentObjectBuilder.TypeInfoHolder.ChildrenAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Collections#KeyedList{System#Guid,Keen#VRage#DCS#ObjectBuilders#EntityObjectBuilder}}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.HierarchyComponentObjectBuilder.TypeInfoHolder.ChildrenAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Collections#KeyedList{System#Guid,Keen#VRage#DCS#ObjectBuilders#EntityObjectBuilder}}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.HierarchyComponentObjectBuilder.TypeInfoHolder.ChildrenAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Collections#KeyedList{System#Guid,Keen#VRage#DCS#ObjectBuilders#EntityObjectBuilder}}#Set(System.Byte@,Keen.VRage.Library.Collections.KeyedList{System.Guid,Keen.VRage.DCS.ObjectBuilders.EntityObjectBuilder}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.HierarchyComponentObjectBuilder.TypeInfoHolder.ChildrenAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.HierarchyComponentObjectBuilder.TypeInfoHolder.ChildrenAccessor.Set(Keen.VRage.Core.Game.Components.HierarchyComponentObjectBuilder@,Keen.VRage.Library.Collections.KeyedList{System.Guid,Keen.VRage.DCS.ObjectBuilders.EntityObjectBuilder}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.HierarchyComponentObjectBuilder.TypeInfoHolder.ChildrenAccessor.Get(Keen.VRage.Core.Game.Components.HierarchyComponentObjectBuilder@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Components.HierarchyComponentObjectBuilder.TypeInfoHolder.ShouldSerializeEntityAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Components.HierarchyComponentObjectBuilder.TypeInfoHolder.ShouldSerializeEntityAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Components.HierarchyComponentObjectBuilder.TypeInfoHolder.ShouldSerializeEntityAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Components.HierarchyComponentObjectBuilder.TypeInfoHolder.ShouldSerializeEntityAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Components.HierarchyComponentObjectBuilder.TypeInfoHolder.ShouldSerializeEntityAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Components.HierarchyComponentObjectBuilder.TypeInfoHolder.ShouldSerializeEntityAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Components.HierarchyComponentObjectBuilder.TypeInfoHolder.ShouldSerializeEntityAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Components.HierarchyComponentObjectBuilder.TypeInfoHolder.ShouldSerializeEntityAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Components.HierarchyComponentObjectBuilder.TypeInfoHolder.ShouldSerializeEntityAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.HierarchyComponentObjectBuilder.TypeInfoHolder.ShouldSerializeEntityAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.HierarchyComponentObjectBuilder.TypeInfoHolder.ShouldSerializeEntityAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.HierarchyComponentObjectBuilder.TypeInfoHolder.ShouldSerializeEntityAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.HierarchyComponentObjectBuilder.TypeInfoHolder.ShouldSerializeEntityAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.HierarchyComponentObjectBuilder.TypeInfoHolder.ShouldSerializeEntityAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.HierarchyComponentObjectBuilder.TypeInfoHolder.ShouldSerializeEntityAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#Systems#GameEntitySerializer#SerializationCondition}#Set(System.Object,Keen.VRage.Core.Game.Systems.GameEntitySerializer.SerializationCondition@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.HierarchyComponentObjectBuilder.TypeInfoHolder.ShouldSerializeEntityAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#Systems#GameEntitySerializer#SerializationCondition}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.HierarchyComponentObjectBuilder.TypeInfoHolder.ShouldSerializeEntityAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#Systems#GameEntitySerializer#SerializationCondition}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.HierarchyComponentObjectBuilder.TypeInfoHolder.ShouldSerializeEntityAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#Systems#GameEntitySerializer#SerializationCondition}#Set(System.Byte@,Keen.VRage.Core.Game.Systems.GameEntitySerializer.SerializationCondition@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.HierarchyComponentObjectBuilder.TypeInfoHolder.ShouldSerializeEntityAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.HierarchyComponentObjectBuilder.TypeInfoHolder.ShouldSerializeEntityAccessor.Set(Keen.VRage.Core.Game.Components.HierarchyComponentObjectBuilder@,Keen.VRage.Core.Game.Systems.GameEntitySerializer.SerializationCondition@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.HierarchyComponentObjectBuilder.TypeInfoHolder.ShouldSerializeEntityAccessor.Get(Keen.VRage.Core.Game.Components.HierarchyComponentObjectBuilder@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Game.Components.HierarchyComponentObjectBuilderExtensions">
            <summary />
        </member>
        <member name="T:Keen.VRage.Core.Game.Components.HierarchyComponentObjectBuilderSerializationContext">
            <summary>
            Defines the serialization mode for a HierarchyComponentObjectBuilder
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.Components.HierarchyComponentObjectBuilderSerializationContext.SerializationMode">
            <summary>
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.Components.HierarchyComponentObjectBuilderSerializationContext.SerializationMode.Persistent">
            <summary>
            No Change in the Keys of the Children
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.Components.HierarchyComponentObjectBuilderSerializationContext.SerializationMode.DeterministicIndex">
            <summary>
            ReKeys the children to deterministic keys based on their indices
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.Components.ISaveAwareSessionComponent">
             <summary>
             This is only temp, will be removed, don't add new users!
             https://docs.google.com/document/d/1EVmK1_2qRYIJwoHGpgta3LTekCtZD7ylXX8-df7oHg0/edit#heading=h.koq63fyrjad0
            
             Currently the Session is created first, and save loaded into it.
             This is expected to change, and standard <see cref="T:Keen.VRage.DCS.Annotations.InitAttribute"/> and <see cref="T:Keen.VRage.DCS.Annotations.SerializerAttribute"/> are expected to be used,
             but for now this is late callback <see cref="T:Keen.VRage.Core.Game.Components.SessionComponent"/> can register to retrieve saved data when save is loaded.
             </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.ISaveAwareSessionComponent.OnSaveLoadFinished">
            <summary />
        </member>
        <member name="T:Keen.VRage.Core.Game.Components.SessionComponent">
            <summary>
            Base class for session-singletons, usually world-wide systems.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.Components.VisualTriggerComponent">
             <summary>
             This component is added to entities that want to trigger the spawn of visual-only entities in their surroundings.
            
             They will react with the triggers that filter for the <see cref="T:Keen.VRage.Core.Game.GameSystems.GamePruning.ClientTriggerTag"/>> set by this component.
             </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.Components.WorldTransformComponentObjectBuilder">
            <summary>
            <see cref="T:Keen.VRage.Core.Game.Components.WorldTransformComponent"/>
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.Components.WorldTransformComponentObjectBuilder.Transform">
            <summary>
            Transformation Data
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.Components.WorldTransformComponentObjectBuilder.TransformWithEulerHint">
            <summary>
            Transformation Data, including quaternion EulerHint (for editor support)
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.Components.WorldTransformComponentObjectBuilder.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.WorldTransformComponentObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.WorldTransformComponentObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Game.Components.WorldTransformComponentObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.WorldTransformComponentObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.WorldTransformComponentObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Game.Components.WorldTransformComponentObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.WorldTransformComponentObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.WorldTransformComponentObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Game.Components.WorldTransformComponentObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.WorldTransformComponentObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.WorldTransformComponentObjectBuilder.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.WorldTransformComponentObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.WorldTransformComponentObjectBuilder.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.WorldTransformComponentObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Game.Components.WorldTransformComponentObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.WorldTransformComponentObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.WorldTransformComponentObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Game.Components.WorldTransformComponentObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.WorldTransformComponentObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.WorldTransformComponentObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Game.Components.WorldTransformComponentObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.WorldTransformComponentObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.WorldTransformComponentObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Game.Components.WorldTransformComponentObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.WorldTransformComponentObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.Components.WorldTransformComponentObjectBuilder.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Components.WorldTransformComponentObjectBuilder.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.WorldTransformComponentObjectBuilder.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Components.WorldTransformComponentObjectBuilder.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Game#Components#WorldTransformComponentObjectBuilder}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.WorldTransformComponentObjectBuilder.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Game.Components.WorldTransformComponentObjectBuilder.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.Components.WorldTransformComponentObjectBuilder.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.Components.WorldTransformComponentObjectBuilder.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.Components.WorldTransformComponentObjectBuilder.TypeInfoHolder.TransformAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Components.WorldTransformComponentObjectBuilder.TypeInfoHolder.TransformAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Components.WorldTransformComponentObjectBuilder.TypeInfoHolder.TransformAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Components.WorldTransformComponentObjectBuilder.TypeInfoHolder.TransformAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Components.WorldTransformComponentObjectBuilder.TypeInfoHolder.TransformAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Components.WorldTransformComponentObjectBuilder.TypeInfoHolder.TransformAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Components.WorldTransformComponentObjectBuilder.TypeInfoHolder.TransformAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Components.WorldTransformComponentObjectBuilder.TypeInfoHolder.TransformAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Components.WorldTransformComponentObjectBuilder.TypeInfoHolder.TransformAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.WorldTransformComponentObjectBuilder.TypeInfoHolder.TransformAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.WorldTransformComponentObjectBuilder.TypeInfoHolder.TransformAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.WorldTransformComponentObjectBuilder.TypeInfoHolder.TransformAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.WorldTransformComponentObjectBuilder.TypeInfoHolder.TransformAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.WorldTransformComponentObjectBuilder.TypeInfoHolder.TransformAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.WorldTransformComponentObjectBuilder.TypeInfoHolder.TransformAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#WorldTransform}#Set(System.Object,Keen.VRage.Core.WorldTransform@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.WorldTransformComponentObjectBuilder.TypeInfoHolder.TransformAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#WorldTransform}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.WorldTransformComponentObjectBuilder.TypeInfoHolder.TransformAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#WorldTransform}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.WorldTransformComponentObjectBuilder.TypeInfoHolder.TransformAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#WorldTransform}#Set(System.Byte@,Keen.VRage.Core.WorldTransform@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.WorldTransformComponentObjectBuilder.TypeInfoHolder.TransformAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.WorldTransformComponentObjectBuilder.TypeInfoHolder.TransformAccessor.Set(Keen.VRage.Core.Game.Components.WorldTransformComponentObjectBuilder@,Keen.VRage.Core.WorldTransform@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.WorldTransformComponentObjectBuilder.TypeInfoHolder.TransformAccessor.Get(Keen.VRage.Core.Game.Components.WorldTransformComponentObjectBuilder@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Components.WorldTransformComponentObjectBuilder.TypeInfoHolder.TransformWithEulerHintAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Components.WorldTransformComponentObjectBuilder.TypeInfoHolder.TransformWithEulerHintAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Components.WorldTransformComponentObjectBuilder.TypeInfoHolder.TransformWithEulerHintAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Components.WorldTransformComponentObjectBuilder.TypeInfoHolder.TransformWithEulerHintAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Components.WorldTransformComponentObjectBuilder.TypeInfoHolder.TransformWithEulerHintAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Components.WorldTransformComponentObjectBuilder.TypeInfoHolder.TransformWithEulerHintAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Components.WorldTransformComponentObjectBuilder.TypeInfoHolder.TransformWithEulerHintAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Components.WorldTransformComponentObjectBuilder.TypeInfoHolder.TransformWithEulerHintAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Components.WorldTransformComponentObjectBuilder.TypeInfoHolder.TransformWithEulerHintAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.WorldTransformComponentObjectBuilder.TypeInfoHolder.TransformWithEulerHintAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.WorldTransformComponentObjectBuilder.TypeInfoHolder.TransformWithEulerHintAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.WorldTransformComponentObjectBuilder.TypeInfoHolder.TransformWithEulerHintAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.WorldTransformComponentObjectBuilder.TypeInfoHolder.TransformWithEulerHintAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.WorldTransformComponentObjectBuilder.TypeInfoHolder.TransformWithEulerHintAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.WorldTransformComponentObjectBuilder.TypeInfoHolder.TransformWithEulerHintAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#WorldTransformWithEulerHint}#Set(System.Object,Keen.VRage.Core.WorldTransformWithEulerHint@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.WorldTransformComponentObjectBuilder.TypeInfoHolder.TransformWithEulerHintAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#WorldTransformWithEulerHint}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.WorldTransformComponentObjectBuilder.TypeInfoHolder.TransformWithEulerHintAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#WorldTransformWithEulerHint}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.WorldTransformComponentObjectBuilder.TypeInfoHolder.TransformWithEulerHintAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#WorldTransformWithEulerHint}#Set(System.Byte@,Keen.VRage.Core.WorldTransformWithEulerHint@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.WorldTransformComponentObjectBuilder.TypeInfoHolder.TransformWithEulerHintAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.WorldTransformComponentObjectBuilder.TypeInfoHolder.TransformWithEulerHintAccessor.Set(Keen.VRage.Core.Game.Components.WorldTransformComponentObjectBuilder@,Keen.VRage.Core.WorldTransformWithEulerHint@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Components.WorldTransformComponentObjectBuilder.TypeInfoHolder.TransformWithEulerHintAccessor.Get(Keen.VRage.Core.Game.Components.WorldTransformComponentObjectBuilder@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Game.Components.WorldTransformComponent">
            <summary>
            Position component for Top-level Entities.
            Assumes ownership of <see cref="P:Keen.VRage.Core.Game.Components.WorldTransformComponent.WorldTransform"/> Data on owning <see cref="T:Keen.VRage.DCS.Components.Entity"/>
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.Data.Blob">
            <summary>
            Identifier for <see cref="T:Keen.VRage.Core.Game.Systems.IDataOffloading"/>
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.Blob.Equals(Keen.VRage.Core.Game.Data.Blob)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.Blob.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.Blob.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.Blob.ToString">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Game.Data.Blob.IIndexer">
            <summary>
            Serialized <see cref="T:Keen.VRage.Core.Game.Data.Blob"/>s will be automatically report to <see cref="T:Keen.VRage.Core.Game.Data.Blob.IIndexer"/> if present in the <see cref="T:Keen.VRage.Library.Serialization.SerializationContext"/>
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.Blob.IIndexer.Index(Keen.VRage.Core.Game.Data.Blob)">
            <summary />
        </member>
        <member name="T:Keen.VRage.Core.Game.Data.Blob.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.Blob.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.Blob.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Game.Data.Blob@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.Blob.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.Blob.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Game.Data.Blob@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.Blob.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.Blob.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Game.Data.Blob@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.Blob.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.Blob.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.Blob.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.Blob.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.Blob.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Game.Data.Blob@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.Blob.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.Blob.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Game.Data.Blob@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.Blob.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.Blob.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Game.Data.Blob@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.Blob.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.Blob.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Game.Data.Blob@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.Blob.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.Data.Blob.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Data.Blob.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.Blob.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Data.Blob.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Game#Data#Blob}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.Blob.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Game.Data.Blob.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.Data.Blob.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.Data.Blob.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.Data.Blob.TypeInfoHolder._identifierAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Data.Blob.TypeInfoHolder._identifierAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Data.Blob.TypeInfoHolder._identifierAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Data.Blob.TypeInfoHolder._identifierAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Data.Blob.TypeInfoHolder._identifierAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Data.Blob.TypeInfoHolder._identifierAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Data.Blob.TypeInfoHolder._identifierAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Data.Blob.TypeInfoHolder._identifierAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Data.Blob.TypeInfoHolder._identifierAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.Blob.TypeInfoHolder._identifierAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.Blob.TypeInfoHolder._identifierAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.Blob.TypeInfoHolder._identifierAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.Blob.TypeInfoHolder._identifierAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.Blob.TypeInfoHolder._identifierAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.Blob.TypeInfoHolder._identifierAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Guid}#Set(System.Object,System.Guid@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.Blob.TypeInfoHolder._identifierAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Guid}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.Blob.TypeInfoHolder._identifierAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Guid}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.Blob.TypeInfoHolder._identifierAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Guid}#Set(System.Byte@,System.Guid@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.Blob.TypeInfoHolder._identifierAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.Blob.TypeInfoHolder._identifierAccessor.Set(Keen.VRage.Core.Game.Data.Blob@,System.Guid@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.Blob.TypeInfoHolder._identifierAccessor.Get(Keen.VRage.Core.Game.Data.Blob@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Data.Blob.TypeInfoHolder.IsValidAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Data.Blob.TypeInfoHolder.IsValidAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Data.Blob.TypeInfoHolder.IsValidAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Data.Blob.TypeInfoHolder.IsValidAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Data.Blob.TypeInfoHolder.IsValidAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Data.Blob.TypeInfoHolder.IsValidAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Data.Blob.TypeInfoHolder.IsValidAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Data.Blob.TypeInfoHolder.IsValidAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Data.Blob.TypeInfoHolder.IsValidAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.Blob.TypeInfoHolder.IsValidAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.Blob.TypeInfoHolder.IsValidAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.Blob.TypeInfoHolder.IsValidAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.Blob.TypeInfoHolder.IsValidAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.Blob.TypeInfoHolder.IsValidAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.Blob.TypeInfoHolder.IsValidAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.Blob.TypeInfoHolder.IsValidAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.Blob.TypeInfoHolder.IsValidAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.Blob.TypeInfoHolder.IsValidAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.Blob.TypeInfoHolder.IsValidAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.Blob.TypeInfoHolder.IsValidAccessor.Set(Keen.VRage.Core.Game.Data.Blob@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.Blob.TypeInfoHolder.IsValidAccessor.Get(Keen.VRage.Core.Game.Data.Blob@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Game.Data.BlobSetIndexer">
            <summary>
            See <see cref="T:Keen.VRage.Core.Game.Data.Blob.IIndexer"/>
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.Data.BoundingBoxData">
            <summary>
            Data containing the object's bounding box in its local space.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.BoundingBoxData.DebugDrawAABB(Keen.VRage.DCS.Accessors.DEntity,Keen.VRage.Core.Game.Data.BoundingBoxData,Keen.VRage.Core.Game.RuntimeSystems.DebugDraw.IDebugDrawProvider)">
            <summary>
            Draws AABB boundaries
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.BoundingBoxData.Get(Keen.VRage.DCS.Components.Entity)">
            <summary>
            Gets local bounding-box of entity
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.BoundingBoxData.Get(Keen.VRage.DCS.Accessors.DEntityContext)">
            <summary>
            Gets local bounding-box of entity
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.BoundingBoxData.GetWorldAABB(Keen.VRage.DCS.Components.Entity)">
            <summary>
            Gets AABB bounding box of entity in world space
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.BoundingBoxData.GetWorldAABB(Keen.VRage.DCS.Accessors.DEntityContext)">
            <summary>
            Gets AABB bounding box of entity in world space
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.BoundingBoxData.GetWorldOriented(Keen.VRage.DCS.Components.Entity)">
            <summary>
            Gets oriented bounding box of entity in world space
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.BoundingBoxData.GetWorldOriented(Keen.VRage.DCS.Accessors.DEntityContext)">
            <summary>
            Gets oriented bounding box of entity in world space
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.Data.EntityParentFunctions">
            <summary>
            Entity extensions using ParentData
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EntityParentFunctions.GetClosestParentWith``1(Keen.VRage.DCS.Components.Entity)">
            <summary>
            Get closest parent <see cref="T:Keen.VRage.DCS.Components.Entity"/> that provide the feature <typeparamref name="T"/>.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EntityParentFunctions.GetClosestParentWithData``1(Keen.VRage.DCS.Components.Entity)">
            <summary>
            Get closest parent <see cref="T:Keen.VRage.DCS.Components.Entity"/> that has the data <typeparamref name="T"/>.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.Data.EntityTransformFunctions">
            <summary>
            Functions for DEntity related to <see cref="T:Keen.VRage.Core.WorldTransform"/> and <see cref="T:Keen.VRage.Core.RelativeTransform"/>
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EntityTransformFunctions.GetWorldTransform(Keen.VRage.DCS.Accessors.DEntityContext)">
            <summary>
            Compute <see cref="T:Keen.VRage.Core.WorldTransform"/> of given Entity
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EntityTransformFunctions.GetRelativeTransform(Keen.VRage.DCS.Accessors.DEntityContext)">
            <summary>
            Compute <see cref="T:Keen.VRage.Core.RelativeTransform"/> of given Entity
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EntityTransformFunctions.GetParentWorldTransform(Keen.VRage.DCS.Accessors.DEntityContext)">
            <summary>
            Compute <see cref="T:Keen.VRage.Core.WorldTransform"/> of given Entity's parent
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EntityTransformFunctions.SetWorldTransform(Keen.VRage.DCS.Accessors.DEntityContext,Keen.VRage.Core.WorldTransform@)">
            <summary>
            Set Entity <see cref="T:Keen.VRage.Core.WorldTransform"/> or <see cref="T:Keen.VRage.Core.RelativeTransform"/> adjusted to parent
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EntityTransformFunctions.GetWorldTransform(Keen.VRage.DCS.Accessors.DEntity,Keen.VRage.DCS.Accessors.ReadOnlyEntityData{Keen.VRage.Core.Game.Data.ParentData,Keen.VRage.Core.WorldTransform,Keen.VRage.Core.RelativeTransform})">
            <inheritdoc cref="M:Keen.VRage.Core.Game.Data.EntityTransformFunctions.GetWorldTransform(Keen.VRage.DCS.Accessors.DEntityContext)"/>
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EntityTransformFunctions.GetRelativeTransform(Keen.VRage.DCS.Accessors.DEntity,Keen.VRage.DCS.Accessors.ReadOnlyEntityData{Keen.VRage.Core.Game.Data.ParentData,Keen.VRage.Core.WorldTransform,Keen.VRage.Core.RelativeTransform})">
            <inheritdoc cref="M:Keen.VRage.Core.Game.Data.EntityTransformFunctions.GetRelativeTransform(Keen.VRage.DCS.Accessors.DEntityContext)"/>
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EntityTransformFunctions.GetParentWorldTransform(Keen.VRage.DCS.Accessors.DEntity,Keen.VRage.DCS.Accessors.ReadOnlyEntityData{Keen.VRage.Core.Game.Data.ParentData,Keen.VRage.Core.WorldTransform,Keen.VRage.Core.RelativeTransform})">
            <inheritdoc cref="M:Keen.VRage.Core.Game.Data.EntityTransformFunctions.GetParentWorldTransform(Keen.VRage.DCS.Accessors.DEntityContext)"/>
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EntityTransformFunctions.SetWorldTransform(Keen.VRage.DCS.Accessors.DEntity,Keen.VRage.Core.WorldTransform@,Keen.VRage.DCS.Accessors.EntityData{Keen.VRage.Core.Game.Data.ParentData,Keen.VRage.Core.WorldTransform,Keen.VRage.Core.RelativeTransform})">
            <summary>
            See SetWorldTransform(DEntityContext, in WorldTransform)
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.Data.EnumTestDefinition">
            <summary>
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.Data.EnumTestDefinition.Option">
            <summary>
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.Data.EnumTestDefinition.FlagOption">
            <summary>
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.Data.EnumTestDefinition.ButtonGroupOption">
            <summary>
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.Data.EnumTestDefinition.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer{Keen#VRage#Core#Game#Data#EnumTestDefinition}#NameSerializer">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Data.EnumTestDefinition.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#NameSerializer">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Data.EnumTestDefinition.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#NameType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinition.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer{Keen#VRage#Core#Game#Data#EnumTestDefinition}#ShouldSerializeAsName(Keen.VRage.Library.Serialization.SerializationContext,Keen.VRage.Core.Game.Data.EnumTestDefinition@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinition.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#ShouldSerializeAsName(Keen.VRage.Library.Serialization.SerializationContext,System.Object@)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.Data.EnumTestDefinition.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Data.EnumTestDefinition.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Game#Data#EnumTestDefinition}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinition.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinition.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Game.Data.EnumTestDefinition.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.Data.EnumTestDefinition.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.Data.EnumTestDefinition.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.Data.EnumTestDefinition.TypeInfoHolder.OptionAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Data.EnumTestDefinition.TypeInfoHolder.OptionAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Data.EnumTestDefinition.TypeInfoHolder.OptionAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Data.EnumTestDefinition.TypeInfoHolder.OptionAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Data.EnumTestDefinition.TypeInfoHolder.OptionAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Data.EnumTestDefinition.TypeInfoHolder.OptionAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Data.EnumTestDefinition.TypeInfoHolder.OptionAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Data.EnumTestDefinition.TypeInfoHolder.OptionAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Data.EnumTestDefinition.TypeInfoHolder.OptionAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinition.TypeInfoHolder.OptionAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinition.TypeInfoHolder.OptionAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinition.TypeInfoHolder.OptionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinition.TypeInfoHolder.OptionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinition.TypeInfoHolder.OptionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinition.TypeInfoHolder.OptionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#Data#Options}#Set(System.Object,Keen.VRage.Core.Game.Data.Options@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinition.TypeInfoHolder.OptionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#Data#Options}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinition.TypeInfoHolder.OptionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#Data#Options}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinition.TypeInfoHolder.OptionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#Data#Options}#Set(System.Byte@,Keen.VRage.Core.Game.Data.Options@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinition.TypeInfoHolder.OptionAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinition.TypeInfoHolder.OptionAccessor.Set(Keen.VRage.Core.Game.Data.EnumTestDefinition@,Keen.VRage.Core.Game.Data.Options@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinition.TypeInfoHolder.OptionAccessor.Get(Keen.VRage.Core.Game.Data.EnumTestDefinition@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Data.EnumTestDefinition.TypeInfoHolder.FlagOptionAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Data.EnumTestDefinition.TypeInfoHolder.FlagOptionAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Data.EnumTestDefinition.TypeInfoHolder.FlagOptionAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Data.EnumTestDefinition.TypeInfoHolder.FlagOptionAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Data.EnumTestDefinition.TypeInfoHolder.FlagOptionAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Data.EnumTestDefinition.TypeInfoHolder.FlagOptionAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Data.EnumTestDefinition.TypeInfoHolder.FlagOptionAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Data.EnumTestDefinition.TypeInfoHolder.FlagOptionAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Data.EnumTestDefinition.TypeInfoHolder.FlagOptionAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinition.TypeInfoHolder.FlagOptionAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinition.TypeInfoHolder.FlagOptionAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinition.TypeInfoHolder.FlagOptionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinition.TypeInfoHolder.FlagOptionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinition.TypeInfoHolder.FlagOptionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinition.TypeInfoHolder.FlagOptionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#Data#FlagOptions}#Set(System.Object,Keen.VRage.Core.Game.Data.FlagOptions@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinition.TypeInfoHolder.FlagOptionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#Data#FlagOptions}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinition.TypeInfoHolder.FlagOptionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#Data#FlagOptions}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinition.TypeInfoHolder.FlagOptionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#Data#FlagOptions}#Set(System.Byte@,Keen.VRage.Core.Game.Data.FlagOptions@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinition.TypeInfoHolder.FlagOptionAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinition.TypeInfoHolder.FlagOptionAccessor.Set(Keen.VRage.Core.Game.Data.EnumTestDefinition@,Keen.VRage.Core.Game.Data.FlagOptions@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinition.TypeInfoHolder.FlagOptionAccessor.Get(Keen.VRage.Core.Game.Data.EnumTestDefinition@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Data.EnumTestDefinition.TypeInfoHolder.ButtonGroupOptionAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Data.EnumTestDefinition.TypeInfoHolder.ButtonGroupOptionAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Data.EnumTestDefinition.TypeInfoHolder.ButtonGroupOptionAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Data.EnumTestDefinition.TypeInfoHolder.ButtonGroupOptionAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Data.EnumTestDefinition.TypeInfoHolder.ButtonGroupOptionAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Data.EnumTestDefinition.TypeInfoHolder.ButtonGroupOptionAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Data.EnumTestDefinition.TypeInfoHolder.ButtonGroupOptionAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Data.EnumTestDefinition.TypeInfoHolder.ButtonGroupOptionAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Data.EnumTestDefinition.TypeInfoHolder.ButtonGroupOptionAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinition.TypeInfoHolder.ButtonGroupOptionAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinition.TypeInfoHolder.ButtonGroupOptionAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinition.TypeInfoHolder.ButtonGroupOptionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinition.TypeInfoHolder.ButtonGroupOptionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinition.TypeInfoHolder.ButtonGroupOptionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinition.TypeInfoHolder.ButtonGroupOptionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#Data#Options}#Set(System.Object,Keen.VRage.Core.Game.Data.Options@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinition.TypeInfoHolder.ButtonGroupOptionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#Data#Options}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinition.TypeInfoHolder.ButtonGroupOptionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#Data#Options}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinition.TypeInfoHolder.ButtonGroupOptionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#Data#Options}#Set(System.Byte@,Keen.VRage.Core.Game.Data.Options@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinition.TypeInfoHolder.ButtonGroupOptionAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinition.TypeInfoHolder.ButtonGroupOptionAccessor.Set(Keen.VRage.Core.Game.Data.EnumTestDefinition@,Keen.VRage.Core.Game.Data.Options@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinition.TypeInfoHolder.ButtonGroupOptionAccessor.Get(Keen.VRage.Core.Game.Data.EnumTestDefinition@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Game.Data.Options">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.Data.FlagOptions">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.Data.IBoundsProvider">
            <summary>
            Provider of bounding box data of the entity
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.Data.IBoundsProvider.LocalBounds">
            <summary>
            Get local bounds of the entity
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.Data.IsSimulated">
            <summary>
            Denotes whether an entity is simulated locally.
            Entities without this tag are assumed to be driven from a remote scene.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.Data.WhenSimulatedAttribute">
            <summary>
            Equivalent of <see cref="T:Keen.VRage.DCS.Annotations.MustHaveAttribute"/> with <see cref="T:Keen.VRage.Core.Game.Data.IsSimulated"/> constraint
            Applies to annotated Job or all nested Jobs in case of annotated types
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.Data.ParentData">
            <summary>
            Implements parent-child relation for DEntity (and thus Entity by extension)
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.Data.ParentDataFunctions">
            <summary>
            ParentData extensions
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.ParentDataFunctions.GetTopLevelParent(Keen.VRage.DCS.Accessors.ReadOnlyEntityData{Keen.VRage.Core.Game.Data.ParentData},Keen.VRage.DCS.Accessors.DEntity)">
            <summary>
            Gets the top level parent in the hierarchy. If no parent is present, the same <see cref="T:Keen.VRage.DCS.Accessors.DEntity"/> is returned.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.Option">
            <summary>
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.FlagOption">
            <summary>
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.ButtonGroupOption">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Game#Data#EnumTestDefinitionObjectBuilder}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.TypeInfoHolder.OptionAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.TypeInfoHolder.OptionAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.TypeInfoHolder.OptionAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.TypeInfoHolder.OptionAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.TypeInfoHolder.OptionAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.TypeInfoHolder.OptionAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.TypeInfoHolder.OptionAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.TypeInfoHolder.OptionAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.TypeInfoHolder.OptionAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.TypeInfoHolder.OptionAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.TypeInfoHolder.OptionAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.TypeInfoHolder.OptionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.TypeInfoHolder.OptionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.TypeInfoHolder.OptionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.TypeInfoHolder.OptionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#Data#Options}#Set(System.Object,Keen.VRage.Core.Game.Data.Options@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.TypeInfoHolder.OptionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#Data#Options}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.TypeInfoHolder.OptionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#Data#Options}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.TypeInfoHolder.OptionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#Data#Options}#Set(System.Byte@,Keen.VRage.Core.Game.Data.Options@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.TypeInfoHolder.OptionAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.TypeInfoHolder.OptionAccessor.Set(Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder@,Keen.VRage.Core.Game.Data.Options@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.TypeInfoHolder.OptionAccessor.Get(Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.TypeInfoHolder.FlagOptionAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.TypeInfoHolder.FlagOptionAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.TypeInfoHolder.FlagOptionAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.TypeInfoHolder.FlagOptionAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.TypeInfoHolder.FlagOptionAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.TypeInfoHolder.FlagOptionAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.TypeInfoHolder.FlagOptionAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.TypeInfoHolder.FlagOptionAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.TypeInfoHolder.FlagOptionAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.TypeInfoHolder.FlagOptionAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.TypeInfoHolder.FlagOptionAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.TypeInfoHolder.FlagOptionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.TypeInfoHolder.FlagOptionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.TypeInfoHolder.FlagOptionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.TypeInfoHolder.FlagOptionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#Data#FlagOptions}#Set(System.Object,Keen.VRage.Core.Game.Data.FlagOptions@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.TypeInfoHolder.FlagOptionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#Data#FlagOptions}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.TypeInfoHolder.FlagOptionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#Data#FlagOptions}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.TypeInfoHolder.FlagOptionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#Data#FlagOptions}#Set(System.Byte@,Keen.VRage.Core.Game.Data.FlagOptions@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.TypeInfoHolder.FlagOptionAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.TypeInfoHolder.FlagOptionAccessor.Set(Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder@,Keen.VRage.Core.Game.Data.FlagOptions@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.TypeInfoHolder.FlagOptionAccessor.Get(Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.TypeInfoHolder.ButtonGroupOptionAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.TypeInfoHolder.ButtonGroupOptionAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.TypeInfoHolder.ButtonGroupOptionAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.TypeInfoHolder.ButtonGroupOptionAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.TypeInfoHolder.ButtonGroupOptionAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.TypeInfoHolder.ButtonGroupOptionAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.TypeInfoHolder.ButtonGroupOptionAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.TypeInfoHolder.ButtonGroupOptionAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.TypeInfoHolder.ButtonGroupOptionAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.TypeInfoHolder.ButtonGroupOptionAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.TypeInfoHolder.ButtonGroupOptionAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.TypeInfoHolder.ButtonGroupOptionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.TypeInfoHolder.ButtonGroupOptionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.TypeInfoHolder.ButtonGroupOptionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.TypeInfoHolder.ButtonGroupOptionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#Data#Options}#Set(System.Object,Keen.VRage.Core.Game.Data.Options@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.TypeInfoHolder.ButtonGroupOptionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#Data#Options}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.TypeInfoHolder.ButtonGroupOptionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#Data#Options}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.TypeInfoHolder.ButtonGroupOptionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#Data#Options}#Set(System.Byte@,Keen.VRage.Core.Game.Data.Options@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.TypeInfoHolder.ButtonGroupOptionAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.TypeInfoHolder.ButtonGroupOptionAccessor.Set(Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder@,Keen.VRage.Core.Game.Data.Options@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder.TypeInfoHolder.ButtonGroupOptionAccessor.Get(Keen.VRage.Core.Game.Data.EnumTestDefinitionObjectBuilder@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Game.Definitions.DefaultPrefabsPostProcessor">
            <summary />
        </member>
        <member name="T:Keen.VRage.Core.Game.Definitions.DefaultPrefabsPostProcessor.DummyDefinition">
            <summary>
            TODO SE2-12933 Remove
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.Definitions.EntityBundleDefinition">
            <summary>
            Wrapper struct for <see cref="T:Keen.VRage.Core.Game.Systems.EntityBundle"/> that exposes it as a copy.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.Definitions.EntityBundleDefinition._bundle">
            <summary>
            Wrapped EntityBundle
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.EntityBundleDefinition.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer{Keen#VRage#Core#Game#Definitions#EntityBundleDefinition}#NameSerializer">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.EntityBundleDefinition.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#NameSerializer">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.EntityBundleDefinition.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#NameType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityBundleDefinition.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer{Keen#VRage#Core#Game#Definitions#EntityBundleDefinition}#ShouldSerializeAsName(Keen.VRage.Library.Serialization.SerializationContext,Keen.VRage.Core.Game.Definitions.EntityBundleDefinition@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityBundleDefinition.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#ShouldSerializeAsName(Keen.VRage.Library.Serialization.SerializationContext,System.Object@)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.Definitions.EntityBundleDefinition.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.EntityBundleDefinition.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Game#Definitions#EntityBundleDefinition}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityBundleDefinition.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityBundleDefinition.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Game.Definitions.EntityBundleDefinition.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.Definitions.EntityBundleDefinition.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.Definitions.EntityBundleDefinition.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.EntityBundleDefinition.TypeInfoHolder._bundleAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.EntityBundleDefinition.TypeInfoHolder._bundleAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.EntityBundleDefinition.TypeInfoHolder._bundleAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.EntityBundleDefinition.TypeInfoHolder._bundleAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.EntityBundleDefinition.TypeInfoHolder._bundleAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.EntityBundleDefinition.TypeInfoHolder._bundleAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.EntityBundleDefinition.TypeInfoHolder._bundleAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.EntityBundleDefinition.TypeInfoHolder._bundleAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.EntityBundleDefinition.TypeInfoHolder._bundleAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityBundleDefinition.TypeInfoHolder._bundleAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityBundleDefinition.TypeInfoHolder._bundleAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityBundleDefinition.TypeInfoHolder._bundleAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityBundleDefinition.TypeInfoHolder._bundleAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityBundleDefinition.TypeInfoHolder._bundleAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityBundleDefinition.TypeInfoHolder._bundleAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#Systems#EntityBundle}#Set(System.Object,Keen.VRage.Core.Game.Systems.EntityBundle@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityBundleDefinition.TypeInfoHolder._bundleAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#Systems#EntityBundle}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityBundleDefinition.TypeInfoHolder._bundleAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#Systems#EntityBundle}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityBundleDefinition.TypeInfoHolder._bundleAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#Systems#EntityBundle}#Set(System.Byte@,Keen.VRage.Core.Game.Systems.EntityBundle@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityBundleDefinition.TypeInfoHolder._bundleAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityBundleDefinition.TypeInfoHolder._bundleAccessor.Set(Keen.VRage.Core.Game.Definitions.EntityBundleDefinition@,Keen.VRage.Core.Game.Systems.EntityBundle@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityBundleDefinition.TypeInfoHolder._bundleAccessor.Get(Keen.VRage.Core.Game.Definitions.EntityBundleDefinition@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Game.Definitions.LayerInteractionType">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.Definitions.EntityLayerData">
            <summary>
            Wrapper for entity layer index
            </summary>
            <param name="layerIndex"></param>
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerData.#ctor(System.Int32)">
            <summary>
            Wrapper for entity layer index
            </summary>
            <param name="layerIndex"></param>
        </member>
        <member name="T:Keen.VRage.Core.Game.Definitions.EntityLayerPair">
            <summary>
            Represents a physics material pair.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.Definitions.EntityLayerPair.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerPair.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerPair.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Game.Definitions.EntityLayerPair@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerPair.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerPair.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Game.Definitions.EntityLayerPair@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerPair.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerPair.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Game.Definitions.EntityLayerPair@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerPair.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerPair.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerPair.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerPair.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerPair.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Game.Definitions.EntityLayerPair@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerPair.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerPair.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Game.Definitions.EntityLayerPair@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerPair.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerPair.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerPair.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Game.Definitions.EntityLayerPair@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerPair.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.Definitions.EntityLayerPair.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.EntityLayerPair.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerPair.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.EntityLayerPair.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Game#Definitions#EntityLayerPair}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerPair.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Game.Definitions.EntityLayerPair.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.Definitions.EntityLayerPair.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.Definitions.EntityLayerPair.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.EntityLayerPair.TypeInfoHolder.LayerAAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.EntityLayerPair.TypeInfoHolder.LayerAAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.EntityLayerPair.TypeInfoHolder.LayerAAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.EntityLayerPair.TypeInfoHolder.LayerAAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.EntityLayerPair.TypeInfoHolder.LayerAAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.EntityLayerPair.TypeInfoHolder.LayerAAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.EntityLayerPair.TypeInfoHolder.LayerAAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.EntityLayerPair.TypeInfoHolder.LayerAAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.EntityLayerPair.TypeInfoHolder.LayerAAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerPair.TypeInfoHolder.LayerAAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerPair.TypeInfoHolder.LayerAAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerPair.TypeInfoHolder.LayerAAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerPair.TypeInfoHolder.LayerAAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerPair.TypeInfoHolder.LayerAAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerPair.TypeInfoHolder.LayerAAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Utils#StringId}#Set(System.Object,Keen.VRage.Library.Utils.StringId@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerPair.TypeInfoHolder.LayerAAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Utils#StringId}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerPair.TypeInfoHolder.LayerAAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Utils#StringId}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerPair.TypeInfoHolder.LayerAAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Utils#StringId}#Set(System.Byte@,Keen.VRage.Library.Utils.StringId@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerPair.TypeInfoHolder.LayerAAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerPair.TypeInfoHolder.LayerAAccessor.Set(Keen.VRage.Core.Game.Definitions.EntityLayerPair@,Keen.VRage.Library.Utils.StringId@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerPair.TypeInfoHolder.LayerAAccessor.Get(Keen.VRage.Core.Game.Definitions.EntityLayerPair@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.EntityLayerPair.TypeInfoHolder.LayerBAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.EntityLayerPair.TypeInfoHolder.LayerBAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.EntityLayerPair.TypeInfoHolder.LayerBAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.EntityLayerPair.TypeInfoHolder.LayerBAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.EntityLayerPair.TypeInfoHolder.LayerBAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.EntityLayerPair.TypeInfoHolder.LayerBAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.EntityLayerPair.TypeInfoHolder.LayerBAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.EntityLayerPair.TypeInfoHolder.LayerBAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.EntityLayerPair.TypeInfoHolder.LayerBAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerPair.TypeInfoHolder.LayerBAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerPair.TypeInfoHolder.LayerBAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerPair.TypeInfoHolder.LayerBAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerPair.TypeInfoHolder.LayerBAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerPair.TypeInfoHolder.LayerBAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerPair.TypeInfoHolder.LayerBAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Utils#StringId}#Set(System.Object,Keen.VRage.Library.Utils.StringId@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerPair.TypeInfoHolder.LayerBAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Utils#StringId}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerPair.TypeInfoHolder.LayerBAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Utils#StringId}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerPair.TypeInfoHolder.LayerBAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Utils#StringId}#Set(System.Byte@,Keen.VRage.Library.Utils.StringId@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerPair.TypeInfoHolder.LayerBAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerPair.TypeInfoHolder.LayerBAccessor.Set(Keen.VRage.Core.Game.Definitions.EntityLayerPair@,Keen.VRage.Library.Utils.StringId@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerPair.TypeInfoHolder.LayerBAccessor.Get(Keen.VRage.Core.Game.Definitions.EntityLayerPair@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Game.Definitions.EntityLayerConfiguration">
            <summary>
            Defines available entity layers
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.EntityLayerConfiguration.Layers">
            <summary>
            Distinct set of all entity layer names
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.EntityLayerConfiguration.LayerPairInteraction">
            <summary>
            Dictionary of all entity layer pairs and their interaction type
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.EntityLayerConfiguration.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer{Keen#VRage#Core#Game#Definitions#EntityLayerConfiguration}#NameSerializer">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.EntityLayerConfiguration.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#NameSerializer">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.EntityLayerConfiguration.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#NameType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerConfiguration.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer{Keen#VRage#Core#Game#Definitions#EntityLayerConfiguration}#ShouldSerializeAsName(Keen.VRage.Library.Serialization.SerializationContext,Keen.VRage.Core.Game.Definitions.EntityLayerConfiguration@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerConfiguration.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#ShouldSerializeAsName(Keen.VRage.Library.Serialization.SerializationContext,System.Object@)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.Definitions.EntityLayerConfiguration.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.EntityLayerConfiguration.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Game#Definitions#EntityLayerConfiguration}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerConfiguration.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerConfiguration.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Game.Definitions.EntityLayerConfiguration.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.Definitions.EntityLayerConfiguration.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.Definitions.EntityLayerConfiguration.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.EntityLayerConfiguration.TypeInfoHolder.LayersAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.EntityLayerConfiguration.TypeInfoHolder.LayersAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.EntityLayerConfiguration.TypeInfoHolder.LayersAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.EntityLayerConfiguration.TypeInfoHolder.LayersAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.EntityLayerConfiguration.TypeInfoHolder.LayersAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.EntityLayerConfiguration.TypeInfoHolder.LayersAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.EntityLayerConfiguration.TypeInfoHolder.LayersAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.EntityLayerConfiguration.TypeInfoHolder.LayersAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.EntityLayerConfiguration.TypeInfoHolder.LayersAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerConfiguration.TypeInfoHolder.LayersAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerConfiguration.TypeInfoHolder.LayersAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerConfiguration.TypeInfoHolder.LayersAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerConfiguration.TypeInfoHolder.LayersAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerConfiguration.TypeInfoHolder.LayersAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerConfiguration.TypeInfoHolder.LayersAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Immutable#ImmutableArray{Keen#VRage#Library#Utils#StringId}}#Set(System.Object,System.Collections.Immutable.ImmutableArray{Keen.VRage.Library.Utils.StringId}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerConfiguration.TypeInfoHolder.LayersAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Immutable#ImmutableArray{Keen#VRage#Library#Utils#StringId}}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerConfiguration.TypeInfoHolder.LayersAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Immutable#ImmutableArray{Keen#VRage#Library#Utils#StringId}}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerConfiguration.TypeInfoHolder.LayersAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Immutable#ImmutableArray{Keen#VRage#Library#Utils#StringId}}#Set(System.Byte@,System.Collections.Immutable.ImmutableArray{Keen.VRage.Library.Utils.StringId}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerConfiguration.TypeInfoHolder.LayersAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerConfiguration.TypeInfoHolder.LayersAccessor.Set(Keen.VRage.Core.Game.Definitions.EntityLayerConfiguration@,System.Collections.Immutable.ImmutableArray{Keen.VRage.Library.Utils.StringId}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerConfiguration.TypeInfoHolder.LayersAccessor.Get(Keen.VRage.Core.Game.Definitions.EntityLayerConfiguration@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.EntityLayerConfiguration.TypeInfoHolder.LayerPairInteractionAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.EntityLayerConfiguration.TypeInfoHolder.LayerPairInteractionAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.EntityLayerConfiguration.TypeInfoHolder.LayerPairInteractionAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.EntityLayerConfiguration.TypeInfoHolder.LayerPairInteractionAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.EntityLayerConfiguration.TypeInfoHolder.LayerPairInteractionAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.EntityLayerConfiguration.TypeInfoHolder.LayerPairInteractionAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.EntityLayerConfiguration.TypeInfoHolder.LayerPairInteractionAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.EntityLayerConfiguration.TypeInfoHolder.LayerPairInteractionAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.EntityLayerConfiguration.TypeInfoHolder.LayerPairInteractionAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerConfiguration.TypeInfoHolder.LayerPairInteractionAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerConfiguration.TypeInfoHolder.LayerPairInteractionAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerConfiguration.TypeInfoHolder.LayerPairInteractionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerConfiguration.TypeInfoHolder.LayerPairInteractionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerConfiguration.TypeInfoHolder.LayerPairInteractionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerConfiguration.TypeInfoHolder.LayerPairInteractionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Collections#Readers#DictionaryReader{Keen#VRage#Core#Game#Definitions#EntityLayerPair,Keen#VRage#Core#Game#Definitions#LayerInteractionType}}#Set(System.Object,Keen.VRage.Library.Collections.Readers.DictionaryReader{Keen.VRage.Core.Game.Definitions.EntityLayerPair,Keen.VRage.Core.Game.Definitions.LayerInteractionType}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerConfiguration.TypeInfoHolder.LayerPairInteractionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Collections#Readers#DictionaryReader{Keen#VRage#Core#Game#Definitions#EntityLayerPair,Keen#VRage#Core#Game#Definitions#LayerInteractionType}}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerConfiguration.TypeInfoHolder.LayerPairInteractionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Collections#Readers#DictionaryReader{Keen#VRage#Core#Game#Definitions#EntityLayerPair,Keen#VRage#Core#Game#Definitions#LayerInteractionType}}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerConfiguration.TypeInfoHolder.LayerPairInteractionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Collections#Readers#DictionaryReader{Keen#VRage#Core#Game#Definitions#EntityLayerPair,Keen#VRage#Core#Game#Definitions#LayerInteractionType}}#Set(System.Byte@,Keen.VRage.Library.Collections.Readers.DictionaryReader{Keen.VRage.Core.Game.Definitions.EntityLayerPair,Keen.VRage.Core.Game.Definitions.LayerInteractionType}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerConfiguration.TypeInfoHolder.LayerPairInteractionAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerConfiguration.TypeInfoHolder.LayerPairInteractionAccessor.Set(Keen.VRage.Core.Game.Definitions.EntityLayerConfiguration@,Keen.VRage.Library.Collections.Readers.DictionaryReader{Keen.VRage.Core.Game.Definitions.EntityLayerPair,Keen.VRage.Core.Game.Definitions.LayerInteractionType}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerConfiguration.TypeInfoHolder.LayerPairInteractionAccessor.Get(Keen.VRage.Core.Game.Definitions.EntityLayerConfiguration@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Game.Definitions.PrefabDefinition">
            <summary>
            Wrapper struct for <see cref="T:Keen.VRage.DCS.ObjectBuilders.EntityObjectBuilder"/> that exposes it as a copy.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.Definitions.PrefabDefinition._entity">
            <summary>
            Serializable Entity object builder specified by composition and object builders.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.PrefabDefinition.Composition">
            <summary>
            [Missing ToolTip]
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.PrefabDefinition.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer{Keen#VRage#Core#Game#Definitions#PrefabDefinition}#NameSerializer">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.PrefabDefinition.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#NameSerializer">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.PrefabDefinition.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#NameType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.PrefabDefinition.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer{Keen#VRage#Core#Game#Definitions#PrefabDefinition}#ShouldSerializeAsName(Keen.VRage.Library.Serialization.SerializationContext,Keen.VRage.Core.Game.Definitions.PrefabDefinition@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.PrefabDefinition.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#ShouldSerializeAsName(Keen.VRage.Library.Serialization.SerializationContext,System.Object@)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.Definitions.PrefabDefinition.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.PrefabDefinition.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Game#Definitions#PrefabDefinition}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.PrefabDefinition.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.PrefabDefinition.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Game.Definitions.PrefabDefinition.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.Definitions.PrefabDefinition.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.Definitions.PrefabDefinition.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.PrefabDefinition.TypeInfoHolder._entityAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.PrefabDefinition.TypeInfoHolder._entityAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.PrefabDefinition.TypeInfoHolder._entityAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.PrefabDefinition.TypeInfoHolder._entityAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.PrefabDefinition.TypeInfoHolder._entityAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.PrefabDefinition.TypeInfoHolder._entityAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.PrefabDefinition.TypeInfoHolder._entityAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.PrefabDefinition.TypeInfoHolder._entityAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.PrefabDefinition.TypeInfoHolder._entityAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.PrefabDefinition.TypeInfoHolder._entityAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.PrefabDefinition.TypeInfoHolder._entityAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.PrefabDefinition.TypeInfoHolder._entityAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.PrefabDefinition.TypeInfoHolder._entityAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.PrefabDefinition.TypeInfoHolder._entityAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.PrefabDefinition.TypeInfoHolder._entityAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#DCS#ObjectBuilders#EntityObjectBuilder}#Set(System.Object,Keen.VRage.DCS.ObjectBuilders.EntityObjectBuilder@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.PrefabDefinition.TypeInfoHolder._entityAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#DCS#ObjectBuilders#EntityObjectBuilder}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.PrefabDefinition.TypeInfoHolder._entityAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#DCS#ObjectBuilders#EntityObjectBuilder}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.PrefabDefinition.TypeInfoHolder._entityAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#DCS#ObjectBuilders#EntityObjectBuilder}#Set(System.Byte@,Keen.VRage.DCS.ObjectBuilders.EntityObjectBuilder@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.PrefabDefinition.TypeInfoHolder._entityAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.PrefabDefinition.TypeInfoHolder._entityAccessor.Set(Keen.VRage.Core.Game.Definitions.PrefabDefinition@,Keen.VRage.DCS.ObjectBuilders.EntityObjectBuilder@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.PrefabDefinition.TypeInfoHolder._entityAccessor.Get(Keen.VRage.Core.Game.Definitions.PrefabDefinition@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.PrefabDefinition.TypeInfoHolder.CompositionAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.PrefabDefinition.TypeInfoHolder.CompositionAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.PrefabDefinition.TypeInfoHolder.CompositionAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.PrefabDefinition.TypeInfoHolder.CompositionAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.PrefabDefinition.TypeInfoHolder.CompositionAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.PrefabDefinition.TypeInfoHolder.CompositionAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.PrefabDefinition.TypeInfoHolder.CompositionAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.PrefabDefinition.TypeInfoHolder.CompositionAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.PrefabDefinition.TypeInfoHolder.CompositionAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.PrefabDefinition.TypeInfoHolder.CompositionAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.PrefabDefinition.TypeInfoHolder.CompositionAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.PrefabDefinition.TypeInfoHolder.CompositionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.PrefabDefinition.TypeInfoHolder.CompositionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.PrefabDefinition.TypeInfoHolder.CompositionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.PrefabDefinition.TypeInfoHolder.CompositionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#DCS#Definitions#EntityCompositeDefinition}#Set(System.Object,Keen.VRage.DCS.Definitions.EntityCompositeDefinition@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.PrefabDefinition.TypeInfoHolder.CompositionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#DCS#Definitions#EntityCompositeDefinition}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.PrefabDefinition.TypeInfoHolder.CompositionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#DCS#Definitions#EntityCompositeDefinition}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.PrefabDefinition.TypeInfoHolder.CompositionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#DCS#Definitions#EntityCompositeDefinition}#Set(System.Byte@,Keen.VRage.DCS.Definitions.EntityCompositeDefinition@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.PrefabDefinition.TypeInfoHolder.CompositionAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.PrefabDefinition.TypeInfoHolder.CompositionAccessor.Set(Keen.VRage.Core.Game.Definitions.PrefabDefinition@,Keen.VRage.DCS.Definitions.EntityCompositeDefinition@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.PrefabDefinition.TypeInfoHolder.CompositionAccessor.Get(Keen.VRage.Core.Game.Definitions.PrefabDefinition@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Game.Definitions.Suggesters.EntityLayerSuggesterAttribute">
            <summary>
            Use this to annotate StringId properties which should contain valid EntityLayer names.
            </summary>
            <seealso cref="T:Keen.VRage.Core.Game.Definitions.EntityLayerConfiguration"/>
        </member>
        <member name="T:Keen.VRage.Core.Game.Definitions.Validation.BasePrefabValidation">
            <summary>
            Base prefab validator. Transforms collections to a single prefab element.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.Definitions.Validation.DefinitionAllowedElementsAttribute">
            <summary>
            Checks whether the annotated element of object builder is present in the specified definition collection
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.Validation.DefinitionAllowedElementsAttribute.#ctor(System.String)">
            <summary>
            Checks whether the annotated element of object builder is present in the specified definition collection
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.Definitions.Validation.DefinitionRangeAttribute`1">
            <summary>
            Checks whether the annotated numeric member of object builder is within an expected range of definition members
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.Definitions.Validation.DefinitionStringLengthAttribute">
            <summary>
            Used for validating length of strings on properties of <see cref="T:Keen.VRage.Library.Serialization.IAccessible"/> using definition members.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.Definitions.Validation.FixedPointDefinitionRangeAttribute">
            <summary>
            Checks whether the annotated <see cref="T:Keen.VRage.Library.Mathematics.FixedPoint"/> member is within an expected range of Definition members
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.Definitions.Validation.HierarchyChildrenValidator">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.Definitions.Validation.PrefabManipulationUtils">
            <summary>
            Utilities for manipulation <see cref="T:Keen.VRage.Library.Serialization.MemberReference"/> to <see cref="T:Keen.VRage.DCS.ObjectBuilders.EntityObjectBuilder"/>, <see cref="T:Keen.VRage.Core.Game.Definitions.PrefabDefinition"/> and their members.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.Validation.PrefabManipulationUtils.TryGetSiblingObjectBuilder``1(Keen.VRage.Library.Serialization.MemberReference,Keen.VRage.Library.Serialization.MemberReference@,System.Int32@)">
            <summary>
            Given a reference to a component object builder on an <see cref="T:Keen.VRage.DCS.ObjectBuilders.EntityObjectBuilder"/> try to locate a sibling component object builder with type <typeparamref name="T"/>.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.Definitions.Validation.RequiredComponentAttribute">
            <summary>
            Should be placed on properties that reference <see cref="T:Keen.VRage.Core.Game.Definitions.PrefabDefinition"/> to validate presence of specific components. 
            If AND logic is required multiple types should be provided to the same array
            If OR logic is required multiple arrays of types should be provided to the constructor
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.Validation.RequiredComponentAttribute.#ctor(System.Type[])">
            <summary>
            Prefab must contain component types that satisfy  <paramref name="componentTypes1"/>
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.Validation.RequiredComponentAttribute.#ctor(System.Type[],System.Type[])">
            <summary>
            Prefab must contain component types that satisfy <paramref name="componentTypes1"/> or <paramref name="componentTypes2"/>
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.Validation.RequiredComponentAttribute.#ctor(System.Type[],System.Type[],System.Type[])">
            <summary>
            Prefab must contain component types that satisfy <paramref name="componentTypes1"/> or <paramref name="componentTypes2"/> or <paramref name="componentTypes3"/>
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.Definitions.Validation.ValidationConfigAttribute`1">
            <summary>
            Specifies the configuration type for the validation.
            </summary>
            <typeparam name="TConfig"></typeparam>
        </member>
        <member name="F:Keen.VRage.Core.Game.Definitions.EntityLayerConfigurationObjectBuilder.Layers">
            <summary>
            Distinct set of all entity layer names
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.Definitions.EntityLayerConfigurationObjectBuilder.LayerPairInteraction">
            <summary>
            Dictionary of all entity layer pairs and their interaction type
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.Definitions.EntityLayerConfigurationObjectBuilder.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerConfigurationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerConfigurationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Game.Definitions.EntityLayerConfigurationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerConfigurationObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerConfigurationObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Game.Definitions.EntityLayerConfigurationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerConfigurationObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerConfigurationObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Game.Definitions.EntityLayerConfigurationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerConfigurationObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerConfigurationObjectBuilder.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerConfigurationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerConfigurationObjectBuilder.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerConfigurationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Game.Definitions.EntityLayerConfigurationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerConfigurationObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerConfigurationObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Game.Definitions.EntityLayerConfigurationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerConfigurationObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerConfigurationObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Game.Definitions.EntityLayerConfigurationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerConfigurationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerConfigurationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Game.Definitions.EntityLayerConfigurationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerConfigurationObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.Definitions.EntityLayerConfigurationObjectBuilder.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.EntityLayerConfigurationObjectBuilder.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerConfigurationObjectBuilder.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.EntityLayerConfigurationObjectBuilder.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Game#Definitions#EntityLayerConfigurationObjectBuilder}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerConfigurationObjectBuilder.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Game.Definitions.EntityLayerConfigurationObjectBuilder.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.Definitions.EntityLayerConfigurationObjectBuilder.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.Definitions.EntityLayerConfigurationObjectBuilder.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.EntityLayerConfigurationObjectBuilder.TypeInfoHolder.LayersAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.EntityLayerConfigurationObjectBuilder.TypeInfoHolder.LayersAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.EntityLayerConfigurationObjectBuilder.TypeInfoHolder.LayersAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.EntityLayerConfigurationObjectBuilder.TypeInfoHolder.LayersAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.EntityLayerConfigurationObjectBuilder.TypeInfoHolder.LayersAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.EntityLayerConfigurationObjectBuilder.TypeInfoHolder.LayersAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.EntityLayerConfigurationObjectBuilder.TypeInfoHolder.LayersAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.EntityLayerConfigurationObjectBuilder.TypeInfoHolder.LayersAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.EntityLayerConfigurationObjectBuilder.TypeInfoHolder.LayersAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerConfigurationObjectBuilder.TypeInfoHolder.LayersAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerConfigurationObjectBuilder.TypeInfoHolder.LayersAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerConfigurationObjectBuilder.TypeInfoHolder.LayersAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerConfigurationObjectBuilder.TypeInfoHolder.LayersAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerConfigurationObjectBuilder.TypeInfoHolder.LayersAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerConfigurationObjectBuilder.TypeInfoHolder.LayersAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Collections#MergeableList{Keen#VRage#Library#Utils#StringId}}#Set(System.Object,Keen.VRage.Library.Collections.MergeableList{Keen.VRage.Library.Utils.StringId}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerConfigurationObjectBuilder.TypeInfoHolder.LayersAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Collections#MergeableList{Keen#VRage#Library#Utils#StringId}}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerConfigurationObjectBuilder.TypeInfoHolder.LayersAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Collections#MergeableList{Keen#VRage#Library#Utils#StringId}}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerConfigurationObjectBuilder.TypeInfoHolder.LayersAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Collections#MergeableList{Keen#VRage#Library#Utils#StringId}}#Set(System.Byte@,Keen.VRage.Library.Collections.MergeableList{Keen.VRage.Library.Utils.StringId}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerConfigurationObjectBuilder.TypeInfoHolder.LayersAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerConfigurationObjectBuilder.TypeInfoHolder.LayersAccessor.Set(Keen.VRage.Core.Game.Definitions.EntityLayerConfigurationObjectBuilder@,Keen.VRage.Library.Collections.MergeableList{Keen.VRage.Library.Utils.StringId}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerConfigurationObjectBuilder.TypeInfoHolder.LayersAccessor.Get(Keen.VRage.Core.Game.Definitions.EntityLayerConfigurationObjectBuilder@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.EntityLayerConfigurationObjectBuilder.TypeInfoHolder.LayerPairInteractionAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.EntityLayerConfigurationObjectBuilder.TypeInfoHolder.LayerPairInteractionAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.EntityLayerConfigurationObjectBuilder.TypeInfoHolder.LayerPairInteractionAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.EntityLayerConfigurationObjectBuilder.TypeInfoHolder.LayerPairInteractionAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.EntityLayerConfigurationObjectBuilder.TypeInfoHolder.LayerPairInteractionAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.EntityLayerConfigurationObjectBuilder.TypeInfoHolder.LayerPairInteractionAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.EntityLayerConfigurationObjectBuilder.TypeInfoHolder.LayerPairInteractionAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.EntityLayerConfigurationObjectBuilder.TypeInfoHolder.LayerPairInteractionAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.EntityLayerConfigurationObjectBuilder.TypeInfoHolder.LayerPairInteractionAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerConfigurationObjectBuilder.TypeInfoHolder.LayerPairInteractionAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerConfigurationObjectBuilder.TypeInfoHolder.LayerPairInteractionAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerConfigurationObjectBuilder.TypeInfoHolder.LayerPairInteractionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerConfigurationObjectBuilder.TypeInfoHolder.LayerPairInteractionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerConfigurationObjectBuilder.TypeInfoHolder.LayerPairInteractionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerConfigurationObjectBuilder.TypeInfoHolder.LayerPairInteractionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#Dictionary{Keen#VRage#Core#Game#Definitions#EntityLayerPair,Keen#VRage#Core#Game#Definitions#LayerInteractionType}}#Set(System.Object,System.Collections.Generic.Dictionary{Keen.VRage.Core.Game.Definitions.EntityLayerPair,Keen.VRage.Core.Game.Definitions.LayerInteractionType}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerConfigurationObjectBuilder.TypeInfoHolder.LayerPairInteractionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#Dictionary{Keen#VRage#Core#Game#Definitions#EntityLayerPair,Keen#VRage#Core#Game#Definitions#LayerInteractionType}}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerConfigurationObjectBuilder.TypeInfoHolder.LayerPairInteractionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#Dictionary{Keen#VRage#Core#Game#Definitions#EntityLayerPair,Keen#VRage#Core#Game#Definitions#LayerInteractionType}}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerConfigurationObjectBuilder.TypeInfoHolder.LayerPairInteractionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#Dictionary{Keen#VRage#Core#Game#Definitions#EntityLayerPair,Keen#VRage#Core#Game#Definitions#LayerInteractionType}}#Set(System.Byte@,System.Collections.Generic.Dictionary{Keen.VRage.Core.Game.Definitions.EntityLayerPair,Keen.VRage.Core.Game.Definitions.LayerInteractionType}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerConfigurationObjectBuilder.TypeInfoHolder.LayerPairInteractionAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerConfigurationObjectBuilder.TypeInfoHolder.LayerPairInteractionAccessor.Set(Keen.VRage.Core.Game.Definitions.EntityLayerConfigurationObjectBuilder@,System.Collections.Generic.Dictionary{Keen.VRage.Core.Game.Definitions.EntityLayerPair,Keen.VRage.Core.Game.Definitions.LayerInteractionType}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityLayerConfigurationObjectBuilder.TypeInfoHolder.LayerPairInteractionAccessor.Get(Keen.VRage.Core.Game.Definitions.EntityLayerConfigurationObjectBuilder@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Game.Definitions.LayerInteractionDefinitionObjectBuilder.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.LayerInteractionDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.LayerInteractionDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Game.Definitions.LayerInteractionDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.LayerInteractionDefinitionObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.LayerInteractionDefinitionObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Game.Definitions.LayerInteractionDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.LayerInteractionDefinitionObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.LayerInteractionDefinitionObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Game.Definitions.LayerInteractionDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.LayerInteractionDefinitionObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.LayerInteractionDefinitionObjectBuilder.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.LayerInteractionDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.LayerInteractionDefinitionObjectBuilder.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.LayerInteractionDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Game.Definitions.LayerInteractionDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.LayerInteractionDefinitionObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.LayerInteractionDefinitionObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Game.Definitions.LayerInteractionDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.LayerInteractionDefinitionObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.LayerInteractionDefinitionObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Game.Definitions.LayerInteractionDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.LayerInteractionDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.LayerInteractionDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Game.Definitions.LayerInteractionDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.LayerInteractionDefinitionObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.Definitions.LayerInteractionDefinitionObjectBuilder.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.LayerInteractionDefinitionObjectBuilder.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.LayerInteractionDefinitionObjectBuilder.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.LayerInteractionDefinitionObjectBuilder.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Game#Definitions#LayerInteractionDefinitionObjectBuilder}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.LayerInteractionDefinitionObjectBuilder.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Game.Definitions.LayerInteractionDefinitionObjectBuilder.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.Definitions.LayerInteractionDefinitionObjectBuilder.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.Definitions.LayerInteractionDefinitionObjectBuilder.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.LayerInteractionDefinition.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer{Keen#VRage#Core#Game#Definitions#LayerInteractionDefinition}#NameSerializer">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.LayerInteractionDefinition.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#NameSerializer">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.LayerInteractionDefinition.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#NameType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.LayerInteractionDefinition.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer{Keen#VRage#Core#Game#Definitions#LayerInteractionDefinition}#ShouldSerializeAsName(Keen.VRage.Library.Serialization.SerializationContext,Keen.VRage.Core.Game.Definitions.LayerInteractionDefinition@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.LayerInteractionDefinition.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#ShouldSerializeAsName(Keen.VRage.Library.Serialization.SerializationContext,System.Object@)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.Definitions.LayerInteractionDefinition.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.LayerInteractionDefinition.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Game#Definitions#LayerInteractionDefinition}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.LayerInteractionDefinition.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.LayerInteractionDefinition.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Game.Definitions.LayerInteractionDefinition.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.Definitions.LayerInteractionDefinition.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.Definitions.LayerInteractionDefinition.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.Definitions.PrefabDefinitionObjectBuilder._entity">
            <summary>
            Serializable Entity object builder specified by composition and object builders.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.Definitions.PrefabDefinitionObjectBuilder.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.PrefabDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.PrefabDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Game.Definitions.PrefabDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.PrefabDefinitionObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.PrefabDefinitionObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Game.Definitions.PrefabDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.PrefabDefinitionObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.PrefabDefinitionObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Game.Definitions.PrefabDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.PrefabDefinitionObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.PrefabDefinitionObjectBuilder.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.PrefabDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.PrefabDefinitionObjectBuilder.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.PrefabDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Game.Definitions.PrefabDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.PrefabDefinitionObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.PrefabDefinitionObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Game.Definitions.PrefabDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.PrefabDefinitionObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.PrefabDefinitionObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Game.Definitions.PrefabDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.PrefabDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.PrefabDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Game.Definitions.PrefabDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.PrefabDefinitionObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.Definitions.PrefabDefinitionObjectBuilder.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.PrefabDefinitionObjectBuilder.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.PrefabDefinitionObjectBuilder.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.PrefabDefinitionObjectBuilder.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Game#Definitions#PrefabDefinitionObjectBuilder}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.PrefabDefinitionObjectBuilder.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Game.Definitions.PrefabDefinitionObjectBuilder.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.Definitions.PrefabDefinitionObjectBuilder.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.Definitions.PrefabDefinitionObjectBuilder.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.PrefabDefinitionObjectBuilder.TypeInfoHolder._entityAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.PrefabDefinitionObjectBuilder.TypeInfoHolder._entityAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.PrefabDefinitionObjectBuilder.TypeInfoHolder._entityAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.PrefabDefinitionObjectBuilder.TypeInfoHolder._entityAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.PrefabDefinitionObjectBuilder.TypeInfoHolder._entityAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.PrefabDefinitionObjectBuilder.TypeInfoHolder._entityAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.PrefabDefinitionObjectBuilder.TypeInfoHolder._entityAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.PrefabDefinitionObjectBuilder.TypeInfoHolder._entityAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.PrefabDefinitionObjectBuilder.TypeInfoHolder._entityAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.PrefabDefinitionObjectBuilder.TypeInfoHolder._entityAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.PrefabDefinitionObjectBuilder.TypeInfoHolder._entityAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.PrefabDefinitionObjectBuilder.TypeInfoHolder._entityAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.PrefabDefinitionObjectBuilder.TypeInfoHolder._entityAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.PrefabDefinitionObjectBuilder.TypeInfoHolder._entityAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.PrefabDefinitionObjectBuilder.TypeInfoHolder._entityAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#DCS#ObjectBuilders#EntityObjectBuilder}#Set(System.Object,Keen.VRage.DCS.ObjectBuilders.EntityObjectBuilder@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.PrefabDefinitionObjectBuilder.TypeInfoHolder._entityAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#DCS#ObjectBuilders#EntityObjectBuilder}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.PrefabDefinitionObjectBuilder.TypeInfoHolder._entityAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#DCS#ObjectBuilders#EntityObjectBuilder}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.PrefabDefinitionObjectBuilder.TypeInfoHolder._entityAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#DCS#ObjectBuilders#EntityObjectBuilder}#Set(System.Byte@,Keen.VRage.DCS.ObjectBuilders.EntityObjectBuilder@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.PrefabDefinitionObjectBuilder.TypeInfoHolder._entityAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.PrefabDefinitionObjectBuilder.TypeInfoHolder._entityAccessor.Set(Keen.VRage.Core.Game.Definitions.PrefabDefinitionObjectBuilder@,Keen.VRage.DCS.ObjectBuilders.EntityObjectBuilder@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.PrefabDefinitionObjectBuilder.TypeInfoHolder._entityAccessor.Get(Keen.VRage.Core.Game.Definitions.PrefabDefinitionObjectBuilder@)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.Definitions.EntityBundleDefinitionObjectBuilder._bundle">
            <summary>
            Wrapped EntityBundle
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.Definitions.EntityBundleDefinitionObjectBuilder.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityBundleDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityBundleDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Game.Definitions.EntityBundleDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityBundleDefinitionObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityBundleDefinitionObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Game.Definitions.EntityBundleDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityBundleDefinitionObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityBundleDefinitionObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Game.Definitions.EntityBundleDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityBundleDefinitionObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityBundleDefinitionObjectBuilder.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityBundleDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityBundleDefinitionObjectBuilder.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityBundleDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Game.Definitions.EntityBundleDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityBundleDefinitionObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityBundleDefinitionObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Game.Definitions.EntityBundleDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityBundleDefinitionObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityBundleDefinitionObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Game.Definitions.EntityBundleDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityBundleDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityBundleDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Game.Definitions.EntityBundleDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityBundleDefinitionObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.Definitions.EntityBundleDefinitionObjectBuilder.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.EntityBundleDefinitionObjectBuilder.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityBundleDefinitionObjectBuilder.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.EntityBundleDefinitionObjectBuilder.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Game#Definitions#EntityBundleDefinitionObjectBuilder}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityBundleDefinitionObjectBuilder.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Game.Definitions.EntityBundleDefinitionObjectBuilder.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.Definitions.EntityBundleDefinitionObjectBuilder.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.Definitions.EntityBundleDefinitionObjectBuilder.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.EntityBundleDefinitionObjectBuilder.TypeInfoHolder._bundleAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.EntityBundleDefinitionObjectBuilder.TypeInfoHolder._bundleAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.EntityBundleDefinitionObjectBuilder.TypeInfoHolder._bundleAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.EntityBundleDefinitionObjectBuilder.TypeInfoHolder._bundleAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.EntityBundleDefinitionObjectBuilder.TypeInfoHolder._bundleAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.EntityBundleDefinitionObjectBuilder.TypeInfoHolder._bundleAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.EntityBundleDefinitionObjectBuilder.TypeInfoHolder._bundleAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.EntityBundleDefinitionObjectBuilder.TypeInfoHolder._bundleAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Definitions.EntityBundleDefinitionObjectBuilder.TypeInfoHolder._bundleAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityBundleDefinitionObjectBuilder.TypeInfoHolder._bundleAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityBundleDefinitionObjectBuilder.TypeInfoHolder._bundleAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityBundleDefinitionObjectBuilder.TypeInfoHolder._bundleAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityBundleDefinitionObjectBuilder.TypeInfoHolder._bundleAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityBundleDefinitionObjectBuilder.TypeInfoHolder._bundleAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityBundleDefinitionObjectBuilder.TypeInfoHolder._bundleAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#Systems#EntityBundle}#Set(System.Object,Keen.VRage.Core.Game.Systems.EntityBundle@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityBundleDefinitionObjectBuilder.TypeInfoHolder._bundleAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#Systems#EntityBundle}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityBundleDefinitionObjectBuilder.TypeInfoHolder._bundleAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#Systems#EntityBundle}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityBundleDefinitionObjectBuilder.TypeInfoHolder._bundleAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#Systems#EntityBundle}#Set(System.Byte@,Keen.VRage.Core.Game.Systems.EntityBundle@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityBundleDefinitionObjectBuilder.TypeInfoHolder._bundleAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityBundleDefinitionObjectBuilder.TypeInfoHolder._bundleAccessor.Set(Keen.VRage.Core.Game.Definitions.EntityBundleDefinitionObjectBuilder@,Keen.VRage.Core.Game.Systems.EntityBundle@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Definitions.EntityBundleDefinitionObjectBuilder.TypeInfoHolder._bundleAccessor.Get(Keen.VRage.Core.Game.Definitions.EntityBundleDefinitionObjectBuilder@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Game.Extensions.EntityObjectBuilderExtensions">
            <summary>
            Extensions for <see cref="T:Keen.VRage.DCS.ObjectBuilders.EntityObjectBuilder"/>
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.Extensions.EntityObjectBuilderExtensions.GetChildren(Keen.VRage.DCS.ObjectBuilders.EntityObjectBuilder)">
            <summary>
            Gets the direct children of the <see cref="T:Keen.VRage.DCS.ObjectBuilders.EntityObjectBuilder"/> (non-recursive).
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.Extensions.MemberReferenceExtensions">
            <summary>
            Extensions for <see cref="T:Keen.VRage.Library.Serialization.MemberReference"/>
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.Extensions.MemberReferenceExtensions.InitializeCollection(Keen.VRage.Library.Serialization.MemberReference)">
            <summary>
            Creates an empty collection for the given member
            </summary>
            <param name="member"></param>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.EntityFilter">
            <summary>
            Generic entity archetype filter.
            </summary>
            <see cref="T:Keen.VRage.Core.Game.GameSystems.ISpatialTriggerSystem"/>
            <see cref="T:Keen.VRage.Core.Game.GameSystems.SpaceProbe.ISpaceProbeSystem"/>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.EntityFilter.All">
            <summary>
            Empty filter for convenience. Matches all entities.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.EntityFilter.TypeConstraints">
            <summary>
            Component/Data constraints that allow filtering for specific entities
            Where index 0 is the number of types for MustHave.
            Where index 1+(Value at 0) is the type ids for MustHave.
            Values after index 1+(Value at 0) are DoesNotHaves.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.EntityProvider.IEntityProvider">
            <summary>
            Component interface for getting an entity from the world or hierarchy
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.EntityProvider.IEntityProvider.TaggedEntity">
            <summary>
            The entity with the tag
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinition">
            <summary>
            <see cref="T:Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderComponent"/>
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinition.Tag">
            <summary>
            The tag the entity adapter will search for
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinition.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer{Keen#VRage#Core#Game#GameSystems#EntityProvider#TaggedEntityProviderDefinition}#NameSerializer">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinition.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#NameSerializer">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinition.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#NameType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinition.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer{Keen#VRage#Core#Game#GameSystems#EntityProvider#TaggedEntityProviderDefinition}#ShouldSerializeAsName(Keen.VRage.Library.Serialization.SerializationContext,Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinition@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinition.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#ShouldSerializeAsName(Keen.VRage.Library.Serialization.SerializationContext,System.Object@)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinition.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinition.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Game#GameSystems#EntityProvider#TaggedEntityProviderDefinition}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinition.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinition.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinition.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinition.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinition.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinition.TypeInfoHolder.TagAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinition.TypeInfoHolder.TagAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinition.TypeInfoHolder.TagAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinition.TypeInfoHolder.TagAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinition.TypeInfoHolder.TagAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinition.TypeInfoHolder.TagAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinition.TypeInfoHolder.TagAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinition.TypeInfoHolder.TagAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinition.TypeInfoHolder.TagAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinition.TypeInfoHolder.TagAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinition.TypeInfoHolder.TagAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinition.TypeInfoHolder.TagAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinition.TypeInfoHolder.TagAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinition.TypeInfoHolder.TagAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinition.TypeInfoHolder.TagAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Utils#StringId}#Set(System.Object,Keen.VRage.Library.Utils.StringId@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinition.TypeInfoHolder.TagAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Utils#StringId}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinition.TypeInfoHolder.TagAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Utils#StringId}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinition.TypeInfoHolder.TagAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Utils#StringId}#Set(System.Byte@,Keen.VRage.Library.Utils.StringId@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinition.TypeInfoHolder.TagAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinition.TypeInfoHolder.TagAccessor.Set(Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinition@,Keen.VRage.Library.Utils.StringId@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinition.TypeInfoHolder.TagAccessor.Get(Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinition@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderComponent">
            <summary>
            Component that gets the first entity on the entity hierarchy (starting from root) that has a given component tag
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinitionObjectBuilder.Tag">
            <summary>
            The tag the entity adapter will search for
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinitionObjectBuilder.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinitionObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinitionObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinitionObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinitionObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinitionObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinitionObjectBuilder.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinitionObjectBuilder.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinitionObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinitionObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinitionObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinitionObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinitionObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinitionObjectBuilder.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinitionObjectBuilder.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinitionObjectBuilder.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinitionObjectBuilder.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Game#GameSystems#EntityProvider#TaggedEntityProviderDefinitionObjectBuilder}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinitionObjectBuilder.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinitionObjectBuilder.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinitionObjectBuilder.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinitionObjectBuilder.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinitionObjectBuilder.TypeInfoHolder.TagAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinitionObjectBuilder.TypeInfoHolder.TagAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinitionObjectBuilder.TypeInfoHolder.TagAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinitionObjectBuilder.TypeInfoHolder.TagAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinitionObjectBuilder.TypeInfoHolder.TagAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinitionObjectBuilder.TypeInfoHolder.TagAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinitionObjectBuilder.TypeInfoHolder.TagAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinitionObjectBuilder.TypeInfoHolder.TagAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinitionObjectBuilder.TypeInfoHolder.TagAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinitionObjectBuilder.TypeInfoHolder.TagAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinitionObjectBuilder.TypeInfoHolder.TagAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinitionObjectBuilder.TypeInfoHolder.TagAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinitionObjectBuilder.TypeInfoHolder.TagAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinitionObjectBuilder.TypeInfoHolder.TagAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinitionObjectBuilder.TypeInfoHolder.TagAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Utils#StringId}#Set(System.Object,Keen.VRage.Library.Utils.StringId@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinitionObjectBuilder.TypeInfoHolder.TagAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Utils#StringId}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinitionObjectBuilder.TypeInfoHolder.TagAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Utils#StringId}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinitionObjectBuilder.TypeInfoHolder.TagAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Utils#StringId}#Set(System.Byte@,Keen.VRage.Library.Utils.StringId@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinitionObjectBuilder.TypeInfoHolder.TagAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinitionObjectBuilder.TypeInfoHolder.TagAccessor.Set(Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinitionObjectBuilder@,Keen.VRage.Library.Utils.StringId@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinitionObjectBuilder.TypeInfoHolder.TagAccessor.Get(Keen.VRage.Core.Game.GameSystems.EntityProvider.TaggedEntityProviderDefinitionObjectBuilder@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.GamePruning.ClientTriggerTag">
             <summary>
             This tag is checked as a type constraint by the procedural triggers on client side to spawn world items.
             Primary use is to add to camera entities that want to trigger the spawn of client side visuals.
            
             Use in trigger system filters to make sure spawns only happen when the camera is near.
             </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.GamePruning.IDynamicSpatialTriggerData">
            <summary>
            Interface implemented by data which are used as type constraints in triggers.
            When added to a data struct, OnAdded/OnRemoved jobs will generate for the trigger system, allowing the trigger system to detect the data composition changes.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.GamePruning.DynamicSpatialTriggerDataAttribute">
            <summary>
            Attribute used by <see cref="T:Keen.VRage.Library.Reflection.AttributeIndexer"/> to find all types implementing <see cref="T:Keen.VRage.Core.Game.GameSystems.GamePruning.IDynamicSpatialTriggerData"/>
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.GamePruning.DynamicSpatialTriggerAttributeBase">
            <summary>
            Base class of generator for creating trigger system jobs dynamically
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.GamePruning.OnDynamicSpatialTriggerDataAddedAttribute">
            <summary>
            Generates jobs for detecting when a constrained data is added from an entity, so that the trigger system can detect composition changes
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.GamePruning.OnDynamicSpatialTriggerDataRemovedAttribute">
            <summary>
            Generates jobs for detecting when a constrained data is removed from an entity, so that the trigger system can detect composition changes
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.ServerGameSystemAttribute">
            <summary>
            Core server game systems must be marked with this attribute for jobs to be registered 
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.ClientGameSystemAttribute">
            <summary>
            Core client game systems must be marked with this attribute for jobs to be registered 
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.GameSystemAttributeExtensions">
            <summary /> 
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.GameSystemAttributeExtensions.AddCoreGameJobs(Keen.VRage.DCS.Builders.SceneBuilder,System.Boolean)">
            <summary>
            Registers jobs marked with <see cref="T:Keen.VRage.Core.Game.GameSystems.ServerGameSystemAttribute"/> and <see cref="T:Keen.VRage.Core.Game.GameSystems.ClientGameSystemAttribute"/>
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.GameTimes.IGameTime">
            <summary>
            Interface that provides current game time
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.GameTimes.IGameTime.CurrentGameTime">
            <summary>
            Synced for client and server, ticks up according to game speed, pauses when the game pauses
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.GameTimes.IGameTime.DeltaTime">
            <summary>
            Time passed since the last update
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.GameTimes.ITimer">
            <summary>
            Session component that allows periodic ticking requests
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.GameTimes.ITimer.StartTimer(System.TimeSpan,System.Action,Keen.VRage.Core.Game.GameSystems.GameTimes.TimeSource)">
            <summary>
            Starts a timer with a periodic update frequency, invoking an action every tick
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.GameTimes.ITimer.TimerUpdateJob">
            <summary>
            Job Group that timer actions are called within
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.GameTimes.TimeSource">
            <summary>
            Specifies the time source to use for the timer
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.GameTimes.TimeSource.GameTime">
            <summary>
            Game time can be paused and has variable speed
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.GameTimes.TimeSource.WallTime">
            <summary>
            Wall clock time
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.Gravity.AffectedByGravityComponent">
            <summary>
            Assumes ownership of <see cref="T:Keen.VRage.Core.Game.GameSystems.Gravity.CanBeAffectedByGravity"/> and makes sure the Entity can be affected by gravity in current Scene
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.Gravity.CanBeAffectedByGravity">
            <summary>
            Denotes that this entity can be affected by gravitation
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.Gravity.CanBeAffectedByGravity.GravityTypeBitField">
            <summary>
            Bitfield of <see cref="T:Keen.VRage.Core.Game.GameSystems.Gravity.GravityTypeDefinition"/> that can affect this entity.
            Can be changed dynamically.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.Gravity.GravityEffectData">
            <summary>
            Accumulated gravity for <see cref="T:Keen.VRage.Core.Game.GameSystems.Gravity.CanBeAffectedByGravity"/> Entities
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.Gravity.GravityUpdate">
            <summary>
            Register your <see cref="T:Keen.VRage.Core.Game.GameSystems.Gravity.CanBeAffectedByGravity"/> Entities before this.
            Read data from <see cref="T:Keen.VRage.Core.Game.GameSystems.Gravity.GravityEffectData"/> after this.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinition">
            <summary>
            Represents a set of gravity types that can affect an entity
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinition.GravityTypes">
            <summary>
            List of the the different gravity types that can affect the entity
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinition.BitField">
            <summary>
            Bits representing the combined gravity types listed in <see cref="P:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinition.GravityTypes"/>,
            generated at runtime by <see cref="T:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinitionPostProcessor"/>
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinition.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer{Keen#VRage#Core#Game#GameSystems#Gravity#GravitySetDefinition}#NameSerializer">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinition.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#NameSerializer">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinition.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#NameType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinition.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer{Keen#VRage#Core#Game#GameSystems#Gravity#GravitySetDefinition}#ShouldSerializeAsName(Keen.VRage.Library.Serialization.SerializationContext,Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinition@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinition.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#ShouldSerializeAsName(Keen.VRage.Library.Serialization.SerializationContext,System.Object@)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinition.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinition.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Game#GameSystems#Gravity#GravitySetDefinition}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinition.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinition.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinition.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinition.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinition.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinition.TypeInfoHolder.GravityTypesAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinition.TypeInfoHolder.GravityTypesAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinition.TypeInfoHolder.GravityTypesAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinition.TypeInfoHolder.GravityTypesAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinition.TypeInfoHolder.GravityTypesAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinition.TypeInfoHolder.GravityTypesAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinition.TypeInfoHolder.GravityTypesAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinition.TypeInfoHolder.GravityTypesAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinition.TypeInfoHolder.GravityTypesAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinition.TypeInfoHolder.GravityTypesAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinition.TypeInfoHolder.GravityTypesAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinition.TypeInfoHolder.GravityTypesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinition.TypeInfoHolder.GravityTypesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinition.TypeInfoHolder.GravityTypesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinition.TypeInfoHolder.GravityTypesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Immutable#ImmutableArray{Keen#VRage#Core#Game#GameSystems#Gravity#GravityTypeDefinition}}#Set(System.Object,System.Collections.Immutable.ImmutableArray{Keen.VRage.Core.Game.GameSystems.Gravity.GravityTypeDefinition}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinition.TypeInfoHolder.GravityTypesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Immutable#ImmutableArray{Keen#VRage#Core#Game#GameSystems#Gravity#GravityTypeDefinition}}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinition.TypeInfoHolder.GravityTypesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Immutable#ImmutableArray{Keen#VRage#Core#Game#GameSystems#Gravity#GravityTypeDefinition}}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinition.TypeInfoHolder.GravityTypesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Immutable#ImmutableArray{Keen#VRage#Core#Game#GameSystems#Gravity#GravityTypeDefinition}}#Set(System.Byte@,System.Collections.Immutable.ImmutableArray{Keen.VRage.Core.Game.GameSystems.Gravity.GravityTypeDefinition}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinition.TypeInfoHolder.GravityTypesAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinition.TypeInfoHolder.GravityTypesAccessor.Set(Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinition@,System.Collections.Immutable.ImmutableArray{Keen.VRage.Core.Game.GameSystems.Gravity.GravityTypeDefinition}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinition.TypeInfoHolder.GravityTypesAccessor.Get(Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinition@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinition.TypeInfoHolder.BitFieldAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinition.TypeInfoHolder.BitFieldAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinition.TypeInfoHolder.BitFieldAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinition.TypeInfoHolder.BitFieldAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinition.TypeInfoHolder.BitFieldAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinition.TypeInfoHolder.BitFieldAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinition.TypeInfoHolder.BitFieldAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinition.TypeInfoHolder.BitFieldAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinition.TypeInfoHolder.BitFieldAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinition.TypeInfoHolder.BitFieldAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinition.TypeInfoHolder.BitFieldAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinition.TypeInfoHolder.BitFieldAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinition.TypeInfoHolder.BitFieldAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinition.TypeInfoHolder.BitFieldAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinition.TypeInfoHolder.BitFieldAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Set(System.Object,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinition.TypeInfoHolder.BitFieldAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinition.TypeInfoHolder.BitFieldAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinition.TypeInfoHolder.BitFieldAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Set(System.Byte@,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinition.TypeInfoHolder.BitFieldAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinition.TypeInfoHolder.BitFieldAccessor.Set(Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinition@,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinition.TypeInfoHolder.BitFieldAccessor.Get(Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinition@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinitionPostProcessor">
            <summary>
            Combine the various gravity types listed on <see cref="T:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinition"/> into a single bitfield
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.Gravity.GravityTypeDefinition">
            <summary>
            Represents a single gravity source type (e.g. planet, generator, etc)
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Gravity.GravityTypeDefinition.BitMask">
            <summary>
            Bit value generated at runtime by <see cref="T:Keen.VRage.Core.Game.GameSystems.Gravity.GravityTypeDefinitionPostProcessor"/>
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Gravity.GravityTypeDefinition.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer{Keen#VRage#Core#Game#GameSystems#Gravity#GravityTypeDefinition}#NameSerializer">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Gravity.GravityTypeDefinition.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#NameSerializer">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Gravity.GravityTypeDefinition.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#NameType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravityTypeDefinition.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer{Keen#VRage#Core#Game#GameSystems#Gravity#GravityTypeDefinition}#ShouldSerializeAsName(Keen.VRage.Library.Serialization.SerializationContext,Keen.VRage.Core.Game.GameSystems.Gravity.GravityTypeDefinition@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravityTypeDefinition.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#ShouldSerializeAsName(Keen.VRage.Library.Serialization.SerializationContext,System.Object@)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.Gravity.GravityTypeDefinition.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Gravity.GravityTypeDefinition.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Game#GameSystems#Gravity#GravityTypeDefinition}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravityTypeDefinition.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravityTypeDefinition.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.Gravity.GravityTypeDefinition.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.Gravity.GravityTypeDefinition.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.Gravity.GravityTypeDefinition.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Gravity.GravityTypeDefinition.TypeInfoHolder.BitMaskAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Gravity.GravityTypeDefinition.TypeInfoHolder.BitMaskAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Gravity.GravityTypeDefinition.TypeInfoHolder.BitMaskAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Gravity.GravityTypeDefinition.TypeInfoHolder.BitMaskAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Gravity.GravityTypeDefinition.TypeInfoHolder.BitMaskAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Gravity.GravityTypeDefinition.TypeInfoHolder.BitMaskAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Gravity.GravityTypeDefinition.TypeInfoHolder.BitMaskAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Gravity.GravityTypeDefinition.TypeInfoHolder.BitMaskAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Gravity.GravityTypeDefinition.TypeInfoHolder.BitMaskAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravityTypeDefinition.TypeInfoHolder.BitMaskAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravityTypeDefinition.TypeInfoHolder.BitMaskAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravityTypeDefinition.TypeInfoHolder.BitMaskAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravityTypeDefinition.TypeInfoHolder.BitMaskAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravityTypeDefinition.TypeInfoHolder.BitMaskAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravityTypeDefinition.TypeInfoHolder.BitMaskAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Set(System.Object,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravityTypeDefinition.TypeInfoHolder.BitMaskAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravityTypeDefinition.TypeInfoHolder.BitMaskAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravityTypeDefinition.TypeInfoHolder.BitMaskAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Set(System.Byte@,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravityTypeDefinition.TypeInfoHolder.BitMaskAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravityTypeDefinition.TypeInfoHolder.BitMaskAccessor.Set(Keen.VRage.Core.Game.GameSystems.Gravity.GravityTypeDefinition@,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravityTypeDefinition.TypeInfoHolder.BitMaskAccessor.Get(Keen.VRage.Core.Game.GameSystems.Gravity.GravityTypeDefinition@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.Gravity.GravityTypeDefinitionPostProcessor">
            <summary>
            Assign a unique bitfield to each <see cref="T:Keen.VRage.Core.Game.GameSystems.Gravity.GravityTypeDefinition"/> collected
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.Gravity.IGravitySystem">
            <summary>
            <see cref="T:Keen.VRage.Core.Game.GameSystems.Gravity.GravityEffectData"/>
            <see cref="T:Keen.VRage.Core.Game.GameSystems.Gravity.CanBeAffectedByGravity"/>
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.IGravitySystem.GetGravityAtPoint(Keen.VRage.DCS.Accessors.DEntity,Keen.VRage.Library.Mathematics.Vector3D)">
            <summary>
            Invoke after <see cref="T:Keen.VRage.Core.Game.GameSystems.Gravity.GravityUpdate"/>.
            Invocations before <see cref="T:Keen.VRage.Core.Game.GameSystems.Gravity.GravityUpdate"/> may return stale or no data.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.IGravitySystem.GetClosestGravityDistance(Keen.VRage.DCS.Accessors.DEntity,Keen.VRage.Library.Mathematics.Vector3D)">
            <summary>
            Invoke after <see cref="T:Keen.VRage.Core.Game.GameSystems.Gravity.GravityUpdate"/>.
            Invocations before <see cref="T:Keen.VRage.Core.Game.GameSystems.Gravity.GravityUpdate"/> may return stale or no data.
            Returns distance of closest gravity generator
            Returns float.Max if there are no gravity generators
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.IGravitySystem.GetGravityForGeneratorAtPoint(Keen.VRage.DCS.Components.Entity,Keen.VRage.Library.Mathematics.Vector3D)">
            <summary>
            Get gravity at world position created by specific generator
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinitionObjectBuilder.GravityTypes">
            <summary>
            List of the the different gravity types that can affect the entity
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinitionObjectBuilder.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinitionObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinitionObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinitionObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinitionObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinitionObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinitionObjectBuilder.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinitionObjectBuilder.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinitionObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinitionObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinitionObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinitionObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinitionObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinitionObjectBuilder.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinitionObjectBuilder.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinitionObjectBuilder.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinitionObjectBuilder.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Game#GameSystems#Gravity#GravitySetDefinitionObjectBuilder}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinitionObjectBuilder.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinitionObjectBuilder.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinitionObjectBuilder.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinitionObjectBuilder.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinitionObjectBuilder.TypeInfoHolder.GravityTypesAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinitionObjectBuilder.TypeInfoHolder.GravityTypesAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinitionObjectBuilder.TypeInfoHolder.GravityTypesAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinitionObjectBuilder.TypeInfoHolder.GravityTypesAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinitionObjectBuilder.TypeInfoHolder.GravityTypesAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinitionObjectBuilder.TypeInfoHolder.GravityTypesAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinitionObjectBuilder.TypeInfoHolder.GravityTypesAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinitionObjectBuilder.TypeInfoHolder.GravityTypesAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinitionObjectBuilder.TypeInfoHolder.GravityTypesAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinitionObjectBuilder.TypeInfoHolder.GravityTypesAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinitionObjectBuilder.TypeInfoHolder.GravityTypesAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinitionObjectBuilder.TypeInfoHolder.GravityTypesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinitionObjectBuilder.TypeInfoHolder.GravityTypesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinitionObjectBuilder.TypeInfoHolder.GravityTypesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinitionObjectBuilder.TypeInfoHolder.GravityTypesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Collections#MergeableList{Keen#VRage#Core#Game#GameSystems#Gravity#GravityTypeDefinition}}#Set(System.Object,Keen.VRage.Library.Collections.MergeableList{Keen.VRage.Core.Game.GameSystems.Gravity.GravityTypeDefinition}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinitionObjectBuilder.TypeInfoHolder.GravityTypesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Collections#MergeableList{Keen#VRage#Core#Game#GameSystems#Gravity#GravityTypeDefinition}}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinitionObjectBuilder.TypeInfoHolder.GravityTypesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Collections#MergeableList{Keen#VRage#Core#Game#GameSystems#Gravity#GravityTypeDefinition}}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinitionObjectBuilder.TypeInfoHolder.GravityTypesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Collections#MergeableList{Keen#VRage#Core#Game#GameSystems#Gravity#GravityTypeDefinition}}#Set(System.Byte@,Keen.VRage.Library.Collections.MergeableList{Keen.VRage.Core.Game.GameSystems.Gravity.GravityTypeDefinition}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinitionObjectBuilder.TypeInfoHolder.GravityTypesAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinitionObjectBuilder.TypeInfoHolder.GravityTypesAccessor.Set(Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinitionObjectBuilder@,Keen.VRage.Library.Collections.MergeableList{Keen.VRage.Core.Game.GameSystems.Gravity.GravityTypeDefinition}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinitionObjectBuilder.TypeInfoHolder.GravityTypesAccessor.Get(Keen.VRage.Core.Game.GameSystems.Gravity.GravitySetDefinitionObjectBuilder@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.Gravity.GravityTypeDefinitionObjectBuilder.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravityTypeDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravityTypeDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Game.GameSystems.Gravity.GravityTypeDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravityTypeDefinitionObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravityTypeDefinitionObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Game.GameSystems.Gravity.GravityTypeDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravityTypeDefinitionObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravityTypeDefinitionObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Game.GameSystems.Gravity.GravityTypeDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravityTypeDefinitionObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravityTypeDefinitionObjectBuilder.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravityTypeDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravityTypeDefinitionObjectBuilder.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravityTypeDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Game.GameSystems.Gravity.GravityTypeDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravityTypeDefinitionObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravityTypeDefinitionObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Game.GameSystems.Gravity.GravityTypeDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravityTypeDefinitionObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravityTypeDefinitionObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Game.GameSystems.Gravity.GravityTypeDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravityTypeDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravityTypeDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Game.GameSystems.Gravity.GravityTypeDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravityTypeDefinitionObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.Gravity.GravityTypeDefinitionObjectBuilder.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Gravity.GravityTypeDefinitionObjectBuilder.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravityTypeDefinitionObjectBuilder.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Gravity.GravityTypeDefinitionObjectBuilder.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Game#GameSystems#Gravity#GravityTypeDefinitionObjectBuilder}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Gravity.GravityTypeDefinitionObjectBuilder.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.Gravity.GravityTypeDefinitionObjectBuilder.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.Gravity.GravityTypeDefinitionObjectBuilder.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.Gravity.GravityTypeDefinitionObjectBuilder.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.ISpatialTriggerSystem">
            <summary>
            Interface for spatial object observing and reporting. Allows large-scale detections and entity tracking within a volume
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ISpatialTriggerSystem.Subscribe(Keen.VRage.Library.Mathematics.OrientedBoundingBoxD,Keen.VRage.Core.Game.GameSystems.TriggerArgs,Keen.VRage.DCS.Components.Entity,System.String)">
            <summary>
            Subscribes to a box trigger that is attached to an optional entity.
            </summary>
            <param name="shape">Position and Size of the trigger</param>
            <param name="args">Arguments for filtering entities and method invocations</param>
            <param name="attachedEntity">The entity the trigger is attached to.</param>
            <param name="debugName">A debug name for the added trigger. If not provided the name of the attached entity may be used.</param>
            <returns></returns>
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ISpatialTriggerSystem.Subscribe(Keen.VRage.Library.Mathematics.BoundingSphereD,Keen.VRage.Core.Game.GameSystems.TriggerArgs,Keen.VRage.DCS.Components.Entity,System.String)">
            <summary>
            Subscribes to a sphere trigger that is attached to an optional entity.
            </summary>
            <param name="shape">Position and Size of the trigger</param>
            <param name="args">Arguments for filtering entities and method invocations</param>
            <param name="attachedEntity">The entity the trigger is attached to.</param>
            <param name="debugName">A debug name for the added trigger. If not provided the name of the attached entity may be used.</param>
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ISpatialTriggerSystem.Subscribe(Keen.VRage.Library.Mathematics.OrientedBoundingBoxD,Keen.VRage.Core.Game.GameSystems.TriggerArgs,Keen.VRage.Core.Game.GameSystems.SectorArgs,Keen.VRage.DCS.Components.Entity,System.String)">
            <summary>
            Subscribes to a box trigger with internal sectors.
            </summary>
            <param name="shape">Position and Size of the trigger</param>
            <param name="args">Arguments for filtering entities</param>
            <param name="sectorArgs">Arguments for sector sizes and method invocations</param>
            <param name="attachedEntity">The entity the trigger is attached to.</param>
            <param name="debugName">A debug name for the added trigger. If not provided the name of the attached entity may be used.</param>
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ISpatialTriggerSystem.Subscribe(Keen.VRage.Library.Mathematics.BoundingSphereD,Keen.VRage.Core.Game.GameSystems.TriggerArgs,Keen.VRage.Core.Game.GameSystems.SectorArgs,Keen.VRage.DCS.Components.Entity,System.String)">
            <summary>
            Subscribes to a sphere trigger with internal sectors.
            </summary>
            <param name="shape"> Position and Size of the trigger</param>
            <param name="args">Arguments for filtering entities</param>
            <param name="sectorArgs">Arguments for sector sizes and method invocations</param>
            <param name="attachedEntity">The entity the trigger is attached to.</param>
            <param name="debugName">A debug name for the added trigger. If not provided the name of the attached entity may be used.</param>
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ISpatialTriggerSystem.Subscribe(System.Boolean,Keen.VRage.Library.Mathematics.Vector3D,Keen.VRage.Library.Mathematics.Vector3I,Keen.VRage.Core.Game.GameSystems.TriggerArgs,Keen.VRage.Core.Game.GameSystems.SectorArgs,Keen.VRage.DCS.Components.Entity,System.String)">
            <summary>
            Subscribes to a box or sphere trigger with internal sectors, generating the trigger bounds from the <see cref="F:Keen.VRage.Core.Game.GameSystems.SectorArgs.SectorSize"/> and sectorsCount.
            </summary>
            <param name="box">If true, the shape will be a box. If false, the shape will be a sphere</param>
            <param name="origin">The center of the trigger. Number of sectors per axis can be even or odd, this will dictate the location of 0,0,0 sector.</param>
            <param name="sectorsCount">Arguments for sector sizes and method invocations</param>
            <param name="args">Arguments for filtering entities</param>
            <param name="sectorArgs">Arguments for sector sizes and method invocations</param>
            <param name="attachedEntity">The entity the trigger is attached to.</param>
            <param name="debugName">A debug name for the added trigger. If not provided the name of the attached entity may be used.</param>
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ISpatialTriggerSystem.Subscribe(Keen.VRage.Library.Mathematics.BoundingBoxD,Keen.VRage.Core.Game.GameSystems.TriggerArgs,Keen.VRage.DCS.Components.Entity,System.String)">
            <summary>
            Subscribes to a box trigger that is attached to an optional entity.
            </summary>
            <param name="shape">Position and Size of the trigger</param>
            <param name="args">Arguments for filtering entities and method invocations</param>
            <param name="attachedEntity">The entity the trigger is attached to.</param>
            <param name="debugName">A debug name for the added trigger. If not provided the name of the attached entity may be used.</param>
            <returns></returns>
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ISpatialTriggerSystem.Subscribe(Keen.VRage.Library.Mathematics.BoundingBoxD,Keen.VRage.Core.Game.GameSystems.TriggerArgs,Keen.VRage.Core.Game.GameSystems.SectorArgs,Keen.VRage.DCS.Components.Entity,System.String)">
            <summary>
            Subscribes to a box trigger with internal sectors.
            </summary>
            <param name="shape">Position and Size of the trigger</param>
            <param name="args">Arguments for filtering entities</param>
            <param name="sectorArgs">Arguments for sector sizes and method invocations</param>
            <param name="attachedEntity">The entity the trigger is attached to.</param>
            <param name="debugName">A debug name for the added trigger. If not provided the name of the attached entity may be used.</param>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.ISpatialTriggerSystem.SpatialTriggerSystemCallbacks">
            <summary>
            Job Group timing during which <see cref="T:Keen.VRage.Core.Game.GameSystems.ISpatialTriggerSystem"/> invokes observation callbacks.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.TriggerArgs">
            <summary>
            Filtering arguments for an <see cref="T:Keen.VRage.Core.Game.GameSystems.ISpatialTriggerSystem"/> subscriber
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.TriggerArgs.TypeConstraints">
            <summary>
            Component/Data constraints that allow filtering for specific entities
            Where index 0 is the number of types for MustHave.
            Where index 1+(Value at 0) is the type ids for MustHave.
            Values after index 1+(Value at 0) are DoesNotHaves.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.TriggerArgs.OnEntityEntered">
            <summary>
            Invoked when an entity enters the trigger volume. Does not get invoked when sectors are enabled
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.TriggerArgs.OnEntityExited">
            <summary>
            Invoked when an entity exits the trigger volume. Does not get invoked when sectors are enabled
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.TriggerArgs.OnFirstEntityEntered">
            <summary>
            Invoked when the first entity enters the trigger volume. Does not get invoked when sectors are enabled
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.TriggerArgs.OnLastEntityExited">
            <summary>
            Invoked when the last entity exits the trigger volume. Does not get invoked when sectors are enabled
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.SectorArgs">
            <summary>
            Sector arguments for a trigger with internal sectors. Entities can be in multiple sectors at a time.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.SectorArgs.SectorSize">
            <summary>
            Size of a sector. Must be a multiple of the trigger size and greater than zero.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.SectorArgs.MarginSize">
            <summary>
            Overlap size of other sectors. Also increases the size of the trigger in every direction.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.SectorArgs.OnEntityEntered">
            <summary>
            Invoked when an entity enters the trigger volume or crosses into another sector.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.SectorArgs.OnEntityExited">
            <summary>
            Invoked when an entity exits the trigger volume or exits a sector.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.SectorArgs.OnFirstEntityEntered">
            <summary>
            Invoked when the first entity enters a sector.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.SectorArgs.OnLastEntityExited">
            <summary>
            Invoked when the last entity exits a sector.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SectorArgs.SplitTrigger(Keen.VRage.Library.Mathematics.Vector3D,Keen.VRage.Library.Mathematics.Vector3I)">
            <summary>
            Calculates a sector size from the given trigger extents and sector count
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.Observers.Observer">
            <summary>
            Implementation of the concept of "observers" providing a decoupled way to access 
            certain objects's world transform from other systems (e.g. debug view renderer, etc)
            <see cref="T:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponent"/>
            <see cref="T:Keen.VRage.Core.Game.GameSystems.Observers.Observers"/>
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.Observers.ObserverData">
            <summary>
            The data tracked/observer for each entity equipped with an ObserverComponent
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.Observers.IObservers">
            <summary>
            The observers service lets entities with ObserverComponents 
            publish their world transform within a certain interest/influence radius
            Guarantees: thread-safe on Get, not thread-safe on Add/Update/Remove
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Observers.IObservers.Add(System.Collections.Immutable.ImmutableArray{Keen.VRage.Library.Utils.StringId},Keen.VRage.Core.Game.GameSystems.Observers.ObserverData)">
            <summary>
            Register a new observer, associated to the input tags
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Observers.IObservers.Remove(Keen.VRage.Core.Game.GameSystems.Observers.Observer)">
            <summary>
            Unregister an existing observer and remove its stored data
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Observers.IObservers.Update(Keen.VRage.Core.Game.GameSystems.Observers.Observer,Keen.VRage.Core.Game.GameSystems.Observers.ObserverData)">
            <summary>
            Update the data associated to this observer
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Observers.IObservers.Get(Keen.VRage.Library.Utils.StringId)">
            <summary>
            Retrieve latest data published by each observer associated to a specific tag
            The returned span data will be invalidated by next call to Add/Update/Remove()
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinition">
            <summary>
            <see cref="T:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponent"/>
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinition.Tags">
            <summary>
            Tags we should use when registering as an observer
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinition.InfluenceRadius">
            <summary>
            Our intereset radius, centered around observer position
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinition.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer{Keen#VRage#Core#Game#GameSystems#Observers#ObserverComponentDefinition}#NameSerializer">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinition.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#NameSerializer">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinition.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#NameType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinition.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer{Keen#VRage#Core#Game#GameSystems#Observers#ObserverComponentDefinition}#ShouldSerializeAsName(Keen.VRage.Library.Serialization.SerializationContext,Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinition@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinition.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#ShouldSerializeAsName(Keen.VRage.Library.Serialization.SerializationContext,System.Object@)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinition.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinition.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Game#GameSystems#Observers#ObserverComponentDefinition}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinition.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinition.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinition.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinition.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinition.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinition.TypeInfoHolder.TagsAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinition.TypeInfoHolder.TagsAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinition.TypeInfoHolder.TagsAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinition.TypeInfoHolder.TagsAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinition.TypeInfoHolder.TagsAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinition.TypeInfoHolder.TagsAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinition.TypeInfoHolder.TagsAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinition.TypeInfoHolder.TagsAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinition.TypeInfoHolder.TagsAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinition.TypeInfoHolder.TagsAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinition.TypeInfoHolder.TagsAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinition.TypeInfoHolder.TagsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinition.TypeInfoHolder.TagsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinition.TypeInfoHolder.TagsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinition.TypeInfoHolder.TagsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Immutable#ImmutableArray{Keen#VRage#Library#Utils#StringId}}#Set(System.Object,System.Collections.Immutable.ImmutableArray{Keen.VRage.Library.Utils.StringId}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinition.TypeInfoHolder.TagsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Immutable#ImmutableArray{Keen#VRage#Library#Utils#StringId}}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinition.TypeInfoHolder.TagsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Immutable#ImmutableArray{Keen#VRage#Library#Utils#StringId}}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinition.TypeInfoHolder.TagsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Immutable#ImmutableArray{Keen#VRage#Library#Utils#StringId}}#Set(System.Byte@,System.Collections.Immutable.ImmutableArray{Keen.VRage.Library.Utils.StringId}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinition.TypeInfoHolder.TagsAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinition.TypeInfoHolder.TagsAccessor.Set(Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinition@,System.Collections.Immutable.ImmutableArray{Keen.VRage.Library.Utils.StringId}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinition.TypeInfoHolder.TagsAccessor.Get(Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinition@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinition.TypeInfoHolder.InfluenceRadiusAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinition.TypeInfoHolder.InfluenceRadiusAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinition.TypeInfoHolder.InfluenceRadiusAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinition.TypeInfoHolder.InfluenceRadiusAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinition.TypeInfoHolder.InfluenceRadiusAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinition.TypeInfoHolder.InfluenceRadiusAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinition.TypeInfoHolder.InfluenceRadiusAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinition.TypeInfoHolder.InfluenceRadiusAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinition.TypeInfoHolder.InfluenceRadiusAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinition.TypeInfoHolder.InfluenceRadiusAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinition.TypeInfoHolder.InfluenceRadiusAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinition.TypeInfoHolder.InfluenceRadiusAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinition.TypeInfoHolder.InfluenceRadiusAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinition.TypeInfoHolder.InfluenceRadiusAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinition.TypeInfoHolder.InfluenceRadiusAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Object,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinition.TypeInfoHolder.InfluenceRadiusAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinition.TypeInfoHolder.InfluenceRadiusAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinition.TypeInfoHolder.InfluenceRadiusAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Byte@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinition.TypeInfoHolder.InfluenceRadiusAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinition.TypeInfoHolder.InfluenceRadiusAccessor.Set(Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinition@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinition.TypeInfoHolder.InfluenceRadiusAccessor.Get(Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinition@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.Observers.ObserversUpdateJobGroup">
            <summary>
            Time at which ObserverComponents will publish changes of their world transforms to the Observers service
            This happens after the simulation update to ensure that the data published to the observers service
            is not lagging behind the simulation by one frame
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponent">
            <summary>
            This component should be added on entities that want to register as potential observation ventage points for other systems to use
            <see cref="T:Keen.VRage.Core.Game.GameSystems.Observers.IObservers"/>
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.Observers.Observers">
            <summary>
            Concrete implementation of the IObservers
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.Observers.Observers.ObserverInfo.IndexInTag">
            <summary>
            index of this Observer/ObserverData in _tag2observers/_tag2observerData for Tags[i]
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.Observers.ObserversExtensions">
            <summary>
            <seealso cref="T:Keen.VRage.Core.Game.GameSystems.Observers.IObservers"/>
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Observers.ObserversExtensions.TryGetClosestObserver(Keen.VRage.Core.Game.GameSystems.Observers.IObservers,Keen.VRage.Library.Utils.StringId,Keen.VRage.Library.Mathematics.Vector3D@,Keen.VRage.Core.WorldTransform@)">
            <summary>
            Get observer of given tag that is closest to the given world transform
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinitionObjectBuilder.Tags">
            <summary>
            Tags we should use when registering as an observer
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinitionObjectBuilder.InfluenceRadius">
            <summary>
            Our intereset radius, centered around observer position
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinitionObjectBuilder.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinitionObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinitionObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinitionObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinitionObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinitionObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinitionObjectBuilder.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinitionObjectBuilder.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinitionObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinitionObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinitionObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinitionObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinitionObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinitionObjectBuilder.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinitionObjectBuilder.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinitionObjectBuilder.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinitionObjectBuilder.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Game#GameSystems#Observers#ObserverComponentDefinitionObjectBuilder}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinitionObjectBuilder.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinitionObjectBuilder.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinitionObjectBuilder.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinitionObjectBuilder.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinitionObjectBuilder.TypeInfoHolder.TagsAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinitionObjectBuilder.TypeInfoHolder.TagsAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinitionObjectBuilder.TypeInfoHolder.TagsAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinitionObjectBuilder.TypeInfoHolder.TagsAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinitionObjectBuilder.TypeInfoHolder.TagsAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinitionObjectBuilder.TypeInfoHolder.TagsAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinitionObjectBuilder.TypeInfoHolder.TagsAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinitionObjectBuilder.TypeInfoHolder.TagsAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinitionObjectBuilder.TypeInfoHolder.TagsAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinitionObjectBuilder.TypeInfoHolder.TagsAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinitionObjectBuilder.TypeInfoHolder.TagsAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinitionObjectBuilder.TypeInfoHolder.TagsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinitionObjectBuilder.TypeInfoHolder.TagsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinitionObjectBuilder.TypeInfoHolder.TagsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinitionObjectBuilder.TypeInfoHolder.TagsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Collections#MergeableList{Keen#VRage#Library#Utils#StringId}}#Set(System.Object,Keen.VRage.Library.Collections.MergeableList{Keen.VRage.Library.Utils.StringId}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinitionObjectBuilder.TypeInfoHolder.TagsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Collections#MergeableList{Keen#VRage#Library#Utils#StringId}}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinitionObjectBuilder.TypeInfoHolder.TagsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Collections#MergeableList{Keen#VRage#Library#Utils#StringId}}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinitionObjectBuilder.TypeInfoHolder.TagsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Collections#MergeableList{Keen#VRage#Library#Utils#StringId}}#Set(System.Byte@,Keen.VRage.Library.Collections.MergeableList{Keen.VRage.Library.Utils.StringId}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinitionObjectBuilder.TypeInfoHolder.TagsAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinitionObjectBuilder.TypeInfoHolder.TagsAccessor.Set(Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinitionObjectBuilder@,Keen.VRage.Library.Collections.MergeableList{Keen.VRage.Library.Utils.StringId}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinitionObjectBuilder.TypeInfoHolder.TagsAccessor.Get(Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinitionObjectBuilder@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinitionObjectBuilder.TypeInfoHolder.InfluenceRadiusAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinitionObjectBuilder.TypeInfoHolder.InfluenceRadiusAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinitionObjectBuilder.TypeInfoHolder.InfluenceRadiusAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinitionObjectBuilder.TypeInfoHolder.InfluenceRadiusAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinitionObjectBuilder.TypeInfoHolder.InfluenceRadiusAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinitionObjectBuilder.TypeInfoHolder.InfluenceRadiusAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinitionObjectBuilder.TypeInfoHolder.InfluenceRadiusAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinitionObjectBuilder.TypeInfoHolder.InfluenceRadiusAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinitionObjectBuilder.TypeInfoHolder.InfluenceRadiusAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinitionObjectBuilder.TypeInfoHolder.InfluenceRadiusAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinitionObjectBuilder.TypeInfoHolder.InfluenceRadiusAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinitionObjectBuilder.TypeInfoHolder.InfluenceRadiusAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinitionObjectBuilder.TypeInfoHolder.InfluenceRadiusAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinitionObjectBuilder.TypeInfoHolder.InfluenceRadiusAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinitionObjectBuilder.TypeInfoHolder.InfluenceRadiusAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Object,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinitionObjectBuilder.TypeInfoHolder.InfluenceRadiusAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinitionObjectBuilder.TypeInfoHolder.InfluenceRadiusAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinitionObjectBuilder.TypeInfoHolder.InfluenceRadiusAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Byte@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinitionObjectBuilder.TypeInfoHolder.InfluenceRadiusAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinitionObjectBuilder.TypeInfoHolder.InfluenceRadiusAccessor.Set(Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinitionObjectBuilder@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinitionObjectBuilder.TypeInfoHolder.InfluenceRadiusAccessor.Get(Keen.VRage.Core.Game.GameSystems.Observers.ObserverComponentDefinitionObjectBuilder@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.OWT.ObservedRelativeTransform">
            <summary>
            Transform that also tracks movements of any parenting <see cref="T:Keen.VRage.Core.RelativeTransform"/>s.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.OWT.ObservedRelativeTransform.AttachTo(Keen.VRage.DCS.Accessors.DEntity,Keen.VRage.DCS.Scenes.Scene)">
            <summary>
            Attaches an <see cref="T:Keen.VRage.Core.Game.GameSystems.OWT.ObservedRelativeTransform"/> if it does not already exist
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.OWT.ObservedRelativeTransform.DetatchFrom(Keen.VRage.DCS.Accessors.DEntity,Keen.VRage.DCS.Scenes.Scene)">
            <summary>
            Detaches reference from the transform and removes the data if the transform is no longer being observed
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.OWT.ObservedTransformChildData">
            <summary>
            Struct used by <see cref="T:Keen.VRage.Core.Game.GameSystems.OWT.ObservedTransformRootData"/> for each element in tree
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.OWT.ObservedTransformRootData">
            <summary>
            Root data for <see cref="T:Keen.VRage.Core.Game.GameSystems.OWT.ObservedWorldTransformSystem"/> that keeps structure of tree
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.OWT.ObservedWorldTransform">
            <summary>
            Transform that also tracks movements of any parenting transforms.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.OWT.ObservedWorldTransform.AttachTo(Keen.VRage.DCS.Accessors.DEntity,Keen.VRage.DCS.Scenes.Scene)">
            <summary>
            Attaches an <see cref="T:Keen.VRage.Core.Game.GameSystems.OWT.ObservedWorldTransform"/> if it does not already exist
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.OWT.ObservedWorldTransform.DetatchFrom(Keen.VRage.DCS.Accessors.DEntity,Keen.VRage.DCS.Scenes.Scene)">
            <summary>
            Detaches reference from the transform and removes the data if the transform is no longer being observed
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.OWT.TransformsFinalized">
            <summary>
            Time point in frame when all transforms are finalized for the frame/tick
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.OWT.TransformsFinalized.ObservedTransformsChangedJobGroup">
            <summary>
            JobGroup for when any transform is changed on an entity with <see cref="T:Keen.VRage.Core.Game.GameSystems.OWT.ObservedWorldTransform"/>
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.OWT.ObservedWorldTransformSystem">
            <summary>
            Method of observing a <see cref="T:Keen.VRage.Core.WorldTransform"/> or <see cref="T:Keen.VRage.Core.RelativeTransform"/> with regard to any parent entity transforms.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.OWT.ObservedWorldTransformSystem.OnRelativeTransformChanged(Keen.VRage.DCS.Accessors.DEntity,Keen.VRage.DCS.Accessors.ReadOnlyEntityData{Keen.VRage.Core.Game.GameSystems.OWT.ObservedTransformRootData},Keen.VRage.DCS.Accessors.EntityData{Keen.VRage.Core.Game.GameSystems.OWT.ObservedWorldTransform,Keen.VRage.Core.Game.GameSystems.OWT.ObservedRelativeTransform},Keen.VRage.DCS.Accessors.ReadOnlyEntityData{Keen.VRage.Core.Game.Data.ParentData,Keen.VRage.Core.WorldTransform,Keen.VRage.Core.RelativeTransform})">
            <summary>
            Called by two different jobs to allow ORing of OWT and ORT data presence. The ORing prevents the observed transforms from getting duplicate calculations
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.OWT.ObservedWorldTransformSystem.GetRootEntity(Keen.VRage.DCS.Accessors.DEntity,Keen.VRage.DCS.Accessors.ReadOnlyEntityData{Keen.VRage.Core.Game.Data.ParentData},Keen.VRage.DCS.Accessors.ReadOnlyEntityData{Keen.VRage.Core.WorldTransform})">
            <summary>
            Gets Write Ptr of <see cref="T:Keen.VRage.Core.Game.GameSystems.OWT.ObservedTransformRootData"/> at lowest root of entity hierarchy
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.CompositionProcessorComponent">
            <summary>
            Base <see cref="T:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.IConfiguratorProcessor"/> for modifying component composition of an entity
            NOTE: Client-Server prefab links are broken when the <see cref="T:Keen.VRage.DCS.Builders.EntityBuilder"/> is modified.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.CompositionProcessorComponent.Process(Keen.VRage.DCS.Builders.EntityBuilder@)">
            <summary>
            Returns true if the passed <see cref="T:Keen.VRage.DCS.Builders.EntityBuilder"/> was modified.
            NOTE: Client-Server prefab links are broken when the <see cref="T:Keen.VRage.DCS.Builders.EntityBuilder"/> is modified.
            </summary>
            <returns><see langword="true"/> if the processor modified the entity builder</returns>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.IConfiguratorProcessor">
            <summary>
            Interface for processors used to configure <see cref="T:Keen.VRage.DCS.ObjectBuilders.EntityObjectBuilder"/>s
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.IConfiguratorProcessor.Process(Keen.VRage.DCS.ObjectBuilders.EntityObjectBuilder@)">
            <summary>
            Modifies the passed <see cref="T:Keen.VRage.DCS.ObjectBuilders.EntityObjectBuilder"/> depending on the implementer.
            Passed by ref so implementer can potentially replace entire EOB
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.IConfiguratorProcessor.Process(Keen.VRage.DCS.Components.Entity,Keen.VRage.Core.Game.Definitions.PrefabDefinition)">
            <summary>
            Run <see cref="T:Keen.VRage.Core.Game.Definitions.PrefabDefinition"/> though provided configurator
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.IConfiguratorProcessor.Process(Keen.VRage.DCS.Components.Entity,Keen.VRage.DCS.ObjectBuilders.EntityObjectBuilder@)">
            <summary>
            Run <see cref="T:Keen.VRage.DCS.ObjectBuilders.EntityObjectBuilder"/> though provided configurator
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.IConfiguratorProcessor.Process``1(Keen.VRage.DCS.Scenes.Scene,Keen.VRage.Core.Game.Definitions.PrefabDefinition,Keen.VRage.Core.Game.Definitions.PrefabDefinition,System.Action{``0})">
            <inheritdoc cref="M:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.IConfiguratorProcessor.Process``2(Keen.VRage.DCS.Scenes.Scene,Keen.VRage.Core.Game.Definitions.PrefabDefinition,System.Action{``0},System.Func{Keen.VRage.DCS.Components.Entity,``1})"/>
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.IConfiguratorProcessor.Process``2(Keen.VRage.DCS.Scenes.Scene,Keen.VRage.Core.Game.Definitions.PrefabDefinition,System.Action{``0},System.Func{Keen.VRage.DCS.Components.Entity,``1})">
            <summary>
            Allocate configurator from provided <see cref="T:Keen.VRage.Core.Game.Definitions.PrefabDefinition"/>,
            inject additional data to it, expose for use and dispose afterwards.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.IEntitySampler">
            <summary>
            Samples and configures one <see cref="T:Keen.VRage.DCS.ObjectBuilders.EntityObjectBuilder"/> from database
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.IEntitySampler.Get">
            <summary />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.IEntitySampler.Sample``1(Keen.VRage.DCS.Scenes.Scene,Keen.VRage.Core.Game.Definitions.PrefabDefinition,System.Action{``0})">
            <summary />
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinition">
            <summary>
            <see cref="T:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerComponent"/>
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinition.Prefab">
            <summary>
            Prefab to build.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinition.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer{Keen#VRage#Core#Game#GameSystems#PrefabConfigurators#SinglePrefabSamplerDefinition}#NameSerializer">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinition.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#NameSerializer">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinition.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#NameType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinition.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer{Keen#VRage#Core#Game#GameSystems#PrefabConfigurators#SinglePrefabSamplerDefinition}#ShouldSerializeAsName(Keen.VRage.Library.Serialization.SerializationContext,Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinition@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinition.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#ShouldSerializeAsName(Keen.VRage.Library.Serialization.SerializationContext,System.Object@)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinition.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinition.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Game#GameSystems#PrefabConfigurators#SinglePrefabSamplerDefinition}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinition.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinition.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinition.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinition.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinition.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinition.TypeInfoHolder.PrefabAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinition.TypeInfoHolder.PrefabAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinition.TypeInfoHolder.PrefabAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinition.TypeInfoHolder.PrefabAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinition.TypeInfoHolder.PrefabAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinition.TypeInfoHolder.PrefabAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinition.TypeInfoHolder.PrefabAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinition.TypeInfoHolder.PrefabAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinition.TypeInfoHolder.PrefabAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinition.TypeInfoHolder.PrefabAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinition.TypeInfoHolder.PrefabAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinition.TypeInfoHolder.PrefabAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinition.TypeInfoHolder.PrefabAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinition.TypeInfoHolder.PrefabAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinition.TypeInfoHolder.PrefabAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#Definitions#PrefabDefinition}#Set(System.Object,Keen.VRage.Core.Game.Definitions.PrefabDefinition@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinition.TypeInfoHolder.PrefabAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#Definitions#PrefabDefinition}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinition.TypeInfoHolder.PrefabAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#Definitions#PrefabDefinition}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinition.TypeInfoHolder.PrefabAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#Definitions#PrefabDefinition}#Set(System.Byte@,Keen.VRage.Core.Game.Definitions.PrefabDefinition@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinition.TypeInfoHolder.PrefabAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinition.TypeInfoHolder.PrefabAccessor.Set(Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinition@,Keen.VRage.Core.Game.Definitions.PrefabDefinition@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinition.TypeInfoHolder.PrefabAccessor.Get(Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinition@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerComponent">
            <summary>
            <see cref="T:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.IEntitySampler"/> implementation with exactly one <see cref="T:Keen.VRage.Core.Game.Definitions.PrefabDefinition"/> in database of available options
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerComponent.Get">
            <summary>
            Returns a new <see cref="T:Keen.VRage.DCS.ObjectBuilders.EntityObjectBuilder"/> that contains the changes declared by <see cref="T:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.IConfiguratorProcessor"/> implementations
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinitionObjectBuilder.Prefab">
            <summary>
            Prefab to build.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinitionObjectBuilder.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinitionObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinitionObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinitionObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinitionObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinitionObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinitionObjectBuilder.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinitionObjectBuilder.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinitionObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinitionObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinitionObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinitionObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinitionObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinitionObjectBuilder.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinitionObjectBuilder.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinitionObjectBuilder.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinitionObjectBuilder.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Game#GameSystems#PrefabConfigurators#SinglePrefabSamplerDefinitionObjectBuilder}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinitionObjectBuilder.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinitionObjectBuilder.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinitionObjectBuilder.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinitionObjectBuilder.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinitionObjectBuilder.TypeInfoHolder.PrefabAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinitionObjectBuilder.TypeInfoHolder.PrefabAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinitionObjectBuilder.TypeInfoHolder.PrefabAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinitionObjectBuilder.TypeInfoHolder.PrefabAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinitionObjectBuilder.TypeInfoHolder.PrefabAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinitionObjectBuilder.TypeInfoHolder.PrefabAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinitionObjectBuilder.TypeInfoHolder.PrefabAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinitionObjectBuilder.TypeInfoHolder.PrefabAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinitionObjectBuilder.TypeInfoHolder.PrefabAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinitionObjectBuilder.TypeInfoHolder.PrefabAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinitionObjectBuilder.TypeInfoHolder.PrefabAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinitionObjectBuilder.TypeInfoHolder.PrefabAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinitionObjectBuilder.TypeInfoHolder.PrefabAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinitionObjectBuilder.TypeInfoHolder.PrefabAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinitionObjectBuilder.TypeInfoHolder.PrefabAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#Definitions#PrefabDefinition}#Set(System.Object,Keen.VRage.Core.Game.Definitions.PrefabDefinition@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinitionObjectBuilder.TypeInfoHolder.PrefabAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#Definitions#PrefabDefinition}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinitionObjectBuilder.TypeInfoHolder.PrefabAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#Definitions#PrefabDefinition}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinitionObjectBuilder.TypeInfoHolder.PrefabAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#Definitions#PrefabDefinition}#Set(System.Byte@,Keen.VRage.Core.Game.Definitions.PrefabDefinition@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinitionObjectBuilder.TypeInfoHolder.PrefabAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinitionObjectBuilder.TypeInfoHolder.PrefabAccessor.Set(Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinitionObjectBuilder@,Keen.VRage.Core.Game.Definitions.PrefabDefinition@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinitionObjectBuilder.TypeInfoHolder.PrefabAccessor.Get(Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.SinglePrefabSamplerDefinitionObjectBuilder@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.DebugBox">
            <summary>
            Debug box for the <see cref="T:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpawnPreventionComponent"/>.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo">
            <summary>
            Information about an entity that can be procedurally spawned.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.EntityPrefab">
            <summary>
            Entity to spawn.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.Density">
            <summary>
            Amount of entities per cubic kilometer.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.RandomRotation">
            <summary>
            Should the entity be randomly rotated when spawned.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Game#GameSystems#ProceduralGeneration#EntitySpawnInfo}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.TypeInfoHolder.EntityPrefabAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.TypeInfoHolder.EntityPrefabAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.TypeInfoHolder.EntityPrefabAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.TypeInfoHolder.EntityPrefabAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.TypeInfoHolder.EntityPrefabAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.TypeInfoHolder.EntityPrefabAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.TypeInfoHolder.EntityPrefabAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.TypeInfoHolder.EntityPrefabAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.TypeInfoHolder.EntityPrefabAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.TypeInfoHolder.EntityPrefabAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.TypeInfoHolder.EntityPrefabAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.TypeInfoHolder.EntityPrefabAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.TypeInfoHolder.EntityPrefabAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.TypeInfoHolder.EntityPrefabAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.TypeInfoHolder.EntityPrefabAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#Definitions#PrefabDefinition}#Set(System.Object,Keen.VRage.Core.Game.Definitions.PrefabDefinition@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.TypeInfoHolder.EntityPrefabAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#Definitions#PrefabDefinition}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.TypeInfoHolder.EntityPrefabAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#Definitions#PrefabDefinition}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.TypeInfoHolder.EntityPrefabAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#Definitions#PrefabDefinition}#Set(System.Byte@,Keen.VRage.Core.Game.Definitions.PrefabDefinition@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.TypeInfoHolder.EntityPrefabAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.TypeInfoHolder.EntityPrefabAccessor.Set(Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo@,Keen.VRage.Core.Game.Definitions.PrefabDefinition@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.TypeInfoHolder.EntityPrefabAccessor.Get(Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.TypeInfoHolder.DensityAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.TypeInfoHolder.DensityAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.TypeInfoHolder.DensityAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.TypeInfoHolder.DensityAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.TypeInfoHolder.DensityAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.TypeInfoHolder.DensityAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.TypeInfoHolder.DensityAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.TypeInfoHolder.DensityAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.TypeInfoHolder.DensityAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.TypeInfoHolder.DensityAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.TypeInfoHolder.DensityAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.TypeInfoHolder.DensityAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.TypeInfoHolder.DensityAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.TypeInfoHolder.DensityAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.TypeInfoHolder.DensityAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Object,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.TypeInfoHolder.DensityAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.TypeInfoHolder.DensityAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.TypeInfoHolder.DensityAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Byte@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.TypeInfoHolder.DensityAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.TypeInfoHolder.DensityAccessor.Set(Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.TypeInfoHolder.DensityAccessor.Get(Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.TypeInfoHolder.RandomRotationAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.TypeInfoHolder.RandomRotationAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.TypeInfoHolder.RandomRotationAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.TypeInfoHolder.RandomRotationAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.TypeInfoHolder.RandomRotationAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.TypeInfoHolder.RandomRotationAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.TypeInfoHolder.RandomRotationAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.TypeInfoHolder.RandomRotationAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.TypeInfoHolder.RandomRotationAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.TypeInfoHolder.RandomRotationAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.TypeInfoHolder.RandomRotationAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.TypeInfoHolder.RandomRotationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.TypeInfoHolder.RandomRotationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.TypeInfoHolder.RandomRotationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.TypeInfoHolder.RandomRotationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.TypeInfoHolder.RandomRotationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.TypeInfoHolder.RandomRotationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.TypeInfoHolder.RandomRotationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.TypeInfoHolder.RandomRotationAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.TypeInfoHolder.RandomRotationAccessor.Set(Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo.TypeInfoHolder.RandomRotationAccessor.Get(Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ISizeEstimator">
            <summary>
            Used in combination with <see cref="T:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.IConfiguratorProcessor"/>.
            Keeps information about the estimated size of a most recently processed <see cref="T:Keen.VRage.DCS.ObjectBuilders.EntityObjectBuilder"/>.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ISizeEstimator.UpdateSize(Keen.VRage.Library.Mathematics.Vector3)">
            <summary>
            Provide the maximum size that the object can reach from the spawn origin.
            It updates the current max size with Math.Max(current, new).
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ISizeEstimator.Reset">
            <summary>
            Resets the stored max size to 0.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ISizeEstimator.GetRelativeBoundingBox(Keen.VRage.Core.RelativeTransform)">
            <summary>
            Gets the estimated bounding box transformed by the provided <paramref name="transform"/>.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralEntityComponentBaseObjectBuilder">
            <summary>
            <inheritdoc cref="T:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralEntityComponentBase"/>
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralEntityComponentBaseObjectBuilder.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralEntityComponentBaseObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralEntityComponentBaseObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralEntityComponentBaseObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralEntityComponentBaseObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralEntityComponentBaseObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralEntityComponentBaseObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralEntityComponentBaseObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralEntityComponentBaseObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralEntityComponentBaseObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralEntityComponentBaseObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralEntityComponentBaseObjectBuilder.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralEntityComponentBaseObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralEntityComponentBaseObjectBuilder.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralEntityComponentBaseObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralEntityComponentBaseObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralEntityComponentBaseObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralEntityComponentBaseObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralEntityComponentBaseObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralEntityComponentBaseObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralEntityComponentBaseObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralEntityComponentBaseObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralEntityComponentBaseObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralEntityComponentBaseObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralEntityComponentBaseObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralEntityComponentBaseObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralEntityComponentBaseObjectBuilder.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralEntityComponentBaseObjectBuilder.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralEntityComponentBaseObjectBuilder.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralEntityComponentBaseObjectBuilder.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Game#GameSystems#ProceduralGeneration#ProceduralEntityComponentBaseObjectBuilder}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralEntityComponentBaseObjectBuilder.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralEntityComponentBaseObjectBuilder.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralEntityComponentBaseObjectBuilder.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralEntityComponentBaseObjectBuilder.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralEntityComponentBaseObjectBuilder.TypeInfoHolder.MarkedAsManualAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralEntityComponentBaseObjectBuilder.TypeInfoHolder.MarkedAsManualAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralEntityComponentBaseObjectBuilder.TypeInfoHolder.MarkedAsManualAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralEntityComponentBaseObjectBuilder.TypeInfoHolder.MarkedAsManualAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralEntityComponentBaseObjectBuilder.TypeInfoHolder.MarkedAsManualAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralEntityComponentBaseObjectBuilder.TypeInfoHolder.MarkedAsManualAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralEntityComponentBaseObjectBuilder.TypeInfoHolder.MarkedAsManualAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralEntityComponentBaseObjectBuilder.TypeInfoHolder.MarkedAsManualAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralEntityComponentBaseObjectBuilder.TypeInfoHolder.MarkedAsManualAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralEntityComponentBaseObjectBuilder.TypeInfoHolder.MarkedAsManualAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralEntityComponentBaseObjectBuilder.TypeInfoHolder.MarkedAsManualAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralEntityComponentBaseObjectBuilder.TypeInfoHolder.MarkedAsManualAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralEntityComponentBaseObjectBuilder.TypeInfoHolder.MarkedAsManualAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralEntityComponentBaseObjectBuilder.TypeInfoHolder.MarkedAsManualAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralEntityComponentBaseObjectBuilder.TypeInfoHolder.MarkedAsManualAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralEntityComponentBaseObjectBuilder.TypeInfoHolder.MarkedAsManualAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralEntityComponentBaseObjectBuilder.TypeInfoHolder.MarkedAsManualAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralEntityComponentBaseObjectBuilder.TypeInfoHolder.MarkedAsManualAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralEntityComponentBaseObjectBuilder.TypeInfoHolder.MarkedAsManualAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralEntityComponentBaseObjectBuilder.TypeInfoHolder.MarkedAsManualAccessor.Set(Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralEntityComponentBaseObjectBuilder@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralEntityComponentBaseObjectBuilder.TypeInfoHolder.MarkedAsManualAccessor.Get(Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralEntityComponentBaseObjectBuilder@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralEntityComponentBaseObjectBuilder.TypeInfoHolder.IDAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralEntityComponentBaseObjectBuilder.TypeInfoHolder.IDAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralEntityComponentBaseObjectBuilder.TypeInfoHolder.IDAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralEntityComponentBaseObjectBuilder.TypeInfoHolder.IDAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralEntityComponentBaseObjectBuilder.TypeInfoHolder.IDAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralEntityComponentBaseObjectBuilder.TypeInfoHolder.IDAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralEntityComponentBaseObjectBuilder.TypeInfoHolder.IDAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralEntityComponentBaseObjectBuilder.TypeInfoHolder.IDAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralEntityComponentBaseObjectBuilder.TypeInfoHolder.IDAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralEntityComponentBaseObjectBuilder.TypeInfoHolder.IDAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralEntityComponentBaseObjectBuilder.TypeInfoHolder.IDAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralEntityComponentBaseObjectBuilder.TypeInfoHolder.IDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralEntityComponentBaseObjectBuilder.TypeInfoHolder.IDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralEntityComponentBaseObjectBuilder.TypeInfoHolder.IDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralEntityComponentBaseObjectBuilder.TypeInfoHolder.IDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#GameSystems#ProceduralGeneration#SpaceEntityId?}#Set(System.Object,System.Nullable{Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceEntityId}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralEntityComponentBaseObjectBuilder.TypeInfoHolder.IDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#GameSystems#ProceduralGeneration#SpaceEntityId?}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralEntityComponentBaseObjectBuilder.TypeInfoHolder.IDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#GameSystems#ProceduralGeneration#SpaceEntityId?}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralEntityComponentBaseObjectBuilder.TypeInfoHolder.IDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#GameSystems#ProceduralGeneration#SpaceEntityId?}#Set(System.Byte@,System.Nullable{Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceEntityId}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralEntityComponentBaseObjectBuilder.TypeInfoHolder.IDAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralEntityComponentBaseObjectBuilder.TypeInfoHolder.IDAccessor.Set(Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralEntityComponentBaseObjectBuilder@,System.Nullable{Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceEntityId}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralEntityComponentBaseObjectBuilder.TypeInfoHolder.IDAccessor.Get(Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralEntityComponentBaseObjectBuilder@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralEntityComponentBase">
            <summary>
            Base class for all procedural entities that can be spawned by the <see cref="T:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponent"/>.
            Helps keep track of the entity's state.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralEntityComponentBase.MarkedAsManual">
            <summary>
            Entities that are marked as manual will be excluded from procedural generation and instead serialize with the session.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralEntityComponentBase.InternalInit">
            <summary>
            Called after the base Init.
            Deriving components can override this method to implement additional initialization logic without having a separate Init method.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinition">
            <summary>
            <see cref="T:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataSessionComponent"/>
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinition.InfiniteVolume">
            <summary>
            Entities that can be procedurally spawned in the infinite space.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinition.ProceduralEntityConfigurator">
            <summary>
            A prefab for a configurator that provides a random seed to entities that need it.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinition.SpawnPreventionPrefab">
            <summary>
            Used for creating zones that prevent procedural spawning.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinition.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer{Keen#VRage#Core#Game#GameSystems#ProceduralGeneration#ProceduralGenerationDataDefinition}#NameSerializer">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinition.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#NameSerializer">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinition.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#NameType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinition.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer{Keen#VRage#Core#Game#GameSystems#ProceduralGeneration#ProceduralGenerationDataDefinition}#ShouldSerializeAsName(Keen.VRage.Library.Serialization.SerializationContext,Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinition@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinition.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#ShouldSerializeAsName(Keen.VRage.Library.Serialization.SerializationContext,System.Object@)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinition.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinition.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Game#GameSystems#ProceduralGeneration#ProceduralGenerationDataDefinition}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinition.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinition.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinition.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinition.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinition.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinition.TypeInfoHolder.InfiniteVolumeAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinition.TypeInfoHolder.InfiniteVolumeAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinition.TypeInfoHolder.InfiniteVolumeAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinition.TypeInfoHolder.InfiniteVolumeAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinition.TypeInfoHolder.InfiniteVolumeAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinition.TypeInfoHolder.InfiniteVolumeAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinition.TypeInfoHolder.InfiniteVolumeAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinition.TypeInfoHolder.InfiniteVolumeAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinition.TypeInfoHolder.InfiniteVolumeAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinition.TypeInfoHolder.InfiniteVolumeAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinition.TypeInfoHolder.InfiniteVolumeAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinition.TypeInfoHolder.InfiniteVolumeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinition.TypeInfoHolder.InfiniteVolumeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinition.TypeInfoHolder.InfiniteVolumeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinition.TypeInfoHolder.InfiniteVolumeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#GameSystems#ProceduralGeneration#Volume#InfiniteVolumeDefinition}#Set(System.Object,Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.InfiniteVolumeDefinition@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinition.TypeInfoHolder.InfiniteVolumeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#GameSystems#ProceduralGeneration#Volume#InfiniteVolumeDefinition}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinition.TypeInfoHolder.InfiniteVolumeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#GameSystems#ProceduralGeneration#Volume#InfiniteVolumeDefinition}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinition.TypeInfoHolder.InfiniteVolumeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#GameSystems#ProceduralGeneration#Volume#InfiniteVolumeDefinition}#Set(System.Byte@,Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.InfiniteVolumeDefinition@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinition.TypeInfoHolder.InfiniteVolumeAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinition.TypeInfoHolder.InfiniteVolumeAccessor.Set(Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinition@,Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.InfiniteVolumeDefinition@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinition.TypeInfoHolder.InfiniteVolumeAccessor.Get(Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinition@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinition.TypeInfoHolder.ProceduralEntityConfiguratorAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinition.TypeInfoHolder.ProceduralEntityConfiguratorAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinition.TypeInfoHolder.ProceduralEntityConfiguratorAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinition.TypeInfoHolder.ProceduralEntityConfiguratorAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinition.TypeInfoHolder.ProceduralEntityConfiguratorAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinition.TypeInfoHolder.ProceduralEntityConfiguratorAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinition.TypeInfoHolder.ProceduralEntityConfiguratorAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinition.TypeInfoHolder.ProceduralEntityConfiguratorAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinition.TypeInfoHolder.ProceduralEntityConfiguratorAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinition.TypeInfoHolder.ProceduralEntityConfiguratorAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinition.TypeInfoHolder.ProceduralEntityConfiguratorAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinition.TypeInfoHolder.ProceduralEntityConfiguratorAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinition.TypeInfoHolder.ProceduralEntityConfiguratorAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinition.TypeInfoHolder.ProceduralEntityConfiguratorAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinition.TypeInfoHolder.ProceduralEntityConfiguratorAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#Definitions#PrefabDefinition}#Set(System.Object,Keen.VRage.Core.Game.Definitions.PrefabDefinition@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinition.TypeInfoHolder.ProceduralEntityConfiguratorAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#Definitions#PrefabDefinition}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinition.TypeInfoHolder.ProceduralEntityConfiguratorAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#Definitions#PrefabDefinition}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinition.TypeInfoHolder.ProceduralEntityConfiguratorAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#Definitions#PrefabDefinition}#Set(System.Byte@,Keen.VRage.Core.Game.Definitions.PrefabDefinition@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinition.TypeInfoHolder.ProceduralEntityConfiguratorAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinition.TypeInfoHolder.ProceduralEntityConfiguratorAccessor.Set(Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinition@,Keen.VRage.Core.Game.Definitions.PrefabDefinition@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinition.TypeInfoHolder.ProceduralEntityConfiguratorAccessor.Get(Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinition@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinition.TypeInfoHolder.SpawnPreventionPrefabAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinition.TypeInfoHolder.SpawnPreventionPrefabAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinition.TypeInfoHolder.SpawnPreventionPrefabAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinition.TypeInfoHolder.SpawnPreventionPrefabAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinition.TypeInfoHolder.SpawnPreventionPrefabAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinition.TypeInfoHolder.SpawnPreventionPrefabAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinition.TypeInfoHolder.SpawnPreventionPrefabAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinition.TypeInfoHolder.SpawnPreventionPrefabAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinition.TypeInfoHolder.SpawnPreventionPrefabAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinition.TypeInfoHolder.SpawnPreventionPrefabAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinition.TypeInfoHolder.SpawnPreventionPrefabAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinition.TypeInfoHolder.SpawnPreventionPrefabAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinition.TypeInfoHolder.SpawnPreventionPrefabAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinition.TypeInfoHolder.SpawnPreventionPrefabAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinition.TypeInfoHolder.SpawnPreventionPrefabAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#Definitions#PrefabDefinition}#Set(System.Object,Keen.VRage.Core.Game.Definitions.PrefabDefinition@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinition.TypeInfoHolder.SpawnPreventionPrefabAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#Definitions#PrefabDefinition}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinition.TypeInfoHolder.SpawnPreventionPrefabAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#Definitions#PrefabDefinition}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinition.TypeInfoHolder.SpawnPreventionPrefabAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#Definitions#PrefabDefinition}#Set(System.Byte@,Keen.VRage.Core.Game.Definitions.PrefabDefinition@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinition.TypeInfoHolder.SpawnPreventionPrefabAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinition.TypeInfoHolder.SpawnPreventionPrefabAccessor.Set(Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinition@,Keen.VRage.Core.Game.Definitions.PrefabDefinition@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinition.TypeInfoHolder.SpawnPreventionPrefabAccessor.Get(Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinition@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataSessionComponent">
            <summary>
            Data used by the procedural generation system to spawn entities in space.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponentObjectBuilder">
            <summary>
            <inheritdoc cref="T:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponent"/>
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponentObjectBuilder.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponentObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponentObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponentObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponentObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponentObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponentObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponentObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponentObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponentObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponentObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponentObjectBuilder.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponentObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponentObjectBuilder.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponentObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponentObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponentObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponentObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponentObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponentObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponentObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponentObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponentObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponentObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponentObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponentObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponentObjectBuilder.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponentObjectBuilder.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponentObjectBuilder.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponentObjectBuilder.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Game#GameSystems#ProceduralGeneration#ProceduralGeneratorSessionComponentObjectBuilder}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponentObjectBuilder.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponentObjectBuilder.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponentObjectBuilder.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponentObjectBuilder.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponentObjectBuilder.TypeInfoHolder.SeedAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponentObjectBuilder.TypeInfoHolder.SeedAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponentObjectBuilder.TypeInfoHolder.SeedAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponentObjectBuilder.TypeInfoHolder.SeedAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponentObjectBuilder.TypeInfoHolder.SeedAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponentObjectBuilder.TypeInfoHolder.SeedAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponentObjectBuilder.TypeInfoHolder.SeedAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponentObjectBuilder.TypeInfoHolder.SeedAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponentObjectBuilder.TypeInfoHolder.SeedAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponentObjectBuilder.TypeInfoHolder.SeedAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponentObjectBuilder.TypeInfoHolder.SeedAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponentObjectBuilder.TypeInfoHolder.SeedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponentObjectBuilder.TypeInfoHolder.SeedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponentObjectBuilder.TypeInfoHolder.SeedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponentObjectBuilder.TypeInfoHolder.SeedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Set(System.Object,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponentObjectBuilder.TypeInfoHolder.SeedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponentObjectBuilder.TypeInfoHolder.SeedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponentObjectBuilder.TypeInfoHolder.SeedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Set(System.Byte@,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponentObjectBuilder.TypeInfoHolder.SeedAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponentObjectBuilder.TypeInfoHolder.SeedAccessor.Set(Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponentObjectBuilder@,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponentObjectBuilder.TypeInfoHolder.SeedAccessor.Get(Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponentObjectBuilder@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponentObjectBuilder.TypeInfoHolder.ActivatedAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponentObjectBuilder.TypeInfoHolder.ActivatedAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponentObjectBuilder.TypeInfoHolder.ActivatedAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponentObjectBuilder.TypeInfoHolder.ActivatedAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponentObjectBuilder.TypeInfoHolder.ActivatedAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponentObjectBuilder.TypeInfoHolder.ActivatedAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponentObjectBuilder.TypeInfoHolder.ActivatedAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponentObjectBuilder.TypeInfoHolder.ActivatedAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponentObjectBuilder.TypeInfoHolder.ActivatedAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponentObjectBuilder.TypeInfoHolder.ActivatedAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponentObjectBuilder.TypeInfoHolder.ActivatedAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponentObjectBuilder.TypeInfoHolder.ActivatedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponentObjectBuilder.TypeInfoHolder.ActivatedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponentObjectBuilder.TypeInfoHolder.ActivatedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponentObjectBuilder.TypeInfoHolder.ActivatedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponentObjectBuilder.TypeInfoHolder.ActivatedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponentObjectBuilder.TypeInfoHolder.ActivatedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponentObjectBuilder.TypeInfoHolder.ActivatedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponentObjectBuilder.TypeInfoHolder.ActivatedAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponentObjectBuilder.TypeInfoHolder.ActivatedAccessor.Set(Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponentObjectBuilder@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponentObjectBuilder.TypeInfoHolder.ActivatedAccessor.Get(Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponentObjectBuilder@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponent">
            <summary>
            Enables procedural generation of entities in space.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponent._triggerEnter">
            Trigger used to create sectors
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponent._triggerExit">
            Trigger used to destroy sectors
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponent.Deactivate">
            <summary>
            Will not set the <see cref="F:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponent._active"/> flag to <c>false</c>. It needs to be set manually, if desired.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponent.ProcessSpawnInfo(Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo@,Keen.VRage.Library.Mathematics.Vector3D,Keen.VRage.Library.Mathematics.Quaternion,Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceEntityId@)">
            <summary>
            Processes <see cref="T:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpawnCandidate"/> into an <see cref="T:Keen.VRage.DCS.ObjectBuilders.EntityObjectBuilder"/>.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.RandomSeedProviderComponent">
            <summary>
            Provides a random seed to all <see cref="T:Keen.VRage.Core.Game.GameSystems.PrefabConfigurators.IConfiguratorProcessor"/> components on the same entity.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceEntityId">
            <summary>
            Unique identifier for entity tracking.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceEntityId.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceEntityId.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceEntityId.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceEntityId@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceEntityId.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceEntityId.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceEntityId@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceEntityId.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceEntityId.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceEntityId@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceEntityId.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceEntityId.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceEntityId.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceEntityId.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceEntityId.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceEntityId@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceEntityId.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceEntityId.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceEntityId@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceEntityId.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceEntityId.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceEntityId@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceEntityId.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceEntityId.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceEntityId@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceEntityId.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceEntityId.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceEntityId.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceEntityId.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceEntityId.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Game#GameSystems#ProceduralGeneration#SpaceEntityId}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceEntityId.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceEntityId.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceEntityId.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceEntityId.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceEntityId.TypeInfoHolder.SectorIDAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceEntityId.TypeInfoHolder.SectorIDAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceEntityId.TypeInfoHolder.SectorIDAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceEntityId.TypeInfoHolder.SectorIDAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceEntityId.TypeInfoHolder.SectorIDAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceEntityId.TypeInfoHolder.SectorIDAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceEntityId.TypeInfoHolder.SectorIDAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceEntityId.TypeInfoHolder.SectorIDAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceEntityId.TypeInfoHolder.SectorIDAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceEntityId.TypeInfoHolder.SectorIDAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceEntityId.TypeInfoHolder.SectorIDAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceEntityId.TypeInfoHolder.SectorIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceEntityId.TypeInfoHolder.SectorIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceEntityId.TypeInfoHolder.SectorIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceEntityId.TypeInfoHolder.SectorIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3I}#Set(System.Object,Keen.VRage.Library.Mathematics.Vector3I@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceEntityId.TypeInfoHolder.SectorIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3I}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceEntityId.TypeInfoHolder.SectorIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3I}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceEntityId.TypeInfoHolder.SectorIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3I}#Set(System.Byte@,Keen.VRage.Library.Mathematics.Vector3I@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceEntityId.TypeInfoHolder.SectorIDAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceEntityId.TypeInfoHolder.SectorIDAccessor.Set(Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceEntityId@,Keen.VRage.Library.Mathematics.Vector3I@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceEntityId.TypeInfoHolder.SectorIDAccessor.Get(Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceEntityId@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceEntityId.TypeInfoHolder.EntityIDAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceEntityId.TypeInfoHolder.EntityIDAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceEntityId.TypeInfoHolder.EntityIDAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceEntityId.TypeInfoHolder.EntityIDAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceEntityId.TypeInfoHolder.EntityIDAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceEntityId.TypeInfoHolder.EntityIDAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceEntityId.TypeInfoHolder.EntityIDAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceEntityId.TypeInfoHolder.EntityIDAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceEntityId.TypeInfoHolder.EntityIDAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceEntityId.TypeInfoHolder.EntityIDAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceEntityId.TypeInfoHolder.EntityIDAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceEntityId.TypeInfoHolder.EntityIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceEntityId.TypeInfoHolder.EntityIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceEntityId.TypeInfoHolder.EntityIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceEntityId.TypeInfoHolder.EntityIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Set(System.Object,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceEntityId.TypeInfoHolder.EntityIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceEntityId.TypeInfoHolder.EntityIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceEntityId.TypeInfoHolder.EntityIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Set(System.Byte@,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceEntityId.TypeInfoHolder.EntityIDAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceEntityId.TypeInfoHolder.EntityIDAccessor.Set(Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceEntityId@,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceEntityId.TypeInfoHolder.EntityIDAccessor.Get(Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceEntityId@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceSector.RoundProbabilistic(System.Single)">
            <summary>
            Rounds the specified <paramref name="value"/> to the nearest integer based on its fractional part.
            The closer the fractional part of <paramref name="value"/> is to 1, the higher the probability of rounding up.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpawnCandidate">
            <summary>
            Information about an entity that can be procedurally spawned inside a <see cref="T:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceSector"/>.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpawnCandidate.#ctor(Keen.VRage.DCS.ObjectBuilders.EntityObjectBuilder,Keen.VRage.Core.WorldTransform,Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceEntityId)">
            <summary>
            Information about an entity that can be procedurally spawned inside a <see cref="T:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceSector"/>.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpawnPreventionComponentObjectBuilder">
            <summary>
            <inheritdoc cref="T:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpawnPreventionComponent"/>
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpawnPreventionComponentObjectBuilder.BoxSize">
            <summary>
            Size of the box around an entity where no procedural spawning can happen.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpawnPreventionComponentObjectBuilder.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpawnPreventionComponentObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpawnPreventionComponentObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpawnPreventionComponentObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpawnPreventionComponentObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpawnPreventionComponentObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpawnPreventionComponentObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpawnPreventionComponentObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpawnPreventionComponentObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpawnPreventionComponentObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpawnPreventionComponentObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpawnPreventionComponentObjectBuilder.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpawnPreventionComponentObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpawnPreventionComponentObjectBuilder.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpawnPreventionComponentObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpawnPreventionComponentObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpawnPreventionComponentObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpawnPreventionComponentObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpawnPreventionComponentObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpawnPreventionComponentObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpawnPreventionComponentObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpawnPreventionComponentObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpawnPreventionComponentObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpawnPreventionComponentObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpawnPreventionComponentObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpawnPreventionComponentObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpawnPreventionComponentObjectBuilder.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpawnPreventionComponentObjectBuilder.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpawnPreventionComponentObjectBuilder.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpawnPreventionComponentObjectBuilder.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Game#GameSystems#ProceduralGeneration#SpawnPreventionComponentObjectBuilder}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpawnPreventionComponentObjectBuilder.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpawnPreventionComponentObjectBuilder.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpawnPreventionComponentObjectBuilder.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpawnPreventionComponentObjectBuilder.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpawnPreventionComponentObjectBuilder.TypeInfoHolder.BoxSizeAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpawnPreventionComponentObjectBuilder.TypeInfoHolder.BoxSizeAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpawnPreventionComponentObjectBuilder.TypeInfoHolder.BoxSizeAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpawnPreventionComponentObjectBuilder.TypeInfoHolder.BoxSizeAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpawnPreventionComponentObjectBuilder.TypeInfoHolder.BoxSizeAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpawnPreventionComponentObjectBuilder.TypeInfoHolder.BoxSizeAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpawnPreventionComponentObjectBuilder.TypeInfoHolder.BoxSizeAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpawnPreventionComponentObjectBuilder.TypeInfoHolder.BoxSizeAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpawnPreventionComponentObjectBuilder.TypeInfoHolder.BoxSizeAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpawnPreventionComponentObjectBuilder.TypeInfoHolder.BoxSizeAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpawnPreventionComponentObjectBuilder.TypeInfoHolder.BoxSizeAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpawnPreventionComponentObjectBuilder.TypeInfoHolder.BoxSizeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpawnPreventionComponentObjectBuilder.TypeInfoHolder.BoxSizeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpawnPreventionComponentObjectBuilder.TypeInfoHolder.BoxSizeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpawnPreventionComponentObjectBuilder.TypeInfoHolder.BoxSizeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3}#Set(System.Object,Keen.VRage.Library.Mathematics.Vector3@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpawnPreventionComponentObjectBuilder.TypeInfoHolder.BoxSizeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpawnPreventionComponentObjectBuilder.TypeInfoHolder.BoxSizeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpawnPreventionComponentObjectBuilder.TypeInfoHolder.BoxSizeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3}#Set(System.Byte@,Keen.VRage.Library.Mathematics.Vector3@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpawnPreventionComponentObjectBuilder.TypeInfoHolder.BoxSizeAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpawnPreventionComponentObjectBuilder.TypeInfoHolder.BoxSizeAccessor.Set(Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpawnPreventionComponentObjectBuilder@,Keen.VRage.Library.Mathematics.Vector3@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpawnPreventionComponentObjectBuilder.TypeInfoHolder.BoxSizeAccessor.Get(Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpawnPreventionComponentObjectBuilder@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpawnPreventionComponent">
            <summary>
            Prevents procedural entities from spawning in a zone defined by this component.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.InfiniteVolumeDefinition">
            <summary>
            Special implementation of <see cref="T:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.IVolume"/> that defines an area without boundaries.
            Only one <see cref="T:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.InfiniteVolumeDefinition"/> can be in the world.
            It contains all entities that can be procedurally spawned in space.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.InfiniteVolumeDefinition.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer{Keen#VRage#Core#Game#GameSystems#ProceduralGeneration#Volume#InfiniteVolumeDefinition}#NameSerializer">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.InfiniteVolumeDefinition.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#NameSerializer">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.InfiniteVolumeDefinition.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#NameType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.InfiniteVolumeDefinition.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer{Keen#VRage#Core#Game#GameSystems#ProceduralGeneration#Volume#InfiniteVolumeDefinition}#ShouldSerializeAsName(Keen.VRage.Library.Serialization.SerializationContext,Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.InfiniteVolumeDefinition@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.InfiniteVolumeDefinition.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#ShouldSerializeAsName(Keen.VRage.Library.Serialization.SerializationContext,System.Object@)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.InfiniteVolumeDefinition.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.InfiniteVolumeDefinition.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Game#GameSystems#ProceduralGeneration#Volume#InfiniteVolumeDefinition}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.InfiniteVolumeDefinition.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.InfiniteVolumeDefinition.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.InfiniteVolumeDefinition.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.InfiniteVolumeDefinition.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.InfiniteVolumeDefinition.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.IVolume">
            <summary>
            Interface implemented by components that want to spawn entities inside a certain area.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.IVolume.TotalDensity">
            <summary>
            How many entities per cubic kilometer are contained in this volume.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.IVolume.Contains(Keen.VRage.Library.Mathematics.Vector3)">
            <summary>
            Checks whether a point is inside this volume.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.IVolume.Overlaps(Keen.VRage.Library.Mathematics.BoundingBoxD)">
            <summary>
            Checks whether this volume overlaps with a bounding box.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.IVolume.GetRandomEntityInfo(System.Single)">
            <summary>
            Fetches an <see cref="T:Keen.VRage.DCS.ObjectBuilders.EntityObjectBuilder"/> of a random prefab in the volume.
            </summary>
            <param name="sample">A value from 0 to 1 that determines which item is selected.</param>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinition">
            <summary>
            Definition for components implementing the <see cref="T:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.IVolume"/>.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinition.Entities">
            <summary>
            List of entities that can be spawned in space.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinition.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer{Keen#VRage#Core#Game#GameSystems#ProceduralGeneration#Volume#VolumeDefinition}#NameSerializer">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinition.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#NameSerializer">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinition.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#NameType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinition.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer{Keen#VRage#Core#Game#GameSystems#ProceduralGeneration#Volume#VolumeDefinition}#ShouldSerializeAsName(Keen.VRage.Library.Serialization.SerializationContext,Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinition@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinition.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#ShouldSerializeAsName(Keen.VRage.Library.Serialization.SerializationContext,System.Object@)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinition.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinition.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Game#GameSystems#ProceduralGeneration#Volume#VolumeDefinition}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinition.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinition.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinition.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinition.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinition.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinition.TypeInfoHolder.EntitiesAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinition.TypeInfoHolder.EntitiesAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinition.TypeInfoHolder.EntitiesAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinition.TypeInfoHolder.EntitiesAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinition.TypeInfoHolder.EntitiesAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinition.TypeInfoHolder.EntitiesAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinition.TypeInfoHolder.EntitiesAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinition.TypeInfoHolder.EntitiesAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinition.TypeInfoHolder.EntitiesAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinition.TypeInfoHolder.EntitiesAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinition.TypeInfoHolder.EntitiesAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinition.TypeInfoHolder.EntitiesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinition.TypeInfoHolder.EntitiesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinition.TypeInfoHolder.EntitiesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinition.TypeInfoHolder.EntitiesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Immutable#ImmutableArray{Keen#VRage#Core#Game#GameSystems#ProceduralGeneration#EntitySpawnInfo}}#Set(System.Object,System.Collections.Immutable.ImmutableArray{Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinition.TypeInfoHolder.EntitiesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Immutable#ImmutableArray{Keen#VRage#Core#Game#GameSystems#ProceduralGeneration#EntitySpawnInfo}}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinition.TypeInfoHolder.EntitiesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Immutable#ImmutableArray{Keen#VRage#Core#Game#GameSystems#ProceduralGeneration#EntitySpawnInfo}}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinition.TypeInfoHolder.EntitiesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Immutable#ImmutableArray{Keen#VRage#Core#Game#GameSystems#ProceduralGeneration#EntitySpawnInfo}}#Set(System.Byte@,System.Collections.Immutable.ImmutableArray{Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinition.TypeInfoHolder.EntitiesAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinition.TypeInfoHolder.EntitiesAccessor.Set(Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinition@,System.Collections.Immutable.ImmutableArray{Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinition.TypeInfoHolder.EntitiesAccessor.Get(Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinition@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinition.TypeInfoHolder.TotalDensityAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinition.TypeInfoHolder.TotalDensityAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinition.TypeInfoHolder.TotalDensityAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinition.TypeInfoHolder.TotalDensityAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinition.TypeInfoHolder.TotalDensityAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinition.TypeInfoHolder.TotalDensityAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinition.TypeInfoHolder.TotalDensityAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinition.TypeInfoHolder.TotalDensityAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinition.TypeInfoHolder.TotalDensityAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinition.TypeInfoHolder.TotalDensityAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinition.TypeInfoHolder.TotalDensityAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinition.TypeInfoHolder.TotalDensityAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinition.TypeInfoHolder.TotalDensityAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinition.TypeInfoHolder.TotalDensityAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinition.TypeInfoHolder.TotalDensityAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Object,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinition.TypeInfoHolder.TotalDensityAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinition.TypeInfoHolder.TotalDensityAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinition.TypeInfoHolder.TotalDensityAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Byte@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinition.TypeInfoHolder.TotalDensityAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinition.TypeInfoHolder.TotalDensityAccessor.Set(Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinition@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinition.TypeInfoHolder.TotalDensityAccessor.Get(Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinition@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinition.TypeInfoHolder._samplerAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinition.TypeInfoHolder._samplerAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinition.TypeInfoHolder._samplerAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinition.TypeInfoHolder._samplerAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinition.TypeInfoHolder._samplerAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinition.TypeInfoHolder._samplerAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinition.TypeInfoHolder._samplerAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinition.TypeInfoHolder._samplerAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinition.TypeInfoHolder._samplerAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinition.TypeInfoHolder._samplerAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinition.TypeInfoHolder._samplerAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinition.TypeInfoHolder._samplerAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinition.TypeInfoHolder._samplerAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinition.TypeInfoHolder._samplerAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinition.TypeInfoHolder._samplerAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Collections#DiscreteSampler{Keen#VRage#Core#Game#GameSystems#ProceduralGeneration#EntitySpawnInfo}}#Set(System.Object,Keen.VRage.Library.Collections.DiscreteSampler{Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinition.TypeInfoHolder._samplerAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Collections#DiscreteSampler{Keen#VRage#Core#Game#GameSystems#ProceduralGeneration#EntitySpawnInfo}}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinition.TypeInfoHolder._samplerAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Collections#DiscreteSampler{Keen#VRage#Core#Game#GameSystems#ProceduralGeneration#EntitySpawnInfo}}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinition.TypeInfoHolder._samplerAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Collections#DiscreteSampler{Keen#VRage#Core#Game#GameSystems#ProceduralGeneration#EntitySpawnInfo}}#Set(System.Byte@,Keen.VRage.Library.Collections.DiscreteSampler{Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinition.TypeInfoHolder._samplerAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinition.TypeInfoHolder._samplerAccessor.Set(Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinition@,Keen.VRage.Library.Collections.DiscreteSampler{Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinition.TypeInfoHolder._samplerAccessor.Get(Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinition@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.InfiniteVolumeDefinitionObjectBuilder.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.InfiniteVolumeDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.InfiniteVolumeDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.InfiniteVolumeDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.InfiniteVolumeDefinitionObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.InfiniteVolumeDefinitionObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.InfiniteVolumeDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.InfiniteVolumeDefinitionObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.InfiniteVolumeDefinitionObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.InfiniteVolumeDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.InfiniteVolumeDefinitionObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.InfiniteVolumeDefinitionObjectBuilder.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.InfiniteVolumeDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.InfiniteVolumeDefinitionObjectBuilder.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.InfiniteVolumeDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.InfiniteVolumeDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.InfiniteVolumeDefinitionObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.InfiniteVolumeDefinitionObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.InfiniteVolumeDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.InfiniteVolumeDefinitionObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.InfiniteVolumeDefinitionObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.InfiniteVolumeDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.InfiniteVolumeDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.InfiniteVolumeDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.InfiniteVolumeDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.InfiniteVolumeDefinitionObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.InfiniteVolumeDefinitionObjectBuilder.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.InfiniteVolumeDefinitionObjectBuilder.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.InfiniteVolumeDefinitionObjectBuilder.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.InfiniteVolumeDefinitionObjectBuilder.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Game#GameSystems#ProceduralGeneration#Volume#InfiniteVolumeDefinitionObjectBuilder}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.InfiniteVolumeDefinitionObjectBuilder.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.InfiniteVolumeDefinitionObjectBuilder.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.InfiniteVolumeDefinitionObjectBuilder.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.InfiniteVolumeDefinitionObjectBuilder.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinitionObjectBuilder.Entities">
            <summary>
            List of entities that can be spawned in space.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinitionObjectBuilder.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinitionObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinitionObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinitionObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinitionObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinitionObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinitionObjectBuilder.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinitionObjectBuilder.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinitionObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinitionObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinitionObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinitionObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinitionObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinitionObjectBuilder.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinitionObjectBuilder.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinitionObjectBuilder.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinitionObjectBuilder.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Game#GameSystems#ProceduralGeneration#Volume#VolumeDefinitionObjectBuilder}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinitionObjectBuilder.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinitionObjectBuilder.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinitionObjectBuilder.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinitionObjectBuilder.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinitionObjectBuilder.TypeInfoHolder.EntitiesAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinitionObjectBuilder.TypeInfoHolder.EntitiesAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinitionObjectBuilder.TypeInfoHolder.EntitiesAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinitionObjectBuilder.TypeInfoHolder.EntitiesAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinitionObjectBuilder.TypeInfoHolder.EntitiesAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinitionObjectBuilder.TypeInfoHolder.EntitiesAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinitionObjectBuilder.TypeInfoHolder.EntitiesAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinitionObjectBuilder.TypeInfoHolder.EntitiesAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinitionObjectBuilder.TypeInfoHolder.EntitiesAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinitionObjectBuilder.TypeInfoHolder.EntitiesAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinitionObjectBuilder.TypeInfoHolder.EntitiesAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinitionObjectBuilder.TypeInfoHolder.EntitiesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinitionObjectBuilder.TypeInfoHolder.EntitiesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinitionObjectBuilder.TypeInfoHolder.EntitiesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinitionObjectBuilder.TypeInfoHolder.EntitiesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Collections#MergeableList{Keen#VRage#Core#Game#GameSystems#ProceduralGeneration#EntitySpawnInfo}}#Set(System.Object,Keen.VRage.Library.Collections.MergeableList{Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinitionObjectBuilder.TypeInfoHolder.EntitiesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Collections#MergeableList{Keen#VRage#Core#Game#GameSystems#ProceduralGeneration#EntitySpawnInfo}}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinitionObjectBuilder.TypeInfoHolder.EntitiesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Collections#MergeableList{Keen#VRage#Core#Game#GameSystems#ProceduralGeneration#EntitySpawnInfo}}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinitionObjectBuilder.TypeInfoHolder.EntitiesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Collections#MergeableList{Keen#VRage#Core#Game#GameSystems#ProceduralGeneration#EntitySpawnInfo}}#Set(System.Byte@,Keen.VRage.Library.Collections.MergeableList{Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinitionObjectBuilder.TypeInfoHolder.EntitiesAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinitionObjectBuilder.TypeInfoHolder.EntitiesAccessor.Set(Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinitionObjectBuilder@,Keen.VRage.Library.Collections.MergeableList{Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.EntitySpawnInfo}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinitionObjectBuilder.TypeInfoHolder.EntitiesAccessor.Get(Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.VolumeDefinitionObjectBuilder@)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.InfiniteVolume">
            <summary>
            Entities that can be procedurally spawned in the infinite space.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.ProceduralEntityConfigurator">
            <summary>
            A prefab for a configurator that provides a random seed to entities that need it.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.SpawnPreventionPrefab">
            <summary>
            Used for creating zones that prevent procedural spawning.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Game#GameSystems#ProceduralGeneration#ProceduralGenerationDataDefinitionObjectBuilder}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.TypeInfoHolder.InfiniteVolumeAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.TypeInfoHolder.InfiniteVolumeAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.TypeInfoHolder.InfiniteVolumeAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.TypeInfoHolder.InfiniteVolumeAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.TypeInfoHolder.InfiniteVolumeAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.TypeInfoHolder.InfiniteVolumeAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.TypeInfoHolder.InfiniteVolumeAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.TypeInfoHolder.InfiniteVolumeAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.TypeInfoHolder.InfiniteVolumeAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.TypeInfoHolder.InfiniteVolumeAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.TypeInfoHolder.InfiniteVolumeAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.TypeInfoHolder.InfiniteVolumeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.TypeInfoHolder.InfiniteVolumeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.TypeInfoHolder.InfiniteVolumeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.TypeInfoHolder.InfiniteVolumeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#GameSystems#ProceduralGeneration#Volume#InfiniteVolumeDefinition}#Set(System.Object,Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.InfiniteVolumeDefinition@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.TypeInfoHolder.InfiniteVolumeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#GameSystems#ProceduralGeneration#Volume#InfiniteVolumeDefinition}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.TypeInfoHolder.InfiniteVolumeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#GameSystems#ProceduralGeneration#Volume#InfiniteVolumeDefinition}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.TypeInfoHolder.InfiniteVolumeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#GameSystems#ProceduralGeneration#Volume#InfiniteVolumeDefinition}#Set(System.Byte@,Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.InfiniteVolumeDefinition@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.TypeInfoHolder.InfiniteVolumeAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.TypeInfoHolder.InfiniteVolumeAccessor.Set(Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder@,Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.Volume.InfiniteVolumeDefinition@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.TypeInfoHolder.InfiniteVolumeAccessor.Get(Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.TypeInfoHolder.ProceduralEntityConfiguratorAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.TypeInfoHolder.ProceduralEntityConfiguratorAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.TypeInfoHolder.ProceduralEntityConfiguratorAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.TypeInfoHolder.ProceduralEntityConfiguratorAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.TypeInfoHolder.ProceduralEntityConfiguratorAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.TypeInfoHolder.ProceduralEntityConfiguratorAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.TypeInfoHolder.ProceduralEntityConfiguratorAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.TypeInfoHolder.ProceduralEntityConfiguratorAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.TypeInfoHolder.ProceduralEntityConfiguratorAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.TypeInfoHolder.ProceduralEntityConfiguratorAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.TypeInfoHolder.ProceduralEntityConfiguratorAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.TypeInfoHolder.ProceduralEntityConfiguratorAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.TypeInfoHolder.ProceduralEntityConfiguratorAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.TypeInfoHolder.ProceduralEntityConfiguratorAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.TypeInfoHolder.ProceduralEntityConfiguratorAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#Definitions#PrefabDefinition}#Set(System.Object,Keen.VRage.Core.Game.Definitions.PrefabDefinition@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.TypeInfoHolder.ProceduralEntityConfiguratorAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#Definitions#PrefabDefinition}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.TypeInfoHolder.ProceduralEntityConfiguratorAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#Definitions#PrefabDefinition}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.TypeInfoHolder.ProceduralEntityConfiguratorAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#Definitions#PrefabDefinition}#Set(System.Byte@,Keen.VRage.Core.Game.Definitions.PrefabDefinition@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.TypeInfoHolder.ProceduralEntityConfiguratorAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.TypeInfoHolder.ProceduralEntityConfiguratorAccessor.Set(Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder@,Keen.VRage.Core.Game.Definitions.PrefabDefinition@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.TypeInfoHolder.ProceduralEntityConfiguratorAccessor.Get(Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.TypeInfoHolder.SpawnPreventionPrefabAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.TypeInfoHolder.SpawnPreventionPrefabAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.TypeInfoHolder.SpawnPreventionPrefabAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.TypeInfoHolder.SpawnPreventionPrefabAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.TypeInfoHolder.SpawnPreventionPrefabAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.TypeInfoHolder.SpawnPreventionPrefabAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.TypeInfoHolder.SpawnPreventionPrefabAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.TypeInfoHolder.SpawnPreventionPrefabAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.TypeInfoHolder.SpawnPreventionPrefabAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.TypeInfoHolder.SpawnPreventionPrefabAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.TypeInfoHolder.SpawnPreventionPrefabAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.TypeInfoHolder.SpawnPreventionPrefabAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.TypeInfoHolder.SpawnPreventionPrefabAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.TypeInfoHolder.SpawnPreventionPrefabAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.TypeInfoHolder.SpawnPreventionPrefabAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#Definitions#PrefabDefinition}#Set(System.Object,Keen.VRage.Core.Game.Definitions.PrefabDefinition@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.TypeInfoHolder.SpawnPreventionPrefabAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#Definitions#PrefabDefinition}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.TypeInfoHolder.SpawnPreventionPrefabAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#Definitions#PrefabDefinition}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.TypeInfoHolder.SpawnPreventionPrefabAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#Definitions#PrefabDefinition}#Set(System.Byte@,Keen.VRage.Core.Game.Definitions.PrefabDefinition@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.TypeInfoHolder.SpawnPreventionPrefabAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.TypeInfoHolder.SpawnPreventionPrefabAccessor.Set(Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder@,Keen.VRage.Core.Game.Definitions.PrefabDefinition@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder.TypeInfoHolder.SpawnPreventionPrefabAccessor.Get(Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGenerationDataDefinitionObjectBuilder@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.Queries.AABBQueryArgs">
            <summary>
            Axis-aligned bounding box query args
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.Queries.AABBQueryArgs.BoundingBox">
            <summary>
            The query bounding box
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.Queries.AABBCastArgs">
            <summary>
            Swept axis-aligned bounding box query args
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.Queries.AABBCastArgs.BoundingBox">
            <summary>
            The swept bounding box
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.Queries.AABBCastArgs.Direction">
            <summary>
            Direction and length of the AABB query
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.Queries.PointQueryArgs">
            <summary>
            Point + distance (i.e. sphere) query args
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.Queries.PointQueryArgs.Position">
            <summary>
            World position of query origin
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.Queries.PointQueryArgs.MaxDistance">
            <summary>
            Max distance to probe possible hits around query origin
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.Queries.RayCastArgs">
            <summary>
            Ray cast query args
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.Queries.RayCastArgs.Position">
            <summary>
            Origin point of the ray query
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.Queries.RayCastArgs.Direction">
            <summary>
            Direction and length of the ray query
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.Queries.RayCastArgs.Flags">
            <summary>
            Flags for enabling/disabling certain hits from the ray query
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.Queries.RayCastFlags">
            <summary>
            Flags for configuring how ray-casts find results.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.Queries.RayCastFlags.NoFlags">
            <summary>
            No flags. Implies default behavior:
             - Triangles are treated as two sided.
             - No inside hits for colliders are reported.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.Queries.RayCastFlags.DisableBackFacingTriangleHits">
            <summary>
            If set: In triangle based colliders (e.g: mesh, height field, voxel), rays will not hit triangle back faces.
            Back faces are considered to be those with clockwise vertex winding.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.Queries.RayCastFlags.DisableFrontFacingTriangleHits">
            <summary>
            If set: In triangle based colliders (e.g: mesh, height field, voxels), rays will not hit triangle front faces.
            Front faces are considered to be those with counter-clockwise vertex winding.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.Queries.RayCastFlags.TreatConvexesAsHollow">
            <summary>
            Rays starting inside convex colliders will by default not hit the collider,
            this flag can enable these 'inside' hits by considering the collider as hollow.
            A hit will be returned if the ray hit the collider from inside.
            No hit will be returned if both start/end point are inside the collider
            The normal returned for inside hits will be outward facing and
            VRage.Physics.Queries.SweepQueryHit.IsBackSideHit and VRage.Physics.Queries.SweepQueryHit.IsInsideHit will be true.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.Queries.RayCastFlags.TreatConvexesAsSolid">
            <summary>
            Rays starting inside convex colliders will by default not hit the collider,
            this flag can enable these 'inside' hits by considering the collider as solid.
            A hit will be returned if the ray starts from inside the collider.
            The normal returned will be the inversed direction of the ray and
            The hit friction returned will be 0 and VRage.Physics.Queries.SweepQueryHit.IsInsideHit returned.
            Note: This flag should not be used together <see cref="F:Keen.VRage.Core.Game.GameSystems.Queries.RayCastFlags.TreatConvexesAsHollow"/>. Otherwise, only this flag will be considered.
            Which means, the collider is "solid" and only an initial inside hit will be reported.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationComponent">
            <summary>
            This animation component is intended to be used for any non-trivial animation that can't be setup up front in the editor,
            meaning animation targets are calculated are calculated at runtime.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationComponent.AnimationState">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinition">
            <summary>
            <see cref="T:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationComponent"/>
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinition.Speed">
            <summary>
            Speed for translation in m/s
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinition.AngularSpeed">
            <summary>
            Angular speed for rotation in angles/s
            </summary>
            <returns></returns>
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinition.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer{Keen#VRage#Core#Game#GameSystems#RigidAnimations#GenericAnimationDefinition}#NameSerializer">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinition.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#NameSerializer">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinition.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#NameType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinition.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer{Keen#VRage#Core#Game#GameSystems#RigidAnimations#GenericAnimationDefinition}#ShouldSerializeAsName(Keen.VRage.Library.Serialization.SerializationContext,Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinition@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinition.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#ShouldSerializeAsName(Keen.VRage.Library.Serialization.SerializationContext,System.Object@)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinition.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinition.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Game#GameSystems#RigidAnimations#GenericAnimationDefinition}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinition.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinition.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinition.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinition.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinition.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinition.TypeInfoHolder.SpeedAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinition.TypeInfoHolder.SpeedAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinition.TypeInfoHolder.SpeedAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinition.TypeInfoHolder.SpeedAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinition.TypeInfoHolder.SpeedAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinition.TypeInfoHolder.SpeedAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinition.TypeInfoHolder.SpeedAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinition.TypeInfoHolder.SpeedAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinition.TypeInfoHolder.SpeedAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinition.TypeInfoHolder.SpeedAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinition.TypeInfoHolder.SpeedAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinition.TypeInfoHolder.SpeedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinition.TypeInfoHolder.SpeedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinition.TypeInfoHolder.SpeedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinition.TypeInfoHolder.SpeedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Object,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinition.TypeInfoHolder.SpeedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinition.TypeInfoHolder.SpeedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinition.TypeInfoHolder.SpeedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Byte@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinition.TypeInfoHolder.SpeedAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinition.TypeInfoHolder.SpeedAccessor.Set(Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinition@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinition.TypeInfoHolder.SpeedAccessor.Get(Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinition@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinition.TypeInfoHolder.AngularSpeedAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinition.TypeInfoHolder.AngularSpeedAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinition.TypeInfoHolder.AngularSpeedAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinition.TypeInfoHolder.AngularSpeedAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinition.TypeInfoHolder.AngularSpeedAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinition.TypeInfoHolder.AngularSpeedAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinition.TypeInfoHolder.AngularSpeedAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinition.TypeInfoHolder.AngularSpeedAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinition.TypeInfoHolder.AngularSpeedAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinition.TypeInfoHolder.AngularSpeedAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinition.TypeInfoHolder.AngularSpeedAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinition.TypeInfoHolder.AngularSpeedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinition.TypeInfoHolder.AngularSpeedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinition.TypeInfoHolder.AngularSpeedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinition.TypeInfoHolder.AngularSpeedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Object,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinition.TypeInfoHolder.AngularSpeedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinition.TypeInfoHolder.AngularSpeedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinition.TypeInfoHolder.AngularSpeedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Byte@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinition.TypeInfoHolder.AngularSpeedAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinition.TypeInfoHolder.AngularSpeedAccessor.Set(Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinition@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinition.TypeInfoHolder.AngularSpeedAccessor.Get(Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinition@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinitionObjectBuilderValidator">
            <summary>
            Validator for <see cref="T:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationObjectBuilder"/>
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationComponent">
            <summary>
            Allows to indefinitely rotate a model along a given axis. Useful for simple animation like drill/grinder hand rotation. 
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationComponent.AnimationState">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition">
            <summary>
            <see cref="T:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationComponent"/>
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.RotationAxis">
            <summary>
            Axis of rotation
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.AngularSpeed">
            <summary>
            Angular speed for rotation in angles/s
            </summary>
            <returns></returns>
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.AngularSpeedup">
            <summary>
            Angle speed increase in angles/s
            </summary>
            <returns></returns>
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.AngularSlowdown">
            <summary>
            Angle speed decrease in angles/s
            </summary>
            <returns></returns>
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer{Keen#VRage#Core#Game#GameSystems#RigidAnimations#InfiniteRotationAnimationDefinition}#NameSerializer">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#NameSerializer">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#NameType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer{Keen#VRage#Core#Game#GameSystems#RigidAnimations#InfiniteRotationAnimationDefinition}#ShouldSerializeAsName(Keen.VRage.Library.Serialization.SerializationContext,Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#ShouldSerializeAsName(Keen.VRage.Library.Serialization.SerializationContext,System.Object@)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Game#GameSystems#RigidAnimations#InfiniteRotationAnimationDefinition}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.TypeInfoHolder.RotationAxisAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.TypeInfoHolder.RotationAxisAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.TypeInfoHolder.RotationAxisAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.TypeInfoHolder.RotationAxisAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.TypeInfoHolder.RotationAxisAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.TypeInfoHolder.RotationAxisAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.TypeInfoHolder.RotationAxisAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.TypeInfoHolder.RotationAxisAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.TypeInfoHolder.RotationAxisAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.TypeInfoHolder.RotationAxisAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.TypeInfoHolder.RotationAxisAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.TypeInfoHolder.RotationAxisAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.TypeInfoHolder.RotationAxisAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.TypeInfoHolder.RotationAxisAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.TypeInfoHolder.RotationAxisAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3}#Set(System.Object,Keen.VRage.Library.Mathematics.Vector3@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.TypeInfoHolder.RotationAxisAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.TypeInfoHolder.RotationAxisAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.TypeInfoHolder.RotationAxisAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3}#Set(System.Byte@,Keen.VRage.Library.Mathematics.Vector3@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.TypeInfoHolder.RotationAxisAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.TypeInfoHolder.RotationAxisAccessor.Set(Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition@,Keen.VRage.Library.Mathematics.Vector3@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.TypeInfoHolder.RotationAxisAccessor.Get(Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.TypeInfoHolder.AngularSpeedAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.TypeInfoHolder.AngularSpeedAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.TypeInfoHolder.AngularSpeedAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.TypeInfoHolder.AngularSpeedAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.TypeInfoHolder.AngularSpeedAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.TypeInfoHolder.AngularSpeedAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.TypeInfoHolder.AngularSpeedAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.TypeInfoHolder.AngularSpeedAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.TypeInfoHolder.AngularSpeedAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.TypeInfoHolder.AngularSpeedAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.TypeInfoHolder.AngularSpeedAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.TypeInfoHolder.AngularSpeedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.TypeInfoHolder.AngularSpeedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.TypeInfoHolder.AngularSpeedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.TypeInfoHolder.AngularSpeedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Object,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.TypeInfoHolder.AngularSpeedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.TypeInfoHolder.AngularSpeedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.TypeInfoHolder.AngularSpeedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Byte@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.TypeInfoHolder.AngularSpeedAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.TypeInfoHolder.AngularSpeedAccessor.Set(Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.TypeInfoHolder.AngularSpeedAccessor.Get(Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.TypeInfoHolder.AngularSpeedupAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.TypeInfoHolder.AngularSpeedupAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.TypeInfoHolder.AngularSpeedupAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.TypeInfoHolder.AngularSpeedupAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.TypeInfoHolder.AngularSpeedupAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.TypeInfoHolder.AngularSpeedupAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.TypeInfoHolder.AngularSpeedupAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.TypeInfoHolder.AngularSpeedupAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.TypeInfoHolder.AngularSpeedupAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.TypeInfoHolder.AngularSpeedupAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.TypeInfoHolder.AngularSpeedupAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.TypeInfoHolder.AngularSpeedupAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.TypeInfoHolder.AngularSpeedupAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.TypeInfoHolder.AngularSpeedupAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.TypeInfoHolder.AngularSpeedupAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Object,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.TypeInfoHolder.AngularSpeedupAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.TypeInfoHolder.AngularSpeedupAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.TypeInfoHolder.AngularSpeedupAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Byte@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.TypeInfoHolder.AngularSpeedupAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.TypeInfoHolder.AngularSpeedupAccessor.Set(Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.TypeInfoHolder.AngularSpeedupAccessor.Get(Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.TypeInfoHolder.AngularSlowdownAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.TypeInfoHolder.AngularSlowdownAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.TypeInfoHolder.AngularSlowdownAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.TypeInfoHolder.AngularSlowdownAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.TypeInfoHolder.AngularSlowdownAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.TypeInfoHolder.AngularSlowdownAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.TypeInfoHolder.AngularSlowdownAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.TypeInfoHolder.AngularSlowdownAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.TypeInfoHolder.AngularSlowdownAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.TypeInfoHolder.AngularSlowdownAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.TypeInfoHolder.AngularSlowdownAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.TypeInfoHolder.AngularSlowdownAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.TypeInfoHolder.AngularSlowdownAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.TypeInfoHolder.AngularSlowdownAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.TypeInfoHolder.AngularSlowdownAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Object,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.TypeInfoHolder.AngularSlowdownAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.TypeInfoHolder.AngularSlowdownAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.TypeInfoHolder.AngularSlowdownAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Byte@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.TypeInfoHolder.AngularSlowdownAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.TypeInfoHolder.AngularSlowdownAccessor.Set(Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition.TypeInfoHolder.AngularSlowdownAccessor.Get(Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinition@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.RigidAnimations.OnStartRigidAnimation">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.RigidAnimations.OnPrepareRigidAnimation">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.RigidAnimations.OnUpdateRigidAnimation">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RigidAnimationComponent">
            <summary>
            Base rigid animation component shared between animation components in order to prevent multiple animation components on a single entity
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RigidAnimationComponent.AnimationUpdateContext">
            <summary>
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RigidAnimationComponent.AnimationUpdateContext.#ctor(Keen.VRage.Core.Game.GameSystems.GameTimes.IGameTime)">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RigidAnimationObjectBuilder">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.RigidAnimations.IRigidAnimationControllerComponent">
            <summary>
            Base class for any component responsible for managing playback of rigid animations
            When no <see cref="T:Keen.VRage.Core.Game.GameSystems.RigidAnimations.IRigidAnimationControllerComponent"/> is found in the hierarchy, the animation
            will play itself automatically
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.IRigidAnimationControllerComponent.IsAnimationOn">
            <summary>
            State of the animation - on/off
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RigidAnimationEasingFunctions">
            <summary>
            Not used by any of the components for now, but can be easily plugged in into the existing components when requested
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RigidAnimationEasingFunctions.EasingMode">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RigidAnimationEntityExtensions">
            <summary>
            Entity extension functions related to rigid animations
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RigidAnimationsValidator">
            <summary>
            Validation that checks for rigid animations presence on roots - these are not allowed as rigid animation
            work on relative transforms and should be used on child entities only
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RigidAnimationsValidator.MAX_SPEED">
            <summary>
            Max values that shouldn't case any artifacts in raytracing, e.g. very fast rotations
            suffer from artifacts in glossy reflections.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationComponent">
            <summary>
            Component allowing for simple rotate-to animation. After rotating to target, the animation will be "played back", by rotating the
            model in the initial orientation. Animation can also be interrupted in the middle and "play back" from there.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationComponent.AnimationState">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinition">
            <summary>
            <see cref="T:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationComponent"/>
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinition.RotationAxis">
            <summary>
            Translation amount
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinition.AngularSpeed">
            <summary>
            Speed for translation in angles/s
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinition.RotationAngle">
            <summary>
            Rotation amount
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinition.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer{Keen#VRage#Core#Game#GameSystems#RigidAnimations#RotationAnimationDefinition}#NameSerializer">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinition.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#NameSerializer">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinition.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#NameType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinition.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer{Keen#VRage#Core#Game#GameSystems#RigidAnimations#RotationAnimationDefinition}#ShouldSerializeAsName(Keen.VRage.Library.Serialization.SerializationContext,Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinition@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinition.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#ShouldSerializeAsName(Keen.VRage.Library.Serialization.SerializationContext,System.Object@)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinition.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinition.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Game#GameSystems#RigidAnimations#RotationAnimationDefinition}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinition.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinition.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinition.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinition.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinition.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinition.TypeInfoHolder.RotationAxisAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinition.TypeInfoHolder.RotationAxisAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinition.TypeInfoHolder.RotationAxisAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinition.TypeInfoHolder.RotationAxisAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinition.TypeInfoHolder.RotationAxisAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinition.TypeInfoHolder.RotationAxisAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinition.TypeInfoHolder.RotationAxisAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinition.TypeInfoHolder.RotationAxisAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinition.TypeInfoHolder.RotationAxisAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinition.TypeInfoHolder.RotationAxisAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinition.TypeInfoHolder.RotationAxisAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinition.TypeInfoHolder.RotationAxisAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinition.TypeInfoHolder.RotationAxisAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinition.TypeInfoHolder.RotationAxisAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinition.TypeInfoHolder.RotationAxisAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3}#Set(System.Object,Keen.VRage.Library.Mathematics.Vector3@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinition.TypeInfoHolder.RotationAxisAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinition.TypeInfoHolder.RotationAxisAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinition.TypeInfoHolder.RotationAxisAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3}#Set(System.Byte@,Keen.VRage.Library.Mathematics.Vector3@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinition.TypeInfoHolder.RotationAxisAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinition.TypeInfoHolder.RotationAxisAccessor.Set(Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinition@,Keen.VRage.Library.Mathematics.Vector3@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinition.TypeInfoHolder.RotationAxisAccessor.Get(Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinition@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinition.TypeInfoHolder.AngularSpeedAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinition.TypeInfoHolder.AngularSpeedAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinition.TypeInfoHolder.AngularSpeedAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinition.TypeInfoHolder.AngularSpeedAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinition.TypeInfoHolder.AngularSpeedAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinition.TypeInfoHolder.AngularSpeedAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinition.TypeInfoHolder.AngularSpeedAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinition.TypeInfoHolder.AngularSpeedAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinition.TypeInfoHolder.AngularSpeedAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinition.TypeInfoHolder.AngularSpeedAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinition.TypeInfoHolder.AngularSpeedAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinition.TypeInfoHolder.AngularSpeedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinition.TypeInfoHolder.AngularSpeedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinition.TypeInfoHolder.AngularSpeedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinition.TypeInfoHolder.AngularSpeedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Object,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinition.TypeInfoHolder.AngularSpeedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinition.TypeInfoHolder.AngularSpeedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinition.TypeInfoHolder.AngularSpeedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Byte@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinition.TypeInfoHolder.AngularSpeedAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinition.TypeInfoHolder.AngularSpeedAccessor.Set(Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinition@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinition.TypeInfoHolder.AngularSpeedAccessor.Get(Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinition@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinition.TypeInfoHolder.RotationAngleAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinition.TypeInfoHolder.RotationAngleAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinition.TypeInfoHolder.RotationAngleAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinition.TypeInfoHolder.RotationAngleAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinition.TypeInfoHolder.RotationAngleAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinition.TypeInfoHolder.RotationAngleAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinition.TypeInfoHolder.RotationAngleAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinition.TypeInfoHolder.RotationAngleAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinition.TypeInfoHolder.RotationAngleAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinition.TypeInfoHolder.RotationAngleAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinition.TypeInfoHolder.RotationAngleAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinition.TypeInfoHolder.RotationAngleAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinition.TypeInfoHolder.RotationAngleAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinition.TypeInfoHolder.RotationAngleAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinition.TypeInfoHolder.RotationAngleAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Object,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinition.TypeInfoHolder.RotationAngleAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinition.TypeInfoHolder.RotationAngleAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinition.TypeInfoHolder.RotationAngleAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Byte@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinition.TypeInfoHolder.RotationAngleAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinition.TypeInfoHolder.RotationAngleAccessor.Set(Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinition@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinition.TypeInfoHolder.RotationAngleAccessor.Get(Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinition@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.RigidAnimations.ToggleRigidAnimationComponent">
            <summary>
            Base class for toggle-based animation
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationComponent">
            <summary>
            Component allowing for simple translate-to animation. After translating to target, the animation will be "played back", by translating the
            model to the initial position. Animation can also be interrupted in the middle and "play back" from there.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationComponent.AnimationState">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinition">
            <summary>
            <see cref="T:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationComponent"/>
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinition.Speed">
            <summary>
            Speed of translation
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinition.Translation">
            <summary>
            Translation amount
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinition.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer{Keen#VRage#Core#Game#GameSystems#RigidAnimations#TranslationAnimationDefinition}#NameSerializer">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinition.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#NameSerializer">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinition.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#NameType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinition.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer{Keen#VRage#Core#Game#GameSystems#RigidAnimations#TranslationAnimationDefinition}#ShouldSerializeAsName(Keen.VRage.Library.Serialization.SerializationContext,Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinition@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinition.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#ShouldSerializeAsName(Keen.VRage.Library.Serialization.SerializationContext,System.Object@)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinition.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinition.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Game#GameSystems#RigidAnimations#TranslationAnimationDefinition}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinition.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinition.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinition.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinition.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinition.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinition.TypeInfoHolder.SpeedAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinition.TypeInfoHolder.SpeedAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinition.TypeInfoHolder.SpeedAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinition.TypeInfoHolder.SpeedAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinition.TypeInfoHolder.SpeedAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinition.TypeInfoHolder.SpeedAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinition.TypeInfoHolder.SpeedAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinition.TypeInfoHolder.SpeedAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinition.TypeInfoHolder.SpeedAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinition.TypeInfoHolder.SpeedAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinition.TypeInfoHolder.SpeedAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinition.TypeInfoHolder.SpeedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinition.TypeInfoHolder.SpeedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinition.TypeInfoHolder.SpeedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinition.TypeInfoHolder.SpeedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Object,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinition.TypeInfoHolder.SpeedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinition.TypeInfoHolder.SpeedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinition.TypeInfoHolder.SpeedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Byte@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinition.TypeInfoHolder.SpeedAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinition.TypeInfoHolder.SpeedAccessor.Set(Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinition@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinition.TypeInfoHolder.SpeedAccessor.Get(Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinition@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinition.TypeInfoHolder.TranslationAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinition.TypeInfoHolder.TranslationAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinition.TypeInfoHolder.TranslationAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinition.TypeInfoHolder.TranslationAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinition.TypeInfoHolder.TranslationAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinition.TypeInfoHolder.TranslationAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinition.TypeInfoHolder.TranslationAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinition.TypeInfoHolder.TranslationAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinition.TypeInfoHolder.TranslationAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinition.TypeInfoHolder.TranslationAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinition.TypeInfoHolder.TranslationAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinition.TypeInfoHolder.TranslationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinition.TypeInfoHolder.TranslationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinition.TypeInfoHolder.TranslationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinition.TypeInfoHolder.TranslationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3}#Set(System.Object,Keen.VRage.Library.Mathematics.Vector3@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinition.TypeInfoHolder.TranslationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinition.TypeInfoHolder.TranslationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinition.TypeInfoHolder.TranslationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3}#Set(System.Byte@,Keen.VRage.Library.Mathematics.Vector3@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinition.TypeInfoHolder.TranslationAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinition.TypeInfoHolder.TranslationAccessor.Set(Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinition@,Keen.VRage.Library.Mathematics.Vector3@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinition.TypeInfoHolder.TranslationAccessor.Get(Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinition@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationObjectBuilder">
            <summary>
            <see cref="T:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationComponent"/>
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationObjectBuilder.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationObjectBuilder.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationObjectBuilder.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationObjectBuilder.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationObjectBuilder.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationObjectBuilder.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationObjectBuilder.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Game#GameSystems#RigidAnimations#GenericAnimationObjectBuilder}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationObjectBuilder.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationObjectBuilder.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationObjectBuilder.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationObjectBuilder.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationObjectBuilder">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationObjectBuilder.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationObjectBuilder.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationObjectBuilder.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationObjectBuilder.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationObjectBuilder.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationObjectBuilder.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationObjectBuilder.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Game#GameSystems#RigidAnimations#InfiniteRotationAnimationObjectBuilder}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationObjectBuilder.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationObjectBuilder.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationObjectBuilder.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationObjectBuilder.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationObjectBuilder">
            <summary>
            <see cref="T:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationComponent"/>
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationObjectBuilder.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationObjectBuilder.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationObjectBuilder.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationObjectBuilder.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationObjectBuilder.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationObjectBuilder.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationObjectBuilder.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Game#GameSystems#RigidAnimations#RotationAnimationObjectBuilder}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationObjectBuilder.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationObjectBuilder.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationObjectBuilder.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationObjectBuilder.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationObjectBuilder">
            <summary>
            <see cref="T:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationComponent"/>
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationObjectBuilder.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationObjectBuilder.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationObjectBuilder.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationObjectBuilder.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationObjectBuilder.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationObjectBuilder.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationObjectBuilder.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Game#GameSystems#RigidAnimations#TranslationAnimationObjectBuilder}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationObjectBuilder.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationObjectBuilder.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationObjectBuilder.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationObjectBuilder.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinitionObjectBuilder.Speed">
            <summary>
            Speed for translation in m/s
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinitionObjectBuilder.AngularSpeed">
            <summary>
            Angular speed for rotation in angles/s
            </summary>
            <returns></returns>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinitionObjectBuilder.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinitionObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinitionObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinitionObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinitionObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinitionObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinitionObjectBuilder.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinitionObjectBuilder.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinitionObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinitionObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinitionObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinitionObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinitionObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinitionObjectBuilder.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinitionObjectBuilder.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinitionObjectBuilder.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinitionObjectBuilder.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Game#GameSystems#RigidAnimations#GenericAnimationDefinitionObjectBuilder}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinitionObjectBuilder.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinitionObjectBuilder.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinitionObjectBuilder.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinitionObjectBuilder.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinitionObjectBuilder.TypeInfoHolder.SpeedAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinitionObjectBuilder.TypeInfoHolder.SpeedAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinitionObjectBuilder.TypeInfoHolder.SpeedAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinitionObjectBuilder.TypeInfoHolder.SpeedAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinitionObjectBuilder.TypeInfoHolder.SpeedAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinitionObjectBuilder.TypeInfoHolder.SpeedAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinitionObjectBuilder.TypeInfoHolder.SpeedAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinitionObjectBuilder.TypeInfoHolder.SpeedAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinitionObjectBuilder.TypeInfoHolder.SpeedAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinitionObjectBuilder.TypeInfoHolder.SpeedAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinitionObjectBuilder.TypeInfoHolder.SpeedAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinitionObjectBuilder.TypeInfoHolder.SpeedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinitionObjectBuilder.TypeInfoHolder.SpeedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinitionObjectBuilder.TypeInfoHolder.SpeedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinitionObjectBuilder.TypeInfoHolder.SpeedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Object,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinitionObjectBuilder.TypeInfoHolder.SpeedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinitionObjectBuilder.TypeInfoHolder.SpeedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinitionObjectBuilder.TypeInfoHolder.SpeedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Byte@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinitionObjectBuilder.TypeInfoHolder.SpeedAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinitionObjectBuilder.TypeInfoHolder.SpeedAccessor.Set(Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinitionObjectBuilder@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinitionObjectBuilder.TypeInfoHolder.SpeedAccessor.Get(Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinitionObjectBuilder@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSpeedAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSpeedAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSpeedAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSpeedAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSpeedAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSpeedAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSpeedAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSpeedAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSpeedAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSpeedAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSpeedAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSpeedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSpeedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSpeedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSpeedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Object,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSpeedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSpeedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSpeedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Byte@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSpeedAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSpeedAccessor.Set(Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinitionObjectBuilder@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSpeedAccessor.Get(Keen.VRage.Core.Game.GameSystems.RigidAnimations.GenericAnimationDefinitionObjectBuilder@)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.RotationAxis">
            <summary>
            Axis of rotation
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.AngularSpeed">
            <summary>
            Angular speed for rotation in angles/s
            </summary>
            <returns></returns>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.AngularSpeedup">
            <summary>
            Angle speed increase in angles/s
            </summary>
            <returns></returns>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.AngularSlowdown">
            <summary>
            Angle speed decrease in angles/s
            </summary>
            <returns></returns>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Game#GameSystems#RigidAnimations#InfiniteRotationAnimationDefinitionObjectBuilder}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.TypeInfoHolder.RotationAxisAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.TypeInfoHolder.RotationAxisAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.TypeInfoHolder.RotationAxisAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.TypeInfoHolder.RotationAxisAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.TypeInfoHolder.RotationAxisAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.TypeInfoHolder.RotationAxisAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.TypeInfoHolder.RotationAxisAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.TypeInfoHolder.RotationAxisAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.TypeInfoHolder.RotationAxisAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.TypeInfoHolder.RotationAxisAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.TypeInfoHolder.RotationAxisAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.TypeInfoHolder.RotationAxisAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.TypeInfoHolder.RotationAxisAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.TypeInfoHolder.RotationAxisAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.TypeInfoHolder.RotationAxisAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3}#Set(System.Object,Keen.VRage.Library.Mathematics.Vector3@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.TypeInfoHolder.RotationAxisAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.TypeInfoHolder.RotationAxisAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.TypeInfoHolder.RotationAxisAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3}#Set(System.Byte@,Keen.VRage.Library.Mathematics.Vector3@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.TypeInfoHolder.RotationAxisAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.TypeInfoHolder.RotationAxisAccessor.Set(Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder@,Keen.VRage.Library.Mathematics.Vector3@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.TypeInfoHolder.RotationAxisAccessor.Get(Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSpeedAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSpeedAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSpeedAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSpeedAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSpeedAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSpeedAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSpeedAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSpeedAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSpeedAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSpeedAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSpeedAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSpeedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSpeedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSpeedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSpeedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Object,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSpeedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSpeedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSpeedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Byte@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSpeedAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSpeedAccessor.Set(Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSpeedAccessor.Get(Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSpeedupAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSpeedupAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSpeedupAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSpeedupAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSpeedupAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSpeedupAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSpeedupAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSpeedupAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSpeedupAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSpeedupAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSpeedupAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSpeedupAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSpeedupAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSpeedupAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSpeedupAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Object,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSpeedupAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSpeedupAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSpeedupAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Byte@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSpeedupAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSpeedupAccessor.Set(Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSpeedupAccessor.Get(Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSlowdownAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSlowdownAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSlowdownAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSlowdownAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSlowdownAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSlowdownAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSlowdownAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSlowdownAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSlowdownAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSlowdownAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSlowdownAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSlowdownAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSlowdownAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSlowdownAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSlowdownAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Object,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSlowdownAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSlowdownAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSlowdownAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Byte@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSlowdownAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSlowdownAccessor.Set(Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSlowdownAccessor.Get(Keen.VRage.Core.Game.GameSystems.RigidAnimations.InfiniteRotationAnimationDefinitionObjectBuilder@)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.RotationAxis">
            <summary>
            Translation amount
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.AngularSpeed">
            <summary>
            Speed for translation in angles/s
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.RotationAngle">
            <summary>
            Rotation amount
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Game#GameSystems#RigidAnimations#RotationAnimationDefinitionObjectBuilder}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.TypeInfoHolder.RotationAxisAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.TypeInfoHolder.RotationAxisAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.TypeInfoHolder.RotationAxisAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.TypeInfoHolder.RotationAxisAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.TypeInfoHolder.RotationAxisAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.TypeInfoHolder.RotationAxisAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.TypeInfoHolder.RotationAxisAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.TypeInfoHolder.RotationAxisAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.TypeInfoHolder.RotationAxisAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.TypeInfoHolder.RotationAxisAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.TypeInfoHolder.RotationAxisAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.TypeInfoHolder.RotationAxisAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.TypeInfoHolder.RotationAxisAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.TypeInfoHolder.RotationAxisAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.TypeInfoHolder.RotationAxisAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3}#Set(System.Object,Keen.VRage.Library.Mathematics.Vector3@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.TypeInfoHolder.RotationAxisAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.TypeInfoHolder.RotationAxisAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.TypeInfoHolder.RotationAxisAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3}#Set(System.Byte@,Keen.VRage.Library.Mathematics.Vector3@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.TypeInfoHolder.RotationAxisAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.TypeInfoHolder.RotationAxisAccessor.Set(Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder@,Keen.VRage.Library.Mathematics.Vector3@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.TypeInfoHolder.RotationAxisAccessor.Get(Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSpeedAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSpeedAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSpeedAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSpeedAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSpeedAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSpeedAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSpeedAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSpeedAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSpeedAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSpeedAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSpeedAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSpeedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSpeedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSpeedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSpeedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Object,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSpeedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSpeedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSpeedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Byte@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSpeedAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSpeedAccessor.Set(Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.TypeInfoHolder.AngularSpeedAccessor.Get(Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.TypeInfoHolder.RotationAngleAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.TypeInfoHolder.RotationAngleAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.TypeInfoHolder.RotationAngleAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.TypeInfoHolder.RotationAngleAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.TypeInfoHolder.RotationAngleAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.TypeInfoHolder.RotationAngleAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.TypeInfoHolder.RotationAngleAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.TypeInfoHolder.RotationAngleAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.TypeInfoHolder.RotationAngleAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.TypeInfoHolder.RotationAngleAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.TypeInfoHolder.RotationAngleAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.TypeInfoHolder.RotationAngleAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.TypeInfoHolder.RotationAngleAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.TypeInfoHolder.RotationAngleAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.TypeInfoHolder.RotationAngleAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Object,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.TypeInfoHolder.RotationAngleAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.TypeInfoHolder.RotationAngleAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.TypeInfoHolder.RotationAngleAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Byte@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.TypeInfoHolder.RotationAngleAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.TypeInfoHolder.RotationAngleAccessor.Set(Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder.TypeInfoHolder.RotationAngleAccessor.Get(Keen.VRage.Core.Game.GameSystems.RigidAnimations.RotationAnimationDefinitionObjectBuilder@)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinitionObjectBuilder.Speed">
            <summary>
            Speed of translation
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinitionObjectBuilder.Translation">
            <summary>
            Translation amount
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinitionObjectBuilder.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinitionObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinitionObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinitionObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinitionObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinitionObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinitionObjectBuilder.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinitionObjectBuilder.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinitionObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinitionObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinitionObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinitionObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinitionObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinitionObjectBuilder.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinitionObjectBuilder.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinitionObjectBuilder.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinitionObjectBuilder.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Game#GameSystems#RigidAnimations#TranslationAnimationDefinitionObjectBuilder}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinitionObjectBuilder.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinitionObjectBuilder.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinitionObjectBuilder.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinitionObjectBuilder.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinitionObjectBuilder.TypeInfoHolder.SpeedAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinitionObjectBuilder.TypeInfoHolder.SpeedAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinitionObjectBuilder.TypeInfoHolder.SpeedAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinitionObjectBuilder.TypeInfoHolder.SpeedAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinitionObjectBuilder.TypeInfoHolder.SpeedAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinitionObjectBuilder.TypeInfoHolder.SpeedAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinitionObjectBuilder.TypeInfoHolder.SpeedAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinitionObjectBuilder.TypeInfoHolder.SpeedAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinitionObjectBuilder.TypeInfoHolder.SpeedAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinitionObjectBuilder.TypeInfoHolder.SpeedAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinitionObjectBuilder.TypeInfoHolder.SpeedAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinitionObjectBuilder.TypeInfoHolder.SpeedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinitionObjectBuilder.TypeInfoHolder.SpeedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinitionObjectBuilder.TypeInfoHolder.SpeedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinitionObjectBuilder.TypeInfoHolder.SpeedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Object,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinitionObjectBuilder.TypeInfoHolder.SpeedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinitionObjectBuilder.TypeInfoHolder.SpeedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinitionObjectBuilder.TypeInfoHolder.SpeedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Byte@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinitionObjectBuilder.TypeInfoHolder.SpeedAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinitionObjectBuilder.TypeInfoHolder.SpeedAccessor.Set(Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinitionObjectBuilder@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinitionObjectBuilder.TypeInfoHolder.SpeedAccessor.Get(Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinitionObjectBuilder@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinitionObjectBuilder.TypeInfoHolder.TranslationAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinitionObjectBuilder.TypeInfoHolder.TranslationAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinitionObjectBuilder.TypeInfoHolder.TranslationAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinitionObjectBuilder.TypeInfoHolder.TranslationAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinitionObjectBuilder.TypeInfoHolder.TranslationAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinitionObjectBuilder.TypeInfoHolder.TranslationAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinitionObjectBuilder.TypeInfoHolder.TranslationAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinitionObjectBuilder.TypeInfoHolder.TranslationAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinitionObjectBuilder.TypeInfoHolder.TranslationAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinitionObjectBuilder.TypeInfoHolder.TranslationAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinitionObjectBuilder.TypeInfoHolder.TranslationAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinitionObjectBuilder.TypeInfoHolder.TranslationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinitionObjectBuilder.TypeInfoHolder.TranslationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinitionObjectBuilder.TypeInfoHolder.TranslationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinitionObjectBuilder.TypeInfoHolder.TranslationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3}#Set(System.Object,Keen.VRage.Library.Mathematics.Vector3@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinitionObjectBuilder.TypeInfoHolder.TranslationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinitionObjectBuilder.TypeInfoHolder.TranslationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinitionObjectBuilder.TypeInfoHolder.TranslationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3}#Set(System.Byte@,Keen.VRage.Library.Mathematics.Vector3@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinitionObjectBuilder.TypeInfoHolder.TranslationAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinitionObjectBuilder.TypeInfoHolder.TranslationAccessor.Set(Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinitionObjectBuilder@,Keen.VRage.Library.Mathematics.Vector3@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinitionObjectBuilder.TypeInfoHolder.TranslationAccessor.Get(Keen.VRage.Core.Game.GameSystems.RigidAnimations.TranslationAnimationDefinitionObjectBuilder@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.SpaceProbe.ISpaceProbeArgs`1">
            <summary>
            Must be by implemented by structs which are arguments to <see cref="T:Keen.VRage.Core.Game.GameSystems.SpaceProbe.ISpaceProbeQueryable"/> queries or preload requests.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpaceProbe.ISpaceProbeArgs`1.DistanceSquared(`0@,Keen.VRage.Library.Mathematics.BoundingBoxD@)">
            <summary>
            Calculate distance squared from <see cref="T:Keen.VRage.Core.Game.GameSystems.SpaceProbe.ISpaceProbeSystem"/> query/preload request origin (RayCast) or bounds (AABB, AABBCast)
            to the given bounding box. This is used to cull irrelevant nodes from the BVH in <see cref="F:Keen.VRage.Core.Game.GameSystems.SpaceProbe.SpaceProbeQueryMode.NearestHit"/> mode.
            </summary>
            <returns>Squared distance between the two closest points (0 if overlapping).</returns>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.SpaceProbe.ISpaceProbePreloadArgs`1">
            <summary>
            Must be by implemented by structs which are arguments to <see cref="T:Keen.VRage.Core.Game.GameSystems.SpaceProbe.ISpaceProbeQueryable"/> preload requests.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpaceProbe.ISpaceProbePreloadArgs`1.PreloadAsync(Keen.VRage.Core.Game.GameSystems.SpaceProbe.ISpaceProbeQueryable,`0@,Keen.VRage.Core.Game.GameSystems.EntityFilter@,Keen.VRage.Core.Game.GameSystems.SpaceProbe.PrecisionSet@)">
            <summary>
            The implementation of this method should call the respective Preload* overload in <see cref="T:Keen.VRage.Core.Game.GameSystems.SpaceProbe.ISpaceProbeQueryable"/>.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.SpaceProbe.ISpaceProbeQueryable">
            <summary>
            Implemented by any system that would like to generate results for SpaceProbe queries.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpaceProbe.ISpaceProbeQueryable.PreloadRayCastAsync(Keen.VRage.Core.Game.GameSystems.Queries.RayCastArgs,Keen.VRage.Core.Game.GameSystems.EntityFilter,Keen.VRage.Core.Game.GameSystems.SpaceProbe.PrecisionSet)">
            <summary>
            Preload entities which would be intersected by the ray cast.
            </summary>
            <param name="args">Parameters of the ray cast.</param>
            <param name="filter">Types of entities to preload.</param>
            <param name="precision">Fidelity of preload at various distances.</param>
            <returns>A disposable token which can be used to keep internal cache alive.</returns>
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpaceProbe.ISpaceProbeQueryable.PreloadAABBAsync(Keen.VRage.Core.Game.GameSystems.Queries.AABBQueryArgs,Keen.VRage.Core.Game.GameSystems.EntityFilter,Keen.VRage.Core.Game.GameSystems.SpaceProbe.PrecisionSet)">
             <summary>
            
             </summary>
             <param name="args">Parameters of the AABB.</param>
             <param name="filter">Types of entities to preload.</param>
             <param name="precision">Fidelity of preload at various distances.</param>
             <returns>A disposable token which can be used to keep internal cache alive.</returns>
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpaceProbe.ISpaceProbeQueryable.PreloadAABBCastAsync(Keen.VRage.Core.Game.GameSystems.Queries.AABBCastArgs,Keen.VRage.Core.Game.GameSystems.EntityFilter,Keen.VRage.Core.Game.GameSystems.SpaceProbe.PrecisionSet)">
             <summary>
            
             </summary>
             <param name="args">Parameters of the AABB cast.</param>
             <param name="filter">Types of entities to preload.</param>
             <param name="precision">Fidelity of preload at various distances.</param>
             <returns>A disposable token which can be used to keep internal cache alive.</returns>
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpaceProbe.ISpaceProbeQueryable.QueryRayCastAsync(Keen.VRage.Core.Game.GameSystems.Queries.RayCastArgs,Keen.VRage.Core.Game.GameSystems.EntityFilter,Keen.VRage.Core.Game.GameSystems.SpaceProbe.SpaceProbeQueryMode,Keen.VRage.Core.Game.GameSystems.SpaceProbe.PrecisionSet)">
             <summary>
            
             </summary>
             <param name="args">Parameters of the ray cast.</param>
             <param name="filter">Types of entities to search for.</param>
             <param name="mode"></param>
             <param name="precision">Fidelity of query results at various distances.</param>
             <returns>A buffer of hit results, sorted near-to-far with respect the ray's origin. The caller is
             responsible for disposing this buffer.</returns>
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpaceProbe.ISpaceProbeQueryable.QueryAABBAsync(Keen.VRage.Core.Game.GameSystems.Queries.AABBQueryArgs,Keen.VRage.Core.Game.GameSystems.EntityFilter,Keen.VRage.Core.Game.GameSystems.SpaceProbe.SpaceProbeQueryMode,Keen.VRage.Core.Game.GameSystems.SpaceProbe.PrecisionSet)">
             <summary>
            
             </summary>
             <param name="args">Parameters of the AABB.</param>
             <param name="filter">Types of entities to search for.</param>
             <param name="mode"></param>
             <param name="precision">Fidelity of query results at various distances.</param>
             <returns>A buffer of hit results, sorted near-to-far with respect to the AABB's center. The caller is
             responsible for disposing this buffer.</returns>
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpaceProbe.ISpaceProbeQueryable.QueryAABBCastAsync(Keen.VRage.Core.Game.GameSystems.Queries.AABBCastArgs,Keen.VRage.Core.Game.GameSystems.EntityFilter,Keen.VRage.Core.Game.GameSystems.SpaceProbe.SpaceProbeQueryMode,Keen.VRage.Core.Game.GameSystems.SpaceProbe.PrecisionSet)">
             <summary>
            
             </summary>
             <param name="args">Parameters of the AABB cast.</param>
             <param name="filter">Types of entities to search for.</param>
             <param name="mode"></param>
             <param name="precision">Fidelity of query results at various distances.</param>
             <returns>A buffer of hit results, sorted near-to-far with respect to the AABB's center. The caller is
             responsible for disposing this buffer.</returns>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.SpaceProbe.ISpaceProbeQueryArgs`2">
            <summary>
            Must be by implemented by structs which are arguments to <see cref="T:Keen.VRage.Core.Game.GameSystems.SpaceProbe.ISpaceProbeQueryable"/> queries.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpaceProbe.ISpaceProbeQueryArgs`2.QueryAsync(Keen.VRage.Core.Game.GameSystems.SpaceProbe.ISpaceProbeQueryable,`0@,Keen.VRage.Core.Game.GameSystems.EntityFilter@,Keen.VRage.Core.Game.GameSystems.SpaceProbe.SpaceProbeQueryMode,Keen.VRage.Core.Game.GameSystems.SpaceProbe.PrecisionSet@)">
            <summary>
            The implementation of this method should call the respective Query* overload in <see cref="T:Keen.VRage.Core.Game.GameSystems.SpaceProbe.ISpaceProbeQueryable"/>.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.SpaceProbe.ISpaceProbeQueryResult`2">
            <summary>
            Must be by implemented by structs which are results of <see cref="T:Keen.VRage.Core.Game.GameSystems.SpaceProbe.ISpaceProbeQueryable"/> queries.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpaceProbe.ISpaceProbeQueryResult`2.DistanceSquared(`0@,`1@)">
            <summary>
            Calculate distance squared from <see cref="T:Keen.VRage.Core.Game.GameSystems.SpaceProbe.ISpaceProbeSystem"/> query/preload request origin (RayCast) or
            bounds (AABB, AABBCast) to the given result. This is used to sort results near-to-far.
            </summary>
            <returns>Squared distance to result.</returns>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.SpaceProbe.ISpaceProbeSystem">
            <summary>
            Implemented by the coordinator system responsible for delegating SpaceProbe queries to a collection of registered queryables.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpaceProbe.ISpaceProbeSystem.RegisterGlobal(Keen.VRage.Core.Game.GameSystems.SpaceProbe.ISpaceProbeQueryable)">
            <summary>
            Register a globally queryable system that is responsible for finding entities which may appear anywhere in space.
            E.g. procedural planet generator.
            </summary>
            <param name="queryable">The queryable to register as a globally relevant provider of query results.</param>
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpaceProbe.ISpaceProbeSystem.UnregisterGlobal(Keen.VRage.Core.Game.GameSystems.SpaceProbe.ISpaceProbeQueryable)">
            <summary>
            Unregister a globally queryable system.
            </summary>
            <param name="queryable">The queryable to remove from global queries.</param>
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpaceProbe.ISpaceProbeSystem.RegisterInstance(Keen.VRage.Core.Game.GameSystems.SpaceProbe.ISpaceProbeQueryable,Keen.VRage.Library.Mathematics.BoundingBoxD)">
            <summary>
            Register an instance of a queryable system that is responsible for finding entities within the given bounding box.
            </summary>
            <param name="queryable">The queryable to register a spatially constrained instance of.</param>
            <param name="boundingBox">The bounding box within which the queryable should receive queries.</param>
            <returns>Instance id which can be used to update/unregister local queryables later.</returns>
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpaceProbe.ISpaceProbeSystem.UpdateInstanceBounds(Keen.VRage.Core.Game.GameSystems.SpaceProbe.SpaceProbeInstancedQueryableId,Keen.VRage.Library.Mathematics.BoundingBoxD)">
            <summary>
            Update a locally instanced queryable with a new bounding box.
            </summary>
            <param name="instanceId">The instance id received when you called <see cref="M:Keen.VRage.Core.Game.GameSystems.SpaceProbe.ISpaceProbeSystem.RegisterInstance(Keen.VRage.Core.Game.GameSystems.SpaceProbe.ISpaceProbeQueryable,Keen.VRage.Library.Mathematics.BoundingBoxD)"/>.</param>
            <param name="boundingBox">The new bounds to apply to this querable instance.</param>
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpaceProbe.ISpaceProbeSystem.UnregisterInstance(Keen.VRage.Core.Game.GameSystems.SpaceProbe.SpaceProbeInstancedQueryableId)">
            <summary>
            Unregister a locally instanced queryable.
            </summary>
            <param name="instanceId">The instance id received when you called <see cref="M:Keen.VRage.Core.Game.GameSystems.SpaceProbe.ISpaceProbeSystem.RegisterInstance(Keen.VRage.Core.Game.GameSystems.SpaceProbe.ISpaceProbeQueryable,Keen.VRage.Library.Mathematics.BoundingBoxD)"/>.</param>
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpaceProbe.ISpaceProbeSystem.UnregisterAllInstances(Keen.VRage.Core.Game.GameSystems.SpaceProbe.ISpaceProbeQueryable)">
            <summary>
            Unregister all local instances of a queryable.
            </summary>
            <param name="queryable">The queryable to unregister all instances of</param>
            <remarks>This is slower than calling <see cref="M:Keen.VRage.Core.Game.GameSystems.SpaceProbe.ISpaceProbeSystem.UnregisterInstance(Keen.VRage.Core.Game.GameSystems.SpaceProbe.SpaceProbeInstancedQueryableId)"/> for each of the instances you own,
            as it does not track which instances correspond to which queryables and must perform an O(n) search.</remarks>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.SpaceProbe.PrecisionSet">
            <summary>
            Precision sets are used to specify the hit test accuracy of SpaceProbe queries, and the fidelity of SpaceProbe preload requests.
            </summary>
            <remarks>
            IMPLICIT: Entities that fall within the bounds of the region (ray, aabb, cast aabb, etc.) but which are beyond
            LowQualityMaxDistance will be tested with broadphase hit tests only.
            </remarks>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.SpaceProbe.PrecisionSet.BroadphaseOnly">
            <summary>
            Pre-built precision set that will favor broadphase hit tests.
            </summary>
            <remarks>
            When all three ranges are set to zero the entire query region will be covered by the implicit broadphase range.
            Therefore, only broadphase collision tests will be performed.
            </remarks>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.SpaceProbe.PrecisionSet.HighQualityOnly">
            <summary>
            Pre-built precision set that will favor high quality hit tests.
            </summary>
            <remarks>
            When HighQualityMaxDistance ends beyond the query region's outer extents, the entire query region will be
            covered by the HighQuality hit test range. Therefore, only exact hit tests will be performed.
            </remarks>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.SpaceProbe.PrecisionSet.HighQualityMaxDistance">
            <summary>
            Maximum distance from query origin to perform exact hit tests (e.g. meshed physics)
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.SpaceProbe.PrecisionSet.MediumQualityMaxDistance">
            <summary>
            Maximum distance from query origin, beyond <see cref="F:Keen.VRage.Core.Game.GameSystems.SpaceProbe.PrecisionSet.HighQualityMaxDistance"/>), to perform medium quality hit tests (~1 m precision)
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.SpaceProbe.PrecisionSet.LowQualityMaxDistance">
            <summary>
            Maximum distance from query origin, beyond <see cref="F:Keen.VRage.Core.Game.GameSystems.SpaceProbe.PrecisionSet.MediumQualityMaxDistance"/>), to perform low quality hit tests (~10 m precision)
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.SpaceProbe.RayCastResult">
            <summary>
            Result of a SpaceProbe RayCast query. Can be exact or approximate.
            When approximate, <see cref="F:Keen.VRage.Core.Game.GameSystems.SpaceProbe.RayCastResult.Position"/> is not precisely on the surface of the entity.
            </summary>
            <see cref="M:Keen.VRage.Core.Game.GameSystems.SpaceProbe.ISpaceProbeQueryable.QueryRayCastAsync(Keen.VRage.Core.Game.GameSystems.Queries.RayCastArgs,Keen.VRage.Core.Game.GameSystems.EntityFilter,Keen.VRage.Core.Game.GameSystems.SpaceProbe.SpaceProbeQueryMode,Keen.VRage.Core.Game.GameSystems.SpaceProbe.PrecisionSet)"/>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.SpaceProbe.RayCastResult.Position">
            <summary>
            Exact or approximate position of the hit in 3D space.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.SpaceProbe.RayCastResult.Normal">
            <summary>
            Normal of hit. For approximate hits, this is with respect to the approximate shape.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.SpaceProbe.RayCastResult.Entity">
            <summary>
            ID of the entity associated with this hit. Only present when the entity currently exists.
            For approximate hits, this will be the entity that owns the bounding volume.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.SpaceProbe.RayCastResult.EntityDef">
            <summary>
            Composite definition for hits against entities which do not currently exist.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.SpaceProbe.AABBResult">
            <summary>
            Result of a SpaceProbe AABB or AABBCast query. Always approximate.
            </summary>
            <see cref="M:Keen.VRage.Core.Game.GameSystems.SpaceProbe.ISpaceProbeQueryable.QueryAABBAsync(Keen.VRage.Core.Game.GameSystems.Queries.AABBQueryArgs,Keen.VRage.Core.Game.GameSystems.EntityFilter,Keen.VRage.Core.Game.GameSystems.SpaceProbe.SpaceProbeQueryMode,Keen.VRage.Core.Game.GameSystems.SpaceProbe.PrecisionSet)"/>
            <see cref="M:Keen.VRage.Core.Game.GameSystems.SpaceProbe.ISpaceProbeQueryable.QueryAABBCastAsync(Keen.VRage.Core.Game.GameSystems.Queries.AABBCastArgs,Keen.VRage.Core.Game.GameSystems.EntityFilter,Keen.VRage.Core.Game.GameSystems.SpaceProbe.SpaceProbeQueryMode,Keen.VRage.Core.Game.GameSystems.SpaceProbe.PrecisionSet)"/>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.SpaceProbe.AABBResult.BoundingBox">
            <summary>
            Bounding box of the entity intersected by the query region.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.SpaceProbe.AABBResult.Entity">
            <summary>
            ID of the entity associated with this hit. Only present when the entity currently exists.
            For approximate hits, this will be the entity that owns the bounding volume.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.SpaceProbe.AABBResult.EntityDef">
            <summary>
            Composite definition for hits against entities which do not currently exist.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.SpaceProbe.SpaceProbeInstancedQueryableId">
            <summary>
            Represents a registered instance of an <see cref="T:Keen.VRage.Core.Game.GameSystems.SpaceProbe.ISpaceProbeQueryable"/>. Consider this an opaque handle.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpaceProbe.SpaceProbeInstancedQueryableId.#ctor(System.Int32)">
            <summary>
            Represents a registered instance of an <see cref="T:Keen.VRage.Core.Game.GameSystems.SpaceProbe.ISpaceProbeQueryable"/>. Consider this an opaque handle.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.SpaceProbe.SpaceProbePreloadToken">
            <summary>
            Token returned by <see cref="T:Keen.VRage.Core.Game.GameSystems.SpaceProbe.ISpaceProbeSystem"/> preload requests. Used to explicitly keep caches alive.
            Caching is the duty of the <see cref="T:Keen.VRage.Core.Game.GameSystems.SpaceProbe.ISpaceProbeQueryable"/> implementor. If you are an implementor,
            perhaps consider an <see cref="T:Keen.VRage.Library.Collections.LruCache`2"/>.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.SpaceProbe.SpaceProbeQueryMode">
            <summary>
            Specifies how the SpaceProbeSystem responding to this query should accumulate results.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.SpaceProbe.SpaceProbeQueryMode.AllHits">
            <summary>
            Find all hits, sorted by distance from query origin (near to far).
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.SpaceProbe.SpaceProbeQueryMode.NearestHit">
            <summary>
            Find the nearest hit to the query origin, as efficiently as possible.
            </summary>
            <remarks>
            Also returns any additional hits that were gathered while finding the nearest hit. This may be faster than
            <see cref="F:Keen.VRage.Core.Game.GameSystems.SpaceProbe.SpaceProbeQueryMode.AllHits"/> where possible, but no such guarantee is made. Consider this an optimization hint.
            </remarks>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.SpaceProbe.SpaceProbeQueryMode.AnyHit">
            <summary>
            Find any hit, as efficiently as possible (useful for line-of-sight checks). This is most useful when combined
            with an <see cref="T:Keen.VRage.Core.Game.GameSystems.EntityFilter"/>.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.SpaceProbe.SpaceProbeSessionComponent">
            <summary>
            Core SpaceProbe system. Responsible for handling registration/unregistration of ISpaceProbeQueryables and
            dispatching queries/preload requests to the relevant queryables via a spatial acceleration structure.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.EntityTrigger">
            <summary>
            A trigger register that this component keeps track of.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.EntityTrigger.BroadphaseIndex">
            <summary>
            Proxy index for the broadphase tree used in <see cref="T:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent"/>.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.EntityTrigger.SequenceNumber">
            <summary>
            Index attributed by <see cref="T:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent"/> to preserve the relative ordering of triggers.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.EntityTrigger.UpdateEntity(Keen.VRage.DCS.Accessors.DEntity,Keen.VRage.Library.Mathematics.BoundingBoxD@,Keen.VRage.Core.WorldTransform@)">
            <summary>
            Updates the entity's presence in the trigger
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.EntityTrigger.RemoveEntity(Keen.VRage.DCS.Accessors.DEntity)">
            <summary>
            Removes an entity from the trigger
            </summary>
            <returns>Whether the entity existed in the trigger and was removed.</returns>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.IEntityTrigger">
            <summary>
            Exposes readonly data for internal <see cref="T:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.EntityTrigger"/>s
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.IEntityTrigger.Entities">
            <summary>
            All entities within the trigger
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.ISectoredTrigger">
            <summary>
            Exposes readonly data for internal <see cref="T:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SectoredTrigger"/>'s
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.ISectoredTrigger.SectorBounds">
            <summary>
            Bounds for valid sector keys.
            </summary>
            <remarks>Invalid keys can be contained in this range when the shape is a sphere.</remarks>
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.ISectoredTrigger.SectorCenterOffset">
            <summary>
            Offset applied in local space to the center of sectors.
            </summary>
            <remarks>Axes where there are an odd number of sectors have an offset to ensure the sector with coordinate <c>0</c> is centered at the origin.</remarks>
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.ISectoredTrigger.SectorArgs">
            <summary>
            Creation args for this trigger.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.ISectoredTrigger.GetSectorKey(Keen.VRage.Library.Mathematics.Vector3D)">
            <summary>
            Gets a sector key from a given position, does not check if the key is inside the trigger and ignores sector margins
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.ISectoredTrigger.IsValid(Keen.VRage.Library.Mathematics.Vector3I)">
            <summary>
            Returns true if the sector is within the trigger bounds/shape
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.ISectoredTriggerExtensions">
            <summary>
            Extensions class for <see cref="T:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.ISectoredTrigger"/>
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.ISectoredTriggerExtensions.GetLocalSectorCenter(Keen.VRage.Core.Game.GameSystems.SpatialTrigger.ISectoredTrigger,Keen.VRage.Library.Mathematics.Vector3I)">
            <summary>
            Gets information related to the shaping of sectors
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.ISectoredTriggerExtensions.GetSectorInfo(Keen.VRage.Core.Game.GameSystems.SpatialTrigger.ISectoredTrigger,Keen.VRage.Library.Mathematics.Vector3I,System.Boolean,Keen.VRage.Library.Mathematics.Vector3D@,System.Double@,System.Double@)">
            <summary>
            Gets information related to the shaping of sectors
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.ISectoredTriggerExtensions.GetLocalBoundingBox(Keen.VRage.Core.Game.GameSystems.SpatialTrigger.ISectoredTrigger,Keen.VRage.Library.Mathematics.Vector3I,System.Boolean)">
            <summary>
            Create a local space bounding box for a sector.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.ISectoredTriggerExtensions.GetWorldBoundingBox(Keen.VRage.Core.Game.GameSystems.SpatialTrigger.ISectoredTrigger,Keen.VRage.Library.Mathematics.Vector3I,System.Boolean)">
            <summary>
            Creates a bounding box for a given sector key. Inflates/translates the bounding box depending on the given transformation args
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.ITriggerBase">
            <summary>
            Base interface for triggers in <see cref="T:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent"/>
            </summary>
            <remarks>
            <para>The trigger is a volume defined by a shape (sphere or bounding box). </para>
            <para>Triggers can be optionally attached to an entity, it will move with that entity in the world.</para>
            <para>The shape can be arbitrarily transformed in the local space of the trigger which is relative to the world origin or to the entity the
            trigger is attached to.</para>
            </remarks>
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.ITriggerBase.IsSphere">
            <summary>
            Returns true if the shape of the trigger is a sphere
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.ITriggerBase.IsBox">
            <summary>
            Returns true if the shape of the trigger is a box
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.ITriggerBase.Box">
            <summary>
             Gets the non-transformed bounding box of the trigger, if it is a box.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.ITriggerBase.Sphere">
            <summary>
            Gets the non-transformed bounding sphere of the trigger, if it is a sphere.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.ITriggerBase.ShapeBounds">
            <summary>
            The absolute min/max aabb of the trigger with inflated margins.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.ITriggerBase.GetShapeSpaceTransform">
            <summary>
            Get the transform from the local space of the trigger shape.
            </summary>
            <remarks>
            <para>In the local space of the trigger the shape is a simple axis aligned bounding box or sphere with center on the origin.</para>
            <para>When a trigger is attached to an entity <see cref="P:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.ITriggerBase.Box"/> or <see cref="P:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.ITriggerBase.Sphere"/> are relative to that entity. This method returns the final transform accounting for the transformation on the entity.</para>
            </remarks>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SectoredTrigger">
            <summary>
            Derivation of <see cref="T:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.EntityTrigger"/> that allows the trigger to be separated into different sectors
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent">
            <summary>
            SessionComponent for large-scale trigger detection/tracking within a volume. <see cref="T:Keen.VRage.Core.Game.GameSystems.ISpatialTriggerSystem"/>
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.RemoveEntityFromTriggers(Keen.VRage.DCS.Accessors.DEntity)">
            <summary>
            Removes an entity from all triggers
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.RemoveTriggersFromEntity(Keen.VRage.DCS.Accessors.DEntity)">
            <summary>
            Removes all attached triggers from an entity
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.OnDynamicDataAdded(Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent,Keen.VRage.DCS.Accessors.DEntity,Keen.VRage.Core.Game.Data.BoundingBoxData@,Keen.VRage.Core.WorldTransform@)">
            <summary>
            Job constraints are generated by <see cref="M:Keen.VRage.DCS.Builders.IJobsExtension.ConfigureScene(Keen.VRage.DCS.Builders.SceneBuilder)"/>
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.OnDynamicDataRemoved(Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent,Keen.VRage.DCS.Accessors.DEntity,Keen.VRage.Core.Game.Data.BoundingBoxData@,Keen.VRage.Core.WorldTransform@)">
            <summary>
            Job constraints are generated by <see cref="M:Keen.VRage.DCS.Builders.IJobsExtension.ConfigureScene(Keen.VRage.DCS.Builders.SceneBuilder)"/>
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.AttachedTriggersData">
            <summary>
            Data struct that helps identify entitys with any attached triggers
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.AttachedTriggersData.Triggers">
            <summary>
            The number of triggers attached to the entity
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Game#GameSystems#SpatialTrigger#SpatialTriggerSystemSessionComponent#TriggerDebugDrawData}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.SectorsAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.SectorsAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.SectorsAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.SectorsAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.SectorsAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.SectorsAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.SectorsAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.SectorsAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.SectorsAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.SectorsAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.SectorsAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.SectorsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.SectorsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.SectorsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.SectorsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.SectorsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.SectorsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.SectorsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.SectorsAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.SectorsAccessor.Set(Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.SectorsAccessor.Get(Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.EmptySectorsAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.EmptySectorsAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.EmptySectorsAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.EmptySectorsAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.EmptySectorsAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.EmptySectorsAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.EmptySectorsAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.EmptySectorsAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.EmptySectorsAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.EmptySectorsAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.EmptySectorsAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.EmptySectorsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.EmptySectorsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.EmptySectorsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.EmptySectorsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.EmptySectorsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.EmptySectorsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.EmptySectorsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.EmptySectorsAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.EmptySectorsAccessor.Set(Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.EmptySectorsAccessor.Get(Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.EntityCountsAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.EntityCountsAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.EntityCountsAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.EntityCountsAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.EntityCountsAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.EntityCountsAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.EntityCountsAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.EntityCountsAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.EntityCountsAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.EntityCountsAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.EntityCountsAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.EntityCountsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.EntityCountsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.EntityCountsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.EntityCountsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.EntityCountsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.EntityCountsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.EntityCountsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.EntityCountsAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.EntityCountsAccessor.Set(Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.EntityCountsAccessor.Get(Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.SectorKeysAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.SectorKeysAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.SectorKeysAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.SectorKeysAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.SectorKeysAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.SectorKeysAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.SectorKeysAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.SectorKeysAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.SectorKeysAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.SectorKeysAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.SectorKeysAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.SectorKeysAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.SectorKeysAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.SectorKeysAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.SectorKeysAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.SectorKeysAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.SectorKeysAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.SectorKeysAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.SectorKeysAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.SectorKeysAccessor.Set(Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.SectorKeysAccessor.Get(Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.SectorMarginsAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.SectorMarginsAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.SectorMarginsAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.SectorMarginsAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.SectorMarginsAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.SectorMarginsAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.SectorMarginsAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.SectorMarginsAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.SectorMarginsAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.SectorMarginsAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.SectorMarginsAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.SectorMarginsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.SectorMarginsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.SectorMarginsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.SectorMarginsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.SectorMarginsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.SectorMarginsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.SectorMarginsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.SectorMarginsAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.SectorMarginsAccessor.Set(Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.SectorMarginsAccessor.Get(Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.ShapeDepthAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.ShapeDepthAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.ShapeDepthAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.ShapeDepthAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.ShapeDepthAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.ShapeDepthAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.ShapeDepthAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.ShapeDepthAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.ShapeDepthAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.ShapeDepthAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.ShapeDepthAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.ShapeDepthAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.ShapeDepthAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.ShapeDepthAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.ShapeDepthAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.ShapeDepthAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.ShapeDepthAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.ShapeDepthAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.ShapeDepthAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.ShapeDepthAccessor.Set(Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.ShapeDepthAccessor.Get(Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.ShapeFillAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.ShapeFillAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.ShapeFillAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.ShapeFillAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.ShapeFillAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.ShapeFillAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.ShapeFillAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.ShapeFillAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.ShapeFillAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.ShapeFillAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.ShapeFillAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.ShapeFillAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.ShapeFillAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.ShapeFillAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.ShapeFillAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.ShapeFillAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.ShapeFillAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.ShapeFillAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.ShapeFillAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.ShapeFillAccessor.Set(Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData.TypeInfoHolder.ShapeFillAccessor.Get(Keen.VRage.Core.Game.GameSystems.SpatialTrigger.SpatialTriggerSystemSessionComponent.TriggerDebugDrawData@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.Sun.ISun">
            <summary>
            Session component interface that exposes information about the sun
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Sun.ISun.TimeOfDayOffset">
            <summary>
            Offset of the time of day, 0-1 range with 1 being a full day offset
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.GameSystems.Sun.ISun.SunRotation">
            <summary>
            Enables sun rotation with time. When false, the sun can still be rotated manually using <see cref="P:Keen.VRage.Core.Game.GameSystems.Sun.ISun.TimeOfDayOffset"/> offset
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Sun.ISun.GetSunDirection">
            <summary>
            Gets the azimuth and elevation of the sun
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Sun.ISun.GetSunNormal">
            <summary>
            Gets the normal vector of the sun
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.Sun.ISunDebug">
            <summary>
            Session component interface for overriding sun rotation data (without saving or syncing)
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Sun.ISunDebug.Override(System.Single,System.Single)">
            <summary>
            Overrides the rotation with the given azimuth and elevation (not synced!)
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Sun.ISunDebug.ResetOverride">
            <summary>
            Disables the rotation override (resets back to normal sun behavior)
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.GameSystems.Sun.SunHelper">
            <summary>
            Helper for calculating sun direction
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.GameSystems.Sun.SunHelper.GetTimeOfDaySunRotation(System.Double,System.Single,Keen.VRage.Library.Mathematics.Vector3,Keen.VRage.Library.Mathematics.Vector3,System.Single)">
            <summary>
            Calculates the azimuth and elevation of the sun
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.Systems.TwoFrameLoadingPhaseSessionComponent">
            <summary>
            Obsolete
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.Systems.EntityBundle">
            <summary>
            Collection of related entities that must be de/serialized and spawned at the same time due to cross-entity references
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.Systems.EntityBundle.RootBuilders">
            <summary>
            Shares memory with <see cref="F:Keen.VRage.Core.Game.Systems.EntityBundle.Builders"/>! Any changes made to Builders will affect RootBuilders, and vice versa
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.EntityBundle.EnsureCapacity(System.Int32)">
            <summary>
            Set the capacity of the underlying collections.
            </summary>
            <remarks>This is intended to be used in hot paths to prevent excessive resizing</remarks>
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.EntityBundle.AssignPivot(Keen.VRage.Core.WorldTransform)">
            <summary>
            Sets new pivot of the bundle relative to its current state.
            All root entities will be transformed to be relative to new pivot and new pivot will aligned with origin.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.EntityBundle.ClearCaches">
            <summary>
            Throw away all cached data. 
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.EntityBundle.MakeRoot(System.Int32)">
            <summary>
            Mark EOB/entity in this slot az root. In most cases it will change order of EOBs and entities in the collecitons.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.Systems.EntityBundle.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.EntityBundle.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.EntityBundle.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Game.Systems.EntityBundle@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.EntityBundle.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.EntityBundle.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Game.Systems.EntityBundle@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.EntityBundle.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.EntityBundle.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Game.Systems.EntityBundle@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.EntityBundle.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.EntityBundle.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.EntityBundle.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.EntityBundle.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.EntityBundle.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Game.Systems.EntityBundle@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.EntityBundle.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.EntityBundle.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Game.Systems.EntityBundle@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.EntityBundle.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.EntityBundle.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Game.Systems.EntityBundle@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.EntityBundle.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.EntityBundle.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Game.Systems.EntityBundle@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.EntityBundle.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.Systems.EntityBundle.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Systems.EntityBundle.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.EntityBundle.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Systems.EntityBundle.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Game#Systems#EntityBundle}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.EntityBundle.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder.RootsAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder.RootsAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder.RootsAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder.RootsAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder.RootsAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder.RootsAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder.RootsAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder.RootsAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder.RootsAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder.RootsAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder.RootsAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder.RootsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder.RootsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder.RootsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder.RootsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Set(System.Object,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder.RootsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder.RootsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder.RootsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Set(System.Byte@,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder.RootsAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder.RootsAccessor.Set(Keen.VRage.Core.Game.Systems.EntityBundle@,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder.RootsAccessor.Get(Keen.VRage.Core.Game.Systems.EntityBundle@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder.BuildersAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder.BuildersAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder.BuildersAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder.BuildersAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder.BuildersAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder.BuildersAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder.BuildersAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder.BuildersAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder.BuildersAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder.BuildersAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder.BuildersAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder.BuildersAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder.BuildersAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder.BuildersAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder.BuildersAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{Keen#VRage#DCS#ObjectBuilders#EntityObjectBuilder}}#Set(System.Object,System.Collections.Generic.List{Keen.VRage.DCS.ObjectBuilders.EntityObjectBuilder}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder.BuildersAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{Keen#VRage#DCS#ObjectBuilders#EntityObjectBuilder}}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder.BuildersAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{Keen#VRage#DCS#ObjectBuilders#EntityObjectBuilder}}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder.BuildersAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{Keen#VRage#DCS#ObjectBuilders#EntityObjectBuilder}}#Set(System.Byte@,System.Collections.Generic.List{Keen.VRage.DCS.ObjectBuilders.EntityObjectBuilder}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder.BuildersAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder.BuildersAccessor.Set(Keen.VRage.Core.Game.Systems.EntityBundle@,System.Collections.Generic.List{Keen.VRage.DCS.ObjectBuilders.EntityObjectBuilder}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder.BuildersAccessor.Get(Keen.VRage.Core.Game.Systems.EntityBundle@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder.EntitiesAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder.EntitiesAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder.EntitiesAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder.EntitiesAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder.EntitiesAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder.EntitiesAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder.EntitiesAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder.EntitiesAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder.EntitiesAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder.EntitiesAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder.EntitiesAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder.EntitiesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder.EntitiesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder.EntitiesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder.EntitiesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{Keen#VRage#DCS#Components#Entity}}#Set(System.Object,System.Collections.Generic.List{Keen.VRage.DCS.Components.Entity}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder.EntitiesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{Keen#VRage#DCS#Components#Entity}}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder.EntitiesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{Keen#VRage#DCS#Components#Entity}}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder.EntitiesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{Keen#VRage#DCS#Components#Entity}}#Set(System.Byte@,System.Collections.Generic.List{Keen.VRage.DCS.Components.Entity}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder.EntitiesAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder.EntitiesAccessor.Set(Keen.VRage.Core.Game.Systems.EntityBundle@,System.Collections.Generic.List{Keen.VRage.DCS.Components.Entity}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder.EntitiesAccessor.Get(Keen.VRage.Core.Game.Systems.EntityBundle@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder._entityIndexCacheAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder._entityIndexCacheAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder._entityIndexCacheAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder._entityIndexCacheAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder._entityIndexCacheAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder._entityIndexCacheAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder._entityIndexCacheAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder._entityIndexCacheAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder._entityIndexCacheAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder._entityIndexCacheAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder._entityIndexCacheAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder._entityIndexCacheAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder._entityIndexCacheAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder._entityIndexCacheAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder._entityIndexCacheAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#Dictionary{Keen#VRage#DCS#Components#Entity,Keen#VRage#DCS#ObjectBuilders#EntityObjectBuilder}}#Set(System.Object,System.Collections.Generic.Dictionary{Keen.VRage.DCS.Components.Entity,Keen.VRage.DCS.ObjectBuilders.EntityObjectBuilder}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder._entityIndexCacheAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#Dictionary{Keen#VRage#DCS#Components#Entity,Keen#VRage#DCS#ObjectBuilders#EntityObjectBuilder}}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder._entityIndexCacheAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#Dictionary{Keen#VRage#DCS#Components#Entity,Keen#VRage#DCS#ObjectBuilders#EntityObjectBuilder}}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder._entityIndexCacheAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#Dictionary{Keen#VRage#DCS#Components#Entity,Keen#VRage#DCS#ObjectBuilders#EntityObjectBuilder}}#Set(System.Byte@,System.Collections.Generic.Dictionary{Keen.VRage.DCS.Components.Entity,Keen.VRage.DCS.ObjectBuilders.EntityObjectBuilder}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder._entityIndexCacheAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder._entityIndexCacheAccessor.Set(Keen.VRage.Core.Game.Systems.EntityBundle@,System.Collections.Generic.Dictionary{Keen.VRage.DCS.Components.Entity,Keen.VRage.DCS.ObjectBuilders.EntityObjectBuilder}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder._entityIndexCacheAccessor.Get(Keen.VRage.Core.Game.Systems.EntityBundle@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder.EntityIndexCacheAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder.EntityIndexCacheAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder.EntityIndexCacheAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder.EntityIndexCacheAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder.EntityIndexCacheAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder.EntityIndexCacheAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder.EntityIndexCacheAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder.EntityIndexCacheAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder.EntityIndexCacheAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder.EntityIndexCacheAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder.EntityIndexCacheAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder.EntityIndexCacheAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder.EntityIndexCacheAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder.EntityIndexCacheAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder.EntityIndexCacheAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#Dictionary{Keen#VRage#DCS#Components#Entity,Keen#VRage#DCS#ObjectBuilders#EntityObjectBuilder}}#Set(System.Object,System.Collections.Generic.Dictionary{Keen.VRage.DCS.Components.Entity,Keen.VRage.DCS.ObjectBuilders.EntityObjectBuilder}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder.EntityIndexCacheAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#Dictionary{Keen#VRage#DCS#Components#Entity,Keen#VRage#DCS#ObjectBuilders#EntityObjectBuilder}}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder.EntityIndexCacheAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#Dictionary{Keen#VRage#DCS#Components#Entity,Keen#VRage#DCS#ObjectBuilders#EntityObjectBuilder}}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder.EntityIndexCacheAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#Dictionary{Keen#VRage#DCS#Components#Entity,Keen#VRage#DCS#ObjectBuilders#EntityObjectBuilder}}#Set(System.Byte@,System.Collections.Generic.Dictionary{Keen.VRage.DCS.Components.Entity,Keen.VRage.DCS.ObjectBuilders.EntityObjectBuilder}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder.EntityIndexCacheAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder.EntityIndexCacheAccessor.Set(Keen.VRage.Core.Game.Systems.EntityBundle@,System.Collections.Generic.Dictionary{Keen.VRage.DCS.Components.Entity,Keen.VRage.DCS.ObjectBuilders.EntityObjectBuilder}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.EntityBundle.TypeInfoHolder.EntityIndexCacheAccessor.Get(Keen.VRage.Core.Game.Systems.EntityBundle@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Game.Systems.EntityBundleFunctions">
            <summary>
            Functions form <see cref="T:Keen.VRage.Core.Game.Systems.EntityBundle"/>
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.EntityBundleFunctions.TransformBundle(Keen.VRage.Core.Game.Systems.EntityBundle,Keen.VRage.Core.WorldTransform)">
            <summary>
            Transform whole bundle (all entities and Pivot). This will modify EOBs stored inside.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.EntityBundleFunctions.Validate(Keen.VRage.Core.Game.Systems.EntityBundle)">
            <summary>
            Validate bundle that no children of any root are among roots.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.Systems.EntityPruner">
            <summary/>
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.EntityPruner.#ctor(System.Func{Keen.VRage.DCS.Components.Entity,System.Boolean})">
            <summary/>
        </member>
        <member name="F:Keen.VRage.Core.Game.Systems.EntityPruner.EntitiesToPrune">
            <summary>
            Accumulates all Entities that were pruned
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.Systems.GameEntityLifetimeTracker">
            <summary>
            <see cref="T:Keen.VRage.DCS.Components.IEntityLifetimeTracker"/> for <see cref="T:Keen.VRage.Core.Game.Systems.Session"/>
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.Systems.GameEntitySerializer">
            <summary>
            Automatically tracks Entities initialized under Session context
            </summary>
            <summary>
            Automatically tracks Entities initialized under Session context
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.Systems.GameEntitySerializer.BundleInitArgs">
            <summary />
        </member>
        <member name="F:Keen.VRage.Core.Game.Systems.GameEntitySerializer.BundleInitArgs.EntityParents">
            <summary>
            Should the bundle contain non-Scene-root Entities among the Bundle roots, this collection sets where to parent them
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.Systems.GameEntitySerializer.BundleInitArgs.EntityBuilders">
            <summary>
            Optional Data Entities for the OOP Entities
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.Systems.GameEntitySerializer.BundleSerializationParameters">
            <summary>
            Parameters to customize Bundle serialization.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.Systems.GameEntitySerializer.BundleSerializationParameters.SkipReferencedEntitiesSerialization">
             <summary>
             Whether references should be also serialized or ignored.
            
             When set to true, will preserve Entity refs in OBs (according to <see cref="T:Keen.VRage.Core.Game.Systems.GameEntitySerializer.SerializationCondition"/>)
             but will not continue transitively serializing all referenced Entities into the <see cref="T:Keen.VRage.Core.Game.Systems.EntityBundle"/>.
            
             When set to false, will create full closure, serialize all referenced Entities.
             </summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.Systems.GameEntitySerializer.BundleSerializationParameters.StoreAllSerializedEntityReferencesIntoBundle">
            <summary>
            Whether to store all children of serialized root Entities into <see cref="F:Keen.VRage.Core.Game.Systems.EntityBundle.Entities"/>
            If true, all Entities will be stored, even non-referenced childs.
            If false, only the roots and explicit references will be stored.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.Systems.GameEntitySerializer.BundleSerializationParameters.CollectedReferences">
            <summary>
            When set, additions to <see cref="F:Keen.VRage.Core.Game.Systems.EntityBundle.Entities"/> will be also mirrored into this collection
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.Systems.GameEntitySerializer.BundleSerializationParameters.AllSerializedEntities">
            <summary>
            When set, all serialized Entities will be stored here, along with their OBs
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.GameEntitySerializer.BuildFromBundle(Keen.VRage.Core.Game.Systems.GameEntitySerializer.BundleInitArgs)">
            <inheritdoc cref="M:Keen.VRage.Core.Game.Systems.GameEntitySerializer.BuildFromBundleAsync(Keen.VRage.Core.Game.Systems.GameEntitySerializer.BundleInitArgs,System.Boolean)"/>
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.GameEntitySerializer.BuildFromBundleAsync(Keen.VRage.Core.Game.Systems.GameEntitySerializer.BundleInitArgs,System.Boolean)">
            <inheritdoc cref="M:Keen.VRage.Core.Game.Systems.GameEntitySerializer.BuildFrom(Keen.VRage.DCS.Builders.DEntityBuilder,Keen.VRage.DCS.ObjectBuilders.EntityObjectBuilder)"/>
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.GameEntitySerializer.Serialize(Keen.VRage.DCS.Components.Entity,Keen.VRage.Core.Game.Systems.EntityBundle,Keen.VRage.Core.Game.Systems.GameEntitySerializer.SerializationCondition,Keen.VRage.Core.Game.Systems.GameEntitySerializer.BundleSerializationParameters)">
            <summary>
            Serialize entity and all referenced entities into the provided bundle
            </summary>
            <param name="firstEntity"> Initial Entity from which the serialization starts</param>
            <param name="targetBundle"> Target bundle into which all is serialized</param>
            <param name="condition"> Additional condition which can disallow some referenced entities from serialization (references will be nulled)</param>
            <param name="parameters"> Parameters changing details of serialization into the bundle.</param>
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.GameEntitySerializer.CanDeserialize(Keen.VRage.DCS.ObjectBuilders.EntityObjectBuilder,Keen.VRage.Library.Memory.BufferReference{System.ValueTuple{System.Type,System.Type}})">
            <summary>
            Checks that all services and configurations for the <paramref name="eob"/> are available from current <see cref="T:Keen.VRage.Core.Game.Systems.Session"/>.
            </summary>
            <remarks>
            Checks for entity's <see cref="P:Keen.VRage.Core.Game.Components.HierarchyComponent.Children"/>.
            </remarks>
            <param name="eob"></param>
            <param name="missingDependenciesOut">Inject the list of all missing services and configurations.</param>
            <returns>True if all dependencies are available.</returns>
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.GameEntitySerializer.SplitToSyncAndParallelParts(Keen.VRage.Core.Game.Systems.EntityBundle,Keen.VRage.Library.Memory.BufferReference{System.ValueTuple{Keen.VRage.DCS.ObjectBuilders.EntityObjectBuilder,System.Int32}},Keen.VRage.Library.Memory.BufferReference{System.ValueTuple{Keen.VRage.DCS.ObjectBuilders.EntityObjectBuilder,System.Int32}})">
            <summary>
            TODO: SE2-12263
            VoxelStorageComponentBase blocks Init thread which can lead to thread pool exhaustion
            remove when async init is supported
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.Systems.GameEntitySerializer.DeserializationContext">
            <summary />
        </member>
        <member name="T:Keen.VRage.Core.Game.Systems.GameEntitySerializer.SerializationContext">
            <summary />
        </member>
        <member name="T:Keen.VRage.Core.Game.Systems.IConditionalEntitySerialization">
            <summary>
            Interface distinguishing that object builder serializes entities and exposes condition to be injected by serialzier.
            Also offers simple way to determining whether entity should be serialized or not
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.Systems.IConditionalEntitySerialization.ShouldSerializeEntity">
            <summary>
            Serialization condition for testing whether entity is eligible to be serialized. Must be used on all Entities that will be passed to ObjectBuilder.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.Systems.IConditionalEntitySerializationFunctions">
            <summary>
            Functions for <see cref="T:Keen.VRage.Core.Game.Systems.IConditionalEntitySerialization"/>
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.IConditionalEntitySerializationFunctions.TryGetReferencedEntity(Keen.VRage.Core.Game.Systems.IConditionalEntitySerialization,Keen.VRage.DCS.Components.Entity,System.Boolean)">
            <summary>
            Method for applying <see cref="T:Keen.VRage.Core.Game.Systems.IConditionalEntitySerialization"/> and its SerializationCondition on entity.
            Returns entity if it should be serialized, null otherwise.
            </summary>
            <param name="condition">Condition to be used for testing</param>
            <param name="entity">Entity that is tested for serialization</param>
            <param name="indexEntity">Whether GameEntitySerializer should take note of the entity and add it to current serialization</param>
            <returns></returns>
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.IConditionalEntitySerializationFunctions.ShouldSerialize(Keen.VRage.Core.Game.Systems.IConditionalEntitySerialization,Keen.VRage.DCS.Components.Entity,System.Boolean)">
            <summary>
            Method for checking applying whether entity should be serialized or not.
            </summary>
            <param name="condition"></param>
            <param name="entity"></param>
            <param name="indexEntity"></param>
            <returns></returns>
        </member>
        <member name="T:Keen.VRage.Core.Game.Systems.IReadOnlyDataOffloading">
            <summary>
            Readonly part of <see cref="T:Keen.VRage.Core.Game.Systems.IDataOffloading"/>
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.IReadOnlyDataOffloading.LoadData(Keen.VRage.Core.Game.Data.Blob)">
            <summary>
            Loads the data linked with the <paramref name="identifier"/>.
            </summary>
            <param name="identifier">An identifier used to determine where the data will be loaded from.</param>
            <returns>The data that was loaded.</returns>
        </member>
        <member name="T:Keen.VRage.Core.Game.Systems.IDataOffloading">
            <summary>
            Used for loading and offloading data.
            Internally synchronized
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.IDataOffloading.OffloadData(System.Byte[])">
            <summary>
            Offloads the <paramref name="data"/> to a remote location.
            </summary>
            <param name="data">Data to be offloaded.</param>
            <returns>A unique identifier for this data.</returns>
        </member>
        <member name="T:Keen.VRage.Core.Game.Systems.IEntityBundleListener">
            <summary>
            Grants implementing <see cref="T:Keen.VRage.DCS.Components.Component"/> chance to listen for when whole bundle of entities has finished de/serialization
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.IEntityBundleListener.PostBundleInit">
            <summary>
            Invoked when all entities of the bundle have been initialized, before they are added to scene.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.IEntityBundleListener.OnBundleAddedToScene">
            <summary>
            Invoked when all entities of the bundle have been added to scene.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.Systems.IEntitySpawner">
            <summary>
            Interface implemented by components that want to spawn entities in the local/current Session.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.IEntitySpawner.SpawnEntity(Keen.VRage.DCS.ObjectBuilders.EntityObjectBuilder,Keen.VRage.DCS.Builders.DEntityBuilder)">
            <summary>
            Spawns an Entity from its object builder into the local/current Session
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.IEntitySpawner.SpawnBundle(Keen.VRage.Core.Game.Systems.GameEntitySerializer.BundleInitArgs)">
            <summary>
            Spawns bundle of Entities from its object builders into the local/current Session
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.IEntitySpawner.SpawnBundleAsync(Keen.VRage.Core.Game.Systems.GameEntitySerializer.BundleInitArgs)">
            <inheritdoc cref="M:Keen.VRage.Core.Game.Systems.IEntitySpawner.SpawnBundle(Keen.VRage.Core.Game.Systems.GameEntitySerializer.BundleInitArgs)"/>
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.IEntitySpawner.DeleteEntity(Keen.VRage.DCS.Components.Entity)">
            <summary>
            Delete target Entity from the local/current Session
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.Systems.IEntitySpawnerFunctions">
            <summary>
            <see cref="T:Keen.VRage.Core.Game.Systems.IEntitySpawner"/>
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.Systems.IInSceneListener">
            <summary>
            Grants implementing <see cref="T:Keen.VRage.DCS.Components.Component"/> chance to listen for <see cref="T:Keen.VRage.Core.Game.Systems.Session"/>-specific state transitions
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.IInSceneListener.OnAddedToScene">
            <summary>
            Called after Entity is transition from Staging to In-Scene state
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.IInSceneListener.OnBeforeRemovedFromScene">
            <summary>
            Called before Entity is transition from In-Scene to Staging state
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.Systems.ILoadingPhase">
            <summary>
            <see cref="F:Keen.VRage.Library.Threading.ThreadSafety.InternallySynchronized"/>
            https://docs.google.com/document/d/1EVmK1_2qRYIJwoHGpgta3LTekCtZD7ylXX8-df7oHg0/edit#heading=h.ifpte3m1sh2n
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.Systems.ILoadingPhase.SyncLoading">
            <summary>
            When this flag is set, systems should prefer synchronous loading and processing
            Owning system is asking to have loading done now at the cost of possibly lagging the simulation frame
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.Systems.FixedLoadingPhaseObjectBuilder">
            <summary />
        </member>
        <member name="T:Keen.VRage.Core.Game.Systems.FixedLoadingPhaseObjectBuilder.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.FixedLoadingPhaseObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.FixedLoadingPhaseObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Game.Systems.FixedLoadingPhaseObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.FixedLoadingPhaseObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.FixedLoadingPhaseObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Game.Systems.FixedLoadingPhaseObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.FixedLoadingPhaseObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.FixedLoadingPhaseObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Game.Systems.FixedLoadingPhaseObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.FixedLoadingPhaseObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.FixedLoadingPhaseObjectBuilder.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.FixedLoadingPhaseObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.FixedLoadingPhaseObjectBuilder.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.FixedLoadingPhaseObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Game.Systems.FixedLoadingPhaseObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.FixedLoadingPhaseObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.FixedLoadingPhaseObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Game.Systems.FixedLoadingPhaseObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.FixedLoadingPhaseObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.FixedLoadingPhaseObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Game.Systems.FixedLoadingPhaseObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.FixedLoadingPhaseObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.FixedLoadingPhaseObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Game.Systems.FixedLoadingPhaseObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.FixedLoadingPhaseObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.Systems.FixedLoadingPhaseObjectBuilder.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Systems.FixedLoadingPhaseObjectBuilder.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.FixedLoadingPhaseObjectBuilder.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Systems.FixedLoadingPhaseObjectBuilder.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Game#Systems#FixedLoadingPhaseObjectBuilder}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.FixedLoadingPhaseObjectBuilder.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Game.Systems.FixedLoadingPhaseObjectBuilder.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Game.Systems.FixedLoadingPhaseObjectBuilder.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.Systems.FixedLoadingPhaseObjectBuilder.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.Systems.FixedLoadingPhaseObjectBuilder.TypeInfoHolder.LoadingFramesAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Systems.FixedLoadingPhaseObjectBuilder.TypeInfoHolder.LoadingFramesAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Systems.FixedLoadingPhaseObjectBuilder.TypeInfoHolder.LoadingFramesAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Systems.FixedLoadingPhaseObjectBuilder.TypeInfoHolder.LoadingFramesAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Systems.FixedLoadingPhaseObjectBuilder.TypeInfoHolder.LoadingFramesAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Systems.FixedLoadingPhaseObjectBuilder.TypeInfoHolder.LoadingFramesAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Systems.FixedLoadingPhaseObjectBuilder.TypeInfoHolder.LoadingFramesAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Systems.FixedLoadingPhaseObjectBuilder.TypeInfoHolder.LoadingFramesAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Game.Systems.FixedLoadingPhaseObjectBuilder.TypeInfoHolder.LoadingFramesAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.FixedLoadingPhaseObjectBuilder.TypeInfoHolder.LoadingFramesAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.FixedLoadingPhaseObjectBuilder.TypeInfoHolder.LoadingFramesAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.FixedLoadingPhaseObjectBuilder.TypeInfoHolder.LoadingFramesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.FixedLoadingPhaseObjectBuilder.TypeInfoHolder.LoadingFramesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.FixedLoadingPhaseObjectBuilder.TypeInfoHolder.LoadingFramesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.FixedLoadingPhaseObjectBuilder.TypeInfoHolder.LoadingFramesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Set(System.Object,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.FixedLoadingPhaseObjectBuilder.TypeInfoHolder.LoadingFramesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.FixedLoadingPhaseObjectBuilder.TypeInfoHolder.LoadingFramesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.FixedLoadingPhaseObjectBuilder.TypeInfoHolder.LoadingFramesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Set(System.Byte@,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.FixedLoadingPhaseObjectBuilder.TypeInfoHolder.LoadingFramesAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.FixedLoadingPhaseObjectBuilder.TypeInfoHolder.LoadingFramesAccessor.Set(Keen.VRage.Core.Game.Systems.FixedLoadingPhaseObjectBuilder@,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.FixedLoadingPhaseObjectBuilder.TypeInfoHolder.LoadingFramesAccessor.Get(Keen.VRage.Core.Game.Systems.FixedLoadingPhaseObjectBuilder@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Game.Systems.FixedLoadingPhaseSessionComponent">
            <summary />
        </member>
        <member name="T:Keen.VRage.Core.Game.Systems.IDataOffloadingSnapshot">
            <summary>
            Immutable snapshot of data at the moment of <see cref="M:Keen.VRage.Core.Game.Systems.IDataOffloadingWithSnapshots.CreateSnapshot"/>
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.Systems.IDataOffloadingWithSnapshots">
            <summary>
            <see cref="T:Keen.VRage.Core.Game.Systems.IDataOffloadingSnapshot"/>
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.IDataOffloadingWithSnapshots.CreateSnapshot">
            <summary />
        </member>
        <member name="T:Keen.VRage.Core.Game.Systems.InMemoryDataOffloading">
            <summary>
            Enables offloading and loading of data in memory.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.Systems.IParallelEntityInitSystems">
            <summary>
            Takes care of any management necessary for long-running async Entity Init
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.IParallelEntityInitSystems.OpenAsyncEntitySpawn">
            <summary>
            May be invoked concurrently, but always only one per thread
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.IParallelEntityInitSystems.FinishAsyncEntitySpawn(System.Object)">
            <summary />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.IParallelEntityInitSystems.ActivateContextForThread(System.Object)">
            <summary />
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.IParallelEntityInitSystems.DeactivateContextForThread(System.Object)">
            <summary />
        </member>
        <member name="T:Keen.VRage.Core.Game.Systems.IReplicationContext">
            <summary>
            <see cref="T:Keen.VRage.DCS.Scenes.Scene"/>-specific replication context
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.IReplicationContext.RegisterDynamicComposite(Keen.VRage.DCS.Definitions.EntityCompositeDefinition)">
            <summary>
            Registers a dynamic entity composition. Implementation decides whether it wants to replicate it.
            </summary>
            <param name="composite"></param>
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.IReplicationContext.GetSignalTableBuilderFor(Keen.VRage.DCS.Definitions.EntityCompositeDefinition)">
            <summary>
            Gives change to augment <see cref="T:Keen.VRage.DCS.Components.Entity"/> signal table composition
            whenever new <see cref="T:Keen.VRage.DCS.Components.Entity"/> composition is introduced into the scene.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.IReplicationContext.OnBeforeEntityConstructed(Keen.VRage.DCS.Accessors.DEntityContext,Keen.VRage.DCS.ObjectBuilders.EntityObjectBuilder)">
            <summary>
            Invoked before construction of each new <see cref="T:Keen.VRage.DCS.Components.Entity"/>
            Note that <paramref name="entityObjectBuilder"/> may undergo destructive operations
            during <see cref="T:Keen.VRage.DCS.Components.Entity"/> construction, so it shall not be retained for later use
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.IReplicationContext.OnBeforeEntityAddedToScene(Keen.VRage.DCS.Components.Entity)">
            <summary>
            Invoked before new <see cref="T:Keen.VRage.DCS.Components.Entity"/> has been added to scene.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.IReplicationContext.OnEntityAddedToScene(Keen.VRage.DCS.Components.Entity)">
            <summary>
            Invoked after new <see cref="T:Keen.VRage.DCS.Components.Entity"/> has been added to scene.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.IReplicationContext.OnEntityRemovedFromScene(Keen.VRage.DCS.Components.Entity)">
            <summary>
            Invoked after <see cref="T:Keen.VRage.DCS.Components.Entity"/> has been removed from scene.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.IReplicationContext.OnBeforeEntityDestroyed(Keen.VRage.DCS.Components.Entity)">
            <summary>
            Invoked before <see cref="T:Keen.VRage.DCS.Components.Entity"/> destruction proceeds
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.IReplicationContext.OnEntityDestroyed(Keen.VRage.DCS.Accessors.DEntityContext)">
            <summary>
            Invoked after <see cref="T:Keen.VRage.DCS.Components.Entity"/> destruction.
            Note that is is not safe to read any contents of the destroyed <see cref="T:Keen.VRage.DCS.Components.Entity"/>.
            It can serve only for <see cref="T:System.Collections.Generic.ReferenceEqualityComparer"/> purposes
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.IReplicationContext.FlushReplication">
            <summary>
            TODO: SE2-18450 Shape up API
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.Systems.ISessionConfigurator">
            <summary>
            interface that allows to configure session
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.ISessionConfigurator.ConfigureSession(Keen.VRage.Core.Game.Systems.SessionBuilder)">
            <summary />
        </member>
        <member name="T:Keen.VRage.Core.Game.Systems.IStreamedOutBlobs">
            <summary>
            Enables streamed out blobs to be saved along with a way to get their streams.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.IStreamedOutBlobs.AddKnownBlob(Keen.VRage.Core.Game.Data.Blob,System.Func{Keen.VRage.Library.Threading.Task{System.IO.Stream}})">
            <summary>
            Adds a blob and the getter method for its stream.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.Systems.OnEntityLossAttribute">
            <summary>
            https://docs.google.com/document/d/1EVmK1_2qRYIJwoHGpgta3LTekCtZD7ylXX8-df7oHg0/edit#heading=h.lnsj6vtzefxj
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.OnEntityLossAttribute.#ctor(System.String)">
            <summary>
            https://docs.google.com/document/d/1EVmK1_2qRYIJwoHGpgta3LTekCtZD7ylXX8-df7oHg0/edit#heading=h.lnsj6vtzefxj
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.Systems.OnEntityLoss">
            <summary>
            https://docs.google.com/document/d/1EVmK1_2qRYIJwoHGpgta3LTekCtZD7ylXX8-df7oHg0/edit#heading=h.lnsj6vtzefxj
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.Systems.ServiceDependencyOrderBuildStrategy">
            <summary>
            Build strategy that includes services as dependencies of the entity when determining build order.
            Ensures services on the entity are fully initialized in the correct order
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.Systems.Session">
            <summary>
            Owner of gameplay/simulation Entities and related <see cref="P:Keen.VRage.Core.Game.Systems.Session.Scene"/>.
            Implements gameplay defined Staged -> In-scene Entity transition via <see cref="T:Keen.VRage.Core.Game.Systems.IInSceneListener"/> on Components side and <see cref="T:Keen.VRage.DCS.CoreData.StagingTag"/> on Jobs side.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.Systems.Session.Id">
            <summary>
            Instance Guid used for analytics
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.Systems.Session.OnBeforeEntityAddedToScene">
            <summary>
            These events are automatically cleared upon invocation and Entity destruction
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Game.Systems.Session.OnEntityAddedOrRemoved">
            <summary>
            Follows invocations of <see cref="F:Keen.VRage.Core.Game.Systems.Session.OnEntityAddedToScene"/> and <see cref="F:Keen.VRage.Core.Game.Systems.Session.OnEntityRemovedFromScene"/>,
            but allows you to pre-filter <see cref="T:Keen.VRage.DCS.Components.Entity"/> types you're interested in, making this event targeted and fast.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.Session.Update">
            <summary>
            Tick the Session simulation one frame forward
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.Session.MarkEntityForClose(Keen.VRage.DCS.Components.Entity,System.Boolean)">
            <summary>
            Remove entity from Scene at the end of next frame and execute all end-of-lifetime events
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.Session.MarkEntityForClose(Keen.VRage.DCS.Accessors.DEntity,System.Boolean)">
            <inheritdoc cref="M:Keen.VRage.Core.Game.Systems.Session.MarkEntityForClose(Keen.VRage.DCS.Components.Entity,System.Boolean)"/>
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.Session.AddEntityToScene(Keen.VRage.DCS.Components.Entity)">
            <summary>
            Transition Entity from Staging to In-Scene state.
            Don't use for adding entities that are part of <see cref="T:Keen.VRage.Core.Game.Systems.EntityBundle"/>, use <see cref="M:Keen.VRage.Core.Game.Systems.Session.AddEntityBundleToScene(System.ReadOnlySpan{Keen.VRage.DCS.Components.Entity})"/> instead.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.Session.AddEntityBundleToScene(System.ReadOnlySpan{Keen.VRage.DCS.Components.Entity})">
            <summary>
            Transition Entity bundle from Staging to In-Scene state. All entities will be added to scene with <see cref="T:Keen.VRage.Core.Game.Systems.IEntityBundleListener"/> methods invoked.
            </summary>
            <param name="entities"></param>
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.Session.IsEntityInScene(Keen.VRage.DCS.Components.Entity)">
            <summary>
            Returns true for Entities in In-Scene state, false for Entities in Staging state
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.Session.RemoveEntityFromScene(Keen.VRage.DCS.Components.Entity)">
            <summary>
            Transition Entity from In-Scene state to Staging state.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.Session.RemoveEntityFromScene(Keen.VRage.DCS.Accessors.DEntity)">
            <inheritdoc cref="M:Keen.VRage.Core.Game.Systems.Session.RemoveEntityFromScene(Keen.VRage.DCS.Components.Entity)"/>
        </member>
        <member name="T:Keen.VRage.Core.Game.Systems.Session.InSceneQueryType">
            
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.Session.AreParentsPendingForClose(Keen.VRage.DCS.Components.Entity)">
            <summary>
            Recursively checks the parents for whether they are pending for close.
            </summary>
            <returns>True if any of the parents are pending for close, false if not or if the entity does not have a hierarchy component.</returns>
        </member>
        <member name="M:Keen.VRage.Core.Game.Systems.Session.QueryAllEntities">
            <summary>
            May return duplicates!
            Entities sometimes <see cref="T:Keen.VRage.DCS.CoreData.InstanceBind`1"/> Entities that don't belong to them.
            We assume that all rightful owners are present, plus some fakes may be present -> Duplicates. 
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.Systems.SessionMarshal">
            <summary>
            <see cref="T:Keen.VRage.Core.Game.Systems.Session"/>
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.Systems.SessionBuilder">
            <summary>
            Class that allows to configure session
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.Systems.SessionEntityLifetimeHandler">
            <summary />
        </member>
        <member name="T:Keen.VRage.Core.Game.Systems.SessionEntityLifetimeHandler.ExternalListeners">
            <summary />
        </member>
        <member name="T:Keen.VRage.Core.Game.Systems.SessionExternalServices">
            <summary>
            External services for session.
            Alternative service source so that synthetic Components don't need to be added to <see cref="P:Keen.VRage.Core.Game.Systems.Session.SessionComponents"/>   
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.Systems.SimpleEntitySpawnerSessionComponent">
            <inheritdoc cref="T:Keen.VRage.Core.Game.Systems.IEntitySpawner"/>
        </member>
        <member name="T:Keen.VRage.Core.Game.Migrations.Migrations_0_9_5_104">
            <summary>
            Migrations
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.RuntimeSystems.Components.ComponentTypeUtility">
            <summary>
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.RuntimeSystems.Components.ComponentTypeUtility.IsClientType(System.Type)">
            <summary>
            Returns true if the componentType is located in a client assembly
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.RuntimeSystems.Components.ServerOnlyAttribute">
            <summary>
            Server-only components should be marked with this attribute so editor doesn't let add them to client
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.RuntimeSystems.DebugDraw.DebugDrawAttribute">
            <summary>
            Attribute for Debug Draw jobs
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.RuntimeSystems.DebugDraw.DebugDrawAttribute.#ctor(System.String)">
            <summary>
            Synthetic DebugDraw type will be created
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.RuntimeSystems.DebugDraw.DebugDrawAttribute.#ctor(System.Type,System.String)">
            <summary>
            Real type will be used for DebugDraw
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.RuntimeSystems.DebugDraw.IDebugDrawProvider">
            <summary>
            Interface simplifying use of DebugDraw
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.RuntimeSystems.DebugDraw.IDebugDrawProvider.GlobalBuilder">
            <summary>
            Obtain mesh builder that should be used for all non-parented debug draws. It is not parented to any Entity and it is in world space.
            Use only if you don't have any relevant Entity to draw relative to, otherwise it will desync for predicted Clients.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.RuntimeSystems.DebugDraw.IDebugDrawProvider.GetBuilder(Keen.VRage.DCS.Accessors.DEntity)">
            <summary>
            Get mesh builder for specific entity. It is attached to that entity and is updated per-frame for correct transformation. All debug draws are in local space of the entity.
            Due to the transformation update it has additional constant cost for each entity that uses it.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.RuntimeSystems.DebugDraw.SimpleDebugDrawSessionComponent">
            <summary>
            
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.RuntimeSystems.Heatmaps.HeatmapAccumulator">
            <summary>
            Class which collects information about jobs fot heatmaps profiling
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.RuntimeSystems.Heatmaps.HeatmapSystemSessionComponent">
            <summary>
            SessionComponent to control the rendering of heatmaps
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.RuntimeSystems.Heatmaps.IHeatmapDraw">
            <summary>
            This interface is for drawers of heatmaps for entities with given colors
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Game.RuntimeSystems.Heatmaps.IHeatmapDraw.TryDrawHeatmap(Keen.VRage.DCS.Accessors.DEntity,Keen.VRage.Library.Mathematics.ColorSRGB)">
            <summary>
            Draw heatmap for given entity
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.RuntimeSystems.Heatmaps.ShowHeatmap">
            <summary>
            Denotes that heatmap should be shown for this entity
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Game.Utils.WeakEntityReference">
            <summary>
            Class wrapping up <see cref="P:Keen.VRage.Core.Game.Utils.WeakEntityReference.Entity"/> and making sure that when entity is removed from scene;
            The reference is nulled to avoid referencing dead entities.
            </summary>
            <remarks>Allows for setting a specific session.</remarks>
        </member>
        <member name="P:Keen.VRage.Core.Game.Utils.WeakEntityReference.IsActive">
            <summary>
            If active, reference will attach to the Session and observe the entity's lifetime.
            Inactive reference will not attach to session and will not clear reference when entity is removed from scene.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.Utils.WeakEntityReference.Entity">
            <summary>
            Observed entity or null if it was removed from the <see cref="T:Keen.VRage.DCS.Scenes.Scene"/>.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Game.Utils.WeakEntityReference.OnEntityRemoved">
            <summary>
            Callback when the <see cref="P:Keen.VRage.Core.Game.Utils.WeakEntityReference.Entity"/> is removed from the <see cref="T:Keen.VRage.DCS.Scenes.Scene"/>.
            </summary>
            <remarks>This reference is still valid during the callback.</remarks>
        </member>
        <member name="T:ICollectQueryable">
            <summary>
            Must be by implemented by structs which are arguments to <see cref="T:Keen.VRage.Core.Game.GameSystems.SpaceProbe.ISpaceProbeQueryable"/> queries or preload requests.
            </summary>
        </member>
        <member name="M:ICollectQueryable.AsCollectQuery">
            <summary>
            Generate an ICollectQuery object which can be used to query a <see cref="T:Keen.VRage.Library.Mathematics.Spatial.DynamicBoundingVolumeTree3D"/>.
            </summary>
        </member>
        <member name="T:System.Runtime.CompilerServices.AsyncVoidMethodBuilder">
            <summary>
            Method builder for AsyncVoid methods.
            </summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.AsyncVoidMethodBuilder.Create">
            <summary>
            Create the method builder.
            </summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.AsyncVoidMethodBuilder.Start``1(``0@)">
            <summary>
            Start the state machine.
            </summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.AsyncVoidMethodBuilder.SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine)">
            <summary>
            Set the boxed state machine, unused.
            </summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.AsyncVoidMethodBuilder.SetException(System.Exception)">
            <summary>
            Notify about an exception while executing the state machine.
            </summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.AsyncVoidMethodBuilder.SetResult">
            <summary>
            Signal that the state machine has completed.
            </summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.AsyncVoidMethodBuilder.AwaitOnCompleted``2(``0@,``1@)">
            <summary>
            Await on another task.
            </summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.AsyncVoidMethodBuilder.AwaitUnsafeOnCompleted``2(``0@,``1@)">
            <summary>
            Await on another task.
            </summary>
        </member>
    </members>
</doc>
