<?xml version="1.0"?>
<doc>
    <assembly>
        <name>VRage.UI.Shared</name>
    </assembly>
    <members>
        <member name="T:Keen.VRage.UI.Shared.AvaloniaUILoggerFactory">
            <summary>
            Provides logging through the Avalonia service locator.
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.AvaloniaUILoggerFactory.Initialize">
            <summary>
            Initializes the singleton.
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.AvaloniaUILoggerFactory.GetLogger(System.String)">
            <summary>
            Gets the logger from the Avalonia locator. Throws if the service for ILoggerFactory is not set.
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Controls.BeveledBorder.BeveledBorder">
            <summary>
            A control which decorates a child with a beveled border and background.
            Clone of <see cref="T:Avalonia.Controls.Border"/> with a custom corner renderer, aka <see cref="P:Keen.VRage.UI.Shared.Controls.BeveledBorder.BeveledBorder.Bevel"/>
            </summary>
        </member>
        <member name="F:Keen.VRage.UI.Shared.Controls.BeveledBorder.BeveledBorder.BackgroundProperty">
            <summary>
            Defines the <see cref="P:Keen.VRage.UI.Shared.Controls.BeveledBorder.BeveledBorder.Background"/> property.
            </summary>
        </member>
        <member name="F:Keen.VRage.UI.Shared.Controls.BeveledBorder.BeveledBorder.BorderBrushProperty">
            <summary>
            Defines the <see cref="P:Keen.VRage.UI.Shared.Controls.BeveledBorder.BeveledBorder.BorderBrush"/> property.
            </summary>
        </member>
        <member name="F:Keen.VRage.UI.Shared.Controls.BeveledBorder.BeveledBorder.BorderThicknessProperty">
            <summary>
            Defines the <see cref="P:Keen.VRage.UI.Shared.Controls.BeveledBorder.BeveledBorder.BorderThickness"/> property (asymmetrical borders aren't supported).
            </summary>
        </member>
        <member name="F:Keen.VRage.UI.Shared.Controls.BeveledBorder.BeveledBorder.BevelProperty">
            <summary>
            Equivalents to <see cref="F:Avalonia.Controls.Border.CornerRadiusProperty"/>, Defines the <see cref="P:Keen.VRage.UI.Shared.Controls.BeveledBorder.BeveledBorder.Bevel"/> property.
            </summary>
        </member>
        <member name="F:Keen.VRage.UI.Shared.Controls.BeveledBorder.BeveledBorder.ClampDirectionProperty">
            <summary>
            Defines the <see cref="P:Keen.VRage.UI.Shared.Controls.BeveledBorder.BeveledBorder.Bevel"/> property.
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.BeveledBorder.BeveledBorder.Background">
            <summary>
            Gets or sets a brush with which to paint the background.
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.BeveledBorder.BeveledBorder.BorderBrush">
            <summary>
            Gets or sets a brush with which to paint the border.
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.BeveledBorder.BeveledBorder.BorderThickness">
            <summary>
            Gets or sets the thickness of the border.
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.BeveledBorder.BeveledBorder.Bevel">
            <summary>
            Gets or sets the size of the border beveled corners.
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.BeveledBorder.BeveledBorder.ClampDirection">
            <summary>
            Defines the direction that the content will be clamped inside the bevel
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.BeveledBorder.BeveledBorder.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Keen.VRage.UI.Shared.Controls.BeveledBorder.BeveledBorder"/> class.
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.BeveledBorder.BeveledBorder.MeasureOverride(Avalonia.Size)">
            <summary>
            Measures the control.
            </summary>
            <param name="availableSize">The available size.</param>
            <returns>The desired size of the control.</returns>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.BeveledBorder.BeveledBorder.ArrangeOverride(Avalonia.Size)">
            <summary>
            Arranges the control's child.
            </summary>
            <param name="finalSize">The size allocated to the control.</param>
            <returns>The space taken.</returns>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Controls.BeveledBorder.ClampDirection">
            <summary>
            Clamp direction on <see cref="T:Keen.VRage.UI.Shared.Controls.BeveledBorder.BeveledBorder"/>
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorChangedEventArgs`1">
            <summary>
            Arguments when a color change
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorChangedCompletedEventArgs">
            <summary>
            Argument when a color end changing.
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Controls.ColorPickers.IColorPicker">
            <summary>
            Control to pick a color.
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Controls.ColorPickers.IColorPicker`1">
            <inheritdoc/>
            <typeparam name="T">Color space: RGB / HSV</typeparam>
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.ColorPickers.IColorPicker`1.Color">
            <summary>
            The color that is currently selected.
            </summary>
        </member>
        <member name="E:Keen.VRage.UI.Shared.Controls.ColorPickers.IColorPicker`1.ColorChanged">
            <summary>
            Called when <see cref="P:Keen.VRage.UI.Shared.Controls.ColorPickers.IColorPicker`1.Color"/> property changed.
            </summary>
        </member>
        <member name="E:Keen.VRage.UI.Shared.Controls.ColorPickers.IColorPicker`1.ColorChangedCompleted">
            <summary>
            Called when <see cref="P:Keen.VRage.UI.Shared.Controls.ColorPickers.IColorPicker`1.Color"/> property end changing.
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerBase`1">
            <summary>
            Control to pick a color.
            </summary>
            <typeparam name="T">Color space: RGB / HSV</typeparam>
        </member>
        <member name="F:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerBase`1.IsAlphaVisibleProperty">
            <summary>
            Defines the <see cref="P:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerBase`1.IsAlphaVisible"/> property.
            </summary>
        </member>
        <member name="F:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerBase`1.ColorProperty">
            <summary>
            Defines the <see cref="P:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerBase`1.Color"/> property.
            </summary>
        </member>
        <member name="F:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerBase`1.AutoChangeCompletionProperty">
            <summary>
            Defines the <see cref="P:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerBase`1.AutoChangeCompletion"/> property.
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerBase`1.IsAlphaVisible">
            <summary>
            Should show Alpha controls.
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerBase`1.AutoChangeCompletion">
            <summary>
            Automatically call <see cref="E:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerBase`1.ColorChangedCompleted"/> when <see cref="P:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerBase`1.Color"/> change.
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerBase`1.CreateTransparentBackgroundBrush">
            <summary>
            Create a visual brush grid that can be used as transparent colors background.
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerBase`1.RefreshUI">
            <summary>
            Apply the current <see cref="P:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerBase`1.Color"/> to the UI.
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerButton">
            <summary>
            Color picker button that preview the color and open the default color picker when clicked.
            </summary>
        </member>
        <member name="F:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerButton.PickerTemplateProperty">
            <summary>
            Defines the <see cref="P:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerButton.PickerTemplate"/> property.
            </summary>
        </member>
        <member name="F:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerButton.PopingColorPickerProperty">
            <summary>
            Defines the <see cref="P:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerButton.PopingColorPicker"/> property.
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerButton.PickerTemplate">
            <summary>
            Template to use instead of the <see cref="T:Keen.VRage.UI.Shared.Controls.ColorPickers.DefaultColorPicker"/>.
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerButton.PopingColorPicker">
            <summary>
            Color picker to use in the popup.
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerButton.#ctor">
            <summary>
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerButton.InitializeComponent(System.Boolean)">
            <summary>
            Wires up the controls and optionally loads XAML markup and attaches dev tools (if Avalonia.Diagnostics package is referenced).
            </summary>
            <param name="loadXaml">Should the XAML be loaded into the component.</param>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Controls.ColorPickers.IMultiColorPicker">
            <summary>
            Panel to use when combining multiple <see cref="T:Keen.VRage.UI.Shared.Controls.ColorPickers.IColorPicker`1"/> that use different color spaces.
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.ColorPickers.IMultiColorPicker.ColorSynchronizer">
            <summary>
            The synchronizer to use.
            </summary>
        </member>
        <member name="E:Keen.VRage.UI.Shared.Controls.ColorPickers.IMultiColorPicker.ColorSynchronizerChanged">
            <summary>
            Called when <see cref="P:Keen.VRage.UI.Shared.Controls.ColorPickers.IMultiColorPicker.ColorSynchronizer"/> property changed.
            </summary>
        </member>
        <member name="E:Keen.VRage.UI.Shared.Controls.ColorPickers.IMultiColorPicker.SynchronizedColorChanged">
            <summary>
            Called after the value was changed.
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerGroup">
            <inheritdoc cref="T:Keen.VRage.UI.Shared.Controls.ColorPickers.IMultiColorPicker"/>
        </member>
        <member name="F:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerGroup.ColorSynchronizerProperty">
            <summary>
            Defines the <see cref="P:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerGroup.ColorSynchronizer"/> property.
            </summary>
        </member>
        <member name="F:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerGroup.PaletteProperty">
            <summary>
            Defines the <see cref="P:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerGroup.Palette"/> property.
            </summary>
        </member>
        <member name="F:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerGroup.IsImmutableProperty">
            <summary>
            Defines the <see cref="P:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerGroup.IsImmutable"/> property.
            </summary>
        </member>
        <member name="F:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerGroup.ColorProperty">
            <summary>
            Defines the <see cref="P:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerGroup.Color"/> property.
            </summary>
        </member>
        <member name="F:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerGroup.ColorSRGBProperty">
            <summary>
            Defines the <see cref="P:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerGroup.ColorSRGB"/> property.
            </summary>
        </member>
        <member name="F:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerGroup.ColorHSVProperty">
            <summary>
            Defines the <see cref="P:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerGroup.ColorHSV"/> property.
            </summary>
        </member>
        <member name="F:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerGroup.ColorLinearProperty">
            <summary>
            Defines the <see cref="P:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerGroup.ColorLinear"/> property.
            </summary>
        </member>
        <member name="F:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerGroup.IsAlphaVisibleProperty">
            <summary>
            Defines the <see cref="P:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerGroup.IsAlphaVisible"/> property.
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerGroup.Color">
            <summary>
            The <see cref="T:Avalonia.Media.Color"/> that is currently selected.
            </summary>
            <remarks>Calculated from <see cref="P:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerGroup.ColorHSV"/>.</remarks>
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerGroup.ColorSRGB">
            <summary>
            The <see cref="T:Keen.VRage.Library.Mathematics.ColorSRGB"/> that is currently selected.
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerGroup.ColorHSV">
            <summary>
            The <see cref="T:Keen.VRage.Library.Mathematics.ColorHSV"/> that is currently selected.
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerGroup.ColorLinear">
            <summary>
            The <see cref="T:Keen.VRage.Library.Mathematics.ColorLinear"/> that is currently selected.
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerGroup.IsAlphaVisible">
            <summary>
            Should show Alpha controls.
            </summary>
        </member>
        <member name="E:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerGroup.ColorSRGBChanged">
            <summary>
            Called when <see cref="P:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerGroup.ColorSRGB"/> property changed.
            </summary>
        </member>
        <member name="E:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerGroup.ColorHSVChanged">
            <summary>
            Called when <see cref="P:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerGroup.ColorHSV"/> property changed.
            </summary>
        </member>
        <member name="E:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerGroup.ColorLinearChanged">
            <summary>
            Called when <see cref="P:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerGroup.ColorLinear"/> property changed.
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerHex">
            <summary>
            Hexadecimal (<see cref="T:Keen.VRage.Library.Mathematics.ColorSRGB"/>) Color picker.
            </summary>
        </member>
        <member name="F:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerHex.TextProperty">
            <summary>
            Defines the <see cref="P:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerHex.Text"/> property.
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerHex.Text">
            <summary>
            Determines the text of the Hex control.
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerHex.#ctor">
            <summary>
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerHex.InitializeComponent(System.Boolean)">
            <summary>
            Wires up the controls and optionally loads XAML markup and attaches dev tools (if Avalonia.Diagnostics package is referenced).
            </summary>
            <param name="loadXaml">Should the XAML be loaded into the component.</param>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerImage">
            <summary>
            <see cref="T:Keen.VRage.Library.Mathematics.ColorHSV"/> picker that use an Image to select the color.
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerImage.#ctor">
            <summary>
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerImage.InitializeComponent(System.Boolean)">
            <summary>
            Wires up the controls and optionally loads XAML markup and attaches dev tools (if Avalonia.Diagnostics package is referenced).
            </summary>
            <param name="loadXaml">Should the XAML be loaded into the component.</param>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Controls.ColorPickers.IColorPickerPalette">
            <summary>
            Color picker that show a list of selectable colors.
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.ColorPickers.IColorPickerPalette.Palette">
            <summary>
            The list of colors.
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.ColorPickers.IColorPickerPalette.IsImmutable">
            <summary>
            Should hide controls to add / remove colors
            </summary>
        </member>
        <member name="E:Keen.VRage.UI.Shared.Controls.ColorPickers.IColorPickerPalette.PaletteChanged">
            <summary>
            Called when <see cref="P:Keen.VRage.UI.Shared.Controls.ColorPickers.IColorPickerPalette.Palette"/> property changed.
            </summary>
        </member>
        <member name="E:Keen.VRage.UI.Shared.Controls.ColorPickers.IColorPickerPalette.IsImmutableChanged">
            <summary>
            Called when <see cref="P:Keen.VRage.UI.Shared.Controls.ColorPickers.IColorPickerPalette.IsImmutable"/> property changed.
            </summary>
        </member>
        <member name="E:Keen.VRage.UI.Shared.Controls.ColorPickers.IColorPickerPalette.ColorAdded">
            <summary>
            Called when a color is added by this picker.
            </summary>
        </member>
        <member name="E:Keen.VRage.UI.Shared.Controls.ColorPickers.IColorPickerPalette.ColorRemoved">
            <summary>
            Called when a color is removed by this picker.
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerPalette">
            <summary>
            <see cref="T:Keen.VRage.Library.Mathematics.ColorHSV"/> picker that show a list of selectable colors.
            </summary>
        </member>
        <member name="F:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerPalette.PaletteProperty">
            <summary>
            Defines the <see cref="P:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerPalette.Palette"/> property.
            </summary>
        </member>
        <member name="F:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerPalette.IsImmutableProperty">
            <summary>
            Defines the <see cref="P:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerPalette.IsImmutable"/> property.
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerPalette.InitializeComponent(System.Boolean)">
            <summary>
            Wires up the controls and optionally loads XAML markup and attaches dev tools (if Avalonia.Diagnostics package is referenced).
            </summary>
            <param name="loadXaml">Should the XAML be loaded into the component.</param>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerSecondary">
            <summary>
            <see cref="T:Keen.VRage.Library.Mathematics.ColorHSV"/> picker that can save a color as secondary color.
            </summary>
        </member>
        <member name="F:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerSecondary.SecondaryColorProperty">
            <summary>
            Defines the <see cref="P:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerSecondary.SecondaryColor"/> property.
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerSecondary.SecondaryColor">
            <summary>
            Saved <see cref="P:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerBase`1.Color"/>.
            </summary>
        </member>
        <member name="E:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerSecondary.SecondaryColorChanged">
            <summary>
            Called when <see cref="P:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerSecondary.SecondaryColor"/> property changed.
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerSecondary.#ctor">
            <summary>
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerSecondary.InitializeComponent(System.Boolean)">
            <summary>
            Wires up the controls and optionally loads XAML markup and attaches dev tools (if Avalonia.Diagnostics package is referenced).
            </summary>
            <param name="loadXaml">Should the XAML be loaded into the component.</param>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerSliderBase`1">
            <summary>
            Base class for Slider color picker.
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerSliderBase`1.ToColor(Keen.VRage.Library.Mathematics.Vector4D)">
            <summary>
            Convert 4 members to the color.
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerSliderControl">
            <summary>
            Base control for color with 4 members.
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerSliderControl.BoxToSlider">
            <summary>
            Convert user input to slider value.
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerSliderControl.SliderToBox">
            <summary>
            Get the text to display from the slider value.
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerSliderControl.InitializeComponent(System.Boolean)">
            <summary>
            Wires up the controls and optionally loads XAML markup and attaches dev tools (if Avalonia.Diagnostics package is referenced).
            </summary>
            <param name="loadXaml">Should the XAML be loaded into the component.</param>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerSliderHSV">
            <summary>
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerSliderHSV.InitializeComponent(System.Boolean)">
            <summary>
            Wires up the controls and optionally loads XAML markup and attaches dev tools (if Avalonia.Diagnostics package is referenced).
            </summary>
            <param name="loadXaml">Should the XAML be loaded into the component.</param>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerSliderLinear">
            <summary>
            <see cref="T:Keen.VRage.Library.Mathematics.ColorLinear"/> up down color picker.
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerSliderLinear.InitializeComponent(System.Boolean)">
            <summary>
            Wires up the controls and optionally loads XAML markup and attaches dev tools (if Avalonia.Diagnostics package is referenced).
            </summary>
            <param name="loadXaml">Should the XAML be loaded into the component.</param>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerSliderSRGB">
            <summary>
            
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerSliderSRGB.InitializeComponent(System.Boolean)">
            <summary>
            Wires up the controls and optionally loads XAML markup and attaches dev tools (if Avalonia.Diagnostics package is referenced).
            </summary>
            <param name="loadXaml">Should the XAML be loaded into the component.</param>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerTemplate">
            <summary>
            XAML Template for pickers.
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerTemplate.Content">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerUpDownAlpha">
            <summary>
            <see cref="T:Keen.VRage.Library.Mathematics.ColorHSV"/> picker that can only change A.
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerUpDownAlpha.#ctor">
            <summary>
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerUpDownAlpha.InitializeComponent(System.Boolean)">
            <summary>
            Wires up the controls and optionally loads XAML markup and attaches dev tools (if Avalonia.Diagnostics package is referenced).
            </summary>
            <param name="loadXaml">Should the XAML be loaded into the component.</param>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerUpDownBase`1">
            <summary>
            Base class for Up/Down color picker.
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerUpDownBase`1.ToColor(Keen.VRage.Library.Mathematics.Vector4D)">
            <summary>
            Convert 4 members to the color.
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerUpDownControl">
            <summary>
            Base control for color with 4 members.
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerUpDownControl.#ctor">
            <summary>
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerUpDownControl.InitializeComponent(System.Boolean)">
            <summary>
            Wires up the controls and optionally loads XAML markup and attaches dev tools (if Avalonia.Diagnostics package is referenced).
            </summary>
            <param name="loadXaml">Should the XAML be loaded into the component.</param>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerUpDownHSV">
            <summary>
            <see cref="T:Keen.VRage.Library.Mathematics.ColorHSV"/> up down color picker.
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerUpDownHSV.InitializeComponent(System.Boolean)">
            <summary>
            Wires up the controls and optionally loads XAML markup and attaches dev tools (if Avalonia.Diagnostics package is referenced).
            </summary>
            <param name="loadXaml">Should the XAML be loaded into the component.</param>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerUpDownRGB">
            <summary>
            <see cref="T:Keen.VRage.Library.Mathematics.ColorSRGB"/> up down color picker.
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerUpDownRGB.InitializeComponent(System.Boolean)">
            <summary>
            Wires up the controls and optionally loads XAML markup and attaches dev tools (if Avalonia.Diagnostics package is referenced).
            </summary>
            <param name="loadXaml">Should the XAML be loaded into the component.</param>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorPickerUserControl">
            <summary>
            User control to pick a color.
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorSynchronizerChangedEventArgs">
            <summary>
            Arguments when a color change
            </summary>
        </member>
        <member name="F:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorSynchronizerChangedEventArgs.Source">
            <summary>
            The color space that trigger the event.
            </summary>
        </member>
        <member name="F:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorSynchronizerChangedEventArgs.Changes">
            <summary>
            What color spaces have changed.
            </summary>
        </member>
        <member name="F:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorSynchronizerChangedEventArgs.OldValues">
            <summary>
            Old synchronizer values.
            </summary>
        </member>
        <member name="F:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorSynchronizerChangedEventArgs.NewValues">
            <summary>
            New synchronizer values.
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorSynchronizer">
            <summary>
            Class to synchronize color with minimal loss of informations.
            </summary>
            <remarks>Conversion from <see cref="T:Keen.VRage.Library.Mathematics.ColorLinear"/> are normalized.</remarks>
        </member>
        <member name="E:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorSynchronizer.Lock">
            <summary>
            Called before the values are changed.
            </summary>
        </member>
        <member name="E:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorSynchronizer.ColorChanged">
            <summary>
            Called after the value was changed.
            </summary>
        </member>
        <member name="E:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorSynchronizer.ColorChangedCompleted">
            <summary>
            Called after value change ends.
            </summary>
        </member>
        <member name="E:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorSynchronizer.Unlock">
            <summary>
            Called once every listener was updated by <see cref="E:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorSynchronizer.ColorChanged"/>.
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorSynchronizer.Color">
            <summary>
            Local RGB color.
            </summary>
            <remarks>Setting this value will update the other color spaces.</remarks>
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorSynchronizer.ColorSRGB">
            <summary>
            Local SRGB color.
            </summary>
            <remarks>Setting this value will update the other color spaces.</remarks>
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorSynchronizer.ColorLinear">
            <summary>
            Local linear color.
            </summary>
            <remarks>Setting this value will update the other color spaces.</remarks>
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorSynchronizer.ColorHSV">
            <summary>
            Local HSV color.
            </summary>
            <remarks>Setting this value will update the other color spaces.</remarks>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorSynchronizer.Space">
            <summary>
            Color Space
            </summary>
        </member>
        <member name="F:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorSynchronizer.Space.Ava">
            <summary>
            <see cref="P:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorSynchronizer.Color"/>
            </summary>
        </member>
        <member name="F:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorSynchronizer.Space.SRGB">
            <summary>
            <see cref="P:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorSynchronizer.ColorSRGB"/>
            </summary>
        </member>
        <member name="F:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorSynchronizer.Space.HSV">
            <summary>
            <see cref="P:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorSynchronizer.ColorHSV"/>
            </summary>
        </member>
        <member name="F:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorSynchronizer.Space.Linear">
            <summary>
            <see cref="P:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorSynchronizer.ColorLinear"/>
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorSynchronizer.State">
            <summary>
            State of the Synchronizer.
            </summary>
        </member>
        <member name="F:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorSynchronizer.State.HSV">
            <summary>
            Recorded color.
            </summary>
        </member>
        <member name="F:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorSynchronizer.State.SRGB">
            <summary>
            Recorded color.
            </summary>
        </member>
        <member name="F:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorSynchronizer.State.Linear">
            <summary>
            Recorded color.
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorSynchronizer.State.Color">
            <summary>
            Recorded color.
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.ColorSynchronizer.State.GetChanges(Keen.VRage.UI.Shared.Controls.ColorPickers.ColorSynchronizer.State)">
            <summary>
            Get spaces with different values.
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Controls.ColorPickers.DefaultColorPicker">
            <summary>
            Default color picker
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.DefaultColorPicker.#ctor">
            <summary>
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.DefaultColorPicker.InitializeComponent(System.Boolean)">
            <summary>
            Wires up the controls and optionally loads XAML markup and attaches dev tools (if Avalonia.Diagnostics package is referenced).
            </summary>
            <param name="loadXaml">Should the XAML be loaded into the component.</param>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Controls.ColorPickers.IPaletteColorsProvider">
            <summary>
            Interface to provide a color palette.
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.IPaletteColorsProvider.TryGetPalette(Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColors@,System.Boolean@)">
            <summary>
            Provide the palette to use.
            </summary>
            <param name="palette"><see cref="P:Keen.VRage.UI.Shared.Controls.ColorPickers.IColorPickerPalette.Palette"/></param>
            <param name="isImmutable"><see cref="P:Keen.VRage.UI.Shared.Controls.ColorPickers.IColorPickerPalette.IsImmutable"/></param>
            <returns>True if the palette is available</returns>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Controls.ColorPickers.LinearColorPicker">
            <summary>
            Default <see cref="T:Keen.VRage.Library.Mathematics.ColorLinear"/> picker.
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.LinearColorPicker.InitializeComponent(System.Boolean)">
            <summary>
            Wires up the controls and optionally loads XAML markup and attaches dev tools (if Avalonia.Diagnostics package is referenced).
            </summary>
            <param name="loadXaml">Should the XAML be loaded into the component.</param>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColors">
            <summary>
            List of <see cref="T:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor"/> that can be use as Avalonia resource.
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColors.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColors.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColors.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColors@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColors.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColors.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColors@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColors.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColors.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColors@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColors.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColors.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColors.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColors.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColors.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColors@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColors.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColors.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColors@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColors.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColors.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColors@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColors.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColors.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColors@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColors.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColors.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColors.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColors.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColors.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#UI#Shared#Controls#ColorPickers#PaletteColors}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColors.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColors.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColors.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColors.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor">
            <summary>
            <see cref="T:Keen.VRage.Library.Mathematics.ColorSRGB"/> that can be use as Avalonia resource.
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.H">
            <inheritdoc cref="P:Keen.VRage.Library.Mathematics.ColorHSV.H"/>
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.S">
            <inheritdoc cref="P:Keen.VRage.Library.Mathematics.ColorHSV.S"/>
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.V">
            <inheritdoc cref="P:Keen.VRage.Library.Mathematics.ColorHSV.V"/>
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.A">
            <inheritdoc cref="P:Keen.VRage.Library.Mathematics.ColorSRGB.A"/>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#UI#Shared#Controls#ColorPickers#PaletteColor}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder._colorAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder._colorAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder._colorAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder._colorAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder._colorAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder._colorAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder._colorAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder._colorAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder._colorAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder._colorAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder._colorAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder._colorAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder._colorAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder._colorAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder._colorAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#ColorHSV}#Set(System.Object,Keen.VRage.Library.Mathematics.ColorHSV@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder._colorAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#ColorHSV}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder._colorAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#ColorHSV}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder._colorAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#ColorHSV}#Set(System.Byte@,Keen.VRage.Library.Mathematics.ColorHSV@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder._colorAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder._colorAccessor.Set(Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor@,Keen.VRage.Library.Mathematics.ColorHSV@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder._colorAccessor.Get(Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder.HAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder.HAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder.HAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder.HAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder.HAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder.HAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder.HAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder.HAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder.HAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder.HAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder.HAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder.HAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder.HAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder.HAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder.HAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Object,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder.HAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder.HAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder.HAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Byte@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder.HAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder.HAccessor.Set(Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder.HAccessor.Get(Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder.SAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder.SAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder.SAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder.SAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder.SAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder.SAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder.SAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder.SAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder.SAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder.SAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder.SAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder.SAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder.SAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder.SAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder.SAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Object,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder.SAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder.SAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder.SAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Byte@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder.SAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder.SAccessor.Set(Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder.SAccessor.Get(Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder.VAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder.VAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder.VAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder.VAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder.VAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder.VAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder.VAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder.VAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder.VAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder.VAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder.VAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder.VAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder.VAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder.VAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder.VAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Object,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder.VAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder.VAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder.VAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Byte@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder.VAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder.VAccessor.Set(Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder.VAccessor.Get(Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder.AAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder.AAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder.AAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder.AAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder.AAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder.AAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder.AAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder.AAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder.AAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder.AAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder.AAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder.AAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder.AAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder.AAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder.AAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Object,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder.AAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder.AAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder.AAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Byte@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder.AAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder.AAccessor.Set(Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor.TypeInfoHolder.AAccessor.Get(Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColor@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColorsSerializer">
            <summary>
            Serializer for <see cref="T:Keen.VRage.UI.Shared.Controls.ColorPickers.PaletteColors"/>
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Controls.CustomContextMenu">
            <summary>
            Context menu that cancel delayed action when closed.
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Controls.CustomContextMenuInteractionHandler">
            <summary>
            Override default handle to cancel delayed action.
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Controls.CustomNumericUpDown">
            <summary>
            Custom template style for NumericUpDown
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Controls.CustomSwitchButton">
            <summary>
            Custom switch button
            </summary>
        </member>
        <member name="F:Keen.VRage.UI.Shared.Controls.CustomSwitchButton.OffContentProperty">
            <summary>
            Defines the <see cref="P:Keen.VRage.UI.Shared.Controls.CustomSwitchButton.OffContent"/> property.
            </summary>
        </member>
        <member name="F:Keen.VRage.UI.Shared.Controls.CustomSwitchButton.OffContentTemplateProperty">
            <summary>
            Defines the <see cref="P:Keen.VRage.UI.Shared.Controls.CustomSwitchButton.OffContentTemplate"/> property.
            </summary>
        </member>
        <member name="F:Keen.VRage.UI.Shared.Controls.CustomSwitchButton.OnContentProperty">
            <summary>
            Defines the <see cref="P:Keen.VRage.UI.Shared.Controls.CustomSwitchButton.OnContent"/> property.
            </summary>
        </member>
        <member name="F:Keen.VRage.UI.Shared.Controls.CustomSwitchButton.OnContentTemplateProperty">
            <summary>
            Defines the <see cref="P:Keen.VRage.UI.Shared.Controls.CustomSwitchButton.OnContentTemplate"/> property.
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.CustomSwitchButton.OnContent">
            <summary>
            Gets or Sets the Content that is displayed when in the On State.
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.CustomSwitchButton.OffContent">
            <summary>
            Gets or Sets the Content that is displayed when in the Off State.
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.CustomSwitchButton.OffContentTemplate">
            <summary>
            Gets or Sets the <see cref="T:Avalonia.Controls.Templates.IDataTemplate"/> used to display the <see cref="P:Keen.VRage.UI.Shared.Controls.CustomSwitchButton.OffContent"/>.
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.CustomSwitchButton.OnContentTemplate">
            <summary>
            Gets or Sets the <see cref="T:Avalonia.Controls.Templates.IDataTemplate"/> used to display the <see cref="P:Keen.VRage.UI.Shared.Controls.CustomSwitchButton.OnContent"/>.
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Controls.EditableComboBox">
            <summary>
            
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Controls.FixedPointUpDownValueChangedEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Controls.FixedPointUpDown">
            <summary>
            Numeric up down button for FixedPoint values.
            Source:https://github.com/AvaloniaUI/Avalonia/blob/0.10.18/src/Avalonia.Controls/NumericUpDown/NumericUpDown.cs
            </summary>
        </member>
        <member name="F:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.AllowSpinProperty">
            <summary>
            Defines the <see cref="P:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.AllowSpin"/> property.
            </summary>
        </member>
        <member name="F:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.ButtonSpinnerLocationProperty">
            <summary>
            Defines the <see cref="P:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.ButtonSpinnerLocation"/> property.
            </summary>
        </member>
        <member name="F:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.ShowButtonSpinnerProperty">
            <summary>
            Defines the <see cref="P:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.ShowButtonSpinner"/> property.
            </summary>
        </member>
        <member name="F:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.ClipValueToMinMaxProperty">
            <summary>
            Defines the <see cref="P:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.ClipValueToMinMax"/> property.
            </summary>
        </member>
        <member name="F:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.CultureInfoProperty">
            <summary>
            Defines the <see cref="P:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.CultureInfo"/> property.
            </summary>
        </member>
        <member name="F:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.FormatStringProperty">
            <summary>
            Defines the <see cref="P:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.FormatString"/> property.
            </summary>
        </member>
        <member name="F:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.IncrementProperty">
            <summary>
            Defines the <see cref="P:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.Increment"/> property.
            </summary>
        </member>
        <member name="F:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.IsReadOnlyProperty">
            <summary>
            Defines the <see cref="P:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.IsReadOnly"/> property.
            </summary>
        </member>
        <member name="F:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.MaximumProperty">
            <summary>
            Defines the <see cref="P:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.Maximum"/> property.
            </summary>
        </member>
        <member name="F:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.MinimumProperty">
            <summary>
            Defines the <see cref="P:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.Minimum"/> property.
            </summary>
        </member>
        <member name="F:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.ParsingNumberStyleProperty">
            <summary>
            Defines the <see cref="P:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.ParsingNumberStyle"/> property.
            </summary>
        </member>
        <member name="F:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.TextProperty">
            <summary>
            Defines the <see cref="P:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.Text"/> property.
            </summary>
        </member>
        <member name="F:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.ValueProperty">
            <summary>
            Defines the <see cref="P:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.Value"/> property.
            </summary>
        </member>
        <member name="F:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.WatermarkProperty">
            <summary>
            Defines the <see cref="P:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.Watermark"/> property.
            </summary>
        </member>
        <member name="F:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.HorizontalContentAlignmentProperty">
            <summary>
            Defines the <see cref="P:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.HorizontalContentAlignment"/> property.
            </summary>
        </member>
        <member name="F:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.VerticalContentAlignmentProperty">
            <summary>
            Defines the <see cref="P:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.VerticalContentAlignment"/> property.
            </summary>
        </member>
        <member name="F:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.ValueChangedEvent">
            <summary>
            Defines the <see cref="E:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.ValueChanged"/> event.
            </summary>
        </member>
        <member name="E:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.ValueChanged">
            <summary>
            Raised when the <see cref="P:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.Value"/> changes.
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.Spinner">
            <summary>
            Gets the Spinner template part.
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.TextBox">
            <summary>
            Gets the TextBox template part.
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.AllowSpin">
            <summary>
            Gets or sets the ability to perform increment/decrement operations via the keyboard, button spinners, or mouse wheel.
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.ButtonSpinnerLocation">
            <summary>
            Gets or sets current location of the <see cref="T:Avalonia.Controls.ButtonSpinner"/>.
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.ShowButtonSpinner">
            <summary>
            Gets or sets a value indicating whether the spin buttons should be shown.
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.ClipValueToMinMax">
            <summary>
            Gets or sets if the value should be clipped when minimum/maximum is reached.
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.CultureInfo">
            <summary>
            Gets or sets the current CultureInfo.
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.FormatString">
            <summary>
            Gets or sets the display format of the <see cref="P:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.Value"/>.
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.Increment">
            <summary>
            Gets or sets the amount in which to increment the <see cref="P:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.Value"/>.
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.IsReadOnly">
            <summary>
            Gets or sets if the control is read only.
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.Maximum">
            <summary>
            Gets or sets the maximum allowed value.
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.Minimum">
            <summary>
            Gets or sets the minimum allowed value.
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.ParsingNumberStyle">
            <summary>
            Gets or sets the parsing style (AllowLeadingWhite, Float, AllowHexSpecifier, ...). By default, Any.
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.Text">
            <summary>
            Gets or sets the formatted string representation of the value.
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.Value">
            <summary>
            Gets or sets the value.
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.Watermark">
            <summary>
            Gets or sets the object to use as a watermark if the <see cref="P:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.Value"/> is null.
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.HorizontalContentAlignment">
            <summary>
            Gets or sets the horizontal alignment of the content within the control.
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.VerticalContentAlignment">
            <summary>
            Gets or sets the vertical alignment of the content within the control.
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.#ctor">
            <summary>
            Initializes new instance of <see cref="T:Keen.VRage.UI.Shared.Controls.FixedPointUpDown"/> class.
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Keen.VRage.UI.Shared.Controls.FixedPointUpDown"/> class.
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.OnLostFocus(Avalonia.Interactivity.RoutedEventArgs)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.OnApplyTemplate(Avalonia.Controls.Primitives.TemplateAppliedEventArgs)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.OnKeyDown(Avalonia.Input.KeyEventArgs)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.OnCultureInfoChanged(System.Globalization.CultureInfo,System.Globalization.CultureInfo)">
            <summary>
            Called when the <see cref="P:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.CultureInfo"/> property value changed.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.OnFormatStringChanged(System.String,System.String)">
            <summary>
            Called when the <see cref="P:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.FormatString"/> property value changed.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.OnIncrementChanged(System.Nullable{Keen.VRage.Library.Mathematics.FixedPoint},System.Nullable{Keen.VRage.Library.Mathematics.FixedPoint})">
            <summary>
            Called when the <see cref="P:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.Increment"/> property value changed.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.OnIsReadOnlyChanged(System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Called when the <see cref="P:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.IsReadOnly"/> property value changed.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.OnMaximumChanged(Keen.VRage.Library.Mathematics.FixedPoint,Keen.VRage.Library.Mathematics.FixedPoint)">
            <summary>
            Called when the <see cref="P:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.Maximum"/> property value changed.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.OnMinimumChanged(Keen.VRage.Library.Mathematics.FixedPoint,Keen.VRage.Library.Mathematics.FixedPoint)">
            <summary>
            Called when the <see cref="P:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.Minimum"/> property value changed.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.OnTextChanged(System.String,System.String)">
            <summary>
            Called when the <see cref="P:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.Text"/> property value changed.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.OnValueChanged(Keen.VRage.Library.Mathematics.FixedPoint,Keen.VRage.Library.Mathematics.FixedPoint)">
            <summary>
            Called when the <see cref="P:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.Value"/> property value changed.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.OnCoerceIncrement(Keen.VRage.Library.Mathematics.FixedPoint)">
            <summary>
            Called when the <see cref="P:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.Increment"/> property has to be coerced.
            </summary>
            <param name="baseValue">The value.</param>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.OnCoerceMaximum(Keen.VRage.Library.Mathematics.FixedPoint)">
            <summary>
            Called when the <see cref="P:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.Maximum"/> property has to be coerced.
            </summary>
            <param name="baseValue">The value.</param>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.OnCoerceMinimum(Keen.VRage.Library.Mathematics.FixedPoint)">
            <summary>
            Called when the <see cref="P:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.Minimum"/> property has to be coerced.
            </summary>
            <param name="baseValue">The value.</param>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.OnCoerceValue(Keen.VRage.Library.Mathematics.FixedPoint)">
            <summary>
            Called when the <see cref="P:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.Value"/> property has to be coerced.
            </summary>
            <param name="baseValue">The value.</param>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.OnSpin(Avalonia.Controls.SpinEventArgs)">
            <summary>
            Raises the OnSpin event when spinning is initiated by the end-user.
            </summary>
            <param name="e">The event args.</param>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.RaiseValueChangedEvent(Keen.VRage.Library.Mathematics.FixedPoint,Keen.VRage.Library.Mathematics.FixedPoint)">
            <summary>
            Raises the <see cref="E:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.ValueChanged"/> event.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.ConvertTextToValue(System.String)">
            <summary>
            Converts the formatted text to a value.
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.ConvertValueToText">
            <summary>
            Converts the value to formatted text.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.OnIncrement">
            <summary>
            Called by OnSpin when the spin direction is SpinDirection.Increase.
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.OnDecrement">
            <summary>
            Called by OnSpin when the spin direction is SpinDirection.Decrease.
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.SetValidSpinDirection">
            <summary>
            Sets the valid spin directions.
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.SyncTextAndValueProperties(System.Boolean,System.String)">
            <summary>
            Synchronize <see cref="P:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.Text"/> and <see cref="P:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.Value"/> properties.
            </summary>
            <param name="updateValueFromText">If value should be updated from text.</param>
            <param name="text">The text.</param>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.SyncTextAndValueProperties(System.Boolean,System.String,System.Boolean)">
            <summary>
            Synchronize <see cref="P:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.Text"/> and <see cref="P:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.Value"/> properties.
            </summary>
            <param name="updateValueFromText">If value should be updated from text.</param>
            <param name="text">The text.</param>
            <param name="forceTextUpdate">Force text update.</param>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.ParsePercent(System.String,System.IFormatProvider)">
            <summary>
            Parse percent format text
            </summary>
            <param name="text">Text to parse.</param>
            <param name="cultureInfo">The culture info.</param>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.OnCultureInfoChanged(Avalonia.AvaloniaPropertyChangedEventArgs)">
            <summary>
            Called when the <see cref="P:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.CultureInfo"/> property value changed.
            </summary>
            <param name="e">The event args.</param>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.IncrementChanged(Avalonia.AvaloniaPropertyChangedEventArgs)">
            <summary>
            Called when the <see cref="P:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.Increment"/> property value changed.
            </summary>
            <param name="e">The event args.</param>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.FormatStringChanged(Avalonia.AvaloniaPropertyChangedEventArgs)">
            <summary>
            Called when the <see cref="P:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.FormatString"/> property value changed.
            </summary>
            <param name="e">The event args.</param>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.OnIsReadOnlyChanged(Avalonia.AvaloniaPropertyChangedEventArgs)">
            <summary>
            Called when the <see cref="P:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.IsReadOnly"/> property value changed.
            </summary>
            <param name="e">The event args.</param>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.OnMaximumChanged(Avalonia.AvaloniaPropertyChangedEventArgs)">
            <summary>
            Called when the <see cref="P:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.Maximum"/> property value changed.
            </summary>
            <param name="e">The event args.</param>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.OnMinimumChanged(Avalonia.AvaloniaPropertyChangedEventArgs)">
            <summary>
            Called when the <see cref="P:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.Minimum"/> property value changed.
            </summary>
            <param name="e">The event args.</param>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.OnTextChanged(Avalonia.AvaloniaPropertyChangedEventArgs)">
            <summary>
            Called when the <see cref="P:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.Text"/> property value changed.
            </summary>
            <param name="e">The event args.</param>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.OnValueChanged(Avalonia.AvaloniaPropertyChangedEventArgs)">
            <summary>
            Called when the <see cref="P:Keen.VRage.UI.Shared.Controls.FixedPointUpDown.Value"/> property value changed.
            </summary>
            <param name="e">The event args.</param>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Controls.ItemSearch.ItemSearchInfo">
            <summary>
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ItemSearch.ItemSearchInfo.#ctor(System.String,System.String,System.Boolean,System.String,System.Object)">
            <summary>
            Item for the search dialog
            </summary>
            <param name="name"></param>
            <param name="category"></param>
            <param name="enabled"></param>
            <param name="tooltip"></param>
            <param name="customData"></param>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Controls.ItemSearch.ItemSearchView">
            <summary>
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.ItemSearch.ItemSearchView.InitializeComponent(System.Boolean)">
            <summary>
            Wires up the controls and optionally loads XAML markup and attaches dev tools (if Avalonia.Diagnostics package is referenced).
            </summary>
            <param name="loadXaml">Should the XAML be loaded into the component.</param>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Controls.ItemSearch.ItemSearchViewModel">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Controls.PropertyElements.Math.QuaternionProperty">
            <summary>
            QuaternionProperty
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Controls.PropertyElements.Math.Vector2Property">
            <summary>
            
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Controls.PropertyElements.Math.Vector3IProperty">
            <summary>
            
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Controls.PropertyElements.Math.Vector3Property">
            <summary>
            
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Controls.PropertyElements.Math.Vector4Property">
            <summary>
            
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Controls.ResponsiveGrid">
            <summary>
            Grid-like <see cref="T:Avalonia.Controls.WrapPanel"/>.
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Controls.ResponsiveGrid.CellSizeSelector">
            <param name="currentSize">Read and assign the control size if the selector match</param>
            <param name="control"></param>
            <returns>If the selection should continue</returns>
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.ResponsiveGrid.Method">
            <inheritdoc cref="T:Keen.VRage.UI.Shared.Controls.CellSizeMethod"/>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Controls.CellSizeMethod">
            <summary>
            How the cell size should be selected.
            </summary>
        </member>
        <member name="F:Keen.VRage.UI.Shared.Controls.CellSizeMethod.UseFirstControlSize">
            <summary>
            Read the first control size and use it for all other control.
            </summary>
            <remarks>Is is the best if all controls have the same size.</remarks>
        </member>
        <member name="F:Keen.VRage.UI.Shared.Controls.CellSizeMethod.UseLargestControlSize">
            <summary>
            Read all control and select the largest one for the size.
            </summary>
        </member>
        <member name="F:Keen.VRage.UI.Shared.Controls.CellSizeMethod.UseSmallestControlSize">
            <summary>
            Read all control and select the smalest one for the size.
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Controls.SelectionBox">
            <summary>
            Control used to draw a Selection Box
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Controls.SmartFixedPointSpinButton">
            <summary>
            Smart Spin button implementation for FixedPoints
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Controls.SmartSpinButton">
            <summary>
            
            </summary>
        </member>
        <member name="F:Keen.VRage.UI.Shared.Controls.SmartSpinButton.AccentColorProperty">
            <summary>
            Defines the <see cref="P:Keen.VRage.UI.Shared.Controls.SmartSpinButton.AccentColor"/> property.
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Controls.SmartSpinner">
            <summary>
            
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Controls.StretchedWrapPanel">
            <summary>
            A custom WrapPanel that stretches its items to full width
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.Controls.StretchedWrapPanel.StretchLastRow">
            <summary>
            If true, the last row will be stretched to occupy remaining space
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.StretchedWrapPanel.CreateRows(Avalonia.Size,System.Boolean)">
            <summary>
            Creates a dictionary of rows of controls that fit the width
            </summary>
            <param name="availableSize"></param>
            <param name="accumulateChilds"></param>
            <returns></returns>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Controls.TypeSearch.PreciseTextSearcher">
            <summary>
            
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.TypeSearch.PreciseTextSearcher.#ctor(Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Constructor for using this class as Editor's service
            </summary>
            <param name="loggerFactory"></param>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.TypeSearch.PreciseTextSearcher.#ctor">
            <summary>
            Default constructor for using this class as UI's service
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.TypeSearch.PreciseTextSearcher.Search``1(System.Collections.Generic.IEnumerable{``0},System.String,System.Func{``0,System.Collections.Generic.IEnumerable{System.String}},System.Collections.Generic.IList{``0},System.StringComparison)">
            <summary>
            Searches the input enumeration for items matching all the worlds specified in search query, and adding them
            to the <paramref name="results"/> collection
            </summary>
            <param name="source">The source enumeration of items</param>
            <param name="searchQuery">The search query, can be multiple worlds split by whitespace charcters</param>
            <param name="itemTextFunc">The function for translating item to a string representation to be used for search</param>
            <param name="results">The list that will be filled with matched items</param>
            <param name="stringComparison">The comparison used when comparing the search words against item's key</param>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Controls.TypeSearch.TypeSearchView">
            <summary>
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.TypeSearch.TypeSearchView.InitializeComponent(System.Boolean)">
            <summary>
            Wires up the controls and optionally loads XAML markup and attaches dev tools (if Avalonia.Diagnostics package is referenced).
            </summary>
            <param name="loadXaml">Should the XAML be loaded into the component.</param>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Controls.TypeSearch.TypeSearchViewModel">
            <summary>
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Controls.TypeSearch.TypeSearchViewModel.ShowInCreationMenu(System.Type)">
            <summary>
            Should the type be shown in the creation menu?
            This is determined by the TypeSearchInfo attribute which can be inherited from base types when Inherited is set to true
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Controls.VectorUpDown.Vector2UpDown">
            <summary>
            
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Controls.VectorUpDown.Vector3UpDown">
            <summary>
            
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Controls.VectorUpDown.Vector4UpDown">
            <summary>
            
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Converters.BoolToRadiusConverter">
            <summary>
            Boolean to radius converter
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Converters.BoolToSwitchConverter">
            <summary>
            Allow if condition in axaml. First input should be boolean.
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Converters.BracketedStringConverter">
            <summary>
            BracketedStringConverter
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Converters.CamelCaseToClearTextConverter">
            <summary>
            Convert a Camel Case text to a readable text.
            'ColorSRGBPropertyElement' -> 'Color SRGB Property Element'
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Converters.ColorHSVToColorConverter">
            <summary>
            Convert <see cref="T:Keen.VRage.Library.Mathematics.ColorHSV"/> to <see cref="T:Avalonia.Media.Color"/>.
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Converters.ColorSRGBToColorConverter">
            <summary>
            Convert <see cref="T:Keen.VRage.Library.Mathematics.ColorSRGB"/> to <see cref="T:Avalonia.Media.Color"/>.
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Converters.ColorToColorHSVConverter">
            <summary>
            Convert <see cref="T:Avalonia.Media.Color"/> to <see cref="T:Keen.VRage.Library.Mathematics.ColorHSV"/>.
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Converters.ColorToColorSRGBonverter">
            <summary>
            Convert <see cref="T:Avalonia.Media.Color"/> to <see cref="T:Keen.VRage.Library.Mathematics.ColorSRGB"/>.
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Converters.ColorToContrastColorConverter">
            <summary>
            Color to contrasted foreground color converter
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Converters.ColorToSolidBrushConverter">
            <summary>
            Convert <see cref="T:Keen.VRage.Library.Mathematics.ColorHSV"/>, <see cref="T:Avalonia.Media.Color"/>, <see cref="T:Keen.VRage.Library.Mathematics.ColorSRGB"/>, <see cref="T:Keen.VRage.Library.Mathematics.ColorLinear"/> 
            to <see cref="T:Avalonia.Media.SolidColorBrush"/>.
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Converters.CustomCharWrappingTextConverter">
            <summary>
            Add one "Word joiner" or "Zero-With" character to wrap at custom characters.
            https://www.unicode.org/reports/tr14/tr14-37.html#WordSeparators
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Converters.CustomCharWrappingTextConverter.IsCustomWrappingCharacter(System.Char)">
            <returns>If the given character is used to break or glue words</returns>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Converters.CustomCharWrappingTextConverter.LastIndexOf(System.String,System.String,System.StringComparison,System.Int32@,System.Int32@)">
            <summary>
            Custom implementation to ignore characters used for custom wrapping.
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Converters.CustomTextConverters">
            <summary>
            </summary>
        </member>
        <member name="F:Keen.VRage.UI.Shared.Converters.CustomTextConverters.WordWrapping">
            <summary>
            Add one "Zero-With" character between word.
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Converters.EnumFlagValueConverter">
            <summary>
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Converters.EnumFlagValueConverter.Convert(System.Collections.Generic.IList{System.Object},System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Converters.EnumIsFlagsConverter">
            <summary>
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Converters.EnumIsFlagsConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Converters.EnumIsFlagsConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            </summary>    
        </member>
        <member name="T:Keen.VRage.UI.Shared.Converters.EnumIsNotFlagsConverter">
            <summary>
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Converters.EnumIsNotFlagsConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Converters.EnumIsNotFlagsConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            </summary>    
        </member>
        <member name="T:Keen.VRage.UI.Shared.Converters.EnumToBooleanConverter">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Converters.EnumToBooleanConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Converters.EnumToBooleanConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="T:Keen.VRage.UI.Shared.Converters.EnumToStringConverter">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Converters.EnumToValuesConverter">
            <summary>
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Converters.EnumToValuesConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Converters.EnumToValuesConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            </summary>    
        </member>
        <member name="T:Keen.VRage.UI.Shared.Converters.ExtensionConverter">
            <summary>
            
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Converters.IndentToDictionaryMarginConverter">
            <summary>
            
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Converters.IndentToDictionaryPaddingConverter">
            <summary>
            
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Converters.IndentToLeftMargin">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Converters.IndentToMarginConverter">
            <summary>
            
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Converters.IndentToPaddingConverter">
            <summary>
            
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Converters.IntConverters">
            <summary>
            </summary>
        </member>
        <member name="F:Keen.VRage.UI.Shared.Converters.IntConverters.IsZero">
            <summary>
            Returns true if value is zero
            </summary>
        </member>
        <member name="F:Keen.VRage.UI.Shared.Converters.IntConverters.IsNotZero">
            <summary>
            Returns true if value is not zero
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Converters.ListConverters">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Converters.NumberConverterUtils">
            <summary>
            Util to be used by numerical Converters 
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Converters.NumberRoundingConverter">
            <summary>
            Converter for rounding numbers to a specified number of decimals.
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Converters.NumberToGridLengthConverter">
            <summary>
            Convert <see cref="T:System.IConvertible"/> to <see cref="T:Avalonia.Controls.GridLength"/>.
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Converters.PercentageConverter">
            <summary>
            This converter is used to convert the number into a string representing a % (percentage) or the percentage number itself if target type is <see cref="T:System.Int32"/>, <see cref="T:System.Single"/> or <see cref="T:System.Double"/>.
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Converters.ToDegrees">
            <summary>
            Converter radians to degrees.
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Converters.ToolTipIsNotNullOrEmptyConverter">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Converters.ToolTipIsNotNullOrEmptyConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.Converters.ToolTipIsNotNullOrEmptyConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="T:Keen.VRage.UI.Shared.Converters.ToRadian">
            <summary>
            Converter degrees to radians.
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Converters.RichTextToInlinesConverter">
            <summary>
            Convert HTML text to <see cref="T:Avalonia.Controls.Documents.Inline"/>
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Converters.RichTextToInlinesConverter.CreateStylizedText(System.String,System.String)">
            <returns>An inline that correspond to a text with a style applied.</returns>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Converters.XmlToRichTextConverter">
            <summary>
            return a <see cref="T:System.String"/> or <see cref="T:Avalonia.Controls.Documents.InlineCollection"/> with the tooltips respecting cref, br, new lines and dots  
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.CustomUILoggerFactory">
            <summary>
            Inheriting implementations give different projects to implement how they will provide logging to the UI.
            It has to be explicitly set by the running process.
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.CustomUILoggerFactory.GetLogger(System.String)">
            <summary>
            Provides a logger instance to the calling object.
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.DesignData.TestData">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.DesignData.TestData.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.TestData.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.TestData.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.UI.Shared.DesignData.TestData@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.TestData.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.TestData.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.UI.Shared.DesignData.TestData@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.TestData.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.TestData.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.UI.Shared.DesignData.TestData@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.TestData.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.TestData.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.TestData.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.TestData.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.TestData.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.UI.Shared.DesignData.TestData@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.TestData.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.TestData.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.UI.Shared.DesignData.TestData@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.TestData.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.TestData.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.UI.Shared.DesignData.TestData@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.TestData.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.TestData.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.UI.Shared.DesignData.TestData@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.TestData.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.UI.Shared.DesignData.TestData.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.DesignData.TestData.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.TestData.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.DesignData.TestData.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#UI#Shared#DesignData#TestData}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.TestData.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.UI.Shared.DesignData.TestData.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.UI.Shared.DesignData.TestData.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.UI.Shared.DesignData.TestData.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.DesignData.TestData.TypeInfoHolder.IntValueAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.DesignData.TestData.TypeInfoHolder.IntValueAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.DesignData.TestData.TypeInfoHolder.IntValueAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.DesignData.TestData.TypeInfoHolder.IntValueAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.DesignData.TestData.TypeInfoHolder.IntValueAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.DesignData.TestData.TypeInfoHolder.IntValueAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.DesignData.TestData.TypeInfoHolder.IntValueAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.DesignData.TestData.TypeInfoHolder.IntValueAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.DesignData.TestData.TypeInfoHolder.IntValueAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.TestData.TypeInfoHolder.IntValueAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.TestData.TypeInfoHolder.IntValueAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.TestData.TypeInfoHolder.IntValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.TestData.TypeInfoHolder.IntValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.TestData.TypeInfoHolder.IntValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.TestData.TypeInfoHolder.IntValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Set(System.Object,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.TestData.TypeInfoHolder.IntValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.TestData.TypeInfoHolder.IntValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.TestData.TypeInfoHolder.IntValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Set(System.Byte@,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.TestData.TypeInfoHolder.IntValueAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.TestData.TypeInfoHolder.IntValueAccessor.Set(Keen.VRage.UI.Shared.DesignData.TestData@,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.TestData.TypeInfoHolder.IntValueAccessor.Get(Keen.VRage.UI.Shared.DesignData.TestData@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.DesignData.TestData.TypeInfoHolder.StringValueAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.DesignData.TestData.TypeInfoHolder.StringValueAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.DesignData.TestData.TypeInfoHolder.StringValueAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.DesignData.TestData.TypeInfoHolder.StringValueAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.DesignData.TestData.TypeInfoHolder.StringValueAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.DesignData.TestData.TypeInfoHolder.StringValueAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.DesignData.TestData.TypeInfoHolder.StringValueAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.DesignData.TestData.TypeInfoHolder.StringValueAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.DesignData.TestData.TypeInfoHolder.StringValueAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.TestData.TypeInfoHolder.StringValueAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.TestData.TypeInfoHolder.StringValueAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.TestData.TypeInfoHolder.StringValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.TestData.TypeInfoHolder.StringValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.TestData.TypeInfoHolder.StringValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.TestData.TypeInfoHolder.StringValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Object,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.TestData.TypeInfoHolder.StringValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.TestData.TypeInfoHolder.StringValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.TestData.TypeInfoHolder.StringValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Byte@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.TestData.TypeInfoHolder.StringValueAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.TestData.TypeInfoHolder.StringValueAccessor.Set(Keen.VRage.UI.Shared.DesignData.TestData@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.TestData.TypeInfoHolder.StringValueAccessor.Get(Keen.VRage.UI.Shared.DesignData.TestData@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.DesignData.TestData.TypeInfoHolder.WrappedObjectAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.DesignData.TestData.TypeInfoHolder.WrappedObjectAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.DesignData.TestData.TypeInfoHolder.WrappedObjectAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.DesignData.TestData.TypeInfoHolder.WrappedObjectAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.DesignData.TestData.TypeInfoHolder.WrappedObjectAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.DesignData.TestData.TypeInfoHolder.WrappedObjectAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.DesignData.TestData.TypeInfoHolder.WrappedObjectAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.DesignData.TestData.TypeInfoHolder.WrappedObjectAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.DesignData.TestData.TypeInfoHolder.WrappedObjectAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.TestData.TypeInfoHolder.WrappedObjectAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.TestData.TypeInfoHolder.WrappedObjectAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.TestData.TypeInfoHolder.WrappedObjectAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.TestData.TypeInfoHolder.WrappedObjectAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.TestData.TypeInfoHolder.WrappedObjectAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.TestData.TypeInfoHolder.WrappedObjectAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#UI#Shared#DesignData#WrappedClass}#Set(System.Object,Keen.VRage.UI.Shared.DesignData.WrappedClass@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.TestData.TypeInfoHolder.WrappedObjectAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#UI#Shared#DesignData#WrappedClass}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.TestData.TypeInfoHolder.WrappedObjectAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#UI#Shared#DesignData#WrappedClass}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.TestData.TypeInfoHolder.WrappedObjectAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#UI#Shared#DesignData#WrappedClass}#Set(System.Byte@,Keen.VRage.UI.Shared.DesignData.WrappedClass@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.TestData.TypeInfoHolder.WrappedObjectAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.TestData.TypeInfoHolder.WrappedObjectAccessor.Set(Keen.VRage.UI.Shared.DesignData.TestData@,Keen.VRage.UI.Shared.DesignData.WrappedClass@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.TestData.TypeInfoHolder.WrappedObjectAccessor.Get(Keen.VRage.UI.Shared.DesignData.TestData@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.UI.Shared.DesignData.WrappedClass">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.DesignData.WrappedClass.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.WrappedClass.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.WrappedClass.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.UI.Shared.DesignData.WrappedClass@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.WrappedClass.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.WrappedClass.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.UI.Shared.DesignData.WrappedClass@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.WrappedClass.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.WrappedClass.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.UI.Shared.DesignData.WrappedClass@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.WrappedClass.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.WrappedClass.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.WrappedClass.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.WrappedClass.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.WrappedClass.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.UI.Shared.DesignData.WrappedClass@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.WrappedClass.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.WrappedClass.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.UI.Shared.DesignData.WrappedClass@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.WrappedClass.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.WrappedClass.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.UI.Shared.DesignData.WrappedClass@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.WrappedClass.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.WrappedClass.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.UI.Shared.DesignData.WrappedClass@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.WrappedClass.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.UI.Shared.DesignData.WrappedClass.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.DesignData.WrappedClass.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.WrappedClass.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.DesignData.WrappedClass.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#UI#Shared#DesignData#WrappedClass}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.WrappedClass.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.UI.Shared.DesignData.WrappedClass.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.UI.Shared.DesignData.WrappedClass.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.UI.Shared.DesignData.WrappedClass.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.DesignData.WrappedClass.TypeInfoHolder.IntValueAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.DesignData.WrappedClass.TypeInfoHolder.IntValueAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.DesignData.WrappedClass.TypeInfoHolder.IntValueAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.DesignData.WrappedClass.TypeInfoHolder.IntValueAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.DesignData.WrappedClass.TypeInfoHolder.IntValueAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.DesignData.WrappedClass.TypeInfoHolder.IntValueAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.DesignData.WrappedClass.TypeInfoHolder.IntValueAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.DesignData.WrappedClass.TypeInfoHolder.IntValueAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.DesignData.WrappedClass.TypeInfoHolder.IntValueAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.WrappedClass.TypeInfoHolder.IntValueAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.WrappedClass.TypeInfoHolder.IntValueAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.WrappedClass.TypeInfoHolder.IntValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.WrappedClass.TypeInfoHolder.IntValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.WrappedClass.TypeInfoHolder.IntValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.WrappedClass.TypeInfoHolder.IntValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Set(System.Object,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.WrappedClass.TypeInfoHolder.IntValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.WrappedClass.TypeInfoHolder.IntValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.WrappedClass.TypeInfoHolder.IntValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Set(System.Byte@,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.WrappedClass.TypeInfoHolder.IntValueAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.WrappedClass.TypeInfoHolder.IntValueAccessor.Set(Keen.VRage.UI.Shared.DesignData.WrappedClass@,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.WrappedClass.TypeInfoHolder.IntValueAccessor.Get(Keen.VRage.UI.Shared.DesignData.WrappedClass@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.UI.Shared.DesignData.SliderDesignData">
            <summary>
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.DesignData.SliderDesignData.SliderViewModel">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.DesignData.SliderData">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.DesignData.SliderData.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.SliderData.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.SliderData.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.UI.Shared.DesignData.SliderData@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.SliderData.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.SliderData.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.UI.Shared.DesignData.SliderData@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.SliderData.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.SliderData.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.UI.Shared.DesignData.SliderData@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.SliderData.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.SliderData.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.SliderData.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.SliderData.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.SliderData.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.UI.Shared.DesignData.SliderData@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.SliderData.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.SliderData.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.UI.Shared.DesignData.SliderData@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.SliderData.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.SliderData.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.UI.Shared.DesignData.SliderData@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.SliderData.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.SliderData.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.UI.Shared.DesignData.SliderData@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.SliderData.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.UI.Shared.DesignData.SliderData.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.DesignData.SliderData.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.SliderData.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.DesignData.SliderData.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#UI#Shared#DesignData#SliderData}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.SliderData.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.UI.Shared.DesignData.SliderData.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.UI.Shared.DesignData.SliderData.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.UI.Shared.DesignData.SliderData.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.DesignData.SliderData.TypeInfoHolder.ValueAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.DesignData.SliderData.TypeInfoHolder.ValueAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.DesignData.SliderData.TypeInfoHolder.ValueAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.DesignData.SliderData.TypeInfoHolder.ValueAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.DesignData.SliderData.TypeInfoHolder.ValueAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.DesignData.SliderData.TypeInfoHolder.ValueAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.DesignData.SliderData.TypeInfoHolder.ValueAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.DesignData.SliderData.TypeInfoHolder.ValueAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.DesignData.SliderData.TypeInfoHolder.ValueAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.SliderData.TypeInfoHolder.ValueAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.SliderData.TypeInfoHolder.ValueAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.SliderData.TypeInfoHolder.ValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.SliderData.TypeInfoHolder.ValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.SliderData.TypeInfoHolder.ValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.SliderData.TypeInfoHolder.ValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Object,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.SliderData.TypeInfoHolder.ValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.SliderData.TypeInfoHolder.ValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.SliderData.TypeInfoHolder.ValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Byte@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.SliderData.TypeInfoHolder.ValueAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.SliderData.TypeInfoHolder.ValueAccessor.Set(Keen.VRage.UI.Shared.DesignData.SliderData@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.DesignData.SliderData.TypeInfoHolder.ValueAccessor.Get(Keen.VRage.UI.Shared.DesignData.SliderData@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.UI.Shared.Events.DevToolsStateChangeEventArgs">
            <summary>
            Event args for DevToolsStateChange event
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Events.SelectionBoxEventArgs">
            <summary>
            Event related to the SelectionBox Control
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.Events.SelectionBoxEventArgs.Rectangle">
            <summary>
            Boundings that was selected during the event.
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.Events.SelectionBoxEventArgs.KeyModifiers">
            <summary>
            Key modifiers that were pressed during the event.
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Extensions.AvaloniaControlExtensions">
            <summary>
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Extensions.AvaloniaControlExtensions.FindParentOfType``1(Avalonia.Controls.Control)">
            <summary>
            Recursively searches for parent control of Type T
            </summary>
            <typeparam name="T"></typeparam>
            <param name="control"></param>
            <returns></returns>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Extensions.AvaloniaControlExtensions.FindChildOfType``1(Avalonia.Controls.Control,System.String)">
            <summary>
            Recursively searches for child control of Type T with optional name
            </summary>
            <typeparam name="T"></typeparam>
            <param name="control"></param>
            <param name="name">The name of the control. If empty, no name comparison is done</param>
            <returns></returns>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Extensions.AvaloniaControlExtensions.FindChildrenOfType``1(Avalonia.Controls.Control,Keen.VRage.UI.Shared.Extensions.RecursiveSearchMode)">
            <summary>
            </summary>
            <typeparam name="T"></typeparam>
            <param name="control"></param>
            <param name="mode"></param>
            <returns></returns>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Extensions.AvaloniaControlExtensions.FindChildOfTypeWithDataContext``1(Avalonia.Controls.Control,System.Object,System.String)">
            <summary>
            Recursively searches for child control of Type <typeparamref name="T"/> with DataContext <paramref name="dataContext"/>
            </summary>
            <typeparam name="T"></typeparam>
            <param name="control"></param>
            <param name="dataContext"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Extensions.AvaloniaControlExtensions.IsAncestorOf(Avalonia.Controls.Control,Avalonia.Controls.Control)">
            <summary>
            Checks if a <see cref="T:Avalonia.Controls.Control"/> is an ascendant of <paramref name="child"/>
            </summary>
            <param name="ascendant"></param>
            <param name="child"></param>
            <returns></returns>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Extensions.RecursiveSearchMode">
            <summary>
            </summary>
        </member>
        <member name="F:Keen.VRage.UI.Shared.Extensions.RecursiveSearchMode.Disabled">
            <summary>
            Doesn't go recursive.
            </summary>
        </member>
        <member name="F:Keen.VRage.UI.Shared.Extensions.RecursiveSearchMode.StopOnHit">
            <summary>
            Go recursive except if parent does hit search filter.
            </summary>
        </member>
        <member name="F:Keen.VRage.UI.Shared.Extensions.RecursiveSearchMode.ContinueOnHit">
            <summary>
            Go recursive on all the tree.
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Extensions.AvaloniaListExtensions">
            <summary>
            <see cref="T:Avalonia.Collections.AvaloniaList`1"/>
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Extensions.AvaloniaMathExtensions">
            <summary>
            A collection of helper methods for comparing points, lines and rectangles in 2D space
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Extensions.AvaloniaMathExtensions.ContainsSegments(Avalonia.Rect,System.Collections.Generic.IEnumerable{System.ValueTuple{Avalonia.Point,Avalonia.Point}})">
            <summary>
            </summary>
            <param name="rect"></param>
            <param name="lineSegments"></param>
            <returns></returns>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Extensions.AvaloniaMathExtensions.ToAvalonia(Keen.VRage.Library.Mathematics.ColorSRGB)">
            <summary>
            Cast to <see cref="T:Avalonia.Media.Color"/>.
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Extensions.AvaloniaMathExtensions.ToAvalonia(Keen.VRage.Library.Mathematics.ColorLinear)">
            <inheritdoc cref="M:Keen.VRage.UI.Shared.Extensions.AvaloniaMathExtensions.ToAvalonia(Keen.VRage.Library.Mathematics.ColorSRGB)"/>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Extensions.AvaloniaMathExtensions.ToAvalonia(Keen.VRage.Library.Mathematics.ColorHSV)">
            <inheritdoc cref="M:Keen.VRage.UI.Shared.Extensions.AvaloniaMathExtensions.ToAvalonia(Keen.VRage.Library.Mathematics.ColorSRGB)"/>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Extensions.AvaloniaMathExtensions.ToSRGB(Avalonia.Media.Color)">
            <summary>
            Cast to <see cref="T:Keen.VRage.Library.Mathematics.ColorSRGB"/>.
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Extensions.AvaloniaMathExtensions.ToLinear(Avalonia.Media.Color)">
            <summary>
            Cast to <see cref="T:Keen.VRage.Library.Mathematics.ColorLinear"/>.
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Extensions.AvaloniaMathExtensions.ToHSV(Avalonia.Media.Color)">
            <summary>
            Cast to <see cref="T:Keen.VRage.Library.Mathematics.ColorHSV"/>.
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Extensions.AvaloniaMathExtensions.ToPoint(Keen.VRage.Library.Mathematics.Vector2D)">
            <summary>
            Cast to <see cref="T:Avalonia.Point"/>.
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Extensions.AvaloniaMathExtensions.ToSize(Keen.VRage.Library.Mathematics.Vector2D)">
            <summary>
            Cast to <see cref="T:Avalonia.Size"/>.
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Extensions.AvaloniaMathExtensions.ToRect(Keen.VRage.Library.Mathematics.BoundingBox2D)">
            <summary>
            Cast to <see cref="T:Avalonia.Rect"/>.
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Extensions.AvaloniaMathExtensions.ToVector2(Avalonia.Point)">
            <summary>
            Cast to <see cref="T:Keen.VRage.Library.Mathematics.Vector2D"/>.
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Extensions.AvaloniaMathExtensions.ToBoundingBox(Avalonia.Rect)">
            <summary>
            Cast to <see cref="T:Keen.VRage.Library.Mathematics.BoundingBox2D"/>.
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Extensions.AvaloniaStorageProviderHelper">
            <summary>
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Extensions.AvaloniaStorageProviderHelper.TryGetFilesFromPathAsync(Avalonia.Platform.Storage.IStorageProvider,System.Collections.Generic.IEnumerable{System.String})">
            <inheritdoc cref="M:Avalonia.Platform.Storage.IStorageProvider.TryGetFileFromPathAsync(System.Uri)"/>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Extensions.AvaloniaStorageProviderHelper.TryGetFoldersFromPathAsync(Avalonia.Platform.Storage.IStorageProvider,System.Collections.Generic.IEnumerable{System.String})">
            <inheritdoc cref="M:Avalonia.Platform.Storage.IStorageProvider.TryGetFolderFromPathAsync(System.Uri)"/>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Extensions.AvaloniaStorageProviderHelper.TryGetItemsFromPathAsync(Avalonia.Platform.Storage.IStorageProvider,System.Collections.Generic.IEnumerable{System.String})">
            <inheritdoc cref="M:Avalonia.Platform.Storage.IStorageProvider.TryGetFileFromPathAsync(System.Uri)"/>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Extensions.DispatcherExtensions">
            <summary>
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Extensions.DispatcherExtensions.MoveTo(Avalonia.Threading.Dispatcher,System.Nullable{Avalonia.Threading.DispatcherPriority},System.Threading.CancellationToken)">
            <summary>
            Move the execution of an asynchronous method to this <paramref name="dispatcher"/>.
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Extensions.DispatcherExtensions.AwaitToken">
            <summary>
            The <see cref="T:Keen.VRage.UI.Shared.Extensions.DispatcherExtensions.AwaitToken"/> is a custom awaitable type that allows the user to move the execution flow of an asynchronous method
            to the thread that processes the <paramref name="dispatcher"/>.
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Extensions.DispatcherExtensions.AwaitToken.#ctor(Avalonia.Threading.Dispatcher,System.Nullable{Avalonia.Threading.DispatcherPriority},System.Threading.CancellationToken)">
            <summary>
            The <see cref="T:Keen.VRage.UI.Shared.Extensions.DispatcherExtensions.AwaitToken"/> is a custom awaitable type that allows the user to move the execution flow of an asynchronous method
            to the thread that processes the <paramref name="dispatcher"/>.
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.Extensions.DispatcherExtensions.AwaitToken.IsCompleted">
            <inheritdoc cref="M:Avalonia.Threading.Dispatcher.CheckAccess"/>.
        </member>
        <member name="M:Keen.VRage.UI.Shared.Extensions.DispatcherExtensions.AwaitToken.GetAwaiter">
            <summary>
            Get the Awaiter which is the same instance.
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Extensions.DispatcherExtensions.AwaitToken.GetResult">
            <summary>
            Do nothing but is required.
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Extensions.DispatcherExtensions.AwaitToken.OnCompleted(System.Action)">
            <summary>
            Sends the next action to the queue.
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Extensions.DispatcherExtensions.AwaitToken.OnCompleted(Keen.VRage.Library.Threading.ICompletion)">
            <inheritdoc/>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Extensions.DispatcherExtensions.AwaitToken.IsValid">
            <inheritdoc/>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Extensions.DispatcherExtensions.AwaitToken.SetCanceled">
            <inheritdoc/>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Extensions.TabItemExtension">
            <summary>
            Extensions to <see cref="T:Avalonia.Controls.TabControl"/>
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Extensions.TabItemExtension.NextTab(Avalonia.Controls.TabControl,System.Boolean)">
            <summary>
            Go to the next tab on the <see cref="T:Avalonia.Controls.TabControl"/>, if <paramref name="allowLoop"/>, will jump to the first item if on the last item
            </summary>
            <param name="tabControl"></param>
            <param name="allowLoop">allow jump between the last and first item, <see langword="true"/> by default</param>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Extensions.TabItemExtension.NextTab(Avalonia.Controls.TabControl)">
            <summary>
            Go to the next tab on the <see cref="T:Avalonia.Controls.TabControl"/>, jump to the first item if on the last item
            </summary>
            <param name="tabControl"></param>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Extensions.TabItemExtension.PreviousTab(Avalonia.Controls.TabControl,System.Boolean)">
            <summary>
            Go to the previous tab on the <see cref="T:Avalonia.Controls.TabControl"/>, if <paramref name="allowLoop"/>, will jump to the last item if on the first item
            </summary>
            <param name="tabControl"></param>
            <param name="allowLoop">allow jump between the first and last item, <see langword="true"/> by default</param>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Extensions.TabItemExtension.PreviousTab(Avalonia.Controls.TabControl)">
            <summary>
            Go to the previous tab on the <see cref="T:Avalonia.Controls.TabControl"/>, jump to the last item if on the first item
            </summary>
            <param name="tabControl"></param>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Helpers.AvaloniaListString">
            <summary>
            <see cref="T:Avalonia.Collections.AvaloniaList`1"/> of string that can be declared in XAML files.
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Helpers.AvaloniaPropertyHelper">
            <summary>
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Helpers.AvaloniaPropertyHelper.ObserveCollectionAndPropertyChanges``1(Avalonia.AvaloniaObject,Avalonia.AvaloniaProperty{``0})">
            <inheritdoc cref="M:Keen.VRage.Library.Utils.ObservableHelper.ObserveCollectionAndPropertyChanges``1(System.ComponentModel.INotifyPropertyChanged,System.String,System.Func{``0})"/>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Helpers.AvaloniaPropertyHelper.SelectObservable``2(System.IObservable{``0},``1,System.Func{``0,System.IObservable{``1}})">
            <summary>
            Observe the values generated by the observable sequences selected from the results of this observable.
            </summary>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="observable"></param>
            <param name="defaultValue"></param>
            <param name="selector">Select the observable object from the result of an observable sequence.</param>
            <returns></returns>
            <remarks>Sequence will complete if the selected observable does.</remarks>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Helpers.AvaloniaPropertyHelper.IgnoreCompletion``1(System.IObservable{``0},``0,System.Func{System.Exception,System.Exception})">
            <summary>
            Do not fire <see cref="M:System.IObserver`1.OnCompleted"/> event.
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Helpers.AvaloniaPropertyHelper.GetOldValueAs``1(Avalonia.AvaloniaPropertyChangedEventArgs)">
            <inheritdoc cref="M:Avalonia.AvaloniaPropertyChangedExtensions.GetOldValue``1(Avalonia.AvaloniaPropertyChangedEventArgs)"/>
            <remarks>Don't crash on invalid cast.</remarks>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Helpers.AvaloniaPropertyHelper.GetNewValueAs``1(Avalonia.AvaloniaPropertyChangedEventArgs)">
            <inheritdoc cref="M:Avalonia.AvaloniaPropertyChangedExtensions.GetNewValue``1(Avalonia.AvaloniaPropertyChangedEventArgs)"/>
            <remarks>Don't crash on invalid cast.</remarks>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Helpers.AvaloniaPropertyHelper.GetOldAndNewValueAs``1(Avalonia.AvaloniaPropertyChangedEventArgs)">
            <inheritdoc cref="M:Avalonia.AvaloniaPropertyChangedExtensions.GetOldAndNewValue``1(Avalonia.AvaloniaPropertyChangedEventArgs)"/>
            <remarks>Don't crash on invalid cast.</remarks>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Helpers.AvaloniaPropertyHelper.TryGetOldValue``1(Avalonia.AvaloniaPropertyChangedEventArgs)">
            <inheritdoc cref="M:Avalonia.AvaloniaPropertyChangedExtensions.GetOldValue``1(Avalonia.AvaloniaPropertyChangedEventArgs)"/>
            <remarks>Don't crash on invalid cast.</remarks>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Helpers.AvaloniaPropertyHelper.TryGetNewValue``1(Avalonia.AvaloniaPropertyChangedEventArgs)">
            <inheritdoc cref="M:Avalonia.AvaloniaPropertyChangedExtensions.GetNewValue``1(Avalonia.AvaloniaPropertyChangedEventArgs)"/>
            <remarks>Don't crash on invalid cast.</remarks>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Helpers.BoundsCheckHitTester">
            <summary>
            Wraps around a <see cref="T:Avalonia.Rendering.IHitTester"/> and make sure the point is is contained in the visuals bounds.
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Helpers.BoundsCheckHitTester.GetTransform(Avalonia.Visual)">
            <summary>
            Matrix only <see cref="M:Avalonia.VisualTree.VisualExtensions.GetTransformedBounds(Avalonia.Visual)"/>
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Helpers.ControlID">
            <summary>
            Helper to provide a unique ID to any <see cref="T:Avalonia.Visual"/>.
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Helpers.ControlID.#ctor(System.UInt64)">
            <summary>
            Helper to provide a unique ID to any <see cref="T:Avalonia.Visual"/>.
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Helpers.ConverterHelper">
            <summary>
            Helper for <see cref="T:Avalonia.Data.Converters.IValueConverter"/>
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Helpers.ConverterHelper.IsNullOrUnset(System.Object)">
            <summary>
            Return true if the <paramref name="value"/> is <see langword="null"/> or <see cref="T:Avalonia.UnsetValueType"/>.
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Helpers.ConverterHelper.TryConvert``1(System.Object,``0@,System.Object@,System.Object,System.Boolean)">
            <summary>
            Try to convert the <paramref name="value"/> to <typeparamref name="TOutput"/>.
            </summary>
            <typeparam name="TOutput">The target type.</typeparam>
            <param name="value">The value to convert.</param>
            <param name="converted">The converted value or null if the <paramref name="value"/> is not <typeparamref name="TOutput"/>.</param>
            <param name="failure">
            Default value when the value <see cref="M:Keen.VRage.UI.Shared.Helpers.ConverterHelper.IsNullOrUnset(System.Object)"/> 
            or a <see cref="T:Avalonia.Data.BindingNotification"/> if the value could not be converted.
            </param>
            <param name="nullOrUnsetOutput">
            Value to return if <paramref name="value"/> <see cref="M:Keen.VRage.UI.Shared.Helpers.ConverterHelper.IsNullOrUnset(System.Object)"/>.
            By default return <see cref="F:Avalonia.AvaloniaProperty.UnsetValue"/>.
            </param>
            <param name="errorOnNullOrUnset">Treat null and unset value as error and raise <see cref="T:Avalonia.Data.BindingNotification"/>.</param>
            <returns>True if the value was converted.</returns>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Helpers.ConverterHelper.TryTargetType``2(System.Type,``0,System.Object@,Keen.VRage.Library.Utils.TryFunc{``0,``1},System.Boolean)">
            <summary>
            Try to get an output of <typeparamref name="TOutput"/> if it is the <paramref name="targetType"/>.
            </summary>
            <typeparam name="TInput"></typeparam>
            <typeparam name="TOutput"></typeparam>
            <param name="targetType">Target type of the conversion</param>
            <param name="value"></param>
            <param name="result">The result of <paramref name="tryGetOutput"/>, null if wrong type or a binding notification on errors.</param>
            <param name="tryGetOutput"></param>
            <param name="errorOnInvalidType"></param>
            <returns>True if the target type is of <typeparamref name="TOutput"/> or if <paramref name="errorOnInvalidType"/> is true.</returns>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Helpers.DevTools">
            <summary>
            Avalonia DevTools callbacks
            </summary>
        </member>
        <member name="E:Keen.VRage.UI.Shared.Helpers.DevTools.DevToolsStateChange">
            <summary>
            Event fired when devtools state has been changed (opened/closed)
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Helpers.DevTools.DevToolsStateChangeEvent">
            <summary>
            Delegate for DevToolsStateChange event
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Helpers.DispatcherTimeProvider">
            <summary>
            Provide time from Avalonia's dispatcher.
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Helpers.DragDropHelper">
            <summary>
            Helper class for Drag and Drop operations
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Helpers.DragDropHelper.CheckedDragEventHandler(System.Object,Avalonia.Input.DragEventArgs,System.Action{System.Object,Avalonia.Input.DragEventArgs})">
            <summary>
            It appears that Drag related event handlers goes through unmanaged environment that swallows any exceptions.
            That is dangerous and if such exception occurs, we should property raise it and if unhandled crash the application.
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Helpers.FocusStabilizer">
            <summary>
            Some control can steal the focus from a child when they where not within focus.
            This stabilizer detect such behavior and give the focus back to the child.
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Helpers.InlinesDataTemplate">
            <summary>
            Data template to convert <see cref="T:Avalonia.Controls.Documents.Inline"/> and <see cref="T:Avalonia.Controls.Documents.InlineCollection"/> to <see cref="T:Avalonia.Controls.TextBlock"/>.
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Helpers.InlinesHelper">
            <summary>
            Helper to highlights <see cref="T:Avalonia.Controls.TextBlock"/> using <see cref="T:Avalonia.Controls.Documents.InlineCollection"/>.
            <para>xmlns:InlinesHelper.TextSource="{Binding Text}"</para>
            <para>xmlns:InlinesHelper.HighlightsSource="{Binding Highlights}"</para>
            <para>xmlns:InlinesHelper.HighlightStyle="HighlightClass"</para>
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Helpers.InlinesHelper.FindHighlights(System.String,System.StringComparison,System.Collections.IEnumerable,System.Collections.Generic.IList{Keen.VRage.UI.Shared.Helpers.InlinesHelper.SubString})">
            <summary>
            Search the highlights in the text and add the substrings into <paramref name="into"/>.
            </summary>
            <param name="text">Text to analyze</param>
            <param name="comparison"></param>
            <param name="highlights">Enumeration of string. (Convert object using <see cref="M:System.Object.ToString"/>)</param>
            <param name="into">List that will contains the sub strings</param>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Helpers.InlinesHelper.Token">
            <summary>
            Token to register events on a highlighted text block.
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Helpers.InlinesHelper.SubString">
            <summary>
            Part of a highlighted text.
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.Helpers.InlinesHelper.SubString.StartIndex">
            <summary>
            Where the part starts.
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.Helpers.InlinesHelper.SubString.EndIndex">
            <summary>
            Where the part ends.
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.Helpers.InlinesHelper.SubString.IsHighlighted">
            <summary>
            Is the part highlighted.
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Helpers.InlinesHelper.SubString.#ctor(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Create one part of the text.
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Helpers.InlinesHelper.SubString.#ctor(System.Int32,System.Boolean)">
            <summary>
            Create a part representing all the text.
            </summary>
            <param name="size"></param>
            <param name="isHighlighted"></param>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Helpers.InlinesHelper.SubString.GetFrom(System.String)">
            <summary>
            Get the substring this part represent from the full string.
            </summary>
            <param name="from">The full string that contains this part.</param>
            <returns>The substring this part represent.</returns>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Helpers.ManualStopwatch">
            <summary>
            Helper to manually set the time of a Stopwatch.
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.Helpers.ManualStopwatch.Elapsed">
            <inheritdoc cref="P:System.Diagnostics.Stopwatch.Elapsed"/>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Helpers.MediaContextManualStopwatch">
            <summary>
            Helper to manually set the Avalonia.Media.MediaContext's stopwatch.
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Helpers.DispatcherManualStopwatch">
            <summary>
            Helper to manually set the ManagedDispatcherImpl's stopwatch.
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Helpers.MultiLevelTraceLogSink">
            <summary>
            Modified <see cref="T:Avalonia.Logging.TraceLogSink"/> that can handle multiple <see cref="T:Avalonia.Logging.LogEventLevel"/>.
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Helpers.MultiLevelTraceLogSinkExtensions">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Helpers.NeverCompleteSubject`1">
            <summary>
            <see cref="T:System.Reactive.Subjects.ISubject`1"/> that never complete when <see cref="M:System.IObserver`1.OnCompleted"/> is invoked.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Helpers.NeverCompleteSubject`1.OnCompleted">
            <summary>
            Manually notifies the observer that the provider has finished sending push-based notifications.
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Helpers.PointerOverStabilizer">
            <summary>
            Ensure all parent control have <see cref="P:Avalonia.Input.InputElement.IsPointerOver"/> to true whenever a child is.
            When control get removed from the visual tree the value is not reset to false, so when the control is added again
            and pointer is over, the value will not propagate to all the tree 
            as it stop at the first parent with the value to true.
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Helpers.SearchResultEventArgs">
            <summary>
            Argument when a search ended or was canceled.
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.Helpers.SearchResultEventArgs.Queries">
            <summary>
            List of texts used to find the results.
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.Helpers.SearchResultEventArgs.IsCancelled">
            <summary>
            Does the search did not reached completion.
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Helpers.SearchResultEventArgs`1">
            <summary>
            Argument when a search ended or was canceled. Contains an optional result list.
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.Helpers.SearchResultEventArgs`1.Results">
            <summary>
            Optional results of the search.
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Helpers.SearchHelper">
            <summary>
            Helper to not freeze the editor when searching for elements.
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Helpers.SearchHelper.StartSearchAsync``1(System.Threading.CancellationTokenSource@,System.String,System.Func{System.Threading.CancellationTokenSource,System.String,System.Collections.Generic.IEnumerable{``0}},System.Action{System.String,System.Collections.Generic.IEnumerable{``0}},System.Action{System.String,``0},System.Action{System.String},System.Int32,System.Int32,System.Int32,System.Nullable{Avalonia.Threading.DispatcherPriority})">
            <summary>
            Start the search after a delay.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="cancellation">Token to cancel previous call to this method.</param>
            <param name="query">The current search query.</param>
            <param name="searchOnTaskThread">Search all element according to the query.</param>
            <param name="prepareOnUIThread">Optional method called to initialize the UI or to add all elements at once.</param>
            <param name="displayOnUIThread">Optional method called to add one element at the time to prevent long processing time.</param>
            <param name="finallyOnUIThread">Optional method called last.</param>
            <param name="minQueryLength">Min length of the query to start the search.</param>
            <param name="startDelay">
                Delay to start the search after the query change.
                This is used to not start the search while the user is still typing.
            </param>
            <param name="enumerationPerStep">How many elements should be added at the same time before waiting for the UI to refresh.</param>
            <param name="enumerationPriority">Loop priority of <paramref name="displayOnUIThread"/>.</param>
            <returns>True if the search task has started. False if the query is invalid.</returns>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Helpers.SelectionSubject`2">
            <summary>
            Allow to subscribe to an observable found in the result of another observable sequence.
            Automatically un-subscribe the old value and subscribing to the new one.
            </summary>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TResult"></typeparam>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Helpers.SelectionSubject`2.#ctor(`1,System.Func{`0,System.IObservable{`1}})">
            <param name="defaultValue"></param>
            <param name="selector">Select the observable object from the result of an observable sequence.</param>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Helpers.SimpleCommand">
            <summary>
            Alternative to <see cref="T:ReactiveUI.ReactiveCommand"/> for simple uses.
            </summary>
            <remarks>
            This offer better performances but have less features.
            (thread checking, exception handling, CanExecuteChanged, etc.)
            </remarks>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Helpers.SimpleCommand.Create(System.Action)">
            <inheritdoc cref="T:Keen.VRage.UI.Shared.Helpers.SimpleCommand.DelegateCommand"/>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Helpers.SimpleCommand.Create``1(System.Action{``0})">
            <inheritdoc cref="T:Keen.VRage.UI.Shared.Helpers.SimpleCommand.DelegateCommand`1"/>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Helpers.SimpleCommand.Create``1(System.Action{``0},``0)">
            <inheritdoc cref="T:Keen.VRage.UI.Shared.Helpers.SimpleCommand.ContextDelegateCommand`1"/>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Helpers.SimpleCommand.Create``2(System.Action{``0,``1},``1)">
            <inheritdoc cref="T:Keen.VRage.UI.Shared.Helpers.SimpleCommand.ContextDelegateCommand`2"/>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Helpers.SimpleCommand.Create(System.Action,System.IObservable{System.Boolean},System.Boolean)">
            <inheritdoc cref="T:Keen.VRage.UI.Shared.Helpers.SimpleCommand.ConditionalDelegateCommand"/>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Helpers.SimpleCommand.DelegateCommand">
            <summary>
            Create a parameterless command that can always be called.
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Helpers.SimpleCommand.DelegateCommand.#ctor(System.Action)">
            <summary>
            Create a parameterless command that can always be called.
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Helpers.SimpleCommand.DelegateCommand`1">
            <summary>
            Create a command that can be called if a <typeparamref name="TParameter"/> is given.
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Helpers.SimpleCommand.DelegateCommand`1.#ctor(System.Action{`0})">
            <summary>
            Create a command that can be called if a <typeparamref name="TParameter"/> is given.
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Helpers.SimpleCommand.ContextDelegateCommand`1">
            <summary>
            Create a parameterless command with <typeparamref name="TContext"/> that can always be called.
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Helpers.SimpleCommand.ContextDelegateCommand`1.#ctor(System.Action{`0},`0)">
            <summary>
            Create a parameterless command with <typeparamref name="TContext"/> that can always be called.
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Helpers.SimpleCommand.ContextDelegateCommand`2">
            <summary>
            Create a command with <typeparamref name="TContext"/> that can be called if a <typeparamref name="TParameter"/> is given.
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Helpers.SimpleCommand.ContextDelegateCommand`2.#ctor(System.Action{`0,`1},`1)">
            <summary>
            Create a command with <typeparamref name="TContext"/> that can be called if a <typeparamref name="TParameter"/> is given.
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Helpers.SimpleCommand.ConditionalDelegateCommand">
            <summary>
            Create a parameterless command that can sometimes be called.
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Helpers.VRageAvaloniaLocator">
            <summary>
            Helper class to access the old <see cref="T:Avalonia.AvaloniaLocator"/> API.
            </summary>
        </member>
        <member name="F:Keen.VRage.UI.Shared.Helpers.VRageAvaloniaLocator.Current">
            <summary>
            Wrapper to <see cref="P:Avalonia.AvaloniaLocator.Current"/>
            </summary>
        </member>
        <member name="F:Keen.VRage.UI.Shared.Helpers.VRageAvaloniaLocator.CurrentMutable">
            <summary>
            Wrapper to <see cref="P:Avalonia.AvaloniaLocator.CurrentMutable"/>
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Helpers.VRageAvaloniaLocator.GetService(System.Type)">
            <summary>
            Same as AvaloniaLocator.GetService
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Helpers.VRageAvaloniaLocator.Bind``1">
            <summary>
            Wrapper to <see cref="M:Avalonia.AvaloniaLocator.Bind``1"/>
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Helpers.VRageAvaloniaLocator.BindToSelf``1(``0)">
            <summary>
            Wrapper to <see cref="M:Avalonia.AvaloniaLocator.Bind``1"/> and <see cref="M:Avalonia.AvaloniaLocator.RegistrationHelper`1.ToConstant``1(``0)"/>
            </summary>
            <param name="constant"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Helpers.VRageAvaloniaLocator.VRageRegistrationHelper`1">
            <summary>
            Wrapper for <see cref="T:Avalonia.AvaloniaLocator.RegistrationHelper`1"/>
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Helpers.VRageAvaloniaLocatorExtensions">
            <summary>
            Wrapper to AvaloniaLocatorExtensions
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Helpers.VRageAvaloniaLocatorExtensions.GetService``1(Keen.VRage.UI.Shared.Helpers.VRageAvaloniaLocator)">
            <summary>
            Wrapper to AvaloniaLocatorExtensions.GetService
            </summary>
            <param name="resolver"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Helpers.VRageAvaloniaLocatorExtensions.GetRequiredService(Keen.VRage.UI.Shared.Helpers.VRageAvaloniaLocator,System.Type)">
            <summary>
            Wrapper to AvaloniaLocatorExtensions.GetRequiredService
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Helpers.VRageAvaloniaLocatorExtensions.GetRequiredService``1(Keen.VRage.UI.Shared.Helpers.VRageAvaloniaLocator)">
            <summary>
            Wrapper to AvaloniaLocatorExtensions.GetRequiredService
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.MarkupExtensions.ConstantBinding">
            <summary>
            Create a constant binding.
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.MarkupExtensions.ConvertibleResource">
            <summary>
            Same as <see cref="T:Avalonia.Markup.Xaml.MarkupExtensions.DynamicResourceExtension"/> but allow to apply converters.
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.MarkupExtensions.ConvertibleResource.ResourceKey">
            <summary>
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.MarkupExtensions.ConvertibleResource.Converter">
            <summary>
            Converter to use when binding values.
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.MarkupExtensions.ConvertibleResource.Parameter">
            <summary>
            Parameter for <see cref="M:Avalonia.Data.Converters.IValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)"/>
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.MarkupExtensions.ConvertibleResource.CultureInfo">
            <summary>
            CultureInfo for <see cref="M:Avalonia.Data.Converters.IValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)"/>
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.MarkupExtensions.ConvertibleResource.GetFirstParent``1(System.IServiceProvider)">
            <summary>
            <see cref="T:Avalonia.Markup.Xaml.Extensions"/> 
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.MarkupExtensions.ConvertibleResource.GetDictionaryVariant(System.IServiceProvider)">
            <summary>
            <see cref="T:Avalonia.Markup.Xaml.MarkupExtensions.StaticResourceExtension"/>
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Migrations.Versions">
            <summary>
            UI migration versions
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.Attributes.DefaultElementAttribute">
            <summary>
            Indicates that this PropertyElement is the default element for its type
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.Attributes.RequiredAttributesAttribute">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.Core.ObjectInspectorViewModel">
            <summary>
            The ObjectInspector is a class that generates <see cref="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.PropertyElement"/>s for an <see cref="T:Keen.VRage.Library.Serialization.IAccessible"/> object,
            according to the <see cref="T:Keen.VRage.Library.UI.PropertyInspector.PropertyAttribute"/>s on the properties
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.Core.ObjectInspectorViewModel.IndentLevel">
            <summary>
             Indentation level of the inspector
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.Core.ObjectInspectorViewModel.LeftIndentLevel">
            <summary>
            Left indentation of the inspector
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.Core.ObjectInspectorViewModel.ShowInInspector">
            <summary>
            
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.Core.ObjectInspectorViewModel.PropertyElements">
            <summary>
            The currently displayed PropertyElements
            </summary>
        </member>
        <member name="F:Keen.VRage.UI.Shared.ObjectInspector.Core.ObjectInspectorViewModel._undoEvent">
            <summary>
            Called after an undo operation is done.
            </summary>
        </member>
        <member name="F:Keen.VRage.UI.Shared.ObjectInspector.Core.ObjectInspectorViewModel._redoEvent">
            <summary>
            Called after a redo operation is done. Fires after ValueChangeCompleted, so do not use that and this together.
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.Core.ObjectInspectorViewModel.Title">
            <summary>
            The text displayed at the top of the inspector
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.Core.ObjectInspectorViewModel.DisplayObject(Keen.VRage.Library.Serialization.IAccessible)">
            <summary>
            Displays all properties of an <see cref="T:Keen.VRage.Library.Serialization.IAccessible"/> object
            </summary>
            <param name="accessible"></param>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.Core.ObjectInspectorViewModel.InjectMember(Keen.VRage.Library.Serialization.MemberReference)">
            <summary>
            Injects a new PropertyElement generate from <paramref name="member"/> into the current list of elements
            </summary>
            <param name="member"></param>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.Core.ObjectInspectorViewModel.InjectMembers(System.Collections.Generic.IEnumerable{Keen.VRage.Library.Serialization.MemberReference})">
            <summary>
            Injects a list of new PropertyElements generated from <paramref name="members"/> into the current list of elements
            NOTE: Ignores member declaration order
            </summary>
            <param name="members"></param>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.Core.ObjectInspectorViewModel.InjectMemberMethods(Keen.VRage.Library.Serialization.MemberReference)">
            <summary>
            Injects the methods of a specific member
            </summary>
            <param name="member"></param>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.Core.ObjectInspectorViewModel.RefreshValue(System.Nullable{Keen.VRage.Library.Serialization.MemberReference})">
            <summary>
            Refreshes the displayed values of all property elements
            </summary>
            <param name="member">The path of the MemberReference this was triggered from. This can be used to only refresh values that are related to a MemberReference</param>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.Core.ObjectInspectorViewModel.DisplayInspectableAsync(Keen.VRage.UI.Shared.ObjectInspector.IInspectable,System.ValueTuple{System.String,System.Object}[])">
            <summary>
            Displays all properties of an <see cref="T:Keen.VRage.UI.Shared.ObjectInspector.IInspectable"/> object
            </summary>
            <param name="inspectedObject"> The object to inspect</param>
            <param name="contexts"> The context to use for the inspection</param>
            <returns> A task that completes when the display is done</returns>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.Core.ObjectInspectorViewModel.ClearInspectable">
            <summary>
            Clears the displayed Inspectable.
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.Core.PropertyElementContext">
            <summary>
            
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.Core.PropertyElementException">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.Core.PropertyElementFactory">
            <summary>
            Provides a methods for creating PropertyElements
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.Core.PropertyElementFactory.CreateValuePropertyElement(Keen.VRage.Library.Serialization.MemberReference,Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.IPropertyElementContainer,System.Boolean,Keen.VRage.UI.Shared.ObjectInspector.Strategies.IObjectInspectorVisibilityStrategy,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Returns the best fitting PropertyElement from a MemberReference
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.Core.PropertyElementFactory.GenerateMethodElements(Keen.VRage.Library.Serialization.MemberReference,Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.IPropertyElementContainer)">
            <summary>
            Creates buttons for methods marked with the <see cref="T:Keen.VRage.Library.UI.PropertyInspector.ButtonAttribute">Button</see> attribute
            </summary>
            <param name="member"></param>
            <param name="parent"></param>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.Core.PropertyElementFactory.GeneratePropertyElement(Keen.VRage.Library.Serialization.MemberReference,Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.IPropertyElementContainer)">
            <summary>
            Generates a new <see cref="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.PropertyElement"/> for <paramref name="member"/> and injects it into the <paramref name="parent"/>s element hierarchy
            </summary>
            <param name="member"></param>
            <param name="parent"></param>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.Core.PropertyElementFactory.GetValuePropertyElementType(Keen.VRage.Library.Serialization.MemberReference,System.Boolean)">
            <summary>
            Returns the best fitting PropertyElement type for a given valueInfo
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.Core.PropertyElementFactory.IsPrivate(Keen.VRage.Library.Serialization.MemberReference)">
            <summary>
            Returns true if <paramref name="member"/> has private setters
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.Core.PropertyElementFactory.GetItemType(System.Type)">
            <summary>
            Returns the type of the contained elements of a collection type
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.Core.PropertyElementSelector">
            <summary>
            Selector that matches <see cref="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.PropertyElement"/>s to their corresponding views
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.Core.PropertyElementSelector.Build(System.Object)">
            <summary>
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.Core.PropertyElementSelector.Match(System.Object)">
            <summary>
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.Core.PropertyElementTypeManager">
            <summary>
            Manages the available types of PropertyElements
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.Core.PropertyElementTypeManager.PropertyElementTypes">
            <summary>
            A dictionary of ValueTypes (Key) with the corresponding PropertyElement types
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.Core.PropertyElementTypeManager.#ctor">
            <summary>
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.Core.PropertyElementTypeManager.LoadPropertyElementTypes">
            <summary>
            Pre-loads and sorts all PropertyElement types according to their value type
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.Core.PropertyElementTypeManager.GetValueTypeFromPropertyElementType(System.Type)">
            <summary>
            Gets the property Type of a propertyElementType
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.Core.PropertyElementTypeManager.GetPropertyElementTypesForValueType(System.Type)">
            <summary>
            Returns a list of types of PropertyElements that fits the given value type.
            Recursively checks base classes of the value type
            </summary>
            <param name="valueType"></param>
            <returns></returns>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.Core.PropertyElementTypeManager.GetGenericBaseTypeArgument(System.Type)">
            <summary>
            Returns the type argument of the generic base type, which in this context means the value type of the PropertyElement
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.Events.IValueChangedEventArgs">
            <summary>
            Interface for representing one or multiple changes to properties in the inspector
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.Events.IValueChangedEventArgs.Sender">
            <summary>
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.Events.IValueChangedEventArgs.ChangedMember">
            <summary>
            The <see cref="T:Keen.VRage.Library.Serialization.MemberReference"/> that the changes occurred on
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.Events.IValueChangedEventArgs.ForceRefresh">
            <summary>
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.Events.IValueChangedEventArgs.IsConnectedToPreviousChange">
            <summary>
            Should the change be connected to the previous change (e.g. for history actions)
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.Events.IValueChangedEventArgs.Contexts">
            <summary>
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.Events.IValueChangedEventArgs.AddContext(System.Object)">
            <summary>
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.Events.IValueChangedEventArgs.GetContextsOfType``1">
            <summary>
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.Events.MultiValueChangedEventArgs">
            <summary>
            Contains multiple concurrent value changes done to a member
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.Events.SerializedValueChangedEventArgs">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.Events.ValueChangedEventArgs">
            <summary>
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.Events.ValueChangedEventArgs.ChangedMember">
            <summary>
            The <see cref="T:Keen.VRage.Library.Serialization.MemberReference"/> that the change has occurred on
            </summary>
        </member>
        <member name="F:Keen.VRage.UI.Shared.ObjectInspector.Events.ValueChangedEventArgs.OldValue">
            <summary>
            The value before the change occurred
            </summary>
        </member>
        <member name="F:Keen.VRage.UI.Shared.ObjectInspector.Events.ValueChangedEventArgs.NewValue">
            <summary>
            The value after the change occurred
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.Events.ValueRefreshEventArgs">
            <summary>
            Event when the value changed from refresh.
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.Events.ValueRefreshEventArgs.#ctor(System.Object,Keen.VRage.Library.Serialization.MemberReference)">
            <summary>
            Event when the value changed from refresh.
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.Extensions.MemberReferenceSerializationExtensions">
            <summary>
            Extension methods for serializing Members of ValuePropertyElements
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.Extensions.MemberReferenceSerializationExtensions.IsSerializable(System.Type)">
            <summary>
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.Extensions.MemberReferenceSerializationExtensions.IsSerializable(Keen.VRage.Library.Serialization.MemberReference,System.Boolean)">
            <summary>
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.Extensions.MemberReferenceSerializationExtensions.TrySerializeToJson``1(Keen.VRage.Library.Serialization.MemberReference,``0,System.String@,Keen.VRage.Library.Serialization.CustomSerializationContext[])">
            <summary>
            Serializes a value to json using the given <paramref name="member"/>
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.Extensions.MemberReferenceSerializationExtensions.DeserializeFromJson``1(Keen.VRage.Library.Serialization.MemberReference,System.String,Keen.VRage.Library.Serialization.CustomSerializationContext[])">
            <summary>
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.Extensions.MemberReferenceSerializationExtensions.SetValueFromJson(Keen.VRage.Library.Serialization.MemberReference,System.String,Keen.VRage.Library.Serialization.CustomSerializationContext[])">
            <summary>
            Deserializes value from a json string
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.Extensions.MemberReferenceSerializationExtensions.SerializeToJson(Keen.VRage.Library.Serialization.MemberReference,Keen.VRage.Library.Serialization.CustomSerializationContext[])">
            <summary>
            Serializes a MemberReference to a json string
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.Extensions.MemberReferenceSerializationExtensions.HasPublicGetter(Keen.VRage.Library.Serialization.MemberReference)">
            <summary>
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.Extensions.MemberReferenceSerializationExtensions.HasPublicSetter(Keen.VRage.Library.Serialization.MemberReference)">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.Extensions.PropertyElementContainerExtensions">
            <summary>
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.Extensions.PropertyElementContainerExtensions.AddElement(Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.IPropertyElementContainer,Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.PropertyElement)">
            <summary>
            Adds a PropertyElement to the container
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.Extensions.PropertyElementContainerExtensions.AddValueElement(Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.IPropertyElementContainer,Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.IValuePropertyElement)">
            <summary>
            Adds a ValuePropertyElement to the container
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.Extensions.PropertyElementContainerExtensions.RemoveElement(Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.IPropertyElementContainer,Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.PropertyElement)">
            <summary>
            Removes a PropertyElement from its container
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.Extensions.PropertyElementContainerExtensions.RemoveValueElement(Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.IPropertyElementContainer,Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.IValuePropertyElement)">
            <summary>
            Removes a ValuePropertyElement from its container
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.Extensions.PropertyElementContainerExtensions.ClearElements(Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.IPropertyElementContainer)">
            <summary>
            Clears all elements from the container
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.Extensions.PropertyElementExtensions">
            <summary>
            Extension methods for PropertyElements
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.Extensions.PropertyElementExtensions.GetNextValueElementAncestor(Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.IPropertyElement)">
            <summary>
            Returns the next <see cref="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.IValuePropertyElement"/> in the ancestry
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.Extensions.PropertyElementExtensions.GetAncestor``1(Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.IPropertyElement)">
            <summary>
            Returns the next ancestor of type <typeparamref name="T"/>
            </summary>
            <param name="element"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.Extensions.PropertyElementExtensions.TryGetAncestor``1(Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.IPropertyElement)">
            <summary>
            Returns the next ancestor of type <typeparamref name="T"/>
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.Extensions.PropertyElementExtensions.IsAttachedToTree(Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.PropertyElement)">
            <summary>
            Checks if the element is attached to the tree
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.Extensions.PropertyElementExtensions.IsDescendantOf(Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.PropertyElement,Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.IPropertyElementContainer)">
            <summary>
            Returns true if the element is a descendant of the given <paramref name="ancestor"/>
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.Extensions.PropertyElementExtensions.GetVisibilityStrategy(Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.IPropertyElement)">
            <summary>
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.Extensions.PropertyElementExtensions.GetChildrenOfType``1(Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.IPropertyElementContainer,System.Boolean)">
            <summary>
            Returns children property elements of type <typeparamref name="T"/> 
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.Extensions.PropertyElementExtensions.GetGroupWithName(Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.IPropertyElementContainer,System.String)">
            <summary>
            Returns the first direct child element of type <see cref="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Hierarchy.GroupPropertyElement"/> with name <paramref name="name"/>
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.Extensions.PropertyElementExtensions.GetChildWithMember``1(Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.IPropertyElementContainer,Keen.VRage.Library.Serialization.MemberReference,System.Boolean)">
            <summary>
            Returns a child value PropertyElement of type <typeparamref name="T"/> with the given MemberReference <paramref name="member"/>
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.Extensions.PropertyElementExtensions.GetPropertyInspectorSerializerFlags(Keen.VRage.Library.Serialization.MemberReference)">
            <summary>
            Returns serializer flags for serialization of a member in Inspector
            </summary>
            <param name="member"></param>
            <returns></returns>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.Extensions.PropertyElementExtensions.FindMemberAtPath(Keen.VRage.Library.Serialization.MemberReference,Keen.VRage.Library.Serialization.MemberReference)">
            <summary>
            Finds a member in the hierarchy based on the path of the referenceMember
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.Extensions.PropertyElementExtensions.CopyValueTo(Keen.VRage.Library.Serialization.MemberReference,System.Nullable{Keen.VRage.Library.Serialization.MemberReference},Keen.VRage.Library.Serialization.CustomSerializationContext[])">
            <summary>
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.Extensions.PropertyElementExtensions.GetCopyOfValue``1(Keen.VRage.Library.Serialization.MemberReference,Keen.VRage.Library.Serialization.CustomSerializationContext[])">
            <summary>
            Returns a copy of the Value of the member (utilizes serialization roundtrip)
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.Extensions.PropertyElementExtensions.ShouldHighlightOverride(Keen.VRage.Library.Serialization.MemberReference)">
            <summary>
            Returns if a member should be highlighted as overridden in the inspector
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.Extensions.PropertyElementExtensions.IsImmutableCollection(Keen.VRage.Library.Serialization.MemberReference)">
            <summary>
            Returns true if the member is an ImmutableArray
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.Extensions.PropertyElementExtensions.IsImmutableCollection(System.Type)">
            <summary>
            Returns true if the type is an ImmutableArray
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.Extensions.PropertyElementExtensions.TrySkipSingleMemberGenericPropertyElement(Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.IPropertyElementContainer,Keen.VRage.Library.Serialization.MemberReference,System.Boolean,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Tries to skip a single member
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.Extensions.UnitExtensions">
            <summary>
            Extension methods for Unit.
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.IInspectable">
            <summary>
            Marks an object as inspectable in the ObjectInspector
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.IInspectable.Name">
            <summary>
            Name of the inspected object
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.IInspectable.Description">
            <summary>
            A description of the inspected object
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.IInspectable.ValuesReloaded">
            <summary>
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.IInspectable.LoadMembers(Keen.VRage.UI.Shared.ObjectInspector.Core.ObjectInspectorViewModel)">
            <summary>
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.IInspectable.GetMembers(Keen.VRage.UI.Shared.ObjectInspector.Core.ObjectInspectorViewModel)">
            <summary>
             Returns <see cref="T:Keen.VRage.UI.Shared.ObjectInspector.InspectableInfo"/> with lists of PropertyElement and MemberReference.
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.IInspectableContextProvider">
            <summary>
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.IInspectableContextProvider.LoadContext(Keen.VRage.UI.Shared.ObjectInspector.Core.ObjectInspectorViewModel)">
            <summary>
            Loads the context from this ContextProvider 
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.IInspectableContextProvider.GenerateContext(Keen.VRage.UI.Shared.ObjectInspector.Core.ObjectInspectorViewModel)">
            <summary>
            
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.InspectableInfo">
            <summary>
            
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Bool.TogglePropertyControl">
            <summary>
            
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Bool.TogglePropertyElement">
            <summary>
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Bool.TogglePropertyElement.#ctor(Keen.VRage.Library.Serialization.MemberReference,Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.IPropertyElementContainer)">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.CollectionItemPropertyControl">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ICollectionItemPropertyElement">
            <summary>
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ICollectionItemPropertyElement.ItemMember">
            <summary>
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ICollectionItemPropertyElement.CollectionPropertyElement">
            <summary>
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ICollectionItemPropertyElement.RemoveItem">
            <summary>
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ICollectionItemPropertyElement.RefreshValue(System.Nullable{Keen.VRage.Library.Serialization.MemberReference})">
            <summary>
            </summary>
            <param name="member"></param>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ISortableCollectionItemPropertyElement">
            <summary>
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ISortableCollectionItemPropertyElement.CurrentIndex">
            <summary>
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ISortableCollectionItemPropertyElement.MoveItem(System.Int32)">
            <summary>
            </summary>
            <param name="index"></param>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.CollectionItemPropertyElement`2">
            <summary>
            </summary>
            <typeparam name="TItem"></typeparam>
            <typeparam name="TCollection"></typeparam>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.CollectionItemPropertyView">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.CollectionPropertyControl">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ICollectionPropertyElement">
            <summary>
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ICollectionPropertyElement.Member">
            <summary>
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ICollectionPropertyElement.DisplayMode">
            <summary>
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ICollectionPropertyElement.SelectionChanged">
            <summary>
            Invoked when the Selection changes
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ICollectionPropertyElement.AddItem">
            <summary>
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ICollectionPropertyElement.AddItemFromInitializer">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.CollectionPropertyElement`2">
            <summary>
            </summary>
            <typeparam name="TItem"></typeparam>
            <typeparam name="TCollection"></typeparam>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.CollectionPropertyElement`2.AddItem(System.Type)">
            <summary>
            Creates a new Item of type <paramref name="itemType"/> and adds it to the collection
            </summary>
            <param name="itemType"></param>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.CollectionPropertyView">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.DictionaryItemPropertyControl">
            <summary>
            
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.IDictionaryItemPropertyElement">
            <summary>
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.IDictionaryItemPropertyElement.RemoveItem">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.DictionaryItemPropertyElement`2">
            <summary>
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.DictionaryPropertyControl">
            <summary>
            
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.DictionaryEntry`2">
            <summary>
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.DictionaryEntry`2.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.DictionaryEntry`2.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.DictionaryEntry`2.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.DictionaryEntry{`0,`1}@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.DictionaryEntry`2.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.DictionaryEntry`2.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.DictionaryEntry{`0,`1}@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.DictionaryEntry`2.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.DictionaryEntry`2.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.DictionaryEntry{`0,`1}@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.DictionaryEntry`2.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.DictionaryEntry`2.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.DictionaryEntry`2.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.DictionaryEntry`2.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.DictionaryEntry`2.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.DictionaryEntry{`0,`1}@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.DictionaryEntry`2.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.DictionaryEntry`2.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.DictionaryEntry{`0,`1}@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.DictionaryEntry`2.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.DictionaryEntry`2.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.DictionaryEntry{`0,`1}@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.DictionaryEntry`2.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.DictionaryEntry`2.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.DictionaryEntry{`0,`1}@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.DictionaryEntry`2.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.DictionaryEntry`2.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.DictionaryEntry`2.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.DictionaryEntry`2.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.DictionaryEntry`2.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#UI#Shared#ObjectInspector#PropertyElements#BaseTypes#Collections#DictionaryEntry{TKey,TValue}}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.DictionaryEntry`2.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.DictionaryEntry`2.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.DictionaryEntry`2.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.DictionaryEntry`2.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.DictionaryEntry`2.TypeInfoHolder.KeyAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.DictionaryEntry`2.TypeInfoHolder.KeyAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.DictionaryEntry`2.TypeInfoHolder.KeyAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.DictionaryEntry`2.TypeInfoHolder.KeyAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.DictionaryEntry`2.TypeInfoHolder.KeyAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.DictionaryEntry`2.TypeInfoHolder.KeyAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.DictionaryEntry`2.TypeInfoHolder.KeyAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.DictionaryEntry`2.TypeInfoHolder.KeyAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.DictionaryEntry`2.TypeInfoHolder.KeyAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.DictionaryEntry`2.TypeInfoHolder.KeyAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.DictionaryEntry`2.TypeInfoHolder.KeyAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.DictionaryEntry`2.TypeInfoHolder.KeyAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.DictionaryEntry`2.TypeInfoHolder.KeyAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.DictionaryEntry`2.TypeInfoHolder.KeyAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.DictionaryEntry`2.TypeInfoHolder.KeyAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{TKey}#Set(System.Object,`0@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.DictionaryEntry`2.TypeInfoHolder.KeyAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{TKey}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.DictionaryEntry`2.TypeInfoHolder.KeyAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{TKey}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.DictionaryEntry`2.TypeInfoHolder.KeyAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{TKey}#Set(System.Byte@,`0@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.DictionaryEntry`2.TypeInfoHolder.KeyAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.DictionaryEntry`2.TypeInfoHolder.KeyAccessor.Set(Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.DictionaryEntry{`0,`1}@,`0@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.DictionaryEntry`2.TypeInfoHolder.KeyAccessor.Get(Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.DictionaryEntry{`0,`1}@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.DictionaryEntry`2.TypeInfoHolder.ValueAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.DictionaryEntry`2.TypeInfoHolder.ValueAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.DictionaryEntry`2.TypeInfoHolder.ValueAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.DictionaryEntry`2.TypeInfoHolder.ValueAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.DictionaryEntry`2.TypeInfoHolder.ValueAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.DictionaryEntry`2.TypeInfoHolder.ValueAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.DictionaryEntry`2.TypeInfoHolder.ValueAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.DictionaryEntry`2.TypeInfoHolder.ValueAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.DictionaryEntry`2.TypeInfoHolder.ValueAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.DictionaryEntry`2.TypeInfoHolder.ValueAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.DictionaryEntry`2.TypeInfoHolder.ValueAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.DictionaryEntry`2.TypeInfoHolder.ValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.DictionaryEntry`2.TypeInfoHolder.ValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.DictionaryEntry`2.TypeInfoHolder.ValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.DictionaryEntry`2.TypeInfoHolder.ValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{TValue}#Set(System.Object,`1@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.DictionaryEntry`2.TypeInfoHolder.ValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{TValue}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.DictionaryEntry`2.TypeInfoHolder.ValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{TValue}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.DictionaryEntry`2.TypeInfoHolder.ValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{TValue}#Set(System.Byte@,`1@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.DictionaryEntry`2.TypeInfoHolder.ValueAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.DictionaryEntry`2.TypeInfoHolder.ValueAccessor.Set(Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.DictionaryEntry{`0,`1}@,`1@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.DictionaryEntry`2.TypeInfoHolder.ValueAccessor.Get(Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.DictionaryEntry{`0,`1}@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.DictionaryPropertyElement`2">
            <summary>
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.HashSetDictionaryItemPropertyControl">
            <summary>
            
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.HashSetDictionaryItemPropertyElement`2">
            <summary>
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.HashSetDictionaryPropertyControl">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.HashSetDictionaryPropertyElement`2">
            <summary>
            PropertyElement for Hashset dictionaries
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.HashSetItemPropertyControl">
            <summary>
            
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.IHashSetItemPropertyElement">
            <summary>
            Used for datatype selection
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.IHashSetItemPropertyElement.RemoveItem">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.HashSetItemPropertyElement`1">
            <summary>
            </summary>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.HashSetPropertyControl">
            <summary>
            
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.HashSetPropertyElement`1">
            <summary>
            </summary>
            <typeparam name="TItem"></typeparam>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ImmutableMergeableListPropertyElement`1">
            <summary>
            Directly displays the data of the MergeableList
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ImmutableMergeableListPropertyView">
            <summary>
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ImmutableMergeableListPropertyView.InitializeComponent(System.Boolean)">
            <summary>
            Wires up the controls and optionally loads XAML markup and attaches dev tools (if Avalonia.Diagnostics package is referenced).
            </summary>
            <param name="loadXaml">Should the XAML be loaded into the component.</param>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ListDictionaryItemPropertyControl">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.IListDictionaryItemPropertyElement">
            <summary>
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.IListDictionaryItemPropertyElement.RemoveItem">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ListDictionaryItemPropertyElement`2">
            <summary>
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ListDictionaryPropertyControl">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ListDictionaryPropertyElement`2">
            <summary>
            PropertyElement for List dictionaries
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ListItemPropertyControl">
            <summary>
            
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.IListItemPropertyElement">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ListItemPropertyElement`1">
            <summary>
            </summary>
            <typeparam name="TItem"></typeparam>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.IListPropertyElement">
            <summary>
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.IListPropertyElement.ClearSelection">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ListPropertyElement`1">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ListPropertyView">
            <summary>
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ListPropertyView.InitializeComponent(System.Boolean)">
            <summary>
            Wires up the controls and optionally loads XAML markup and attaches dev tools (if Avalonia.Diagnostics package is referenced).
            </summary>
            <param name="loadXaml">Should the XAML be loaded into the component.</param>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.SelectedItemOfPropertyControl">
            <summary>
            
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.SelectedItemOfPropertyElement`1">
            <summary>
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.SelectedItemOfPropertyElement`1.#ctor(Keen.VRage.Library.Serialization.MemberReference,Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.IPropertyElementContainer)">
            <summary>
            </summary>
            <param name="member"></param>
            <param name="parent"></param>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.SelectedItemOfPropertyElement`1.TryFindCollection">
            <summary>
            Searches through all children of the parent element for the desired collection
            </summary>
            <returns></returns>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.SelectedItemOfPropertyElement`1.OnElementAddedToParent(Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.PropertyElement)">
            <summary>
            Checks if a newly added elements is the desired collection
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.SelectedItemOfPropertyElement`1.TryConnectCollection(Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.PropertyElement)">
            <summary>
            Connects to <paramref name="element"/>, if it is the desired collection
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.SelectedItemOfPropertyElement`1.OnSelectionChanged">
            <summary>
            Invoked when the selected item in the list is changed
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer">
            <summary>
            Data wrapper used for initializing values on collections
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#UI#Shared#ObjectInspector#PropertyElements#BaseTypes#Collections#ValueInitializer}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer`1.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer`1.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer`1.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer{`0}@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer`1.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer`1.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer{`0}@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer`1.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer`1.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer{`0}@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer`1.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer`1.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer`1.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer`1.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer`1.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer{`0}@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer`1.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer`1.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer{`0}@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer`1.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer`1.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer{`0}@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer`1.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer`1.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer{`0}@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer`1.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer`1.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer`1.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer`1.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer`1.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#UI#Shared#ObjectInspector#PropertyElements#BaseTypes#Collections#ValueInitializer{T}}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer`1.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer`1.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer`1.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer`1.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer`1.TypeInfoHolder.ValueAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer`1.TypeInfoHolder.ValueAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer`1.TypeInfoHolder.ValueAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer`1.TypeInfoHolder.ValueAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer`1.TypeInfoHolder.ValueAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer`1.TypeInfoHolder.ValueAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer`1.TypeInfoHolder.ValueAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer`1.TypeInfoHolder.ValueAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer`1.TypeInfoHolder.ValueAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer`1.TypeInfoHolder.ValueAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer`1.TypeInfoHolder.ValueAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer`1.TypeInfoHolder.ValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer`1.TypeInfoHolder.ValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer`1.TypeInfoHolder.ValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer`1.TypeInfoHolder.ValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{T}#Set(System.Object,`0@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer`1.TypeInfoHolder.ValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{T}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer`1.TypeInfoHolder.ValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{T}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer`1.TypeInfoHolder.ValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{T}#Set(System.Byte@,`0@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer`1.TypeInfoHolder.ValueAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer`1.TypeInfoHolder.ValueAccessor.Set(Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer{`0}@,`0@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer`1.TypeInfoHolder.ValueAccessor.Get(Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueInitializer{`0}@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.KeyValueInitializer`2.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.KeyValueInitializer`2.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.KeyValueInitializer`2.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.KeyValueInitializer{`0,`1}@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.KeyValueInitializer`2.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.KeyValueInitializer`2.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.KeyValueInitializer{`0,`1}@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.KeyValueInitializer`2.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.KeyValueInitializer`2.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.KeyValueInitializer{`0,`1}@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.KeyValueInitializer`2.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.KeyValueInitializer`2.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.KeyValueInitializer`2.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.KeyValueInitializer`2.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.KeyValueInitializer`2.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.KeyValueInitializer{`0,`1}@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.KeyValueInitializer`2.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.KeyValueInitializer`2.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.KeyValueInitializer{`0,`1}@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.KeyValueInitializer`2.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.KeyValueInitializer`2.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.KeyValueInitializer{`0,`1}@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.KeyValueInitializer`2.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.KeyValueInitializer`2.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.KeyValueInitializer{`0,`1}@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.KeyValueInitializer`2.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.KeyValueInitializer`2.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.KeyValueInitializer`2.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.KeyValueInitializer`2.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.KeyValueInitializer`2.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#UI#Shared#ObjectInspector#PropertyElements#BaseTypes#Collections#KeyValueInitializer{TKey,TValue}}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.KeyValueInitializer`2.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.KeyValueInitializer`2.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.KeyValueInitializer`2.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.KeyValueInitializer`2.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.KeyValueInitializer`2.TypeInfoHolder.KeyAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.KeyValueInitializer`2.TypeInfoHolder.KeyAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.KeyValueInitializer`2.TypeInfoHolder.KeyAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.KeyValueInitializer`2.TypeInfoHolder.KeyAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.KeyValueInitializer`2.TypeInfoHolder.KeyAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.KeyValueInitializer`2.TypeInfoHolder.KeyAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.KeyValueInitializer`2.TypeInfoHolder.KeyAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.KeyValueInitializer`2.TypeInfoHolder.KeyAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.KeyValueInitializer`2.TypeInfoHolder.KeyAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.KeyValueInitializer`2.TypeInfoHolder.KeyAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.KeyValueInitializer`2.TypeInfoHolder.KeyAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.KeyValueInitializer`2.TypeInfoHolder.KeyAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.KeyValueInitializer`2.TypeInfoHolder.KeyAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.KeyValueInitializer`2.TypeInfoHolder.KeyAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.KeyValueInitializer`2.TypeInfoHolder.KeyAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{TKey}#Set(System.Object,`0@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.KeyValueInitializer`2.TypeInfoHolder.KeyAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{TKey}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.KeyValueInitializer`2.TypeInfoHolder.KeyAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{TKey}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.KeyValueInitializer`2.TypeInfoHolder.KeyAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{TKey}#Set(System.Byte@,`0@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.KeyValueInitializer`2.TypeInfoHolder.KeyAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.KeyValueInitializer`2.TypeInfoHolder.KeyAccessor.Set(Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.KeyValueInitializer{`0,`1}@,`0@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.KeyValueInitializer`2.TypeInfoHolder.KeyAccessor.Get(Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.KeyValueInitializer{`0,`1}@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.KeyValueInitializer`2.TypeInfoHolder.ValueAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.KeyValueInitializer`2.TypeInfoHolder.ValueAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.KeyValueInitializer`2.TypeInfoHolder.ValueAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.KeyValueInitializer`2.TypeInfoHolder.ValueAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.KeyValueInitializer`2.TypeInfoHolder.ValueAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.KeyValueInitializer`2.TypeInfoHolder.ValueAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.KeyValueInitializer`2.TypeInfoHolder.ValueAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.KeyValueInitializer`2.TypeInfoHolder.ValueAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.KeyValueInitializer`2.TypeInfoHolder.ValueAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.KeyValueInitializer`2.TypeInfoHolder.ValueAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.KeyValueInitializer`2.TypeInfoHolder.ValueAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.KeyValueInitializer`2.TypeInfoHolder.ValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.KeyValueInitializer`2.TypeInfoHolder.ValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.KeyValueInitializer`2.TypeInfoHolder.ValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.KeyValueInitializer`2.TypeInfoHolder.ValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{TValue}#Set(System.Object,`1@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.KeyValueInitializer`2.TypeInfoHolder.ValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{TValue}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.KeyValueInitializer`2.TypeInfoHolder.ValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{TValue}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.KeyValueInitializer`2.TypeInfoHolder.ValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{TValue}#Set(System.Byte@,`1@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.KeyValueInitializer`2.TypeInfoHolder.ValueAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.KeyValueInitializer`2.TypeInfoHolder.ValueAccessor.Set(Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.KeyValueInitializer{`0,`1}@,`1@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.KeyValueInitializer`2.TypeInfoHolder.ValueAccessor.Get(Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.KeyValueInitializer{`0,`1}@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueWrapper`2.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueWrapper`2.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueWrapper`2.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueWrapper{`0,`1}@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueWrapper`2.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueWrapper`2.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueWrapper{`0,`1}@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueWrapper`2.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueWrapper`2.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueWrapper{`0,`1}@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueWrapper`2.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueWrapper`2.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueWrapper`2.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueWrapper`2.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueWrapper`2.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueWrapper{`0,`1}@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueWrapper`2.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueWrapper`2.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueWrapper{`0,`1}@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueWrapper`2.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueWrapper`2.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueWrapper{`0,`1}@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueWrapper`2.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueWrapper`2.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueWrapper{`0,`1}@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueWrapper`2.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueWrapper`2.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueWrapper`2.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueWrapper`2.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueWrapper`2.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#UI#Shared#ObjectInspector#PropertyElements#BaseTypes#Collections#ValueWrapper{TKey,TValue}}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueWrapper`2.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueWrapper`2.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueWrapper`2.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueWrapper`2.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueWrapper`2.TypeInfoHolder.KeyAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueWrapper`2.TypeInfoHolder.KeyAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueWrapper`2.TypeInfoHolder.KeyAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueWrapper`2.TypeInfoHolder.KeyAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueWrapper`2.TypeInfoHolder.KeyAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueWrapper`2.TypeInfoHolder.KeyAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueWrapper`2.TypeInfoHolder.KeyAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueWrapper`2.TypeInfoHolder.KeyAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueWrapper`2.TypeInfoHolder.KeyAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueWrapper`2.TypeInfoHolder.KeyAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueWrapper`2.TypeInfoHolder.KeyAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueWrapper`2.TypeInfoHolder.KeyAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueWrapper`2.TypeInfoHolder.KeyAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueWrapper`2.TypeInfoHolder.KeyAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueWrapper`2.TypeInfoHolder.KeyAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{TKey}#Set(System.Object,`0@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueWrapper`2.TypeInfoHolder.KeyAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{TKey}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueWrapper`2.TypeInfoHolder.KeyAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{TKey}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueWrapper`2.TypeInfoHolder.KeyAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{TKey}#Set(System.Byte@,`0@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueWrapper`2.TypeInfoHolder.KeyAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueWrapper`2.TypeInfoHolder.KeyAccessor.Set(Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueWrapper{`0,`1}@,`0@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueWrapper`2.TypeInfoHolder.KeyAccessor.Get(Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueWrapper{`0,`1}@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueWrapper`2.TypeInfoHolder.ValueAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueWrapper`2.TypeInfoHolder.ValueAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueWrapper`2.TypeInfoHolder.ValueAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueWrapper`2.TypeInfoHolder.ValueAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueWrapper`2.TypeInfoHolder.ValueAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueWrapper`2.TypeInfoHolder.ValueAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueWrapper`2.TypeInfoHolder.ValueAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueWrapper`2.TypeInfoHolder.ValueAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueWrapper`2.TypeInfoHolder.ValueAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueWrapper`2.TypeInfoHolder.ValueAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueWrapper`2.TypeInfoHolder.ValueAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueWrapper`2.TypeInfoHolder.ValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueWrapper`2.TypeInfoHolder.ValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueWrapper`2.TypeInfoHolder.ValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueWrapper`2.TypeInfoHolder.ValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{TValue}#Set(System.Object,`1@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueWrapper`2.TypeInfoHolder.ValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{TValue}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueWrapper`2.TypeInfoHolder.ValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{TValue}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueWrapper`2.TypeInfoHolder.ValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{TValue}#Set(System.Byte@,`1@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueWrapper`2.TypeInfoHolder.ValueAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueWrapper`2.TypeInfoHolder.ValueAccessor.Set(Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueWrapper{`0,`1}@,`1@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueWrapper`2.TypeInfoHolder.ValueAccessor.Get(Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Collections.ValueWrapper{`0,`1}@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Enums.EnumButtonGroupPropertyControl">
            <summary>
            
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Enums.EnumButtonGroupPropertyElement">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Enums.EnumDropdownPropertyControl">
            <summary>
            Standard Enum Control
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Enums.EnumDropdownPropertyElement">
            <summary>
            A dropdown <see cref="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.PropertyElement"/> for inspecting <see cref="T:System.Enum"/>s
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Enums.EnumFlagsPropertyControl">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Enums.EnumFlagsPropertyElement">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Enums.EnumFlagsPropertyElement.SpecialOptionViewModel">
            <summary>
            Special options for All and None
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Enums.EnumPropertyElement">
            <summary>
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Enums.EnumPropertyElement.Options">
            <summary>
            All available values for the Enum of type T
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Enums.EnumPropertyElement.OptionViewModel">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Generic.CustomObjectPropertyControl">
            <summary>
            
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Generic.ICustomObjectPropertyElement">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Generic.CustomObjectPropertyElement`1">
            <summary>
            Base class for creating custom PropertyElements for objects
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Generic.CustomObjectPropertyView">
            <summary>
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Generic.CustomObjectPropertyView.InitializeComponent(System.Boolean)">
            <summary>
            Wires up the controls and optionally loads XAML markup and attaches dev tools (if Avalonia.Diagnostics package is referenced).
            </summary>
            <param name="loadXaml">Should the XAML be loaded into the component.</param>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Generic.GenericObjectCreatorControl">
            <summary>
            
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Generic.GenericObjectCreatorViewModel">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Generic.GenericObjectCreatorViewModel.Option">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Generic.GenericPropertyControl">
            <summary>
            
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Generic.GenericPropertyElement`1">
            <summary>
            Class for handling any generic classes or structs. Generates PropertyElements for child members
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Nullable.INullableElement">
            <summary>
            Marks a property element as being able to handle nullable properties
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Nullable.INullableElement.CanBeNull">
            <summary>
            If this nullable element is forbidden to be null
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Nullable.INullableElement.InitializeValue">
            <summary>
            Initialize the Value of a property
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Nullable.INullableElement.SetToNull">
            <summary>
            Set the value to null
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Nullable.NullableObjectPropertyControl">
            <inheritdoc/>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Nullable.NullableObjectPropertyElement`1">
            <summary>
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Nullable.NullablePropertyControl">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Nullable.NullablePropertyElement`1">
            <summary>
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Nullable.NullableValuePropertyControl">
            <inheritdoc/>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Nullable.NullableValuePropertyElement`1">
            <summary>
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.String.StringIdPropertyControl">
            <summary>
            PropertyElement for displaying <see cref="T:Keen.VRage.Library.Utils.StringId"/>
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.String.StringIdPropertyElement">
            <summary>
            PropertyElement for StringId
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.String.StringPropertyControl">
            <summary>
            
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.String.StringPropertyElement">
            <summary>
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.String.StringPropertyElement.Wrapping">
            <summary>
            The wrapping behaviour of the textbox
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.String.StringPropertyElement.AcceptsReturn">
            <summary>
            Should the box accept return key presses
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.String.StringPropertyElement.PasswordChar">
            <summary>
            Should hide the text.
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.String.StringPropertyElement.IsMultiline">
            <summary>
            Allows return
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.String.StringPropertyElement.HorizontalScrollBarVisibility">
            <summary>
            The horizontal scrollbar behaviour
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Time.TimeSpanPropertyControl">
            <summary>
            
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Time.TimeSpanPropertyElement">
            <summary>
            PropertyElement for <see cref="T:System.TimeSpan"/>
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Types.SubclassOfPropertyControl">
            <summary>
            
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Types.ISubclassOfPropertyElement">
            <summary>
            Interface for non-generic access to the SubclassOfPropertyElement
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Types.SubclassOfPropertyElement`1">
            <summary>
            PropertyElement for editing <see cref="T:Keen.VRage.Library.Utils.SubclassOf`1"/> properties
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Types.TypePropertyControl">
            <summary>
            
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.BaseTypes.Types.TypePropertyElement">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Controls.AlignedLabelsView">
            <summary>
            A derivative of the UserControl that will align all labels in PropertyLists
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Controls.AlignedLabelsView.OnListLayoutUpdate(System.Object,System.EventArgs)">
            <summary>
            Calculates a synchronized value for all labels
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Core.ContextMenuCommand">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Core.PropertyUserControl">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Core.ValuePropertyUserControl">
            <summary>
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Core.ValuePropertyUserControl.RecordChange">
            <summary>
            Instructs the ValuePropertyElement to record a value change
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Core.ValuePropertyUserControl.RecordNextChange">
            <summary>
            Instructs the ValuePropertyElement to record the next value change
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Core.ValuePropertyControl`1">
            <summary>
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Core.ValuePropertyElement`1">
            <summary>
            A PropertyElement that manages a property or field
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Core.ValuePropertyElement`1.Member">
            <summary>
            The <see cref="T:Keen.VRage.Library.Serialization.MemberReference"/> of the value that this PropertyElement represents
            </summary>
        </member>
        <member name="F:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Core.ValuePropertyElement`1._recordOnNextValueChange">
            <summary>
            When set to true, the next call to Value.set will also send the change to the history. Should only be modified by RecordOnNextChange()
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Core.ValuePropertyElement`1.Value">
            <summary>
            The value of this PropertyElement. Uses reflection to apply the value to the object
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Core.ValuePropertyElement`1.ForceReadOnly">
            <summary>
            Override for forcing the element to be readonly
            </summary>
        </member>
        <member name="F:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Core.ValuePropertyElement`1._lastRecordedChangeSerialized">
            <summary>
            Holds the last recorded change for resetting a value to a state before a user interaction, in a json serialized string
            </summary>
        </member>
        <member name="F:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Core.ValuePropertyElement`1._lastRecordedChangeRaw">
            <summary>
            Holds the last recorded change for resetting a value to a state before a user interaction. Fallback in case the value is not serializable
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Core.ValuePropertyElement`1.LastRecordedChange">
            <summary>
            Represents the last known value before a change was started (used to reset when continuous changes like drags are done)
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Core.ValuePropertyElement`1.RecordValueChange(System.Boolean,System.Boolean)">
            <summary>
            Record the current value and send it to the history
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Core.ValuePropertyElement`1.RecordNextValueChange">
            <summary>
            Records the next value change and sends it to the history
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Core.ValuePropertyElement`1.CollectValueChanges">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Core.ValuePropertyElement`1.UpdateLastRecordedChange">
            <summary>
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Core.ValuePropertyElement`1.OnValueChanged(Keen.VRage.UI.Shared.ObjectInspector.Events.IValueChangedEventArgs)">
            <summary>
            Called when any change to the value happened
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Core.ValuePropertyElement`1.OnValueChangeCompleted(Keen.VRage.UI.Shared.ObjectInspector.Events.IValueChangedEventArgs)">
            <summary>
            Called when a change action has been completed (e.g. slider drag completed)
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Core.ValuePropertyElement`1.RefreshValue(System.Nullable{Keen.VRage.Library.Serialization.MemberReference})">
            <summary>
            Refreshes the displayed value
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Hierarchy.GroupPropertyControl">
            <summary>
            
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Hierarchy.GroupPropertyElement">
            <summary>
            PropertyElement that allows for grouping other <see cref="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.PropertyElement"/>s marked with the <see cref="T:Keen.VRage.Library.UI.PropertyInspector.GroupAttribute"/>
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Hierarchy.GroupPropertyElement.Name">
            <summary>
            The display name of this group
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Hierarchy.GroupPropertyElement.PropertyElements">
            <summary>
            The list of <see cref="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.PropertyElement"/>s that are being displayed in this group
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Hierarchy.GroupPropertyElement.GetSubGroupElement(System.String)">
            <summary>
            Searches for a sub-group with the name <paramref name="groupName"/> in the <see cref="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Hierarchy.GroupPropertyElement.PropertyElements"/> list, recursively
            </summary>
            <param name="groupName"></param>
            <returns></returns>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Hierarchy.GroupPropertyElement.OnValueChanged(Keen.VRage.UI.Shared.ObjectInspector.Events.IValueChangedEventArgs)">
            <summary>
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Hierarchy.GroupPropertyElement.OnValueChangeCompleted(Keen.VRage.UI.Shared.ObjectInspector.Events.IValueChangedEventArgs)">
            <summary>
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Hierarchy.GroupPropertyElement.GetGroupPath(System.String,Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.IPropertyElementContainer,System.Boolean)">
            <summary>
            Creates a queue of <see cref="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Hierarchy.GroupPropertyElement"/>s describing a path of groups that corresponds to <paramref name="groupPath"/>
            </summary>
            <param name="groupPath"></param>
            <param name="groupRoot"></param>
            <param name="createNew"></param>
            <returns></returns>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.IExpandablePropertyElement">
            <summary>
            
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.IExpandablePropertyElement.IsExpanded">
            <summary>
            Gets or sets a value indicating whether this instance is expanded.
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.IExpandablePropertyElement.SerializableKey">
            <summary>
            Identifier of this serialized property
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.IExpandablePropertyElement.ToggleExpand">
            <summary>
             Toggles the expand state including all child elements based on the current state
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.IExpandablePropertyElement.ExpandAll">
            <summary>
             Expands all child elements
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.IExpandablePropertyElement.CollapseAll">
            <summary>
             Collapses all child elements
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.IIndentablePropertyElement">
            <summary>
            Describe a property element that can be indented by other elements
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.IIndentablePropertyElement.IndentOffset">
            <summary>
            </summary>
        </member>
        <member name="E:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.IIndentablePropertyElement.IndentOffsetChanged">
            <summary>
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.IIndentablePropertyElement.OnIndentOffsetChanged(System.Object,System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.IIndentablePropertyElementContainer">
            <summary>
            Describe a property element container that can offset his children
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.IIndentablePropertyElementContainer.ChildIndentOffset">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.IMethodPropertyElement">
            <summary>
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.IMethodPropertyElement.InvokeMethod">
            <summary>
            Invokes the method that this element represents
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.INotifyParentValueChangedElement">
            <summary>
            See <see cref="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.INotifyValueChangedElement"/>.
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.INotifyParentValueChangedElement.OnParentValueChanged(Keen.VRage.UI.Shared.ObjectInspector.Events.IValueChangedEventArgs)">
            <summary>
            Triggered when the parent element changes the value.
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.INotifyValueChangedElement">
            <summary>
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.INotifyValueChangedElement.ValueChanged">
            <summary>
            Invoked on every ValueChange
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.INotifyValueChangedElement.ValueChangeCompleted">
            <summary>
            Invoked when user action changes have completed (e.g. slider drag completed)
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.INotifyValueChangedElement.OnValueChanged(Keen.VRage.UI.Shared.ObjectInspector.Events.IValueChangedEventArgs)">
            <summary>
            Triggered when the element changes the value (e.g. user input on the element)
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.INotifyValueChangedElement.OnValueChangeCompleted(Keen.VRage.UI.Shared.ObjectInspector.Events.IValueChangedEventArgs)">
            <summary>
            Triggered when the element has completed changing a value (e.g. at the end of a slider drag)
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.INotifyValueChangedElement.RefreshValue(System.Nullable{Keen.VRage.Library.Serialization.MemberReference})">
            <summary>
            Called when the displayed value should be refreshed (e.g. source changed)
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.INullableValuePropertyElement`1">
            <summary>
            Nullable property element that can provide an optional non nullable value to provide common behavior between reference and value type.
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.INullableValuePropertyElement`1.Value">
            <summary>
            Get value using optional instead of <see cref="T:System.Nullable`1"/>.
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.IOverridableElement">
            <summary>
            Marks a PropertyElement as Overridable, meaning it can have a delta
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.IOverridableElement.IsOverridden">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.IPropertyElement">
            <summary>
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.IPropertyElement.Parent">
            <summary>
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.IPropertyElement.IndentLevel">
            <summary>
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.IPropertyElement.LeftIndentLevel">
            <summary>
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.IPropertyElement.ShowInInspector">
            <summary>
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.IPropertyElement.Root">
            <summary>
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.IPropertyElement.GetContext(System.String)">
            <summary>
            Returns a context object with tag <paramref name="tag"/>, if it exists. Searches upwards recursively upwards
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.IPropertyElement.TryGetContext(System.String)">
            <summary>
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.IPropertyElement.AddOrSetContext(System.String,System.Object)">
            <summary>
            Adds or sets a context object with tag <paramref name="tag"/>. Overwrites any existing context with the same tag.
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.IPropertyElement.DisplayValidationIssue(System.String)">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.IPropertyElementContainer">
            <summary>
            Describes an element that contains a list of <see cref="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.PropertyElement"/>s
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.IPropertyElementContainer.PropertyElements">
            <summary>
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.IPropertyElementContainer.GetValuePropertyElement``1(System.String)">
            <summary>
            </summary>
            <typeparam name="T"></typeparam>
            <param name="propertyPath"></param>
            <returns></returns>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.IPropertyElementContainer.EnumeratePropertyElementsOfType``1(System.Boolean)">
            <summary>
            Enumerates over all PropertyElements of the specified type
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.IPropertyElementRoot">
            <summary>
            Describes the root of a property element tree
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.IValuePropertyElement">
            <summary>
            Describes a <see cref="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.PropertyElement"/> that controls a specific value through a <see cref="T:Keen.VRage.Library.Serialization.MemberReference"/>
            </summary>
        </member>
        <member name="F:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.IValuePropertyElement.SERIALIZATION_CONTEXT_TAG">
            <summary>
            Tag for adding serialization contexts to the property element
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.IValuePropertyElement.Member">
            <summary>
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.IValuePropertyElement.Type">
            <summary>
            The specific type of the PropertyElement
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.IValuePropertyElement.ForceReadOnly">
            <summary>
            Override for forcing ReadOnly
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.IValuePropertyElement.IsWritableInInspector">
            <summary>
            Is the member writable in the inspector
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.IValuePropertyElement.IgnoreOverride">
            <summary>
            Ignore the override status of the member
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.IValuePropertyElement.IsOverridden">
            <summary>
            Is the member overriden?
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.IValuePropertyElement.BaseValueToolTip">
            <summary>
            Overriden member's base value tooltip
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.IValuePropertyElement.Label">
            <summary>
            Name of the propertyelement
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.IValuePropertyElement.RecordValueChange(System.Boolean,System.Boolean)">
            <summary>
            Records the change since the last recorded change and sends it to the history
            </summary>
            <returns>True if the value was different and recorded</returns>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.IValuePropertyElement.RecordNextValueChange">
            <summary>
            Sets the element to send the next Value change to history.
            Can be used e.g. in events that are triggered before the value is applied
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.IValuePropertyElement.CollectValueChanges">
            <summary>
            Instructs the element to collect all changes done to its own or its childrens properties
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.IValuePropertyElement.SetValueToDefault">
            <summary>
            Sets the value to the default value
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.IWrappedPropertyElement">
            <summary>
            <see cref="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.PropertyElement"/> used by an other property element that share the same member reference 
            and is responsible for manipulating the member.
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.IWrappedPropertyElement.Wrapper">
            <summary>
            Property element that uses this element.
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.IWrappedPropertyElement.UpdateLastRecordedChange">
            <summary>
            Save current value as last recorded change.
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.IPropertyElementWrapper">
            <summary>
            <see cref="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.PropertyElement"/> responsible to manipulate the member and convert the value from other property element
            that share the same member reference.
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.IPropertyElementWrapper.GetWrappedValue``1">
            <summary>
            Get the value for a nested property element.
            </summary>
            <exception cref="T:System.InvalidCastException">If the value cannot be casted.</exception>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.IPropertyElementWrapper.SetWrappedValue``1(``0)">
            <summary>
            Set the value from a nested property element.
            </summary>
            <exception cref="T:System.InvalidCastException">If the value cannot be casted.</exception>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.IPropertyElementWrapper.RecordValueChange(System.Boolean,System.Boolean)">
            <summary>
            Record the current value and send it to the history
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.KeyedColor.ColorSrgbVector4Converter">
            <summary>
             Converts Vector4 to ColorSRGB and vice versa
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.KeyedColor.KeyedColorPreview.InitializeComponent(System.Boolean)">
            <summary>
            Wires up the controls and optionally loads XAML markup and attaches dev tools (if Avalonia.Diagnostics package is referenced).
            </summary>
            <param name="loadXaml">Should the XAML be loaded into the component.</param>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.KeyedColor.TimeVarying1DFixed4Vector4PropertyControl">
            <summary>
             TimeVarying1DMaximum8FloatPropertyControl
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.KeyedColor.TimeVarying1DFixed4Vector4PropertyElement">
            <summary>
            
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.KeyedColor.TimeVarying1DKeyVector4PropertyControl">
            <summary>
             TimeVarying1DKeyFloatProperty View
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.KeyedColor.TimeVarying1DKeyVector4PropertyElement">
            <summary>
              TimeVarying1DKeyFloatPropertyElement
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.KeyedFloat.ResourceKeys">
            <summary>
            Contains constant string keys for various resource brushes used in the SimpleLineView.
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.KeyedFloat.TimeVarying1DKeyFloatPropertyControl">
            <summary>
             TimeVarying1DKeyFloatProperty View
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.KeyedFloat.TimeVarying1DKeyFloatPropertyElement">
            <summary>
              TimeVarying1DKeyFloatPropertyElement
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.KeyedFloat.TimeVarying1DMaximum8FloatPropertyControl">
            <summary>
             TimeVarying1DMaximum8FloatPropertyControl
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.KeyedFloat.TimeVarying1DMaximum8FloatPropertyElement">
            <summary>
             TimeVarying1DMaximum8FloatPropertyElement
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.KeyedFloat.Views.SimpleLineView">
            <summary>
            A simple line view that displays a line graph of a list of <see cref="T:Keen.VRage.Core.Render.TimeVarying1DKey`1"/> elements.
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.KeyedFloat.Views.SimpleLineView.InitializeComponent(System.Boolean)">
            <summary>
            Wires up the controls and optionally loads XAML markup and attaches dev tools (if Avalonia.Diagnostics package is referenced).
            </summary>
            <param name="loadXaml">Should the XAML be loaded into the component.</param>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Maths.Color.ColorHSVPropertyElement">
            <summary>
            PropertyElement for HSV colors
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Maths.Color.ColorLinearPropertyElement">
            <summary>
            PropertyElement for Linear colors
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Maths.Color.ColorPropertyControl">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Maths.Color.ColorSRGBPropertyControl">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Maths.Color.ColorLinearPropertyControl">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Maths.Color.ColorHSVPropertyControl">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Maths.Simple.DecimalPropertyElement">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Maths.Simple.DoublePropertyElement">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Maths.Simple.DoubleSliderPropertyElement">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Maths.Simple.FixedPointPropertyControl">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Maths.Simple.FixedPointPropertyElement">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Maths.Simple.FloatPropertyElement">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Maths.Simple.FloatSliderPropertyElement">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Maths.Simple.IntPropertyElement">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Maths.Simple.LongPropertyElement">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Maths.Simple.NumericPropertyTemplatedControl">
            <summary>
            
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Maths.Simple.NumericPropertyTemplatedControl`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Maths.Simple.BytePropertyControl">
            <summary>
            Numerical property control for typeparam Byte
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Maths.Simple.DecimalPropertyControl">
            <summary>
            Numerical property control for typeparam Decimal
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Maths.Simple.DoublePropertyControl">
            <summary>
            Numerical property control for typeparam Double
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Maths.Simple.FloatPropertyControl">
            <summary>
            Numerical property control for typeparam Float
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Maths.Simple.IntPropertyControl">
            <summary>
            Numerical property control for typeparam Int
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Maths.Simple.LongPropertyControl">
            <summary>
            Numerical property control for typeparam Long
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Maths.Simple.SBytePropertyControl">
            <summary>
            Numerical property control for typeparam sByte
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Maths.Simple.ShortPropertyControl">
            <summary>
            Numerical property control for typeparam Short
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Maths.Simple.UIntPropertyControl">
            <summary>
            Numerical property control for typeparam UInt
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Maths.Simple.ULongPropertyControl">
            <summary>
            Numerical property control for typeparam ULong
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Maths.Simple.UShortPropertyControl">
            <summary>
            Numerical property control for typeparam UShort
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Maths.Simple.NumericPropertyElement`1">
            <summary>
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Maths.Simple.NumericPropertyElement`1.Increment">
            <summary>
            The default increment used when modifying the value
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Maths.Simple.NumericPropertyElement`1.SmallIncrement">
            <summary>
            The increment used for small changes (e.g. when the user presses a the small increment key)
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Maths.Simple.NumericPropertyElement`1.LargeIncrement">
            <summary>
            The increment used for large changes (e.g. when the user presses a the large increment key)
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Maths.Simple.NumericPropertyElement`1.TextBoxValue">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Maths.Simple.NumericSliderPropertyTemplatedControl">
            <summary>
            
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Maths.Simple.NumericSliderPropertyTemplatedControl`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Maths.Simple.ByteSliderPropertyControl">
            <summary>
            Numerical slider property control for typeparam Byte
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Maths.Simple.DecimalSliderPropertyControl">
            <summary>
            Numerical slider property control for typeparam Decimal
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Maths.Simple.DoubleSliderPropertyControl">
            <summary>
            Numerical slider property control for typeparam Double
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Maths.Simple.FloatSliderPropertyControl">
            <summary>
            Numerical slider property control for typeparam Float
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Maths.Simple.IntSliderPropertyControl">
            <summary>
            Numerical slider property control for typeparam Int
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Maths.Simple.LongSliderPropertyControl">
            <summary>
            Numerical slider property control for typeparam Long
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Maths.Simple.SByteSliderPropertyControl">
            <summary>
            Numerical slider property control for typeparam sByte
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Maths.Simple.ShortSliderPropertyControl">
            <summary>
            Numerical slider property control for typeparam Short
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Maths.Simple.UIntSliderPropertyControl">
            <summary>
            Numerical slider property control for typeparam UInt
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Maths.Simple.ULongSliderPropertyControl">
            <summary>
            Numerical slider property control for typeparam ULong
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Maths.Simple.UShortSliderPropertyControl">
            <summary>
            Numerical slider property control for typeparam UShort
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Maths.Simple.SBytePropertyElement">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Maths.Simple.ShortPropertyElement">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Maths.Simple.UIntPropertyElement">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Maths.Simple.UIntSliderPropertyElement">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Maths.Simple.ULongPropertyElement">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Maths.Simple.UShortPropertyElement">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Maths.Vectors.QuaternionPropertyControl">
            <summary>
            
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Maths.Vectors.QuaternionPropertyElement">
            <summary>
            Quaternion property element
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Maths.Vectors.QuaternionPropertyElement.X">
            <summary>
            Euler X
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Maths.Vectors.QuaternionPropertyElement.Y">
            <summary>
            Euler Y
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Maths.Vectors.QuaternionPropertyElement.Z">
            <summary>
            Euler Z
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Maths.Vectors.ValueVectorPropertyTemplatedControl">
            <summary>
            Base class for Vectors
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Maths.Vectors.ValueVectorPropertyTemplatedControl`1">
            <summary>
            Base class for Vectors
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Maths.Vectors.Vector2PropertyControl">
            <summary>
            
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Maths.Vectors.Vector2PropertyElement">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Maths.Vectors.Vector3DPropertyControl">
            <summary>
            
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Maths.Vectors.Vector3DPropertyElement">
            <summary>
            
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Maths.Vectors.Vector3IPropertyControl">
            <summary>
            
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Maths.Vectors.Vector3IPropertyElement">
            <summary>
            
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Maths.Vectors.Vector3PropertyControl">
            <summary>
            
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Maths.Vectors.Vector3PropertyElement">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Maths.Vectors.Vector4PropertyControl">
            <summary>
            
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Maths.Vectors.Vector4PropertyElement">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Methods.MethodPropertyElement`1">
            <summary>
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Methods.MethodPropertyElement`1.#ctor(Keen.VRage.Library.Serialization.MemberReference,Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.IPropertyElementContainer,System.Reflection.MethodInfo)">
            <summary>
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Methods.MethodPropertyElement`1.InvokeMethod">
            <summary>
            Invokes <see cref="F:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Methods.MethodPropertyElement`1.Method"/> and collects changes done to the object
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Methods.MethodPropertyView">
            <summary>
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Methods.MethodPropertyView.InitializeComponent(System.Boolean)">
            <summary>
            Wires up the controls and optionally loads XAML markup and attaches dev tools (if Avalonia.Diagnostics package is referenced).
            </summary>
            <param name="loadXaml">Should the XAML be loaded into the component.</param>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.IMultiMemberPropertyElement">
            <summary>
            Interface for MultiMemberPropertyElement that can be used to simultaneously edit two members of the same type
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.IMultiMemberPropertyElement.IsSynced">
            <summary>
            Indicates whether the two properties (PropertyElementA and PropertyElementB) are synced
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.IMultiMemberPropertyElement.PropertyElementA">
            <summary>
            PropertyElementA
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.IMultiMemberPropertyElement.PropertyElementB">
            <summary>
            PropertyElementB
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.MultiMemberPropertyElement`1">
            <summary>
            Can be used to simultaneously edit two members of the same type
            </summary>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.MultiMemberPropertyView">
            <summary>
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.MultiMemberPropertyView.InitializeComponent(System.Boolean)">
            <summary>
            Wires up the controls and optionally loads XAML markup and attaches dev tools (if Avalonia.Diagnostics package is referenced).
            </summary>
            <param name="loadXaml">Should the XAML be loaded into the component.</param>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Other.GuidPropertyControl">
            <summary>
            
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Other.GuidPropertyElement">
            <summary>
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Other.GuidPropertyElement.#ctor(Keen.VRage.Library.Serialization.MemberReference,Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.IPropertyElementContainer)">
            <summary>
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Other.GuidPropertyElement.StringValue">
            <summary>
            String representation of the Guid value
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Other.InfoPropertyControl">
            <summary>
            
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Other.InfoPropertyElement">
            <summary>
            A simple PropertyElement for displaying information in a string format
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.PropertyElement">
            <summary>
            Base Element for displaying any property in the ObjectInspector
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.PropertyElement.#ctor(Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.IPropertyElementContainer)">
            <summary>
            Base Element for displaying any property in the ObjectInspector
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.PropertyElement.IndentLevel">
            <summary>
            The indent level of the element. Defaults to 0
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.PropertyElement.IsValid">
            <summary>
            Indicates whether the element is valid or not. Defaults to true
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.PropertyElement.ValidityToolTip">
            <summary>
            The tooltip displayed when hovering the cursor over the validity icon
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.PropertyElement.ShowInInspector">
            <summary>
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.PropertyElement.Label">
            <summary>
            The text displayed in the label
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.PropertyElement.HideCollapse">
            <summary>
            Should the Show/Hide button be hidden? Defaults to false
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.PropertyElement.ToolTip">
            <summary>
            The text displayed in the tooltip when hovering the cursor over the element
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.PropertyElement.TryGetContext(System.String)">
            <summary>
            Gets context, but allows for null when not attached to visual tree
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.PropertyTemplate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Utility.PropertyViewExtensions">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.ValuePropertyTemplatedControl">
            <summary>
            
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.ValuePropertyTemplatedControl.RecordChange">
            <summary>
            Instructs the ValuePropertyElement to record a value change
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.ValuePropertyTemplatedControl.RecordNextChange">
            <summary>
            Instructs the ValuePropertyElement to record the next value change
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.ValuePropertyTemplatedControl`1">
            <summary>
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings">
            <summary>
            
            </summary>
        </member>
        <member name="F:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.RetractedCollapsible">
            <summary>
            
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#UI#Shared#ObjectInspector#PropertyInspectorSettings}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.TypeInfoHolder.RetractedCollapsibleAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.TypeInfoHolder.RetractedCollapsibleAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.TypeInfoHolder.RetractedCollapsibleAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.TypeInfoHolder.RetractedCollapsibleAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.TypeInfoHolder.RetractedCollapsibleAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.TypeInfoHolder.RetractedCollapsibleAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.TypeInfoHolder.RetractedCollapsibleAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.TypeInfoHolder.RetractedCollapsibleAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.TypeInfoHolder.RetractedCollapsibleAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.TypeInfoHolder.RetractedCollapsibleAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.TypeInfoHolder.RetractedCollapsibleAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.TypeInfoHolder.RetractedCollapsibleAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.TypeInfoHolder.RetractedCollapsibleAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.TypeInfoHolder.RetractedCollapsibleAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.TypeInfoHolder.RetractedCollapsibleAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{System#String}}#Set(System.Object,System.Collections.Generic.List{System.String}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.TypeInfoHolder.RetractedCollapsibleAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{System#String}}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.TypeInfoHolder.RetractedCollapsibleAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{System#String}}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.TypeInfoHolder.RetractedCollapsibleAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{System#String}}#Set(System.Byte@,System.Collections.Generic.List{System.String}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.TypeInfoHolder.RetractedCollapsibleAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.TypeInfoHolder.RetractedCollapsibleAccessor.Set(Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings@,System.Collections.Generic.List{System.String}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.TypeInfoHolder.RetractedCollapsibleAccessor.Get(Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.TypeInfoHolder.ShowExtensionsAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.TypeInfoHolder.ShowExtensionsAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.TypeInfoHolder.ShowExtensionsAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.TypeInfoHolder.ShowExtensionsAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.TypeInfoHolder.ShowExtensionsAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.TypeInfoHolder.ShowExtensionsAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.TypeInfoHolder.ShowExtensionsAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.TypeInfoHolder.ShowExtensionsAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.TypeInfoHolder.ShowExtensionsAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.TypeInfoHolder.ShowExtensionsAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.TypeInfoHolder.ShowExtensionsAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.TypeInfoHolder.ShowExtensionsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.TypeInfoHolder.ShowExtensionsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.TypeInfoHolder.ShowExtensionsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.TypeInfoHolder.ShowExtensionsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.TypeInfoHolder.ShowExtensionsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.TypeInfoHolder.ShowExtensionsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.TypeInfoHolder.ShowExtensionsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.TypeInfoHolder.ShowExtensionsAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.TypeInfoHolder.ShowExtensionsAccessor.Set(Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.TypeInfoHolder.ShowExtensionsAccessor.Get(Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.TypeInfoHolder._collapseByDefaultAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.TypeInfoHolder._collapseByDefaultAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.TypeInfoHolder._collapseByDefaultAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.TypeInfoHolder._collapseByDefaultAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.TypeInfoHolder._collapseByDefaultAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.TypeInfoHolder._collapseByDefaultAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.TypeInfoHolder._collapseByDefaultAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.TypeInfoHolder._collapseByDefaultAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.TypeInfoHolder._collapseByDefaultAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.TypeInfoHolder._collapseByDefaultAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.TypeInfoHolder._collapseByDefaultAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.TypeInfoHolder._collapseByDefaultAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.TypeInfoHolder._collapseByDefaultAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.TypeInfoHolder._collapseByDefaultAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.TypeInfoHolder._collapseByDefaultAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.TypeInfoHolder._collapseByDefaultAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.TypeInfoHolder._collapseByDefaultAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.TypeInfoHolder._collapseByDefaultAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.TypeInfoHolder._collapseByDefaultAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.TypeInfoHolder._collapseByDefaultAccessor.Set(Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.TypeInfoHolder._collapseByDefaultAccessor.Get(Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.TypeInfoHolder.CollapseByDefaultAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.TypeInfoHolder.CollapseByDefaultAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.TypeInfoHolder.CollapseByDefaultAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.TypeInfoHolder.CollapseByDefaultAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.TypeInfoHolder.CollapseByDefaultAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.TypeInfoHolder.CollapseByDefaultAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.TypeInfoHolder.CollapseByDefaultAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.TypeInfoHolder.CollapseByDefaultAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.TypeInfoHolder.CollapseByDefaultAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.TypeInfoHolder.CollapseByDefaultAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.TypeInfoHolder.CollapseByDefaultAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.TypeInfoHolder.CollapseByDefaultAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.TypeInfoHolder.CollapseByDefaultAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.TypeInfoHolder.CollapseByDefaultAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.TypeInfoHolder.CollapseByDefaultAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.TypeInfoHolder.CollapseByDefaultAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.TypeInfoHolder.CollapseByDefaultAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.TypeInfoHolder.CollapseByDefaultAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.TypeInfoHolder.CollapseByDefaultAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.TypeInfoHolder.CollapseByDefaultAccessor.Set(Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings.TypeInfoHolder.CollapseByDefaultAccessor.Get(Keen.VRage.UI.Shared.ObjectInspector.PropertyInspectorSettings@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.ReactiveAccessible">
            <summary>
                Interface for reactive accessible objects. These objects can be observed for changes in their properties and
                collections.
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.ReactiveAccessible.NotifyPropertyChanged(System.String,System.Object)">
            <summary>
                This method is used to notify that a property has changed.
            </summary>
            <param name="propertyName">The name of the property that changed.</param>
            <param name="propertyValue">The new value of the property.</param>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.ReactiveAccessible.NotifyCollectionChanged(System.String,Keen.VRage.UI.Shared.ObjectInspector.Events.SerializedValueChangedEventArgs)">
            <summary>
                This method is used to notify that a collection has changed.
            </summary>
            <param name="collectionName">The name of the collection that changed.</param>
            <param name="args">The arguments for the collection change.</param>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.ReactiveAccessible.NotifyCollectionPropertyChanged(System.String,System.Object)">
            <summary>
                This method is used to notify that a property in a collection item has changed.
            </summary>
            <param name="propertyPath">The path to the property that changed.</param>
            <param name="value">The new value of the property.</param>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.ReactiveAccessible.WhenAnyPropertyChanges``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
            <summary>
                Method to get an observable that signals when any of the specified properties change.
                TODO: Return a tuple to pair changed value with name
            </summary>
            <param name="properties">Expressions for the properties to observe.</param>
            <returns>An observable that signals when any of the specified properties change.</returns>
            <remarks>
                This method is used to observe changes in properties that are not directly observable.
            </remarks>
            <example>
                <code>
              WhenAnyPropertyChanges(x => x.Property1, x => x.Property2)
                .Subscribe(value => {});
            </code>
            </example>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.ReactiveAccessible.WhenCollectionPropertyChanges``2(System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.List{``1}}},System.Linq.Expressions.Expression{System.Func{``1,System.Object}}[])">
            <summary>
                Method to get an observable that signals when a property in a collection item changes.
                TODO: Listen changes for the specified object at index or via expression
            </summary>
            <param name="property">Expression for the collection to observe.</param>
            <param name="collectionProperty">Expression for the property in the collection to observe.</param>
            <typeparam name="T">The type of the object containing the collection.</typeparam>
            <typeparam name="TList">The type of the collection.</typeparam>
            <returns>An observable that signals when the specified property in the collection changes.</returns>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.ReactiveAccessible.WhenAnyCollectionChanges``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
            <summary>
                Method to get an observable that signals when any of the specified collections change.
            </summary>
            <param name="collections">Expressions for the collections to observe.</param>
            <returns>An observable that signals when any of the specified collections change.</returns>
            <remarks>
                This method is used to observe changes in collections that are not directly observable.
            </remarks>
            <example>
                <code>
               WhenAnyCollectionChanges(x => x.Collection1, x => x.Collection2)
                  .Subscribe(args => Console.WriteLine($"Collection {args.Action}"));
             </code>
            </example>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.ReactiveAccessible.WhenPropertyChangesForPath(System.String)">
            <summary>
               Method to get an observable that signals when a property changes.
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.Strategies.DefaultObjectInspectorRefreshStrategy">
            <summary>
            Default implementation for <see cref="T:Keen.VRage.UI.Shared.ObjectInspector.Strategies.IObjectInspectorRefreshStrategy"/>.
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.Strategies.DefaultObjectInspectorVisibilityStrategy">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.Strategies.InspectorRefreshBehavior">
            <summary>
            Base class for specific <see cref="T:Keen.VRage.UI.Shared.ObjectInspector.Strategies.IObjectInspectorRefreshStrategy"/> behaviors.
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.Strategies.InspectorVisibilityBehaviour">
            <summary>
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.ObjectInspector.Strategies.InspectorVisibilityBehaviour.ControlElement">
            <summary>
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.Strategies.InspectorVisibilityBehaviour.Refresh">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.Strategies.InspectorVisibilityBehaviour.OperatingMode">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.Strategies.IObjectInspectorRefreshStrategy">
            <summary>
            Strategy to invoke <see cref="M:Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.INotifyValueChangedElement.RefreshValue(System.Nullable{Keen.VRage.Library.Serialization.MemberReference})"/>
            when the instance change from code.
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.Strategies.IObjectInspectorVisibilityStrategy">
            <summary>
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.Strategies.IObjectInspectorVisibilityStrategy.ShouldGenerate(Keen.VRage.Library.Serialization.MemberReference)">
            <summary>
            Should the member generate a PropertyElement at all
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.Strategies.IObjectInspectorVisibilityStrategy.ShowInInspector(Keen.VRage.Library.Serialization.MemberReference)">
            <summary>
            Should the PropertyElement be visible
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.Strategies.IObjectInspectorVisibilityStrategy.IsWritableInInspector(Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.IValuePropertyElement,Keen.VRage.UI.Shared.ObjectInspector.PropertyElements.Interfaces.IPropertyElementContainer)">
            <summary>
            Is the PropertyElement read-only in the inspector
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.Strategies.IObjectInspectorVisibilityStrategy.RefreshVisibility">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.Strategies.RefreshWhenNotifiedBehavior">
            <summary>
            Refresh property elements when current value is <see cref="T:System.ComponentModel.INotifyPropertyChanged"/>.
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.Strategies.ShowInInspectorWhenBehaviour">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.Strategies.WritableInInspectorWhenBehaviour">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ObjectInspector.TypeOptionManager">
            <summary>
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.TypeOptionManager.FindOptions(System.Collections.Generic.ISet{System.Type},System.Type,Keen.VRage.UI.Shared.ObjectInspector.TypeOptionManager.Filter,Keen.VRage.UI.Shared.ObjectInspector.TypeOptionManager.Filter,System.String)">
            <summary>
            Iterate over all descendant of <paramref name="declaredType"/> and filter them.
            </summary>
            <param name="into"></param>
            <param name="declaredType">Base type</param>
            <param name="staticValidate">Optional Filter that will be saved and shared with same <paramref name="ID"/>. 
            Should be constant.</param>
            <param name="dynamicValidate">Optional filter that will run each time this is called and is not shared.</param>
            <param name="ID"></param>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ObjectInspector.TypeOptionManager.FindOptions(System.Type,Keen.VRage.UI.Shared.ObjectInspector.TypeOptionManager.Filter,Keen.VRage.UI.Shared.ObjectInspector.TypeOptionManager.Filter,System.String)">
            <returns>A set of types without duplicate.</returns>
            <inheritdoc cref="M:Keen.VRage.UI.Shared.ObjectInspector.TypeOptionManager.FindOptions(System.Collections.Generic.ISet{System.Type},System.Type,Keen.VRage.UI.Shared.ObjectInspector.TypeOptionManager.Filter,Keen.VRage.UI.Shared.ObjectInspector.TypeOptionManager.Filter,System.String)"/>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Search.IMultiWordSearchService">
            <summary>
            
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Search.IPreciseSearchService">
            <summary>
            
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Search.ISearchService">
            <summary>
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Search.ISearchService.Search``1(System.Collections.Generic.IEnumerable{``0},System.String,System.Func{``0,System.Collections.Generic.IEnumerable{System.String}},System.Collections.Generic.IList{``0},System.StringComparison)">
            <summary>
            Searches the input enumeration for items matching all the worlds specified in search query, and adding them
            to the <paramref name="results"/> collection
            </summary>
            <param name="source">The source enumeration of items</param>
            <param name="searchQuery">The search query</param>
            <param name="itemTextFunc">The function for translating item to a string representation to be used for search</param>
            <param name="results">The list that will be filled with matched items</param>
            <param name="stringComparison"></param>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Search.ISearchService.Search``1(System.Collections.Generic.IEnumerable{``0},System.String,System.Func{``0,System.Collections.Generic.IEnumerable{System.String}},System.StringComparison)">
            <summary>
            <see cref="M:Keen.VRage.UI.Shared.Search.ISearchService.Search``1(System.Collections.Generic.IEnumerable{``0},System.String,System.Func{``0,System.Collections.Generic.IEnumerable{System.String}},System.Collections.Generic.IList{``0},System.StringComparison)"/>, this overload returns
            the matched items as enumerable instead of adding them to a list
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Settings.SettingsHelper">
            <summary>
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Settings.SettingsHelper.TryLoad``1(System.String,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Load settings from file
            </summary>
            <returns>Null when exception or not found</returns>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Settings.SettingsProviderBase">
            <summary>
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Settings.SettingsProviderBase.GetOrCreateSettings``1">
            <summary>
            Loads or creates new settings of type T
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Settings.SettingsProviderBase.TryGetSettings``1">
            <summary>
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Settings.SettingsProviderBase.SaveSettings``1(``0)">
            <summary>
             Saves the settings
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Settings.SettingsProviderBase.SaveLoadedSettings``1">
            <summary>
            Saves the settings from the cache
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Settings.SettingsProviderBase.GetAllSettings">
            <summary>
            Returns all currently loaded settings
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Settings.UserSettingsProvider">
            <summary>
            Settings that are saved in the AppData/Roaming folder
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Suggester.BaseSuggester`3">
            <summary>
            Converts generic <see cref="T:Keen.VRage.UI.Shared.Suggester.ISuggesterImplementation`3"/> to untyped <see cref="T:Keen.VRage.UI.Shared.Suggester.IUntypedSuggesterImplementation`1"/>
            </summary>
            <typeparam name="TSuggestionAttributeType"></typeparam>
            <typeparam name="TContext"></typeparam>
            <typeparam name="TFieldType"></typeparam>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Suggester.ConfigurationContextSuggester`2">
            <summary>
            Suggesters that generate values for Configuration should inherit this class
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Suggester.ISuggesterImplementation`3">
            <summary>
            All suggesters implement this interface
            </summary>
            <typeparam name="TSuggestionAttributeType">Is used to determine which attribute this implementation create suggestions for</typeparam>
            <typeparam name="TFieldType">Type of generated suggestions</typeparam>
            <typeparam name="TContextData">Typed of data passed to suggester</typeparam>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Suggester.ISuggesterImplementation`3.GetSuggestions(`0,`2,Keen.VRage.Library.Serialization.MemberReference)">
            <summary>
            Generate suggestions
            </summary>
            <param name="attribute">Instance of the field's attribute</param>
            <param name="contextData">Context data passed to suggester</param>
            <param name="member">Field instance</param>
            <returns></returns>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Suggester.IUntypedSuggesterImplementation`1">
            <summary>
            Expose untyped way of generating suggestions. The only type that should be specified is <typeparamref name="TContext"/>
            </summary>
            <typeparam name="TContext">Type of data will be passed to the suggester</typeparam>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Suggester.IUntypedSuggesterImplementation`1.GetSuggestionsUntyped(System.Object,`0,Keen.VRage.Library.Serialization.MemberReference)">
            <summary>
            Generate suggestions
            </summary>
            <param name="declarationAttribute">Instance of the field's attribute</param>
            <param name="contextData">Context data passed to suggester</param>
            <param name="member">Field instance</param>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Suggester.NullContext">
            <summary>
            Generic type stub
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Suggester.NullContextSuggester`2">
            <summary>
            Hides null context argument
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Suggester.SuggesterImplementationIndexerAttribute">
            <summary>
            All suggester implementations are marked with this attribute
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Suggester.SuggesterImplementationsIndexer">
            <summary>
            Gives access to suggesters implementation for a specific declaration
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.UIContextSwitches">
            <summary>
            Holder of constants read from the <see cref="T:System.AppContext"/> and used by VRage.UI to configure functionality at runtime.
            </summary>
            <remarks>
            <see cref="T:System.AppContext"/> switches can be set programatically—error prone since these are often checked in
            type initializers which are hard to control—or via the project using the <c>RuntimeHostConfigurationOption</c> project item.
            </remarks>
        </member>
        <member name="F:Keen.VRage.UI.Shared.UIContextSwitches.DEFAULT_UI_LOG_SEVERITY">
            <summary>
            Set the default logging severity for external logging services that implement ILogger.
            </summary>
            <remarks>
            <para>Expected Type: <see cref="T:Microsoft.Extensions.Logging.LogLevel"/>.</para>
            <para>Default value: <see cref="F:Microsoft.Extensions.Logging.LogLevel.Information"/>.</para>
            </remarks>
        </member>
        <member name="M:Keen.VRage.UI.Shared.UIContextSwitches.GetUILogSeverity">
            <summary>
            Gets the default log severity from a context switch.
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.UIContextSwitches.ParseEnum``1(System.String,``0)">
            <summary>
            Parses the string for an enum.
            The method will throw if T is not an enum type.
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ViewModels.AttachedViewModel">
            <summary>
            Smart VM, capable of lifetime handling, management of resources (disposing/releasing) and Update/Tick hooks
            <see cref="M:Keen.VRage.UI.Shared.ViewModels.AttachedViewModel.Attach``1(``0)"/> to parent immediately after creation.
            </summary>
        </member>
        <member name="F:Keen.VRage.UI.Shared.ViewModels.AttachedViewModel.OnBeforeDisposed">
            <summary>
            Triggers once before VM disposing begins
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ViewModels.AttachedViewModel.OnDispose">
            <summary>
            When overridden this method will be called when the VM is about to be disposed.
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ViewModels.AtomicToken">
            <summary>
            TODO: SE2-17437
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ViewModels.SequentialGuard">
            <summary>
            TODO: SE2-17437
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ViewModels.ViewModelBase">
            <summary />
        </member>
        <member name="F:Keen.VRage.UI.Shared.ViewModels.ViewModelBase._log">
            <summary>
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.ViewModels.ViewModelBase.#ctor">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.ViewModels.ViewModelLifetimeAdapter">
            <summary>
            Lifetime adapter that can be used with <see cref="T:Keen.VRage.UI.Shared.ViewModels.AttachedViewModel"/>.
            The lifetime will expire on disposal of the view model.
            It will throw on capturing the handle if used as lifetime adapter on any other type.
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.Views.ViewBase">
            <summary>
            Base view class to be inherited by various controls and screens.
            Implements shared functionality between VRage, Editor and HUB
            </summary>
        </member>
        <member name="P:Keen.VRage.UI.Shared.Views.ViewBase.ClickAwayDefocusEnabled">
            <summary>
            If true the screen will defocus any elements when clicking on an unfocusable space.
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.Views.ViewBase.ClickAwayDefocus(System.Object,Avalonia.Input.PointerPressedEventArgs)">
            <summary>
            If the user clicks away from a focusable control, the current control is defocused.
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.VRageDataObject">
            <summary>
            Equivalent to <see cref="T:Avalonia.Input.DataObject"/> but separating non-serializable data for internal use and data available to other application.  
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.VRageDataObject.GetExternal(System.String)">
            <summary>
            Return value that can be serialized using system serialization.
            </summary>
            <param name="dataFormat"></param>
            <returns>Serializable value or <see cref="T:Keen.VRage.UI.Shared.VRageDataObject.ExternalData"/>.</returns>
        </member>
        <member name="M:Keen.VRage.UI.Shared.VRageDataObject.GetInternal(System.String)">
            <summary>
            Return the value that can be use by this application.
            </summary>
            <param name="dataFormat"></param>
            <returns>Serializable value or <see cref="F:Keen.VRage.UI.Shared.VRageDataObject.ExternalData.InternalValue"/>.</returns>
        </member>
        <member name="M:Keen.VRage.UI.Shared.VRageDataObject.SetExternal(System.String,System.Object)">
            <summary>
            Set value for external applications.
            </summary>
            <param name="dataFormat"></param>
            <param name="value">Must be serializable.</param>
        </member>
        <member name="M:Keen.VRage.UI.Shared.VRageDataObject.SetInternal(System.String,System.Object)">
            <summary>
            Set value for this applications.
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.VRageDataObject.SetText(System.String)">
            <summary>
            Set text for external applications.
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.VRageDataObject.SetFiles(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Set files for external applications.
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.VRageDataObject.SetWithText(System.String,System.Object,System.String)">
            <summary>
            Set value for this applications with an equivalent text for external applications.
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.VRageDataObject.SetWithFiles(System.String,System.Object,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Set value for this applications with an equivalent files list for external applications.
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.VRageDataObject.ExternalData">
            <summary>
            Wrapper to disable serialization.
            </summary>
        </member>
        <member name="T:Keen.VRage.UI.Shared.VRageDataObjectHelper">
            <summary>
            Helper to use <see cref="T:Keen.VRage.UI.Shared.VRageDataObject"/> as or when wrapped by <see cref="T:Avalonia.Input.IDataObject"/>.
            </summary>
        </member>
        <member name="M:Keen.VRage.UI.Shared.VRageDataObjectHelper.GetInternal(Avalonia.Input.IDataObject,System.String)">
            <inheritdoc cref="M:Keen.VRage.UI.Shared.VRageDataObject.GetInternal(System.String)"/>
        </member>
        <member name="T:Keen.VRage.UI.Shared.DataFormats">
            <summary>
            List of knowned formats for clipboard and drag and drop
            </summary>
        </member>
        <member name="F:Keen.VRage.UI.Shared.DataFormats.Text">
            <summary>
            Avalonia format for texts.
            </summary>
        </member>
        <member name="F:Keen.VRage.UI.Shared.DataFormats.FileNames">
            <summary>
            Avalonia format for files.
            </summary>
        </member>
        <member name="F:Keen.VRage.UI.Shared.DataFormats.Files">
            <summary>
            Avalonia format for files.
            </summary>
        </member>
        <member name="F:Keen.VRage.UI.Shared.DataFormats.FileName">
            <summary>
            Single file name.
            </summary>
            <remarks>ANSI</remarks>
        </member>
        <member name="F:Keen.VRage.UI.Shared.DataFormats.FileNameW">
            <summary>
            Single file name.
            </summary>
            <remarks>UNICODE</remarks>
        </member>
        <member name="F:Keen.VRage.UI.Shared.DataFormats.TextHTML">
            <summary>
            HTML content.
            </summary>
        </member>
        <member name="F:Keen.VRage.UI.Shared.DataFormats.TextCSV">
            <summary>
            CSV content.
            </summary>
        </member>
        <member name="F:Keen.VRage.UI.Shared.DataFormats.TextPlain">
            <summary>
            Text content.
            </summary>
        </member>
        <member name="F:Keen.VRage.UI.Shared.DataFormats.HTMLFormat">
            <summary>
            Microsoft specific HTML clipboard format.
            </summary>
            <remarks>UTF-8</remarks>
        </member>
        <member name="F:Keen.VRage.UI.Shared.DataFormats.HTML">
            <inheritdoc cref="F:Keen.VRage.UI.Shared.DataFormats.TextHTML"/>
        </member>
        <member name="F:Keen.VRage.UI.Shared.DataFormats.CSV">
            <inheritdoc cref="F:Keen.VRage.UI.Shared.DataFormats.TextCSV"/>
        </member>
        <member name="F:Keen.VRage.UI.Shared.DataFormats.ImageBMP">
            <summary>
            Image BMP.
            </summary>
            <remarks>Binary</remarks>
        </member>
        <member name="F:Keen.VRage.UI.Shared.DataFormats.ImagePNG">
            <summary>
            Image PNG.
            </summary>
            <remarks>Binary</remarks>
        </member>
        <member name="F:Keen.VRage.UI.Shared.DataFormats.ImageGIF">
            <summary>
            Image GIF.
            </summary>
            <remarks>Binary</remarks>
        </member>
        <member name="F:Keen.VRage.UI.Shared.DataFormats.ImageJPEG">
            <summary>
            Image JPEG.
            </summary>
            <remarks>Binary</remarks>
        </member>
        <member name="F:Keen.VRage.UI.Shared.DataFormats.ImageTIFF">
            <summary>
            Image TIFF.
            </summary>
            <remarks>Binary</remarks>
        </member>
        <member name="F:Keen.VRage.UI.Shared.DataFormats.BMP">
            <inheritdoc cref="F:Keen.VRage.UI.Shared.DataFormats.ImageBMP"/>
        </member>
        <member name="F:Keen.VRage.UI.Shared.DataFormats.PNG">
            <inheritdoc cref="F:Keen.VRage.UI.Shared.DataFormats.ImagePNG"/>
        </member>
        <member name="F:Keen.VRage.UI.Shared.DataFormats.GIF">
            <inheritdoc cref="F:Keen.VRage.UI.Shared.DataFormats.ImageGIF"/>
        </member>
        <member name="F:Keen.VRage.UI.Shared.DataFormats.JPEG">
            <inheritdoc cref="F:Keen.VRage.UI.Shared.DataFormats.ImageJPEG"/>
        </member>
        <member name="F:Keen.VRage.UI.Shared.DataFormats.JPG">
            <inheritdoc cref="F:Keen.VRage.UI.Shared.DataFormats.ImageJPEG"/>
        </member>
        <member name="F:Keen.VRage.UI.Shared.DataFormats.VisualStudioRefProjectItems">
            <summary>
            Files for visual studio.
            </summary>
            <remarks>List should be double-NULL-terminated</remarks>
        </member>
        <member name="F:Keen.VRage.UI.Shared.DataFormats.VisualStudioDirProjectItems">
            <summary>
            Files for visual studio.
            </summary>
            <remarks>List should be double-NULL-terminated</remarks>
        </member>
        <member name="F:Keen.VRage.UI.Shared.DataFormats.VRageFiles">
            <summary>
            Objects that represents files or folders.
            </summary>
        </member>
        <member name="T:System.Runtime.CompilerServices.AsyncVoidMethodBuilder">
            <summary>
            Method builder for AsyncVoid methods.
            </summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.AsyncVoidMethodBuilder.Create">
            <summary>
            Create the method builder.
            </summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.AsyncVoidMethodBuilder.Start``1(``0@)">
            <summary>
            Start the state machine.
            </summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.AsyncVoidMethodBuilder.SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine)">
            <summary>
            Set the boxed state machine, unused.
            </summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.AsyncVoidMethodBuilder.SetException(System.Exception)">
            <summary>
            Notify about an exception while executing the state machine.
            </summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.AsyncVoidMethodBuilder.SetResult">
            <summary>
            Signal that the state machine has completed.
            </summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.AsyncVoidMethodBuilder.AwaitOnCompleted``2(``0@,``1@)">
            <summary>
            Await on another task.
            </summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.AsyncVoidMethodBuilder.AwaitUnsafeOnCompleted``2(``0@,``1@)">
            <summary>
            Await on another task.
            </summary>
        </member>
    </members>
</doc>
