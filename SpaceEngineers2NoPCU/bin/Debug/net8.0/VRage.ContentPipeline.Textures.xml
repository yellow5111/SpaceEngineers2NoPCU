<?xml version="1.0"?>
<doc>
    <assembly>
        <name>VRage.ContentPipeline.Textures</name>
    </assembly>
    <members>
        <member name="T:Keen.VRage.ContentPipeline.Textures.AssetTypes.TexturePresetAsset">
            <summary>
            Asset specifying the preset according to which the textures should be processed
            </summary>
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Textures.AssetTypes.TexturePresetAssetType">
            <summary>
            Specific asset type for files containing <see cref="T:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset"/>
            </summary>
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Textures.Combiner.ConstantChannelSource">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Textures.Combiner.IChannelSource">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Textures.Combiner.TangentSpaceToWorldSpaceNormalMapHelper">
            <summary>
            Methods to manipulate conversion of tangent space normal maps to world space for cubemaps.
            </summary>
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Combiner.TangentSpaceToWorldSpaceNormalMapHelper.Convert(OpenCvSharp.Mat,Keen.VRage.Library.Mathematics.Base6Directions.Direction,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Converts given normal map in XYZ format inside <paramref name="mat"/> instance from tangent space to world space.
            </summary>
            <remarks>Method uses <see cref="N:Keen.VRage.Library.Mathematics"/> for math computations to reduce interop calls.</remarks>
            <param name="mat"></param>
            <param name="direction"></param>
            <param name="logger"></param>
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Textures.Combiner.TextureChannelEnum">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Textures.Combiner.TextureChannelsCombiner">
            <summary>
            Evaluator for operations done on channels using visitor design pattern.
            </summary>
            <summary>
            Combiner class that is able to pack multiple input channels as well as perrform certain channel operations on them.
            </summary>
            <remarks>
            For handling unmanaged resources, use ResourceTracker.
            The convention is, that the topmost (callstack-closest to method instancing ResourceTracker instance)
            method returning new Mat instance has to become being tracked by ResourceTracker.
            </remarks>
        </member>
        <member name="F:Keen.VRage.ContentPipeline.Textures.Combiner.TextureChannelsCombiner.ChannelOperationEvaluator._result">
            <summary>
            Do not use this field directly when implementing new operations!
            Always use <see cref="M:Keen.VRage.ContentPipeline.Textures.Combiner.TextureChannelsCombiner.ChannelOperationEvaluator.GetChannelResult(Keen.VRage.ContentPipeline.Textures.Preset.ITextureChannelsOperation)"/> and
            <see cref="M:Keen.VRage.ContentPipeline.Textures.Combiner.TextureChannelsCombiner.ChannelOperationEvaluator.StoreResult(OpenCvSharp.Mat)"/> for passing data between operations
            </summary>
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Textures.Combiner.TextureChannelsCombiner.CombinedTexture">
            <summary>
            Wraps objects related to OpenCV representation of texture combined from multiple channels. Can save to file.
            Holds unmanaged resources.
            </summary>
        </member>
        <member name="F:Keen.VRage.ContentPipeline.Textures.Combiner.TextureChannelsCombiner.DEFAULT_TEXTURE_SIZE">
            <summary>
            The size of texture if no source textures are present
            </summary>
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Combiner.TextureChannelsCombiner.CombineTextureChannels(Keen.VRage.ContentPipeline.Textures.Combiner.InputChannel[],Keen.VRage.ContentPipeline.Textures.Preset.ITextureChannelsOperation[])">
            <summary>
            Performs the texture combination from source channels. Returns texture object that can be saved with given compression.
            </summary>
            <param name="channelSources">Channel sources, can be reference to a file or a constant value</param>
            <param name="channelOperations">
            Final channel definitions usually use indices of the <paramref name="channelSources"/> collection for data source.
            The array order defines the output texture channels order.</param>
            <returns>An composed texture object that can be further worked with (save to a file)</returns>
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Combiner.TextureChannelsCombiner.TryGetMatsSize(OpenCvSharp.Mat[],OpenCvSharp.Size@)">
            <summary>
            Attempts to determine size of all Mat instances. All Mats has to be either null or of the same size.
            </summary>
            <param name="mats">List of input Mat instances</param>
            <param name="size">Size that all non-null Mat instances share, or size of 4x4 if no matrices are non-null.
            When some Mat size differs, this parameter will be set to first such detected mismatch</param>
            <returns><see langword="false"/> if some inputs differ in size, <see langword="true"/> otherwise</returns>
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Textures.Combiner.InputChannel">
            <summary>
            
            </summary>
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Textures.Combiner.CombineTextureResult">
            <seealso cref="T:Keen.VRage.ContentPipeline.Textures.Combiner.TextureChannelsCombiner.CombinedTexture"/>
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Textures.Combiner.TextureChannelSource">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureAssetType">
            <summary>
            Editor-specific texture asset type. Supplements <see cref="T:Keen.VRage.Core.Render.TextureAsset"/>
            </summary>
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel">
            <summary>
            Model for a composite texture asset
            </summary>
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.Rotation">
            <summary>
            Rotate the image 90 degrees, 180 degrees, or 270 degrees
            </summary>
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.Flip">
            <summary>
            Flip the texture Horizontal, Vertical, or Both
            </summary>
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#ContentPipeline#Textures#Composite#CompositeTextureModel}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.TypeInfoHolder.PresetReferenceAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.TypeInfoHolder.PresetReferenceAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.TypeInfoHolder.PresetReferenceAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.TypeInfoHolder.PresetReferenceAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.TypeInfoHolder.PresetReferenceAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.TypeInfoHolder.PresetReferenceAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.TypeInfoHolder.PresetReferenceAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.TypeInfoHolder.PresetReferenceAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.TypeInfoHolder.PresetReferenceAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.TypeInfoHolder.PresetReferenceAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.TypeInfoHolder.PresetReferenceAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.TypeInfoHolder.PresetReferenceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.TypeInfoHolder.PresetReferenceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.TypeInfoHolder.PresetReferenceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.TypeInfoHolder.PresetReferenceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#EditorResourceHandle{Keen#VRage#ContentPipeline#Textures#AssetTypes#TexturePresetAsset}}#Set(System.Object,Keen.VRage.ContentPipeline.EditorResourceHandle{Keen.VRage.ContentPipeline.Textures.AssetTypes.TexturePresetAsset}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.TypeInfoHolder.PresetReferenceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#EditorResourceHandle{Keen#VRage#ContentPipeline#Textures#AssetTypes#TexturePresetAsset}}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.TypeInfoHolder.PresetReferenceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#EditorResourceHandle{Keen#VRage#ContentPipeline#Textures#AssetTypes#TexturePresetAsset}}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.TypeInfoHolder.PresetReferenceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#EditorResourceHandle{Keen#VRage#ContentPipeline#Textures#AssetTypes#TexturePresetAsset}}#Set(System.Byte@,Keen.VRage.ContentPipeline.EditorResourceHandle{Keen.VRage.ContentPipeline.Textures.AssetTypes.TexturePresetAsset}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.TypeInfoHolder.PresetReferenceAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.TypeInfoHolder.PresetReferenceAccessor.Set(Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel@,Keen.VRage.ContentPipeline.EditorResourceHandle{Keen.VRage.ContentPipeline.Textures.AssetTypes.TexturePresetAsset}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.TypeInfoHolder.PresetReferenceAccessor.Get(Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.TypeInfoHolder.RotationAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.TypeInfoHolder.RotationAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.TypeInfoHolder.RotationAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.TypeInfoHolder.RotationAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.TypeInfoHolder.RotationAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.TypeInfoHolder.RotationAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.TypeInfoHolder.RotationAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.TypeInfoHolder.RotationAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.TypeInfoHolder.RotationAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.TypeInfoHolder.RotationAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.TypeInfoHolder.RotationAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.TypeInfoHolder.RotationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.TypeInfoHolder.RotationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.TypeInfoHolder.RotationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.TypeInfoHolder.RotationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Composite#CompositeTextureRotationSelection}#Set(System.Object,Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureRotationSelection@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.TypeInfoHolder.RotationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Composite#CompositeTextureRotationSelection}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.TypeInfoHolder.RotationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Composite#CompositeTextureRotationSelection}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.TypeInfoHolder.RotationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Composite#CompositeTextureRotationSelection}#Set(System.Byte@,Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureRotationSelection@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.TypeInfoHolder.RotationAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.TypeInfoHolder.RotationAccessor.Set(Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel@,Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureRotationSelection@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.TypeInfoHolder.RotationAccessor.Get(Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.TypeInfoHolder.FlipAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.TypeInfoHolder.FlipAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.TypeInfoHolder.FlipAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.TypeInfoHolder.FlipAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.TypeInfoHolder.FlipAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.TypeInfoHolder.FlipAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.TypeInfoHolder.FlipAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.TypeInfoHolder.FlipAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.TypeInfoHolder.FlipAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.TypeInfoHolder.FlipAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.TypeInfoHolder.FlipAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.TypeInfoHolder.FlipAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.TypeInfoHolder.FlipAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.TypeInfoHolder.FlipAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.TypeInfoHolder.FlipAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Composite#CompositeTextureFlipSelection}#Set(System.Object,Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureFlipSelection@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.TypeInfoHolder.FlipAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Composite#CompositeTextureFlipSelection}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.TypeInfoHolder.FlipAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Composite#CompositeTextureFlipSelection}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.TypeInfoHolder.FlipAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Composite#CompositeTextureFlipSelection}#Set(System.Byte@,Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureFlipSelection@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.TypeInfoHolder.FlipAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.TypeInfoHolder.FlipAccessor.Set(Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel@,Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureFlipSelection@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.TypeInfoHolder.FlipAccessor.Get(Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.TypeInfoHolder.PresetModelAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.TypeInfoHolder.PresetModelAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.TypeInfoHolder.PresetModelAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.TypeInfoHolder.PresetModelAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.TypeInfoHolder.PresetModelAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.TypeInfoHolder.PresetModelAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.TypeInfoHolder.PresetModelAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.TypeInfoHolder.PresetModelAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.TypeInfoHolder.PresetModelAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.TypeInfoHolder.PresetModelAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.TypeInfoHolder.PresetModelAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.TypeInfoHolder.PresetModelAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.TypeInfoHolder.PresetModelAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.TypeInfoHolder.PresetModelAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.TypeInfoHolder.PresetModelAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Composite#CompositeTexturePresetModel}#Set(System.Object,Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.TypeInfoHolder.PresetModelAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Composite#CompositeTexturePresetModel}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.TypeInfoHolder.PresetModelAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Composite#CompositeTexturePresetModel}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.TypeInfoHolder.PresetModelAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Composite#CompositeTexturePresetModel}#Set(System.Byte@,Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.TypeInfoHolder.PresetModelAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.TypeInfoHolder.PresetModelAccessor.Set(Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel@,Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel.TypeInfoHolder.PresetModelAccessor.Get(Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureRotationSelection">
            <summary>
            
            </summary>
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureFlipSelection">
            <summary>
            
            </summary>
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel">
            <summary>
            Model for a composite texture preset
            </summary>
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceBase">
            <summary>
            Base class for composite texture channel sources types
            </summary>
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceBase.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceBase.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceBase.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceBase@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceBase.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceBase.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceBase@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceBase.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceBase.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceBase@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceBase.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceBase.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceBase.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceBase.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceBase.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceBase@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceBase.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceBase.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceBase@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceBase.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceBase.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceBase@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceBase.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceBase.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceBase@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceBase.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceBase.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceBase.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceBase.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceBase.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#ContentPipeline#Textures#Composite#CompositeTexturePresetModel#SourceBase}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceBase.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceBase.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceBase.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceBase.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceTexture">
            <summary>
            Composite texture source from a texture file
            </summary>
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceTexture.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceTexture.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceTexture.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceTexture@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceTexture.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceTexture.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceTexture@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceTexture.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceTexture.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceTexture@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceTexture.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceTexture.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceTexture.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceTexture.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceTexture.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceTexture@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceTexture.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceTexture.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceTexture@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceTexture.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceTexture.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceTexture@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceTexture.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceTexture.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceTexture@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceTexture.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceTexture.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceTexture.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceTexture.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceTexture.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#ContentPipeline#Textures#Composite#CompositeTexturePresetModel#SourceTexture}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceTexture.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceTexture.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceTexture.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceTexture.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceTexture.TypeInfoHolder.TextureAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceTexture.TypeInfoHolder.TextureAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceTexture.TypeInfoHolder.TextureAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceTexture.TypeInfoHolder.TextureAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceTexture.TypeInfoHolder.TextureAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceTexture.TypeInfoHolder.TextureAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceTexture.TypeInfoHolder.TextureAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceTexture.TypeInfoHolder.TextureAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceTexture.TypeInfoHolder.TextureAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceTexture.TypeInfoHolder.TextureAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceTexture.TypeInfoHolder.TextureAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceTexture.TypeInfoHolder.TextureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceTexture.TypeInfoHolder.TextureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceTexture.TypeInfoHolder.TextureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceTexture.TypeInfoHolder.TextureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#EditorResourceHandle{Keen#VRage#Core#Render#PngAsset}?}#Set(System.Object,System.Nullable{Keen.VRage.ContentPipeline.EditorResourceHandle{Keen.VRage.Core.Render.PngAsset}}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceTexture.TypeInfoHolder.TextureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#EditorResourceHandle{Keen#VRage#Core#Render#PngAsset}?}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceTexture.TypeInfoHolder.TextureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#EditorResourceHandle{Keen#VRage#Core#Render#PngAsset}?}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceTexture.TypeInfoHolder.TextureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#EditorResourceHandle{Keen#VRage#Core#Render#PngAsset}?}#Set(System.Byte@,System.Nullable{Keen.VRage.ContentPipeline.EditorResourceHandle{Keen.VRage.Core.Render.PngAsset}}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceTexture.TypeInfoHolder.TextureAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceTexture.TypeInfoHolder.TextureAccessor.Set(Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceTexture@,System.Nullable{Keen.VRage.ContentPipeline.EditorResourceHandle{Keen.VRage.Core.Render.PngAsset}}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceTexture.TypeInfoHolder.TextureAccessor.Get(Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceTexture@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceConstantValue">
            <summary>
            Composite texture source using a constant value
            </summary>
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceConstantValue.ConstantValue">
            <summary>
            Constant value used for the channel
            </summary>    
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceConstantValue.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceConstantValue.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceConstantValue.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceConstantValue@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceConstantValue.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceConstantValue.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceConstantValue@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceConstantValue.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceConstantValue.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceConstantValue@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceConstantValue.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceConstantValue.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceConstantValue.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceConstantValue.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceConstantValue.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceConstantValue@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceConstantValue.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceConstantValue.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceConstantValue@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceConstantValue.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceConstantValue.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceConstantValue@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceConstantValue.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceConstantValue.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceConstantValue@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceConstantValue.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceConstantValue.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceConstantValue.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceConstantValue.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceConstantValue.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#ContentPipeline#Textures#Composite#CompositeTexturePresetModel#SourceConstantValue}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceConstantValue.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceConstantValue.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceConstantValue.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceConstantValue.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceConstantValue.TypeInfoHolder._constantValueAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceConstantValue.TypeInfoHolder._constantValueAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceConstantValue.TypeInfoHolder._constantValueAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceConstantValue.TypeInfoHolder._constantValueAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceConstantValue.TypeInfoHolder._constantValueAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceConstantValue.TypeInfoHolder._constantValueAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceConstantValue.TypeInfoHolder._constantValueAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceConstantValue.TypeInfoHolder._constantValueAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceConstantValue.TypeInfoHolder._constantValueAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceConstantValue.TypeInfoHolder._constantValueAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceConstantValue.TypeInfoHolder._constantValueAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceConstantValue.TypeInfoHolder._constantValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceConstantValue.TypeInfoHolder._constantValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceConstantValue.TypeInfoHolder._constantValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceConstantValue.TypeInfoHolder._constantValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Object,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceConstantValue.TypeInfoHolder._constantValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceConstantValue.TypeInfoHolder._constantValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceConstantValue.TypeInfoHolder._constantValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Byte@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceConstantValue.TypeInfoHolder._constantValueAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceConstantValue.TypeInfoHolder._constantValueAccessor.Set(Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceConstantValue@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceConstantValue.TypeInfoHolder._constantValueAccessor.Get(Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceConstantValue@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceConstantValue.TypeInfoHolder.ConstantValueAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceConstantValue.TypeInfoHolder.ConstantValueAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceConstantValue.TypeInfoHolder.ConstantValueAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceConstantValue.TypeInfoHolder.ConstantValueAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceConstantValue.TypeInfoHolder.ConstantValueAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceConstantValue.TypeInfoHolder.ConstantValueAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceConstantValue.TypeInfoHolder.ConstantValueAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceConstantValue.TypeInfoHolder.ConstantValueAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceConstantValue.TypeInfoHolder.ConstantValueAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceConstantValue.TypeInfoHolder.ConstantValueAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceConstantValue.TypeInfoHolder.ConstantValueAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceConstantValue.TypeInfoHolder.ConstantValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceConstantValue.TypeInfoHolder.ConstantValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceConstantValue.TypeInfoHolder.ConstantValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceConstantValue.TypeInfoHolder.ConstantValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Object,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceConstantValue.TypeInfoHolder.ConstantValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceConstantValue.TypeInfoHolder.ConstantValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceConstantValue.TypeInfoHolder.ConstantValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Byte@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceConstantValue.TypeInfoHolder.ConstantValueAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceConstantValue.TypeInfoHolder.ConstantValueAccessor.Set(Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceConstantValue@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceConstantValue.TypeInfoHolder.ConstantValueAccessor.Get(Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceConstantValue@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#ContentPipeline#Textures#Composite#CompositeTexturePresetModel}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.TypeInfoHolder.TextureSourceModelsAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.TypeInfoHolder.TextureSourceModelsAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.TypeInfoHolder.TextureSourceModelsAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.TypeInfoHolder.TextureSourceModelsAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.TypeInfoHolder.TextureSourceModelsAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.TypeInfoHolder.TextureSourceModelsAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.TypeInfoHolder.TextureSourceModelsAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.TypeInfoHolder.TextureSourceModelsAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.TypeInfoHolder.TextureSourceModelsAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.TypeInfoHolder.TextureSourceModelsAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.TypeInfoHolder.TextureSourceModelsAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.TypeInfoHolder.TextureSourceModelsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.TypeInfoHolder.TextureSourceModelsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.TypeInfoHolder.TextureSourceModelsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.TypeInfoHolder.TextureSourceModelsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{Keen#VRage#ContentPipeline#Textures#Composite#CompositeTexturePresetModel#SourceBase}}#Set(System.Object,System.Collections.Generic.List{Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceBase}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.TypeInfoHolder.TextureSourceModelsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{Keen#VRage#ContentPipeline#Textures#Composite#CompositeTexturePresetModel#SourceBase}}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.TypeInfoHolder.TextureSourceModelsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{Keen#VRage#ContentPipeline#Textures#Composite#CompositeTexturePresetModel#SourceBase}}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.TypeInfoHolder.TextureSourceModelsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{Keen#VRage#ContentPipeline#Textures#Composite#CompositeTexturePresetModel#SourceBase}}#Set(System.Byte@,System.Collections.Generic.List{Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceBase}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.TypeInfoHolder.TextureSourceModelsAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.TypeInfoHolder.TextureSourceModelsAccessor.Set(Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel@,System.Collections.Generic.List{Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.SourceBase}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel.TypeInfoHolder.TextureSourceModelsAccessor.Get(Keen.VRage.ContentPipeline.Textures.Composite.CompositeTexturePresetModel@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel">
            <summary>
            Model for preset source texture shown in the Property Inspector
            </summary>
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.ConstantValue">
            <summary>
            Constant value used for the channel
            </summary>    
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#ContentPipeline#Textures#Composite#CompositeTextureSourceModel}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.TypeInfoHolder.TextureAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.TypeInfoHolder.TextureAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.TypeInfoHolder.TextureAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.TypeInfoHolder.TextureAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.TypeInfoHolder.TextureAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.TypeInfoHolder.TextureAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.TypeInfoHolder.TextureAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.TypeInfoHolder.TextureAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.TypeInfoHolder.TextureAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.TypeInfoHolder.TextureAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.TypeInfoHolder.TextureAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.TypeInfoHolder.TextureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.TypeInfoHolder.TextureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.TypeInfoHolder.TextureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.TypeInfoHolder.TextureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#EditorResourceHandle{Keen#VRage#Core#Render#PngAsset}?}#Set(System.Object,System.Nullable{Keen.VRage.ContentPipeline.EditorResourceHandle{Keen.VRage.Core.Render.PngAsset}}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.TypeInfoHolder.TextureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#EditorResourceHandle{Keen#VRage#Core#Render#PngAsset}?}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.TypeInfoHolder.TextureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#EditorResourceHandle{Keen#VRage#Core#Render#PngAsset}?}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.TypeInfoHolder.TextureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#EditorResourceHandle{Keen#VRage#Core#Render#PngAsset}?}#Set(System.Byte@,System.Nullable{Keen.VRage.ContentPipeline.EditorResourceHandle{Keen.VRage.Core.Render.PngAsset}}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.TypeInfoHolder.TextureAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.TypeInfoHolder.TextureAccessor.Set(Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel@,System.Nullable{Keen.VRage.ContentPipeline.EditorResourceHandle{Keen.VRage.Core.Render.PngAsset}}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.TypeInfoHolder.TextureAccessor.Get(Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.TypeInfoHolder._constantValueAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.TypeInfoHolder._constantValueAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.TypeInfoHolder._constantValueAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.TypeInfoHolder._constantValueAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.TypeInfoHolder._constantValueAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.TypeInfoHolder._constantValueAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.TypeInfoHolder._constantValueAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.TypeInfoHolder._constantValueAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.TypeInfoHolder._constantValueAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.TypeInfoHolder._constantValueAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.TypeInfoHolder._constantValueAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.TypeInfoHolder._constantValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.TypeInfoHolder._constantValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.TypeInfoHolder._constantValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.TypeInfoHolder._constantValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Object,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.TypeInfoHolder._constantValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.TypeInfoHolder._constantValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.TypeInfoHolder._constantValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Byte@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.TypeInfoHolder._constantValueAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.TypeInfoHolder._constantValueAccessor.Set(Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.TypeInfoHolder._constantValueAccessor.Get(Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.TypeInfoHolder.ConstantValueAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.TypeInfoHolder.ConstantValueAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.TypeInfoHolder.ConstantValueAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.TypeInfoHolder.ConstantValueAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.TypeInfoHolder.ConstantValueAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.TypeInfoHolder.ConstantValueAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.TypeInfoHolder.ConstantValueAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.TypeInfoHolder.ConstantValueAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.TypeInfoHolder.ConstantValueAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.TypeInfoHolder.ConstantValueAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.TypeInfoHolder.ConstantValueAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.TypeInfoHolder.ConstantValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.TypeInfoHolder.ConstantValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.TypeInfoHolder.ConstantValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.TypeInfoHolder.ConstantValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Object,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.TypeInfoHolder.ConstantValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.TypeInfoHolder.ConstantValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.TypeInfoHolder.ConstantValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Byte@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.TypeInfoHolder.ConstantValueAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.TypeInfoHolder.ConstantValueAccessor.Set(Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.TypeInfoHolder.ConstantValueAccessor.Get(Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.TypeInfoHolder.SourceSelectionAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.TypeInfoHolder.SourceSelectionAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.TypeInfoHolder.SourceSelectionAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.TypeInfoHolder.SourceSelectionAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.TypeInfoHolder.SourceSelectionAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.TypeInfoHolder.SourceSelectionAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.TypeInfoHolder.SourceSelectionAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.TypeInfoHolder.SourceSelectionAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.TypeInfoHolder.SourceSelectionAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.TypeInfoHolder.SourceSelectionAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.TypeInfoHolder.SourceSelectionAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.TypeInfoHolder.SourceSelectionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.TypeInfoHolder.SourceSelectionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.TypeInfoHolder.SourceSelectionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.TypeInfoHolder.SourceSelectionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Composite#CompositeTextureSourceSelection}#Set(System.Object,Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceSelection@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.TypeInfoHolder.SourceSelectionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Composite#CompositeTextureSourceSelection}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.TypeInfoHolder.SourceSelectionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Composite#CompositeTextureSourceSelection}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.TypeInfoHolder.SourceSelectionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Composite#CompositeTextureSourceSelection}#Set(System.Byte@,Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceSelection@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.TypeInfoHolder.SourceSelectionAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.TypeInfoHolder.SourceSelectionAccessor.Set(Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel@,Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceSelection@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel.TypeInfoHolder.SourceSelectionAccessor.Get(Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceModel@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureSourceSelection">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapAssetType">
            <summary>
            Cubemap asset type
            </summary>
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel">
            <summary>
            </summary>
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.Category">
            <summary>
            Hint category about how this cubemap should be used. Has no effect on the output DDS file.
            </summary>
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.OutputFormatOverride">
            <summary>
            Format of the output DDS file. Example: 'BC7_UNORM_SRGB', 'R8G8B8A8_FLOAT'
            </summary>
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.CheckIntegrity">
            <summary>
            Checks that the model data is in expected format.
            Only checks data integrity, logical data validation is up to user to validate.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#ContentPipeline#Textures#Cubemaps#CubemapModel}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.CategoryAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.CategoryAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.CategoryAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.CategoryAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.CategoryAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.CategoryAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.CategoryAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.CategoryAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.CategoryAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.CategoryAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.CategoryAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.CategoryAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.CategoryAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.CategoryAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.CategoryAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Cubemaps#CubemapCategory}#Set(System.Object,Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapCategory@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.CategoryAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Cubemaps#CubemapCategory}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.CategoryAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Cubemaps#CubemapCategory}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.CategoryAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Cubemaps#CubemapCategory}#Set(System.Byte@,Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapCategory@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.CategoryAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.CategoryAccessor.Set(Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel@,Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapCategory@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.CategoryAccessor.Get(Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.PositiveXTextureAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.PositiveXTextureAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.PositiveXTextureAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.PositiveXTextureAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.PositiveXTextureAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.PositiveXTextureAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.PositiveXTextureAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.PositiveXTextureAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.PositiveXTextureAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.PositiveXTextureAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.PositiveXTextureAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.PositiveXTextureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.PositiveXTextureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.PositiveXTextureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.PositiveXTextureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Cubemaps#CubemapSource}#Set(System.Object,Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapSource@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.PositiveXTextureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Cubemaps#CubemapSource}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.PositiveXTextureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Cubemaps#CubemapSource}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.PositiveXTextureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Cubemaps#CubemapSource}#Set(System.Byte@,Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapSource@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.PositiveXTextureAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.PositiveXTextureAccessor.Set(Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel@,Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapSource@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.PositiveXTextureAccessor.Get(Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.NegativeXTextureAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.NegativeXTextureAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.NegativeXTextureAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.NegativeXTextureAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.NegativeXTextureAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.NegativeXTextureAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.NegativeXTextureAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.NegativeXTextureAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.NegativeXTextureAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.NegativeXTextureAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.NegativeXTextureAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.NegativeXTextureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.NegativeXTextureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.NegativeXTextureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.NegativeXTextureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Cubemaps#CubemapSource}#Set(System.Object,Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapSource@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.NegativeXTextureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Cubemaps#CubemapSource}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.NegativeXTextureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Cubemaps#CubemapSource}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.NegativeXTextureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Cubemaps#CubemapSource}#Set(System.Byte@,Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapSource@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.NegativeXTextureAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.NegativeXTextureAccessor.Set(Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel@,Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapSource@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.NegativeXTextureAccessor.Get(Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.PositiveYTextureAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.PositiveYTextureAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.PositiveYTextureAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.PositiveYTextureAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.PositiveYTextureAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.PositiveYTextureAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.PositiveYTextureAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.PositiveYTextureAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.PositiveYTextureAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.PositiveYTextureAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.PositiveYTextureAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.PositiveYTextureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.PositiveYTextureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.PositiveYTextureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.PositiveYTextureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Cubemaps#CubemapSource}#Set(System.Object,Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapSource@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.PositiveYTextureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Cubemaps#CubemapSource}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.PositiveYTextureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Cubemaps#CubemapSource}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.PositiveYTextureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Cubemaps#CubemapSource}#Set(System.Byte@,Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapSource@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.PositiveYTextureAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.PositiveYTextureAccessor.Set(Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel@,Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapSource@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.PositiveYTextureAccessor.Get(Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.NegativeYTextureAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.NegativeYTextureAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.NegativeYTextureAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.NegativeYTextureAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.NegativeYTextureAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.NegativeYTextureAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.NegativeYTextureAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.NegativeYTextureAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.NegativeYTextureAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.NegativeYTextureAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.NegativeYTextureAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.NegativeYTextureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.NegativeYTextureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.NegativeYTextureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.NegativeYTextureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Cubemaps#CubemapSource}#Set(System.Object,Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapSource@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.NegativeYTextureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Cubemaps#CubemapSource}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.NegativeYTextureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Cubemaps#CubemapSource}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.NegativeYTextureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Cubemaps#CubemapSource}#Set(System.Byte@,Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapSource@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.NegativeYTextureAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.NegativeYTextureAccessor.Set(Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel@,Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapSource@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.NegativeYTextureAccessor.Get(Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.PositiveZTextureAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.PositiveZTextureAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.PositiveZTextureAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.PositiveZTextureAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.PositiveZTextureAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.PositiveZTextureAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.PositiveZTextureAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.PositiveZTextureAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.PositiveZTextureAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.PositiveZTextureAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.PositiveZTextureAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.PositiveZTextureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.PositiveZTextureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.PositiveZTextureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.PositiveZTextureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Cubemaps#CubemapSource}#Set(System.Object,Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapSource@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.PositiveZTextureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Cubemaps#CubemapSource}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.PositiveZTextureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Cubemaps#CubemapSource}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.PositiveZTextureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Cubemaps#CubemapSource}#Set(System.Byte@,Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapSource@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.PositiveZTextureAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.PositiveZTextureAccessor.Set(Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel@,Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapSource@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.PositiveZTextureAccessor.Get(Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.NegativeZTextureAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.NegativeZTextureAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.NegativeZTextureAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.NegativeZTextureAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.NegativeZTextureAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.NegativeZTextureAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.NegativeZTextureAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.NegativeZTextureAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.NegativeZTextureAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.NegativeZTextureAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.NegativeZTextureAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.NegativeZTextureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.NegativeZTextureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.NegativeZTextureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.NegativeZTextureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Cubemaps#CubemapSource}#Set(System.Object,Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapSource@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.NegativeZTextureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Cubemaps#CubemapSource}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.NegativeZTextureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Cubemaps#CubemapSource}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.NegativeZTextureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Cubemaps#CubemapSource}#Set(System.Byte@,Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapSource@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.NegativeZTextureAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.NegativeZTextureAccessor.Set(Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel@,Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapSource@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.NegativeZTextureAccessor.Get(Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.OutputFormatOverrideAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.OutputFormatOverrideAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.OutputFormatOverrideAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.OutputFormatOverrideAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.OutputFormatOverrideAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.OutputFormatOverrideAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.OutputFormatOverrideAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.OutputFormatOverrideAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.OutputFormatOverrideAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.OutputFormatOverrideAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.OutputFormatOverrideAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.OutputFormatOverrideAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.OutputFormatOverrideAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.OutputFormatOverrideAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.OutputFormatOverrideAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Object,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.OutputFormatOverrideAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.OutputFormatOverrideAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.OutputFormatOverrideAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Byte@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.OutputFormatOverrideAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.OutputFormatOverrideAccessor.Set(Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel.TypeInfoHolder.OutputFormatOverrideAccessor.Get(Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapModel@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapSource">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapSource.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapSource.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapSource.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapSource@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapSource.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapSource.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapSource@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapSource.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapSource.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapSource@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapSource.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapSource.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapSource.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapSource.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapSource.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapSource@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapSource.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapSource.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapSource@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapSource.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapSource.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapSource@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapSource.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapSource.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapSource@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapSource.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapSource.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapSource.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapSource.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapSource.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#ContentPipeline#Textures#Cubemaps#CubemapSource}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapSource.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapSource.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapSource.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapSource.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapSource.TypeInfoHolder.TextureAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapSource.TypeInfoHolder.TextureAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapSource.TypeInfoHolder.TextureAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapSource.TypeInfoHolder.TextureAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapSource.TypeInfoHolder.TextureAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapSource.TypeInfoHolder.TextureAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapSource.TypeInfoHolder.TextureAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapSource.TypeInfoHolder.TextureAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapSource.TypeInfoHolder.TextureAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapSource.TypeInfoHolder.TextureAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapSource.TypeInfoHolder.TextureAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapSource.TypeInfoHolder.TextureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapSource.TypeInfoHolder.TextureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapSource.TypeInfoHolder.TextureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapSource.TypeInfoHolder.TextureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#EditorResourceHandle{Keen#VRage#Core#Render#TextureAsset}}#Set(System.Object,Keen.VRage.ContentPipeline.EditorResourceHandle{Keen.VRage.Core.Render.TextureAsset}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapSource.TypeInfoHolder.TextureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#EditorResourceHandle{Keen#VRage#Core#Render#TextureAsset}}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapSource.TypeInfoHolder.TextureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#EditorResourceHandle{Keen#VRage#Core#Render#TextureAsset}}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapSource.TypeInfoHolder.TextureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#EditorResourceHandle{Keen#VRage#Core#Render#TextureAsset}}#Set(System.Byte@,Keen.VRage.ContentPipeline.EditorResourceHandle{Keen.VRage.Core.Render.TextureAsset}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapSource.TypeInfoHolder.TextureAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapSource.TypeInfoHolder.TextureAccessor.Set(Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapSource@,Keen.VRage.ContentPipeline.EditorResourceHandle{Keen.VRage.Core.Render.TextureAsset}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapSource.TypeInfoHolder.TextureAccessor.Get(Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapSource@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapCategory">
            <summary>
            </summary>
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapProcessor.TryConvertCompositeTextureToTemporaryFile(Keen.VRage.ContentPipeline.Project.Features.AssetProcessing.AssetAccessor,Keen.VRage.ContentPipeline.Project.Features.AssetProcessing.ProcessingFileProxy)">
            <summary>
            Converts the .comptex file to a texture file according to specification, in temporary location.
            If this method succeeds, the caller is responsible to clean the temporary files.
            </summary>
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Textures.Cubemaps.CubemapProcessor.TemporaryFiles">
            <summary>
            TODO: replace with shared utility used to create temporary files <see cref="T:Keen.VRage.ContentPipeline.Common.TemporaryFileUtils"/>
            </summary>
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Textures.Cubemaps.Editor.CubemapAssetInterface">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Textures.Cubemaps.Editor.CubemapGeneratorProvider">
            <summary>
            Generator provider for cubemap assets
            </summary>
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Textures.DataChannel">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Textures.Editor.CompositeTextureAssetInterface">
            <summary>
            Editor Asset Interface for CompositeTexture asset types
            </summary>
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Textures.Editor.CompositeTextureAssetValidation">
            <summary>
            Validation used to validate and patch <see cref="T:Keen.VRage.ContentPipeline.Textures.Composite.CompositeTextureModel"/> assets
            </summary>
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Textures.Editor.CompositeTextureGeneratorProvider">
            <summary>
            Generator provider for composite texture asset
            </summary>
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Textures.Editor.TexturePackingPresetInterface">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Textures.Editor.TexturePresetAssetValidation">
            <summary>
            Validation used to validate and patch <see cref="T:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset"/> assets
            </summary>
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Textures.MipProcessors.MipOperationNormalRoughness">
            <summary>
            Normal deviation encoded roughness mip generation for normal roughness textures.
            A modified version of Toksvig for the GGX microfacet model. Each mip level, normals are normalized and their lengths are then multiplied by the average
            normal length of GGX importance sampled distributions for the roughness at those pixels. Then the normals are averaged using a box resize. The
            averaging of normals reduces their length, and this length is converted back to roughness values using an inverse function and stored in that mip's
            roughness channel. The normals are then normalized, stored, and the process continues on the next mip level.
            The end effect is that information lost by averaging normals in mip mapping is encoded into roughness, to ensure that objects do not become perpetually
            more shiny / less rough when lower mips are sampled and normal detail is lost.
            </summary>
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Textures.MipProcessors.MipOperationNormalRoughness.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.MipProcessors.MipOperationNormalRoughness.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.MipProcessors.MipOperationNormalRoughness.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.ContentPipeline.Textures.MipProcessors.MipOperationNormalRoughness@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.MipProcessors.MipOperationNormalRoughness.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.MipProcessors.MipOperationNormalRoughness.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.ContentPipeline.Textures.MipProcessors.MipOperationNormalRoughness@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.MipProcessors.MipOperationNormalRoughness.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.MipProcessors.MipOperationNormalRoughness.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.ContentPipeline.Textures.MipProcessors.MipOperationNormalRoughness@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.MipProcessors.MipOperationNormalRoughness.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.MipProcessors.MipOperationNormalRoughness.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.MipProcessors.MipOperationNormalRoughness.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.MipProcessors.MipOperationNormalRoughness.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.MipProcessors.MipOperationNormalRoughness.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.ContentPipeline.Textures.MipProcessors.MipOperationNormalRoughness@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.MipProcessors.MipOperationNormalRoughness.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.MipProcessors.MipOperationNormalRoughness.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.ContentPipeline.Textures.MipProcessors.MipOperationNormalRoughness@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.MipProcessors.MipOperationNormalRoughness.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.MipProcessors.MipOperationNormalRoughness.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.ContentPipeline.Textures.MipProcessors.MipOperationNormalRoughness@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.MipProcessors.MipOperationNormalRoughness.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.MipProcessors.MipOperationNormalRoughness.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.ContentPipeline.Textures.MipProcessors.MipOperationNormalRoughness@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.MipProcessors.MipOperationNormalRoughness.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.ContentPipeline.Textures.MipProcessors.MipOperationNormalRoughness.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.MipProcessors.MipOperationNormalRoughness.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.MipProcessors.MipOperationNormalRoughness.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.MipProcessors.MipOperationNormalRoughness.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#ContentPipeline#Textures#MipProcessors#MipOperationNormalRoughness}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.MipProcessors.MipOperationNormalRoughness.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Textures.MipProcessors.MipOperationNormalRoughness.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.ContentPipeline.Textures.MipProcessors.MipOperationNormalRoughness.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.ContentPipeline.Textures.MipProcessors.MipOperationNormalRoughness.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Textures.PNG.PngProcessor">
            <summary>
            Processor that converts a png into an uncompressed dds (saved under .png for now, will be changed later)
            </summary>
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation">
            <summary>
            Represents binary operation between two source channels that can be defined in texture presets
            </summary>
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.ChannelBinaryOperator">
            <summary>
            Type of binary operator between two channels
            </summary>
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#ContentPipeline#Textures#Preset#ChannelBinaryOperation}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.TypeInfoHolder.Channel1Accessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.TypeInfoHolder.Channel1Accessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.TypeInfoHolder.Channel1Accessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.TypeInfoHolder.Channel1Accessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.TypeInfoHolder.Channel1Accessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.TypeInfoHolder.Channel1Accessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.TypeInfoHolder.Channel1Accessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.TypeInfoHolder.Channel1Accessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.TypeInfoHolder.Channel1Accessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.TypeInfoHolder.Channel1Accessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.TypeInfoHolder.Channel1Accessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.TypeInfoHolder.Channel1Accessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.TypeInfoHolder.Channel1Accessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.TypeInfoHolder.Channel1Accessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.TypeInfoHolder.Channel1Accessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Preset#ITextureChannelsOperation}#Set(System.Object,Keen.VRage.ContentPipeline.Textures.Preset.ITextureChannelsOperation@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.TypeInfoHolder.Channel1Accessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Preset#ITextureChannelsOperation}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.TypeInfoHolder.Channel1Accessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Preset#ITextureChannelsOperation}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.TypeInfoHolder.Channel1Accessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Preset#ITextureChannelsOperation}#Set(System.Byte@,Keen.VRage.ContentPipeline.Textures.Preset.ITextureChannelsOperation@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.TypeInfoHolder.Channel1Accessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.TypeInfoHolder.Channel1Accessor.Set(Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation@,Keen.VRage.ContentPipeline.Textures.Preset.ITextureChannelsOperation@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.TypeInfoHolder.Channel1Accessor.Get(Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.TypeInfoHolder.Channel2Accessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.TypeInfoHolder.Channel2Accessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.TypeInfoHolder.Channel2Accessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.TypeInfoHolder.Channel2Accessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.TypeInfoHolder.Channel2Accessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.TypeInfoHolder.Channel2Accessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.TypeInfoHolder.Channel2Accessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.TypeInfoHolder.Channel2Accessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.TypeInfoHolder.Channel2Accessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.TypeInfoHolder.Channel2Accessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.TypeInfoHolder.Channel2Accessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.TypeInfoHolder.Channel2Accessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.TypeInfoHolder.Channel2Accessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.TypeInfoHolder.Channel2Accessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.TypeInfoHolder.Channel2Accessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Preset#ITextureChannelsOperation}#Set(System.Object,Keen.VRage.ContentPipeline.Textures.Preset.ITextureChannelsOperation@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.TypeInfoHolder.Channel2Accessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Preset#ITextureChannelsOperation}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.TypeInfoHolder.Channel2Accessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Preset#ITextureChannelsOperation}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.TypeInfoHolder.Channel2Accessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Preset#ITextureChannelsOperation}#Set(System.Byte@,Keen.VRage.ContentPipeline.Textures.Preset.ITextureChannelsOperation@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.TypeInfoHolder.Channel2Accessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.TypeInfoHolder.Channel2Accessor.Set(Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation@,Keen.VRage.ContentPipeline.Textures.Preset.ITextureChannelsOperation@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.TypeInfoHolder.Channel2Accessor.Get(Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.TypeInfoHolder.OperatorAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.TypeInfoHolder.OperatorAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.TypeInfoHolder.OperatorAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.TypeInfoHolder.OperatorAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.TypeInfoHolder.OperatorAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.TypeInfoHolder.OperatorAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.TypeInfoHolder.OperatorAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.TypeInfoHolder.OperatorAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.TypeInfoHolder.OperatorAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.TypeInfoHolder.OperatorAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.TypeInfoHolder.OperatorAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.TypeInfoHolder.OperatorAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.TypeInfoHolder.OperatorAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.TypeInfoHolder.OperatorAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.TypeInfoHolder.OperatorAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Preset#ChannelBinaryOperation#ChannelBinaryOperator}#Set(System.Object,Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.ChannelBinaryOperator@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.TypeInfoHolder.OperatorAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Preset#ChannelBinaryOperation#ChannelBinaryOperator}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.TypeInfoHolder.OperatorAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Preset#ChannelBinaryOperation#ChannelBinaryOperator}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.TypeInfoHolder.OperatorAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Preset#ChannelBinaryOperation#ChannelBinaryOperator}#Set(System.Byte@,Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.ChannelBinaryOperator@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.TypeInfoHolder.OperatorAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.TypeInfoHolder.OperatorAccessor.Set(Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation@,Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.ChannelBinaryOperator@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation.TypeInfoHolder.OperatorAccessor.Get(Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Textures.Preset.ChannelSource">
            <summary>
            
            </summary>
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Textures.Preset.ChannelSource.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelSource.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelSource.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.ContentPipeline.Textures.Preset.ChannelSource@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelSource.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelSource.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.ContentPipeline.Textures.Preset.ChannelSource@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelSource.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelSource.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.ContentPipeline.Textures.Preset.ChannelSource@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelSource.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelSource.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelSource.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelSource.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelSource.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.ContentPipeline.Textures.Preset.ChannelSource@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelSource.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelSource.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.ContentPipeline.Textures.Preset.ChannelSource@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelSource.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelSource.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.ContentPipeline.Textures.Preset.ChannelSource@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelSource.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelSource.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.ContentPipeline.Textures.Preset.ChannelSource@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelSource.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.ContentPipeline.Textures.Preset.ChannelSource.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelSource.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelSource.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelSource.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#ContentPipeline#Textures#Preset#ChannelSource}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelSource.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Textures.Preset.ChannelSource.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.ContentPipeline.Textures.Preset.ChannelSource.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.ContentPipeline.Textures.Preset.ChannelSource.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelSource.TypeInfoHolder.SourceIndexAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelSource.TypeInfoHolder.SourceIndexAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelSource.TypeInfoHolder.SourceIndexAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelSource.TypeInfoHolder.SourceIndexAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelSource.TypeInfoHolder.SourceIndexAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelSource.TypeInfoHolder.SourceIndexAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelSource.TypeInfoHolder.SourceIndexAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelSource.TypeInfoHolder.SourceIndexAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelSource.TypeInfoHolder.SourceIndexAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelSource.TypeInfoHolder.SourceIndexAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelSource.TypeInfoHolder.SourceIndexAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelSource.TypeInfoHolder.SourceIndexAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelSource.TypeInfoHolder.SourceIndexAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelSource.TypeInfoHolder.SourceIndexAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelSource.TypeInfoHolder.SourceIndexAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Set(System.Object,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelSource.TypeInfoHolder.SourceIndexAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelSource.TypeInfoHolder.SourceIndexAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelSource.TypeInfoHolder.SourceIndexAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Set(System.Byte@,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelSource.TypeInfoHolder.SourceIndexAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelSource.TypeInfoHolder.SourceIndexAccessor.Set(Keen.VRage.ContentPipeline.Textures.Preset.ChannelSource@,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelSource.TypeInfoHolder.SourceIndexAccessor.Get(Keen.VRage.ContentPipeline.Textures.Preset.ChannelSource@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation">
            <summary>
            Operation with 3 input channels
            </summary>
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.ChannelTernaryOperator">
            <summary>
            Supported ternary operations
            </summary>
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#ContentPipeline#Textures#Preset#ChannelTernaryOperation}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.Channel1Accessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.Channel1Accessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.Channel1Accessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.Channel1Accessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.Channel1Accessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.Channel1Accessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.Channel1Accessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.Channel1Accessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.Channel1Accessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.Channel1Accessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.Channel1Accessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.Channel1Accessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.Channel1Accessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.Channel1Accessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.Channel1Accessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Preset#ITextureChannelsOperation}#Set(System.Object,Keen.VRage.ContentPipeline.Textures.Preset.ITextureChannelsOperation@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.Channel1Accessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Preset#ITextureChannelsOperation}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.Channel1Accessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Preset#ITextureChannelsOperation}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.Channel1Accessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Preset#ITextureChannelsOperation}#Set(System.Byte@,Keen.VRage.ContentPipeline.Textures.Preset.ITextureChannelsOperation@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.Channel1Accessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.Channel1Accessor.Set(Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation@,Keen.VRage.ContentPipeline.Textures.Preset.ITextureChannelsOperation@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.Channel1Accessor.Get(Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.Channel2Accessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.Channel2Accessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.Channel2Accessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.Channel2Accessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.Channel2Accessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.Channel2Accessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.Channel2Accessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.Channel2Accessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.Channel2Accessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.Channel2Accessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.Channel2Accessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.Channel2Accessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.Channel2Accessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.Channel2Accessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.Channel2Accessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Preset#ITextureChannelsOperation}#Set(System.Object,Keen.VRage.ContentPipeline.Textures.Preset.ITextureChannelsOperation@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.Channel2Accessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Preset#ITextureChannelsOperation}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.Channel2Accessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Preset#ITextureChannelsOperation}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.Channel2Accessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Preset#ITextureChannelsOperation}#Set(System.Byte@,Keen.VRage.ContentPipeline.Textures.Preset.ITextureChannelsOperation@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.Channel2Accessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.Channel2Accessor.Set(Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation@,Keen.VRage.ContentPipeline.Textures.Preset.ITextureChannelsOperation@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.Channel2Accessor.Get(Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.Channel3Accessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.Channel3Accessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.Channel3Accessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.Channel3Accessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.Channel3Accessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.Channel3Accessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.Channel3Accessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.Channel3Accessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.Channel3Accessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.Channel3Accessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.Channel3Accessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.Channel3Accessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.Channel3Accessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.Channel3Accessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.Channel3Accessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Preset#ITextureChannelsOperation}#Set(System.Object,Keen.VRage.ContentPipeline.Textures.Preset.ITextureChannelsOperation@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.Channel3Accessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Preset#ITextureChannelsOperation}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.Channel3Accessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Preset#ITextureChannelsOperation}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.Channel3Accessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Preset#ITextureChannelsOperation}#Set(System.Byte@,Keen.VRage.ContentPipeline.Textures.Preset.ITextureChannelsOperation@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.Channel3Accessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.Channel3Accessor.Set(Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation@,Keen.VRage.ContentPipeline.Textures.Preset.ITextureChannelsOperation@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.Channel3Accessor.Get(Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.OperatorAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.OperatorAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.OperatorAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.OperatorAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.OperatorAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.OperatorAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.OperatorAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.OperatorAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.OperatorAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.OperatorAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.OperatorAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.OperatorAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.OperatorAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.OperatorAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.OperatorAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Preset#ChannelTernaryOperation#ChannelTernaryOperator}#Set(System.Object,Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.ChannelTernaryOperator@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.OperatorAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Preset#ChannelTernaryOperation#ChannelTernaryOperator}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.OperatorAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Preset#ChannelTernaryOperation#ChannelTernaryOperator}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.OperatorAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Preset#ChannelTernaryOperation#ChannelTernaryOperator}#Set(System.Byte@,Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.ChannelTernaryOperator@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.OperatorAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.OperatorAccessor.Set(Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation@,Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.ChannelTernaryOperator@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.OperatorAccessor.Get(Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.DirectionAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.DirectionAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.DirectionAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.DirectionAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.DirectionAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.DirectionAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.DirectionAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.DirectionAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.DirectionAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.DirectionAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.DirectionAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.DirectionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.DirectionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.DirectionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.DirectionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Base6Directions#Direction}#Set(System.Object,Keen.VRage.Library.Mathematics.Base6Directions.Direction@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.DirectionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Base6Directions#Direction}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.DirectionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Base6Directions#Direction}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.DirectionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Base6Directions#Direction}#Set(System.Byte@,Keen.VRage.Library.Mathematics.Base6Directions.Direction@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.DirectionAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.DirectionAccessor.Set(Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation@,Keen.VRage.Library.Mathematics.Base6Directions.Direction@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation.TypeInfoHolder.DirectionAccessor.Get(Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Textures.Preset.ChannelUnaryOperation">
            <summary>
            Represents unary operation for a single source channel that can be defined in texture presets
            </summary>
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Textures.Preset.ChannelUnaryOperation.ChannelUnaryOperator">
            <summary>
            Type of unary operator for a channel
            </summary>
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Textures.Preset.ChannelUnaryOperation.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelUnaryOperation.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelUnaryOperation.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.ContentPipeline.Textures.Preset.ChannelUnaryOperation@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelUnaryOperation.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelUnaryOperation.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.ContentPipeline.Textures.Preset.ChannelUnaryOperation@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelUnaryOperation.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelUnaryOperation.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.ContentPipeline.Textures.Preset.ChannelUnaryOperation@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelUnaryOperation.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelUnaryOperation.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelUnaryOperation.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelUnaryOperation.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelUnaryOperation.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.ContentPipeline.Textures.Preset.ChannelUnaryOperation@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelUnaryOperation.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelUnaryOperation.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.ContentPipeline.Textures.Preset.ChannelUnaryOperation@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelUnaryOperation.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelUnaryOperation.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.ContentPipeline.Textures.Preset.ChannelUnaryOperation@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelUnaryOperation.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelUnaryOperation.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.ContentPipeline.Textures.Preset.ChannelUnaryOperation@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelUnaryOperation.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.ContentPipeline.Textures.Preset.ChannelUnaryOperation.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelUnaryOperation.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelUnaryOperation.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelUnaryOperation.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#ContentPipeline#Textures#Preset#ChannelUnaryOperation}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelUnaryOperation.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Textures.Preset.ChannelUnaryOperation.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.ContentPipeline.Textures.Preset.ChannelUnaryOperation.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.ContentPipeline.Textures.Preset.ChannelUnaryOperation.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelUnaryOperation.TypeInfoHolder.ChannelAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelUnaryOperation.TypeInfoHolder.ChannelAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelUnaryOperation.TypeInfoHolder.ChannelAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelUnaryOperation.TypeInfoHolder.ChannelAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelUnaryOperation.TypeInfoHolder.ChannelAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelUnaryOperation.TypeInfoHolder.ChannelAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelUnaryOperation.TypeInfoHolder.ChannelAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelUnaryOperation.TypeInfoHolder.ChannelAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelUnaryOperation.TypeInfoHolder.ChannelAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelUnaryOperation.TypeInfoHolder.ChannelAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelUnaryOperation.TypeInfoHolder.ChannelAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelUnaryOperation.TypeInfoHolder.ChannelAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelUnaryOperation.TypeInfoHolder.ChannelAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelUnaryOperation.TypeInfoHolder.ChannelAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelUnaryOperation.TypeInfoHolder.ChannelAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Preset#ITextureChannelsOperation}#Set(System.Object,Keen.VRage.ContentPipeline.Textures.Preset.ITextureChannelsOperation@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelUnaryOperation.TypeInfoHolder.ChannelAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Preset#ITextureChannelsOperation}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelUnaryOperation.TypeInfoHolder.ChannelAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Preset#ITextureChannelsOperation}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelUnaryOperation.TypeInfoHolder.ChannelAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Preset#ITextureChannelsOperation}#Set(System.Byte@,Keen.VRage.ContentPipeline.Textures.Preset.ITextureChannelsOperation@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelUnaryOperation.TypeInfoHolder.ChannelAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelUnaryOperation.TypeInfoHolder.ChannelAccessor.Set(Keen.VRage.ContentPipeline.Textures.Preset.ChannelUnaryOperation@,Keen.VRage.ContentPipeline.Textures.Preset.ITextureChannelsOperation@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelUnaryOperation.TypeInfoHolder.ChannelAccessor.Get(Keen.VRage.ContentPipeline.Textures.Preset.ChannelUnaryOperation@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelUnaryOperation.TypeInfoHolder.OperatorAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelUnaryOperation.TypeInfoHolder.OperatorAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelUnaryOperation.TypeInfoHolder.OperatorAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelUnaryOperation.TypeInfoHolder.OperatorAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelUnaryOperation.TypeInfoHolder.OperatorAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelUnaryOperation.TypeInfoHolder.OperatorAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelUnaryOperation.TypeInfoHolder.OperatorAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelUnaryOperation.TypeInfoHolder.OperatorAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.ChannelUnaryOperation.TypeInfoHolder.OperatorAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelUnaryOperation.TypeInfoHolder.OperatorAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelUnaryOperation.TypeInfoHolder.OperatorAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelUnaryOperation.TypeInfoHolder.OperatorAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelUnaryOperation.TypeInfoHolder.OperatorAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelUnaryOperation.TypeInfoHolder.OperatorAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelUnaryOperation.TypeInfoHolder.OperatorAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Preset#ChannelUnaryOperation#ChannelUnaryOperator}#Set(System.Object,Keen.VRage.ContentPipeline.Textures.Preset.ChannelUnaryOperation.ChannelUnaryOperator@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelUnaryOperation.TypeInfoHolder.OperatorAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Preset#ChannelUnaryOperation#ChannelUnaryOperator}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelUnaryOperation.TypeInfoHolder.OperatorAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Preset#ChannelUnaryOperation#ChannelUnaryOperator}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelUnaryOperation.TypeInfoHolder.OperatorAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Preset#ChannelUnaryOperation#ChannelUnaryOperator}#Set(System.Byte@,Keen.VRage.ContentPipeline.Textures.Preset.ChannelUnaryOperation.ChannelUnaryOperator@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelUnaryOperation.TypeInfoHolder.OperatorAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelUnaryOperation.TypeInfoHolder.OperatorAccessor.Set(Keen.VRage.ContentPipeline.Textures.Preset.ChannelUnaryOperation@,Keen.VRage.ContentPipeline.Textures.Preset.ChannelUnaryOperation.ChannelUnaryOperator@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ChannelUnaryOperation.TypeInfoHolder.OperatorAccessor.Get(Keen.VRage.ContentPipeline.Textures.Preset.ChannelUnaryOperation@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Textures.Preset.IChannelOperationsVisitor">
            <summary>
            Visitor interface for resolving channel operations
            </summary>
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.IChannelOperationsVisitor.Visit(Keen.VRage.ContentPipeline.Textures.Preset.ChannelBinaryOperation)">
            <summary>
            </summary>
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.IChannelOperationsVisitor.Visit(Keen.VRage.ContentPipeline.Textures.Preset.ChannelUnaryOperation)">
            <summary>
            </summary>
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.IChannelOperationsVisitor.Visit(Keen.VRage.ContentPipeline.Textures.Preset.ChannelTernaryOperation)">
            <summary>
            </summary>
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.IChannelOperationsVisitor.Visit(Keen.VRage.ContentPipeline.Textures.Preset.ChannelSource)">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Textures.Preset.ITextureChannelsOperation">
            <summary>
            Interface for all operations on channels producing a single channel data on output
            </summary>
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ITextureChannelsOperation.Accept(Keen.VRage.ContentPipeline.Textures.Preset.IChannelOperationsVisitor)">
            <summary>
            Method used in order to resolve operations using the Visitor design pattern.
            </summary>
            <param name="visitor">Instance of the visitor</param>
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Textures.Preset.ITextureMipOperation">
            <summary>
            Interface for processing operations for generating custom mips
            </summary>
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.ITextureMipOperation.CreateMip(System.Int32,System.Int32,OpenCvSharp.Mat,OpenCvSharp.Mat,OpenCvSharp.Mat)">
            <summary>
            Method used to generate a custom mip
            </summary>
            <param name="numMips">total number of mips to generate</param>
            <param name="currentMipIndex">current mip index</param>
            <param name="dest">the current mip, the target of the processing</param>
            <param name="sourceTexture">the source image the mips are generated from</param>
            <param name="previousMip">the previous mip that was processed with index = currentMip - 1. Null if currentMip is 0</param>
            <returns>whether or not the mip creation was successful</returns>
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture">
            <summary>
            Structure defining details about an input texture for composite texture preset
            </summary>
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#ContentPipeline#Textures#Preset#PackingSourceTexture}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.FileNameSuffixHintAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.FileNameSuffixHintAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.FileNameSuffixHintAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.FileNameSuffixHintAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.FileNameSuffixHintAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.FileNameSuffixHintAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.FileNameSuffixHintAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.FileNameSuffixHintAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.FileNameSuffixHintAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.FileNameSuffixHintAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.FileNameSuffixHintAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.FileNameSuffixHintAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.FileNameSuffixHintAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.FileNameSuffixHintAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.FileNameSuffixHintAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Object,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.FileNameSuffixHintAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.FileNameSuffixHintAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.FileNameSuffixHintAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Byte@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.FileNameSuffixHintAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.FileNameSuffixHintAccessor.Set(Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.FileNameSuffixHintAccessor.Get(Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.FriendlyNameAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.FriendlyNameAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.FriendlyNameAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.FriendlyNameAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.FriendlyNameAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.FriendlyNameAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.FriendlyNameAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.FriendlyNameAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.FriendlyNameAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.FriendlyNameAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.FriendlyNameAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.FriendlyNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.FriendlyNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.FriendlyNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.FriendlyNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Object,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.FriendlyNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.FriendlyNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.FriendlyNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Byte@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.FriendlyNameAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.FriendlyNameAccessor.Set(Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.FriendlyNameAccessor.Get(Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.SourceChannelAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.SourceChannelAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.SourceChannelAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.SourceChannelAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.SourceChannelAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.SourceChannelAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.SourceChannelAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.SourceChannelAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.SourceChannelAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.SourceChannelAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.SourceChannelAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.SourceChannelAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.SourceChannelAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.SourceChannelAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.SourceChannelAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#DataChannel}#Set(System.Object,Keen.VRage.ContentPipeline.Textures.DataChannel@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.SourceChannelAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#DataChannel}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.SourceChannelAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#DataChannel}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.SourceChannelAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#DataChannel}#Set(System.Byte@,Keen.VRage.ContentPipeline.Textures.DataChannel@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.SourceChannelAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.SourceChannelAccessor.Set(Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture@,Keen.VRage.ContentPipeline.Textures.DataChannel@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.SourceChannelAccessor.Get(Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.IsLinearSpaceAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.IsLinearSpaceAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.IsLinearSpaceAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.IsLinearSpaceAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.IsLinearSpaceAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.IsLinearSpaceAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.IsLinearSpaceAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.IsLinearSpaceAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.IsLinearSpaceAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.IsLinearSpaceAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.IsLinearSpaceAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.IsLinearSpaceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.IsLinearSpaceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.IsLinearSpaceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.IsLinearSpaceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.IsLinearSpaceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.IsLinearSpaceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.IsLinearSpaceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.IsLinearSpaceAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.IsLinearSpaceAccessor.Set(Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.IsLinearSpaceAccessor.Get(Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.DefaultValueAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.DefaultValueAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.DefaultValueAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.DefaultValueAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.DefaultValueAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.DefaultValueAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.DefaultValueAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.DefaultValueAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.DefaultValueAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.DefaultValueAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.DefaultValueAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.DefaultValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.DefaultValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.DefaultValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.DefaultValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Object,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.DefaultValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.DefaultValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.DefaultValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Byte@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.DefaultValueAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.DefaultValueAccessor.Set(Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture.TypeInfoHolder.DefaultValueAccessor.Get(Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset">
            <summary>
            Texture preset for composite textures, defining input source textures
            and operations on the color channels as well as optional custom mip generation and properties of the output texture
            </summary>
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#ContentPipeline#Textures#Preset#TexturePackingPreset}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.SourceTexturesAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.SourceTexturesAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.SourceTexturesAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.SourceTexturesAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.SourceTexturesAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.SourceTexturesAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.SourceTexturesAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.SourceTexturesAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.SourceTexturesAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.SourceTexturesAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.SourceTexturesAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.SourceTexturesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.SourceTexturesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.SourceTexturesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.SourceTexturesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Preset#PackingSourceTexture[]}#Set(System.Object,Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture[]@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.SourceTexturesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Preset#PackingSourceTexture[]}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.SourceTexturesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Preset#PackingSourceTexture[]}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.SourceTexturesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Preset#PackingSourceTexture[]}#Set(System.Byte@,Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture[]@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.SourceTexturesAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.SourceTexturesAccessor.Set(Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset@,Keen.VRage.ContentPipeline.Textures.Preset.PackingSourceTexture[]@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.SourceTexturesAccessor.Get(Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.OutputChannelsAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.OutputChannelsAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.OutputChannelsAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.OutputChannelsAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.OutputChannelsAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.OutputChannelsAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.OutputChannelsAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.OutputChannelsAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.OutputChannelsAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.OutputChannelsAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.OutputChannelsAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.OutputChannelsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.OutputChannelsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.OutputChannelsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.OutputChannelsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Preset#ITextureChannelsOperation[]}#Set(System.Object,Keen.VRage.ContentPipeline.Textures.Preset.ITextureChannelsOperation[]@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.OutputChannelsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Preset#ITextureChannelsOperation[]}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.OutputChannelsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Preset#ITextureChannelsOperation[]}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.OutputChannelsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Preset#ITextureChannelsOperation[]}#Set(System.Byte@,Keen.VRage.ContentPipeline.Textures.Preset.ITextureChannelsOperation[]@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.OutputChannelsAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.OutputChannelsAccessor.Set(Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset@,Keen.VRage.ContentPipeline.Textures.Preset.ITextureChannelsOperation[]@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.OutputChannelsAccessor.Get(Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.MipOperationAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.MipOperationAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.MipOperationAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.MipOperationAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.MipOperationAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.MipOperationAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.MipOperationAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.MipOperationAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.MipOperationAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.MipOperationAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.MipOperationAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.MipOperationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.MipOperationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.MipOperationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.MipOperationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Preset#ITextureMipOperation}#Set(System.Object,Keen.VRage.ContentPipeline.Textures.Preset.ITextureMipOperation@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.MipOperationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Preset#ITextureMipOperation}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.MipOperationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Preset#ITextureMipOperation}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.MipOperationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Textures#Preset#ITextureMipOperation}#Set(System.Byte@,Keen.VRage.ContentPipeline.Textures.Preset.ITextureMipOperation@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.MipOperationAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.MipOperationAccessor.Set(Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset@,Keen.VRage.ContentPipeline.Textures.Preset.ITextureMipOperation@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.MipOperationAccessor.Get(Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.AlphaWeightAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.AlphaWeightAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.AlphaWeightAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.AlphaWeightAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.AlphaWeightAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.AlphaWeightAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.AlphaWeightAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.AlphaWeightAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.AlphaWeightAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.AlphaWeightAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.AlphaWeightAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.AlphaWeightAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.AlphaWeightAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.AlphaWeightAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.AlphaWeightAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Object,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.AlphaWeightAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.AlphaWeightAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.AlphaWeightAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Byte@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.AlphaWeightAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.AlphaWeightAccessor.Set(Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.AlphaWeightAccessor.Get(Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.OutputFileCompressionAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.OutputFileCompressionAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.OutputFileCompressionAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.OutputFileCompressionAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.OutputFileCompressionAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.OutputFileCompressionAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.OutputFileCompressionAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.OutputFileCompressionAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.OutputFileCompressionAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.OutputFileCompressionAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.OutputFileCompressionAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.OutputFileCompressionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.OutputFileCompressionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.OutputFileCompressionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.OutputFileCompressionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Object,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.OutputFileCompressionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.OutputFileCompressionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.OutputFileCompressionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Byte@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.OutputFileCompressionAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.OutputFileCompressionAccessor.Set(Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.OutputFileCompressionAccessor.Get(Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.OutputFileSuffixHintAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.OutputFileSuffixHintAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.OutputFileSuffixHintAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.OutputFileSuffixHintAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.OutputFileSuffixHintAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.OutputFileSuffixHintAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.OutputFileSuffixHintAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.OutputFileSuffixHintAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.OutputFileSuffixHintAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.OutputFileSuffixHintAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.OutputFileSuffixHintAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.OutputFileSuffixHintAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.OutputFileSuffixHintAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.OutputFileSuffixHintAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.OutputFileSuffixHintAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Object,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.OutputFileSuffixHintAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.OutputFileSuffixHintAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.OutputFileSuffixHintAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Byte@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.OutputFileSuffixHintAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.OutputFileSuffixHintAccessor.Set(Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.OutputFileSuffixHintAccessor.Get(Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.MipmapCountAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.MipmapCountAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.MipmapCountAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.MipmapCountAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.MipmapCountAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.MipmapCountAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.MipmapCountAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.MipmapCountAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.MipmapCountAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.MipmapCountAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.MipmapCountAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.MipmapCountAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.MipmapCountAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.MipmapCountAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.MipmapCountAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Set(System.Object,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.MipmapCountAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.MipmapCountAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.MipmapCountAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Set(System.Byte@,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.MipmapCountAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.MipmapCountAccessor.Set(Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset@,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset.TypeInfoHolder.MipmapCountAccessor.Get(Keen.VRage.ContentPipeline.Textures.Preset.TexturePackingPreset@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Textures.TextureProcessingUtils">
            <summary>
            Utilities for texture processing
            </summary>
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Textures.TextureProcessor">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.TextureProcessor.#ctor(Keen.VRage.ContentPipeline.Project.Features.AssetProcessing.ProcessorArgument)">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Textures.TextureProcessor.CombinedTextureAndPresetResult">
            <seealso cref="M:Keen.VRage.ContentPipeline.Textures.TextureProcessor.TryCreateCombinedTexture(Keen.VRage.ContentPipeline.Project.Features.AssetProcessing.AssetAccessor,Keen.VRage.ContentPipeline.Project.Features.AssetProcessing.ProcessingFileProxy,Microsoft.Extensions.Logging.ILogger)"/>
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Textures.TextureProcessorSettings">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Textures.TextureProcessorSettings.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.TextureProcessorSettings.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.TextureProcessorSettings.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.ContentPipeline.Textures.TextureProcessorSettings@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.TextureProcessorSettings.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.TextureProcessorSettings.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.ContentPipeline.Textures.TextureProcessorSettings@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.TextureProcessorSettings.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.TextureProcessorSettings.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.ContentPipeline.Textures.TextureProcessorSettings@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.TextureProcessorSettings.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.TextureProcessorSettings.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.TextureProcessorSettings.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.TextureProcessorSettings.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.TextureProcessorSettings.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.ContentPipeline.Textures.TextureProcessorSettings@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.TextureProcessorSettings.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.TextureProcessorSettings.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.ContentPipeline.Textures.TextureProcessorSettings@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.TextureProcessorSettings.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.TextureProcessorSettings.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.ContentPipeline.Textures.TextureProcessorSettings@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.TextureProcessorSettings.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.TextureProcessorSettings.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.ContentPipeline.Textures.TextureProcessorSettings@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.TextureProcessorSettings.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.ContentPipeline.Textures.TextureProcessorSettings.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.TextureProcessorSettings.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.TextureProcessorSettings.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.TextureProcessorSettings.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#ContentPipeline#Textures#TextureProcessorSettings}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.TextureProcessorSettings.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Textures.TextureProcessorSettings.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.ContentPipeline.Textures.TextureProcessorSettings.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.ContentPipeline.Textures.TextureProcessorSettings.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.TextureProcessorSettings.TypeInfoHolder.GpuAdapterAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.TextureProcessorSettings.TypeInfoHolder.GpuAdapterAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.TextureProcessorSettings.TypeInfoHolder.GpuAdapterAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.TextureProcessorSettings.TypeInfoHolder.GpuAdapterAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.TextureProcessorSettings.TypeInfoHolder.GpuAdapterAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.TextureProcessorSettings.TypeInfoHolder.GpuAdapterAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.TextureProcessorSettings.TypeInfoHolder.GpuAdapterAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.TextureProcessorSettings.TypeInfoHolder.GpuAdapterAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Textures.TextureProcessorSettings.TypeInfoHolder.GpuAdapterAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.TextureProcessorSettings.TypeInfoHolder.GpuAdapterAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.TextureProcessorSettings.TypeInfoHolder.GpuAdapterAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.TextureProcessorSettings.TypeInfoHolder.GpuAdapterAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.TextureProcessorSettings.TypeInfoHolder.GpuAdapterAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.TextureProcessorSettings.TypeInfoHolder.GpuAdapterAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.TextureProcessorSettings.TypeInfoHolder.GpuAdapterAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Set(System.Object,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.TextureProcessorSettings.TypeInfoHolder.GpuAdapterAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.TextureProcessorSettings.TypeInfoHolder.GpuAdapterAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.TextureProcessorSettings.TypeInfoHolder.GpuAdapterAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Set(System.Byte@,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.TextureProcessorSettings.TypeInfoHolder.GpuAdapterAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.TextureProcessorSettings.TypeInfoHolder.GpuAdapterAccessor.Set(Keen.VRage.ContentPipeline.Textures.TextureProcessorSettings@,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Textures.TextureProcessorSettings.TypeInfoHolder.GpuAdapterAccessor.Get(Keen.VRage.ContentPipeline.Textures.TextureProcessorSettings@)">
            <inheritdoc />
        </member>
    </members>
</doc>
