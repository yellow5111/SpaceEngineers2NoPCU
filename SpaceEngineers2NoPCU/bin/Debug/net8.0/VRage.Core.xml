<?xml version="1.0"?>
<doc>
    <assembly>
        <name>VRage.Core</name>
    </assembly>
    <members>
        <member name="T:Keen.VRage.Core.Analytics.AnalyticsEventGameMetadataProviderComponent">
            <summary>
            Provides <see cref="T:Keen.VRage.Core.Analytics.EventGameMetadata"/>
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Analytics.AnalyticsHelper">
            <summary>
            Contains various helper methods used by VRage.Library.Analytics
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsHelper.CreateAnalyticsSerializationContext(System.IO.Stream)">
            <summary>
            Creates a serialization context for analytics sending. It will be plain JSON format without bundles.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Keen.VRage.Core.Analytics.AnalyticsManagerComponentObjectBuilder">
            <summary>
            ObjectBuilder for <see cref="T:Keen.VRage.Core.Analytics.AnalyticsManagerComponent"/>
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Analytics.AnalyticsManagerComponentObjectBuilder.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsManagerComponentObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsManagerComponentObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Analytics.AnalyticsManagerComponentObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsManagerComponentObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsManagerComponentObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Analytics.AnalyticsManagerComponentObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsManagerComponentObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsManagerComponentObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Analytics.AnalyticsManagerComponentObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsManagerComponentObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsManagerComponentObjectBuilder.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsManagerComponentObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsManagerComponentObjectBuilder.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsManagerComponentObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Analytics.AnalyticsManagerComponentObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsManagerComponentObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsManagerComponentObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Analytics.AnalyticsManagerComponentObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsManagerComponentObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsManagerComponentObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Analytics.AnalyticsManagerComponentObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsManagerComponentObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsManagerComponentObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Analytics.AnalyticsManagerComponentObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsManagerComponentObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Analytics.AnalyticsManagerComponentObjectBuilder.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsManagerComponentObjectBuilder.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsManagerComponentObjectBuilder.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsManagerComponentObjectBuilder.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Analytics#AnalyticsManagerComponentObjectBuilder}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsManagerComponentObjectBuilder.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Analytics.AnalyticsManagerComponentObjectBuilder.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Analytics.AnalyticsManagerComponentObjectBuilder.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Analytics.AnalyticsManagerComponentObjectBuilder.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsManagerComponentObjectBuilder.TypeInfoHolder.ReportersAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsManagerComponentObjectBuilder.TypeInfoHolder.ReportersAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsManagerComponentObjectBuilder.TypeInfoHolder.ReportersAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsManagerComponentObjectBuilder.TypeInfoHolder.ReportersAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsManagerComponentObjectBuilder.TypeInfoHolder.ReportersAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsManagerComponentObjectBuilder.TypeInfoHolder.ReportersAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsManagerComponentObjectBuilder.TypeInfoHolder.ReportersAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsManagerComponentObjectBuilder.TypeInfoHolder.ReportersAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsManagerComponentObjectBuilder.TypeInfoHolder.ReportersAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsManagerComponentObjectBuilder.TypeInfoHolder.ReportersAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsManagerComponentObjectBuilder.TypeInfoHolder.ReportersAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsManagerComponentObjectBuilder.TypeInfoHolder.ReportersAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsManagerComponentObjectBuilder.TypeInfoHolder.ReportersAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsManagerComponentObjectBuilder.TypeInfoHolder.ReportersAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsManagerComponentObjectBuilder.TypeInfoHolder.ReportersAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Immutable#ImmutableArray{Keen#VRage#Core#Analytics#IAnalyticsReporter}}#Set(System.Object,System.Collections.Immutable.ImmutableArray{Keen.VRage.Core.Analytics.IAnalyticsReporter}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsManagerComponentObjectBuilder.TypeInfoHolder.ReportersAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Immutable#ImmutableArray{Keen#VRage#Core#Analytics#IAnalyticsReporter}}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsManagerComponentObjectBuilder.TypeInfoHolder.ReportersAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Immutable#ImmutableArray{Keen#VRage#Core#Analytics#IAnalyticsReporter}}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsManagerComponentObjectBuilder.TypeInfoHolder.ReportersAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Immutable#ImmutableArray{Keen#VRage#Core#Analytics#IAnalyticsReporter}}#Set(System.Byte@,System.Collections.Immutable.ImmutableArray{Keen.VRage.Core.Analytics.IAnalyticsReporter}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsManagerComponentObjectBuilder.TypeInfoHolder.ReportersAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsManagerComponentObjectBuilder.TypeInfoHolder.ReportersAccessor.Set(Keen.VRage.Core.Analytics.AnalyticsManagerComponentObjectBuilder@,System.Collections.Immutable.ImmutableArray{Keen.VRage.Core.Analytics.IAnalyticsReporter}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsManagerComponentObjectBuilder.TypeInfoHolder.ReportersAccessor.Get(Keen.VRage.Core.Analytics.AnalyticsManagerComponentObjectBuilder@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Analytics.AnalyticsManagerComponent">
            <summary>
            Aggregator of analytics trackers
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsManagerComponent.ActiveEvents">
            <summary>
            List of events that are currently being requested by this backend
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsManagerComponent.ReportMetadata(Keen.VRage.Core.Analytics.EventGameMetadata)">
            <summary>
            Sets the last game metadata to Hearbeat reports
            </summary>
            <param name="gameMetadata"></param>
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsManagerComponent.RegisterAnalyticsReporter(Keen.VRage.Core.Analytics.IAnalyticsReporter)">
            <summary>
            The given tracker will be reported the same events as the manager
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsManagerComponent.ReportEvent(Keen.VRage.Core.Analytics.IAnalyticsEvent,Keen.VRage.Core.Analytics.EventGameMetadata,System.Exception,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsManagerComponent.StoreEvent(Keen.VRage.Core.Analytics.IAnalyticsEvent,Keen.VRage.Core.Analytics.EventGameMetadata,System.Exception)">
            <summary>
            Stores an event to be reported later by calling ReportPostponedEvents
            <para>Reports an event as soon as possible</para>
            <para>Used for low priority events that can be sent later</para>
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsManagerComponent.ReportStoredEvents">
            <summary>
            Reports previously stored events, if it has any
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Analytics.AnalyticsDebugObject.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Analytics.AnalyticsDebugObject@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Analytics.AnalyticsDebugObject@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Analytics.AnalyticsDebugObject@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Analytics.AnalyticsDebugObject@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Analytics.AnalyticsDebugObject@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Analytics.AnalyticsDebugObject@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Analytics.AnalyticsDebugObject@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Analytics.AnalyticsDebugObject.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsDebugObject.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsDebugObject.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Analytics#AnalyticsDebugObject}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder._userIdAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder._userIdAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder._userIdAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder._userIdAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder._userIdAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder._userIdAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder._userIdAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder._userIdAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder._userIdAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder._userIdAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder._userIdAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder._userIdAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder._userIdAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder._userIdAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder._userIdAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Object,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder._userIdAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder._userIdAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder._userIdAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Byte@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder._userIdAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder._userIdAccessor.Set(Keen.VRage.Core.Analytics.AnalyticsDebugObject@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder._userIdAccessor.Get(Keen.VRage.Core.Analytics.AnalyticsDebugObject@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder._gameServiceNameAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder._gameServiceNameAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder._gameServiceNameAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder._gameServiceNameAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder._gameServiceNameAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder._gameServiceNameAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder._gameServiceNameAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder._gameServiceNameAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder._gameServiceNameAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder._gameServiceNameAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder._gameServiceNameAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder._gameServiceNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder._gameServiceNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder._gameServiceNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder._gameServiceNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Object,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder._gameServiceNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder._gameServiceNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder._gameServiceNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Byte@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder._gameServiceNameAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder._gameServiceNameAccessor.Set(Keen.VRage.Core.Analytics.AnalyticsDebugObject@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder._gameServiceNameAccessor.Get(Keen.VRage.Core.Analytics.AnalyticsDebugObject@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder._seUserIdAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder._seUserIdAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder._seUserIdAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder._seUserIdAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder._seUserIdAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder._seUserIdAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder._seUserIdAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder._seUserIdAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder._seUserIdAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder._seUserIdAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder._seUserIdAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder._seUserIdAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder._seUserIdAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder._seUserIdAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder._seUserIdAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Object,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder._seUserIdAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder._seUserIdAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder._seUserIdAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Byte@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder._seUserIdAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder._seUserIdAccessor.Set(Keen.VRage.Core.Analytics.AnalyticsDebugObject@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder._seUserIdAccessor.Get(Keen.VRage.Core.Analytics.AnalyticsDebugObject@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder.UserIDAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder.UserIDAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder.UserIDAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder.UserIDAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder.UserIDAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder.UserIDAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder.UserIDAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder.UserIDAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder.UserIDAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder.UserIDAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder.UserIDAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder.UserIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder.UserIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder.UserIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder.UserIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Object,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder.UserIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder.UserIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder.UserIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Byte@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder.UserIDAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder.UserIDAccessor.Set(Keen.VRage.Core.Analytics.AnalyticsDebugObject@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder.UserIDAccessor.Get(Keen.VRage.Core.Analytics.AnalyticsDebugObject@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder.SEUserIDAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder.SEUserIDAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder.SEUserIDAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder.SEUserIDAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder.SEUserIDAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder.SEUserIDAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder.SEUserIDAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder.SEUserIDAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder.SEUserIDAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder.SEUserIDAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder.SEUserIDAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder.SEUserIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder.SEUserIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder.SEUserIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder.SEUserIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Object,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder.SEUserIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder.SEUserIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder.SEUserIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Byte@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder.SEUserIDAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder.SEUserIDAccessor.Set(Keen.VRage.Core.Analytics.AnalyticsDebugObject@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder.SEUserIDAccessor.Get(Keen.VRage.Core.Analytics.AnalyticsDebugObject@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder.GameServiceNameAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder.GameServiceNameAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder.GameServiceNameAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder.GameServiceNameAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder.GameServiceNameAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder.GameServiceNameAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder.GameServiceNameAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder.GameServiceNameAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder.GameServiceNameAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder.GameServiceNameAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder.GameServiceNameAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder.GameServiceNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder.GameServiceNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder.GameServiceNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder.GameServiceNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Object,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder.GameServiceNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder.GameServiceNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder.GameServiceNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Byte@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder.GameServiceNameAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder.GameServiceNameAccessor.Set(Keen.VRage.Core.Analytics.AnalyticsDebugObject@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsDebugObject.TypeInfoHolder.GameServiceNameAccessor.Get(Keen.VRage.Core.Analytics.AnalyticsDebugObject@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Analytics.AnalyticsProperty">
            <summary>
            A property that can be reported to analytics
            <para>This is done this way to facilitate serialization of polymorphic types</para>
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Analytics.AnalyticsProperty.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsProperty.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsProperty.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Analytics.AnalyticsProperty@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsProperty.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsProperty.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Analytics.AnalyticsProperty@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsProperty.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsProperty.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Analytics.AnalyticsProperty@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsProperty.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsProperty.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsProperty.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsProperty.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsProperty.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Analytics.AnalyticsProperty@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsProperty.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsProperty.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Analytics.AnalyticsProperty@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsProperty.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsProperty.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Analytics.AnalyticsProperty@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsProperty.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsProperty.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Analytics.AnalyticsProperty@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsProperty.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Analytics.AnalyticsProperty.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsProperty.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsProperty.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsProperty.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Analytics#AnalyticsProperty}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsProperty.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Analytics.AnalyticsProperty.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Analytics.AnalyticsProperty.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Analytics.AnalyticsProperty.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsProperty.TypeInfoHolder.ObjectAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsProperty.TypeInfoHolder.ObjectAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsProperty.TypeInfoHolder.ObjectAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsProperty.TypeInfoHolder.ObjectAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsProperty.TypeInfoHolder.ObjectAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsProperty.TypeInfoHolder.ObjectAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsProperty.TypeInfoHolder.ObjectAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsProperty.TypeInfoHolder.ObjectAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsProperty.TypeInfoHolder.ObjectAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsProperty.TypeInfoHolder.ObjectAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsProperty.TypeInfoHolder.ObjectAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsProperty.TypeInfoHolder.ObjectAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsProperty.TypeInfoHolder.ObjectAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsProperty.TypeInfoHolder.ObjectAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsProperty.TypeInfoHolder.ObjectAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Object}#Set(System.Object,System.Object@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsProperty.TypeInfoHolder.ObjectAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Object}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsProperty.TypeInfoHolder.ObjectAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Object}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsProperty.TypeInfoHolder.ObjectAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Object}#Set(System.Byte@,System.Object@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsProperty.TypeInfoHolder.ObjectAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsProperty.TypeInfoHolder.ObjectAccessor.Set(Keen.VRage.Core.Analytics.AnalyticsProperty@,System.Object@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsProperty.TypeInfoHolder.ObjectAccessor.Get(Keen.VRage.Core.Analytics.AnalyticsProperty@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Analytics.AnalyticsPropertySerializer">
            <summary>
            
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Analytics.AnalyticsRawEvent">
            <summary>
            The raw serializable data sent to remote Analytics.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Analytics.AnalyticsRawEvent.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Analytics.AnalyticsRawEvent@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Analytics.AnalyticsRawEvent@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Analytics.AnalyticsRawEvent@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Analytics.AnalyticsRawEvent@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Analytics.AnalyticsRawEvent@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Analytics.AnalyticsRawEvent@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Analytics.AnalyticsRawEvent@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Analytics.AnalyticsRawEvent.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsRawEvent.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsRawEvent.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Analytics#AnalyticsRawEvent}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder._metadataFieldsToIncludeAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder._metadataFieldsToIncludeAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder._metadataFieldsToIncludeAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder._metadataFieldsToIncludeAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder._metadataFieldsToIncludeAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder._metadataFieldsToIncludeAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder._metadataFieldsToIncludeAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder._metadataFieldsToIncludeAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder._metadataFieldsToIncludeAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder._metadataFieldsToIncludeAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder._metadataFieldsToIncludeAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder._metadataFieldsToIncludeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder._metadataFieldsToIncludeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder._metadataFieldsToIncludeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder._metadataFieldsToIncludeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{System#String}}#Set(System.Object,System.Collections.Generic.List{System.String}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder._metadataFieldsToIncludeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{System#String}}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder._metadataFieldsToIncludeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{System#String}}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder._metadataFieldsToIncludeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{System#String}}#Set(System.Byte@,System.Collections.Generic.List{System.String}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder._metadataFieldsToIncludeAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder._metadataFieldsToIncludeAccessor.Set(Keen.VRage.Core.Analytics.AnalyticsRawEvent@,System.Collections.Generic.List{System.String}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder._metadataFieldsToIncludeAccessor.Get(Keen.VRage.Core.Analytics.AnalyticsRawEvent@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.JsonDataAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.JsonDataAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.JsonDataAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.JsonDataAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.JsonDataAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.JsonDataAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.JsonDataAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.JsonDataAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.JsonDataAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.JsonDataAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.JsonDataAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.JsonDataAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.JsonDataAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.JsonDataAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.JsonDataAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#Dictionary{System#String,Keen#VRage#Core#Analytics#AnalyticsProperty}}#Set(System.Object,System.Collections.Generic.Dictionary{System.String,Keen.VRage.Core.Analytics.AnalyticsProperty}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.JsonDataAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#Dictionary{System#String,Keen#VRage#Core#Analytics#AnalyticsProperty}}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.JsonDataAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#Dictionary{System#String,Keen#VRage#Core#Analytics#AnalyticsProperty}}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.JsonDataAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#Dictionary{System#String,Keen#VRage#Core#Analytics#AnalyticsProperty}}#Set(System.Byte@,System.Collections.Generic.Dictionary{System.String,Keen.VRage.Core.Analytics.AnalyticsProperty}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.JsonDataAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.JsonDataAccessor.Set(Keen.VRage.Core.Analytics.AnalyticsRawEvent@,System.Collections.Generic.Dictionary{System.String,Keen.VRage.Core.Analytics.AnalyticsProperty}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.JsonDataAccessor.Get(Keen.VRage.Core.Analytics.AnalyticsRawEvent@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.IdAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.IdAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.IdAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.IdAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.IdAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.IdAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.IdAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.IdAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.IdAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.IdAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.IdAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.IdAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.IdAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.IdAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.IdAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Analytics#EventId}#Set(System.Object,Keen.VRage.Core.Analytics.EventId@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.IdAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Analytics#EventId}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.IdAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Analytics#EventId}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.IdAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Analytics#EventId}#Set(System.Byte@,Keen.VRage.Core.Analytics.EventId@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.IdAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.IdAccessor.Set(Keen.VRage.Core.Analytics.AnalyticsRawEvent@,Keen.VRage.Core.Analytics.EventId@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.IdAccessor.Get(Keen.VRage.Core.Analytics.AnalyticsRawEvent@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.EventNameAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.EventNameAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.EventNameAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.EventNameAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.EventNameAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.EventNameAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.EventNameAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.EventNameAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.EventNameAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.EventNameAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.EventNameAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.EventNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.EventNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.EventNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.EventNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Object,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.EventNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.EventNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.EventNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Byte@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.EventNameAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.EventNameAccessor.Set(Keen.VRage.Core.Analytics.AnalyticsRawEvent@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.EventNameAccessor.Get(Keen.VRage.Core.Analytics.AnalyticsRawEvent@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.IsBehaviorEventAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.IsBehaviorEventAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.IsBehaviorEventAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.IsBehaviorEventAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.IsBehaviorEventAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.IsBehaviorEventAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.IsBehaviorEventAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.IsBehaviorEventAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.IsBehaviorEventAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.IsBehaviorEventAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.IsBehaviorEventAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.IsBehaviorEventAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.IsBehaviorEventAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.IsBehaviorEventAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.IsBehaviorEventAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.IsBehaviorEventAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.IsBehaviorEventAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.IsBehaviorEventAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.IsBehaviorEventAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.IsBehaviorEventAccessor.Set(Keen.VRage.Core.Analytics.AnalyticsRawEvent@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.IsBehaviorEventAccessor.Get(Keen.VRage.Core.Analytics.AnalyticsRawEvent@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.EventTimestampAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.EventTimestampAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.EventTimestampAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.EventTimestampAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.EventTimestampAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.EventTimestampAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.EventTimestampAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.EventTimestampAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.EventTimestampAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.EventTimestampAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.EventTimestampAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.EventTimestampAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.EventTimestampAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.EventTimestampAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.EventTimestampAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#DateTime}#Set(System.Object,System.DateTime@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.EventTimestampAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#DateTime}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.EventTimestampAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#DateTime}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.EventTimestampAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#DateTime}#Set(System.Byte@,System.DateTime@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.EventTimestampAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.EventTimestampAccessor.Set(Keen.VRage.Core.Analytics.AnalyticsRawEvent@,System.DateTime@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsRawEvent.TypeInfoHolder.EventTimestampAccessor.Get(Keen.VRage.Core.Analytics.AnalyticsRawEvent@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Analytics.AnalyticsReporterBaseComponent">
            <summary>
            The base implementation of IAnalyticsReporter interface.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsReporterBaseComponent.ReportEvent(Keen.VRage.Core.Analytics.AnalyticsRawEvent,System.Boolean)">
            <summary>
            Inheritors must specify how the event gets reported.
            </summary>
            <param name="reportedEvent"></param>
            <param name="block"></param>
        </member>
        <member name="T:Keen.VRage.Core.Analytics.AnalyticsTempMeta.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsTempMeta.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsTempMeta.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Analytics.AnalyticsTempMeta@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsTempMeta.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsTempMeta.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Analytics.AnalyticsTempMeta@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsTempMeta.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsTempMeta.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Analytics.AnalyticsTempMeta@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsTempMeta.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsTempMeta.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsTempMeta.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsTempMeta.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsTempMeta.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Analytics.AnalyticsTempMeta@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsTempMeta.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsTempMeta.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Analytics.AnalyticsTempMeta@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsTempMeta.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsTempMeta.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsTempMeta.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Analytics.AnalyticsTempMeta@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsTempMeta.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Analytics.AnalyticsTempMeta.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsTempMeta.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsTempMeta.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.AnalyticsTempMeta.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Analytics#AnalyticsTempMeta}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.AnalyticsTempMeta.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Analytics.AnalyticsTempMeta.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Analytics.AnalyticsTempMeta.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Analytics.AnalyticsTempMeta.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="T:Keen.VRage.Core.Analytics.ElasticAnalyticsReporterComponent">
            <summary>
            Implementation of IAnalyticsReporter for sending analytics to Elastic.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Analytics.ElasticAnalyticsBuilder">
            <summary>
            Configuration data for ElasticCache Backend
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Analytics.ElasticAnalyticsBuilder.BaseUrl">
            <summary> Base URL for the ElasticSearch instance </summary>
        </member>
        <member name="P:Keen.VRage.Core.Analytics.ElasticAnalyticsBuilder.EventIndex">
            <summary> Index for the main events of the game </summary>
        </member>
        <member name="P:Keen.VRage.Core.Analytics.ElasticAnalyticsBuilder.HeartbeatIndex">
            <summary> Index for the hearbeat events of the game </summary>
        </member>
        <member name="P:Keen.VRage.Core.Analytics.ElasticAnalyticsBuilder.BehaviorIndex">
            <summary> Index for the behavior events of the game </summary>
        </member>
        <member name="P:Keen.VRage.Core.Analytics.ElasticAnalyticsBuilder.ApiId">
            <summary> API ID and Key for the main events </summary>
        </member>
        <member name="P:Keen.VRage.Core.Analytics.ElasticAnalyticsBuilder.ApiKey">
            <summary> API Key for the main events </summary>
        </member>
        <member name="P:Keen.VRage.Core.Analytics.ElasticAnalyticsBuilder.HeartbeatApiId">
            <summary> API ID for the heartbeat events </summary>
        </member>
        <member name="P:Keen.VRage.Core.Analytics.ElasticAnalyticsBuilder.HeartbeatApiKey">
            <summary> API Key for the heartbeat events </summary>
        </member>
        <member name="P:Keen.VRage.Core.Analytics.ElasticAnalyticsBuilder.BehaviorApiId">
            <summary> API ID for the behavior events </summary>
        </member>
        <member name="P:Keen.VRage.Core.Analytics.ElasticAnalyticsBuilder.BehaviorApiKey">
            <summary> API Key for the behavior events </summary>
        </member>
        <member name="P:Keen.VRage.Core.Analytics.ElasticAnalyticsBuilder.MaxStoredEvents">
            <summary> Maximum number of events to store locally </summary>
        </member>
        <member name="P:Keen.VRage.Core.Analytics.ElasticAnalyticsBuilder.EventStorePath">
            <summary> Name of the path to store the events </summary>
        </member>
        <member name="T:Keen.VRage.Core.Analytics.EventGameMetadata">
            <summary>
            Game Metadata associated with an event reported to analytics
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.GameMode">
            <summary>
            Current Game Mode (Survival, Creative, Campaign, etc)
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.ArrayPosition">
            <summary>
            Current Player Position
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.MouseArrayPosition">
            <summary>
            Current Mouse Position
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.EventTimestamp">
            <summary>When the specified event occurred</summary>
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.UserID">
            <summary>
             The user ID of the player that reported the event
             <para>This is "anonymized" id generated by the game service currently in use.</para>
             </summary>
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.SEUserID">
            <summary>
            The legacy user id used on Space Engineers
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.ClientBranch">
            <summary>
            Branch of the client.
            e.g. 1197024
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.GameServiceName">
            <summary>
            Name of the game service that GameServiceUser was generated from. KeenAcc, Steam, Xbox, etc.
            <para>This will be preferably KeenAccount when it's available.</para>
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.ClientVersion">
            <summary>
            The version of the game client that reported the event
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.Platform">
            <summary>
            The platform the game is running on. Windows, Playstation, Xbox, etc.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.SessionID">
            <summary>
             Identifier of the current session. Might be null if no session is active (a.k.a. user on main menu)
             </summary> 
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.CPUInfo">
            <sumary/>
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.CpuNumberCores">
            <summary/>
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.CpuNumberThreads">
            <summary/>
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.EnableSteamCloud">
            <sumary/>
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.DisplayResolution">
            <sumary/>
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.DisplayWindowMode">
            <sumary/>
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.GDPRConsent">
            <sumary/>
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.ModioConsent">
            <summary/>
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.GpuDriverVersion">
            <sumary/>
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.GpuMemory">
            <sumary/>
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.GpuName">
            <sumary/>
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.OsArchitecture">
            <sumary/>
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.OsCulture">
            <sumary/>
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.RegionISO3">
            <summary/>
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.OsInfo">
            <sumary/>
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.OsMemory">
            <sumary/>
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.UserLanguage">
            <sumary/>
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.UserLocale">
            <sumary/>
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.GameStartTime">
            <sumary/>
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.KeenAccount">
            <summary/>
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.SettingsGraphicsPreset">
            <summary/>
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.WorldID">
            <summary/>
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.Clone">
            <summary>
            Returns a clone of the current metadata
            </summary>
            <returns></returns>
        </member>
        <member name="T:Keen.VRage.Core.Analytics.EventGameMetadata.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Analytics.EventGameMetadata@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Analytics.EventGameMetadata@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Analytics.EventGameMetadata@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Analytics.EventGameMetadata@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Analytics.EventGameMetadata@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Analytics.EventGameMetadata@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Analytics.EventGameMetadata@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Analytics.EventGameMetadata.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Analytics#EventGameMetadata}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GameModeAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GameModeAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GameModeAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GameModeAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GameModeAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GameModeAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GameModeAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GameModeAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GameModeAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GameModeAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GameModeAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GameModeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GameModeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GameModeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GameModeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Object,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GameModeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GameModeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GameModeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Byte@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GameModeAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GameModeAccessor.Set(Keen.VRage.Core.Analytics.EventGameMetadata@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GameModeAccessor.Get(Keen.VRage.Core.Analytics.EventGameMetadata@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.ArrayPositionAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.ArrayPositionAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.ArrayPositionAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.ArrayPositionAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.ArrayPositionAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.ArrayPositionAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.ArrayPositionAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.ArrayPositionAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.ArrayPositionAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.ArrayPositionAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.ArrayPositionAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.ArrayPositionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.ArrayPositionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.ArrayPositionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.ArrayPositionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single[]}#Set(System.Object,System.Single[]@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.ArrayPositionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single[]}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.ArrayPositionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single[]}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.ArrayPositionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single[]}#Set(System.Byte@,System.Single[]@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.ArrayPositionAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.ArrayPositionAccessor.Set(Keen.VRage.Core.Analytics.EventGameMetadata@,System.Single[]@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.ArrayPositionAccessor.Get(Keen.VRage.Core.Analytics.EventGameMetadata@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.MouseArrayPositionAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.MouseArrayPositionAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.MouseArrayPositionAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.MouseArrayPositionAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.MouseArrayPositionAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.MouseArrayPositionAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.MouseArrayPositionAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.MouseArrayPositionAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.MouseArrayPositionAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.MouseArrayPositionAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.MouseArrayPositionAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.MouseArrayPositionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.MouseArrayPositionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.MouseArrayPositionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.MouseArrayPositionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single[]}#Set(System.Object,System.Single[]@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.MouseArrayPositionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single[]}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.MouseArrayPositionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single[]}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.MouseArrayPositionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single[]}#Set(System.Byte@,System.Single[]@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.MouseArrayPositionAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.MouseArrayPositionAccessor.Set(Keen.VRage.Core.Analytics.EventGameMetadata@,System.Single[]@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.MouseArrayPositionAccessor.Get(Keen.VRage.Core.Analytics.EventGameMetadata@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.EventTimestampAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.EventTimestampAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.EventTimestampAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.EventTimestampAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.EventTimestampAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.EventTimestampAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.EventTimestampAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.EventTimestampAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.EventTimestampAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.EventTimestampAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.EventTimestampAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.EventTimestampAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.EventTimestampAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.EventTimestampAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.EventTimestampAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#DateTime}#Set(System.Object,System.DateTime@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.EventTimestampAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#DateTime}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.EventTimestampAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#DateTime}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.EventTimestampAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#DateTime}#Set(System.Byte@,System.DateTime@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.EventTimestampAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.EventTimestampAccessor.Set(Keen.VRage.Core.Analytics.EventGameMetadata@,System.DateTime@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.EventTimestampAccessor.Get(Keen.VRage.Core.Analytics.EventGameMetadata@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.UserIDAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.UserIDAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.UserIDAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.UserIDAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.UserIDAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.UserIDAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.UserIDAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.UserIDAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.UserIDAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.UserIDAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.UserIDAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.UserIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.UserIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.UserIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.UserIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Services#Data#GameServiceUser}#Set(System.Object,Keen.VRage.Core.Services.Data.GameServiceUser@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.UserIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Services#Data#GameServiceUser}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.UserIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Services#Data#GameServiceUser}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.UserIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Services#Data#GameServiceUser}#Set(System.Byte@,Keen.VRage.Core.Services.Data.GameServiceUser@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.UserIDAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.UserIDAccessor.Set(Keen.VRage.Core.Analytics.EventGameMetadata@,Keen.VRage.Core.Services.Data.GameServiceUser@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.UserIDAccessor.Get(Keen.VRage.Core.Analytics.EventGameMetadata@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.SEUserIDAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.SEUserIDAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.SEUserIDAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.SEUserIDAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.SEUserIDAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.SEUserIDAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.SEUserIDAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.SEUserIDAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.SEUserIDAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.SEUserIDAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.SEUserIDAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.SEUserIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.SEUserIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.SEUserIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.SEUserIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Object,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.SEUserIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.SEUserIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.SEUserIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Byte@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.SEUserIDAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.SEUserIDAccessor.Set(Keen.VRage.Core.Analytics.EventGameMetadata@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.SEUserIDAccessor.Get(Keen.VRage.Core.Analytics.EventGameMetadata@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.ClientBranchAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.ClientBranchAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.ClientBranchAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.ClientBranchAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.ClientBranchAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.ClientBranchAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.ClientBranchAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.ClientBranchAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.ClientBranchAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.ClientBranchAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.ClientBranchAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.ClientBranchAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.ClientBranchAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.ClientBranchAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.ClientBranchAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Object,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.ClientBranchAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.ClientBranchAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.ClientBranchAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Byte@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.ClientBranchAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.ClientBranchAccessor.Set(Keen.VRage.Core.Analytics.EventGameMetadata@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.ClientBranchAccessor.Get(Keen.VRage.Core.Analytics.EventGameMetadata@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GameServiceNameAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GameServiceNameAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GameServiceNameAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GameServiceNameAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GameServiceNameAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GameServiceNameAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GameServiceNameAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GameServiceNameAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GameServiceNameAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GameServiceNameAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GameServiceNameAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GameServiceNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GameServiceNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GameServiceNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GameServiceNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Object,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GameServiceNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GameServiceNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GameServiceNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Byte@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GameServiceNameAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GameServiceNameAccessor.Set(Keen.VRage.Core.Analytics.EventGameMetadata@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GameServiceNameAccessor.Get(Keen.VRage.Core.Analytics.EventGameMetadata@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.ClientVersionAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.ClientVersionAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.ClientVersionAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.ClientVersionAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.ClientVersionAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.ClientVersionAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.ClientVersionAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.ClientVersionAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.ClientVersionAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.ClientVersionAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.ClientVersionAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.ClientVersionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.ClientVersionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.ClientVersionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.ClientVersionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Object,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.ClientVersionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.ClientVersionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.ClientVersionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Byte@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.ClientVersionAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.ClientVersionAccessor.Set(Keen.VRage.Core.Analytics.EventGameMetadata@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.ClientVersionAccessor.Get(Keen.VRage.Core.Analytics.EventGameMetadata@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.PlatformAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.PlatformAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.PlatformAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.PlatformAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.PlatformAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.PlatformAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.PlatformAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.PlatformAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.PlatformAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.PlatformAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.PlatformAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.PlatformAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.PlatformAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.PlatformAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.PlatformAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Object,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.PlatformAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.PlatformAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.PlatformAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Byte@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.PlatformAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.PlatformAccessor.Set(Keen.VRage.Core.Analytics.EventGameMetadata@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.PlatformAccessor.Get(Keen.VRage.Core.Analytics.EventGameMetadata@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.SessionIDAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.SessionIDAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.SessionIDAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.SessionIDAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.SessionIDAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.SessionIDAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.SessionIDAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.SessionIDAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.SessionIDAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.SessionIDAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.SessionIDAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.SessionIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.SessionIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.SessionIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.SessionIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Guid?}#Set(System.Object,System.Nullable{System.Guid}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.SessionIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Guid?}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.SessionIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Guid?}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.SessionIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Guid?}#Set(System.Byte@,System.Nullable{System.Guid}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.SessionIDAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.SessionIDAccessor.Set(Keen.VRage.Core.Analytics.EventGameMetadata@,System.Nullable{System.Guid}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.SessionIDAccessor.Get(Keen.VRage.Core.Analytics.EventGameMetadata@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.CPUInfoAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.CPUInfoAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.CPUInfoAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.CPUInfoAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.CPUInfoAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.CPUInfoAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.CPUInfoAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.CPUInfoAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.CPUInfoAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.CPUInfoAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.CPUInfoAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.CPUInfoAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.CPUInfoAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.CPUInfoAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.CPUInfoAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Object,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.CPUInfoAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.CPUInfoAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.CPUInfoAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Byte@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.CPUInfoAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.CPUInfoAccessor.Set(Keen.VRage.Core.Analytics.EventGameMetadata@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.CPUInfoAccessor.Get(Keen.VRage.Core.Analytics.EventGameMetadata@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.CpuNumberCoresAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.CpuNumberCoresAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.CpuNumberCoresAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.CpuNumberCoresAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.CpuNumberCoresAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.CpuNumberCoresAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.CpuNumberCoresAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.CpuNumberCoresAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.CpuNumberCoresAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.CpuNumberCoresAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.CpuNumberCoresAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.CpuNumberCoresAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.CpuNumberCoresAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.CpuNumberCoresAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.CpuNumberCoresAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Set(System.Object,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.CpuNumberCoresAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.CpuNumberCoresAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.CpuNumberCoresAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Set(System.Byte@,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.CpuNumberCoresAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.CpuNumberCoresAccessor.Set(Keen.VRage.Core.Analytics.EventGameMetadata@,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.CpuNumberCoresAccessor.Get(Keen.VRage.Core.Analytics.EventGameMetadata@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.CpuNumberThreadsAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.CpuNumberThreadsAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.CpuNumberThreadsAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.CpuNumberThreadsAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.CpuNumberThreadsAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.CpuNumberThreadsAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.CpuNumberThreadsAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.CpuNumberThreadsAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.CpuNumberThreadsAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.CpuNumberThreadsAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.CpuNumberThreadsAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.CpuNumberThreadsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.CpuNumberThreadsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.CpuNumberThreadsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.CpuNumberThreadsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Set(System.Object,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.CpuNumberThreadsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.CpuNumberThreadsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.CpuNumberThreadsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Set(System.Byte@,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.CpuNumberThreadsAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.CpuNumberThreadsAccessor.Set(Keen.VRage.Core.Analytics.EventGameMetadata@,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.CpuNumberThreadsAccessor.Get(Keen.VRage.Core.Analytics.EventGameMetadata@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.EnableSteamCloudAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.EnableSteamCloudAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.EnableSteamCloudAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.EnableSteamCloudAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.EnableSteamCloudAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.EnableSteamCloudAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.EnableSteamCloudAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.EnableSteamCloudAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.EnableSteamCloudAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.EnableSteamCloudAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.EnableSteamCloudAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.EnableSteamCloudAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.EnableSteamCloudAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.EnableSteamCloudAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.EnableSteamCloudAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.EnableSteamCloudAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.EnableSteamCloudAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.EnableSteamCloudAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.EnableSteamCloudAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.EnableSteamCloudAccessor.Set(Keen.VRage.Core.Analytics.EventGameMetadata@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.EnableSteamCloudAccessor.Get(Keen.VRage.Core.Analytics.EventGameMetadata@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.DisplayResolutionAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.DisplayResolutionAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.DisplayResolutionAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.DisplayResolutionAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.DisplayResolutionAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.DisplayResolutionAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.DisplayResolutionAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.DisplayResolutionAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.DisplayResolutionAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.DisplayResolutionAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.DisplayResolutionAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.DisplayResolutionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.DisplayResolutionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.DisplayResolutionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.DisplayResolutionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Object,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.DisplayResolutionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.DisplayResolutionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.DisplayResolutionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Byte@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.DisplayResolutionAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.DisplayResolutionAccessor.Set(Keen.VRage.Core.Analytics.EventGameMetadata@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.DisplayResolutionAccessor.Get(Keen.VRage.Core.Analytics.EventGameMetadata@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.DisplayWindowModeAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.DisplayWindowModeAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.DisplayWindowModeAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.DisplayWindowModeAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.DisplayWindowModeAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.DisplayWindowModeAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.DisplayWindowModeAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.DisplayWindowModeAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.DisplayWindowModeAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.DisplayWindowModeAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.DisplayWindowModeAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.DisplayWindowModeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.DisplayWindowModeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.DisplayWindowModeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.DisplayWindowModeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Object,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.DisplayWindowModeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.DisplayWindowModeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.DisplayWindowModeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Byte@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.DisplayWindowModeAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.DisplayWindowModeAccessor.Set(Keen.VRage.Core.Analytics.EventGameMetadata@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.DisplayWindowModeAccessor.Get(Keen.VRage.Core.Analytics.EventGameMetadata@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GDPRConsentAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GDPRConsentAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GDPRConsentAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GDPRConsentAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GDPRConsentAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GDPRConsentAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GDPRConsentAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GDPRConsentAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GDPRConsentAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GDPRConsentAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GDPRConsentAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GDPRConsentAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GDPRConsentAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GDPRConsentAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GDPRConsentAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GDPRConsentAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GDPRConsentAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GDPRConsentAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GDPRConsentAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GDPRConsentAccessor.Set(Keen.VRage.Core.Analytics.EventGameMetadata@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GDPRConsentAccessor.Get(Keen.VRage.Core.Analytics.EventGameMetadata@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.ModioConsentAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.ModioConsentAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.ModioConsentAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.ModioConsentAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.ModioConsentAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.ModioConsentAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.ModioConsentAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.ModioConsentAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.ModioConsentAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.ModioConsentAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.ModioConsentAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.ModioConsentAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.ModioConsentAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.ModioConsentAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.ModioConsentAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.ModioConsentAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.ModioConsentAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.ModioConsentAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.ModioConsentAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.ModioConsentAccessor.Set(Keen.VRage.Core.Analytics.EventGameMetadata@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.ModioConsentAccessor.Get(Keen.VRage.Core.Analytics.EventGameMetadata@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GpuDriverVersionAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GpuDriverVersionAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GpuDriverVersionAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GpuDriverVersionAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GpuDriverVersionAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GpuDriverVersionAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GpuDriverVersionAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GpuDriverVersionAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GpuDriverVersionAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GpuDriverVersionAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GpuDriverVersionAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GpuDriverVersionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GpuDriverVersionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GpuDriverVersionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GpuDriverVersionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Object,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GpuDriverVersionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GpuDriverVersionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GpuDriverVersionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Byte@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GpuDriverVersionAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GpuDriverVersionAccessor.Set(Keen.VRage.Core.Analytics.EventGameMetadata@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GpuDriverVersionAccessor.Get(Keen.VRage.Core.Analytics.EventGameMetadata@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GpuMemoryAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GpuMemoryAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GpuMemoryAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GpuMemoryAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GpuMemoryAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GpuMemoryAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GpuMemoryAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GpuMemoryAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GpuMemoryAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GpuMemoryAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GpuMemoryAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GpuMemoryAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GpuMemoryAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GpuMemoryAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GpuMemoryAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Set(System.Object,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GpuMemoryAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GpuMemoryAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GpuMemoryAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Set(System.Byte@,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GpuMemoryAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GpuMemoryAccessor.Set(Keen.VRage.Core.Analytics.EventGameMetadata@,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GpuMemoryAccessor.Get(Keen.VRage.Core.Analytics.EventGameMetadata@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GpuNameAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GpuNameAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GpuNameAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GpuNameAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GpuNameAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GpuNameAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GpuNameAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GpuNameAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GpuNameAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GpuNameAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GpuNameAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GpuNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GpuNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GpuNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GpuNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Object,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GpuNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GpuNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GpuNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Byte@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GpuNameAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GpuNameAccessor.Set(Keen.VRage.Core.Analytics.EventGameMetadata@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GpuNameAccessor.Get(Keen.VRage.Core.Analytics.EventGameMetadata@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.OsArchitectureAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.OsArchitectureAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.OsArchitectureAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.OsArchitectureAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.OsArchitectureAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.OsArchitectureAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.OsArchitectureAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.OsArchitectureAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.OsArchitectureAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.OsArchitectureAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.OsArchitectureAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.OsArchitectureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.OsArchitectureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.OsArchitectureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.OsArchitectureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Object,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.OsArchitectureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.OsArchitectureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.OsArchitectureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Byte@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.OsArchitectureAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.OsArchitectureAccessor.Set(Keen.VRage.Core.Analytics.EventGameMetadata@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.OsArchitectureAccessor.Get(Keen.VRage.Core.Analytics.EventGameMetadata@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.OsCultureAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.OsCultureAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.OsCultureAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.OsCultureAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.OsCultureAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.OsCultureAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.OsCultureAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.OsCultureAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.OsCultureAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.OsCultureAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.OsCultureAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.OsCultureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.OsCultureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.OsCultureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.OsCultureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Object,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.OsCultureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.OsCultureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.OsCultureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Byte@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.OsCultureAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.OsCultureAccessor.Set(Keen.VRage.Core.Analytics.EventGameMetadata@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.OsCultureAccessor.Get(Keen.VRage.Core.Analytics.EventGameMetadata@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.RegionISO3Accessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.RegionISO3Accessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.RegionISO3Accessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.RegionISO3Accessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.RegionISO3Accessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.RegionISO3Accessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.RegionISO3Accessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.RegionISO3Accessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.RegionISO3Accessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.RegionISO3Accessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.RegionISO3Accessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.RegionISO3Accessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.RegionISO3Accessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.RegionISO3Accessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.RegionISO3Accessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Object,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.RegionISO3Accessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.RegionISO3Accessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.RegionISO3Accessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Byte@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.RegionISO3Accessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.RegionISO3Accessor.Set(Keen.VRage.Core.Analytics.EventGameMetadata@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.RegionISO3Accessor.Get(Keen.VRage.Core.Analytics.EventGameMetadata@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.OsInfoAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.OsInfoAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.OsInfoAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.OsInfoAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.OsInfoAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.OsInfoAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.OsInfoAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.OsInfoAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.OsInfoAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.OsInfoAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.OsInfoAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.OsInfoAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.OsInfoAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.OsInfoAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.OsInfoAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Object,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.OsInfoAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.OsInfoAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.OsInfoAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Byte@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.OsInfoAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.OsInfoAccessor.Set(Keen.VRage.Core.Analytics.EventGameMetadata@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.OsInfoAccessor.Get(Keen.VRage.Core.Analytics.EventGameMetadata@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.OsMemoryAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.OsMemoryAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.OsMemoryAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.OsMemoryAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.OsMemoryAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.OsMemoryAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.OsMemoryAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.OsMemoryAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.OsMemoryAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.OsMemoryAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.OsMemoryAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.OsMemoryAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.OsMemoryAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.OsMemoryAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.OsMemoryAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Set(System.Object,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.OsMemoryAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.OsMemoryAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.OsMemoryAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Set(System.Byte@,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.OsMemoryAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.OsMemoryAccessor.Set(Keen.VRage.Core.Analytics.EventGameMetadata@,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.OsMemoryAccessor.Get(Keen.VRage.Core.Analytics.EventGameMetadata@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.UserLanguageAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.UserLanguageAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.UserLanguageAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.UserLanguageAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.UserLanguageAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.UserLanguageAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.UserLanguageAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.UserLanguageAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.UserLanguageAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.UserLanguageAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.UserLanguageAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.UserLanguageAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.UserLanguageAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.UserLanguageAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.UserLanguageAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Object,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.UserLanguageAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.UserLanguageAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.UserLanguageAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Byte@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.UserLanguageAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.UserLanguageAccessor.Set(Keen.VRage.Core.Analytics.EventGameMetadata@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.UserLanguageAccessor.Get(Keen.VRage.Core.Analytics.EventGameMetadata@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.UserLocaleAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.UserLocaleAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.UserLocaleAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.UserLocaleAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.UserLocaleAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.UserLocaleAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.UserLocaleAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.UserLocaleAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.UserLocaleAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.UserLocaleAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.UserLocaleAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.UserLocaleAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.UserLocaleAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.UserLocaleAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.UserLocaleAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Object,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.UserLocaleAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.UserLocaleAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.UserLocaleAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Byte@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.UserLocaleAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.UserLocaleAccessor.Set(Keen.VRage.Core.Analytics.EventGameMetadata@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.UserLocaleAccessor.Get(Keen.VRage.Core.Analytics.EventGameMetadata@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GameStartTimeAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GameStartTimeAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GameStartTimeAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GameStartTimeAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GameStartTimeAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GameStartTimeAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GameStartTimeAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GameStartTimeAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GameStartTimeAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GameStartTimeAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GameStartTimeAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GameStartTimeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GameStartTimeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GameStartTimeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GameStartTimeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#DateTime}#Set(System.Object,System.DateTime@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GameStartTimeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#DateTime}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GameStartTimeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#DateTime}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GameStartTimeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#DateTime}#Set(System.Byte@,System.DateTime@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GameStartTimeAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GameStartTimeAccessor.Set(Keen.VRage.Core.Analytics.EventGameMetadata@,System.DateTime@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.GameStartTimeAccessor.Get(Keen.VRage.Core.Analytics.EventGameMetadata@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.KeenAccountAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.KeenAccountAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.KeenAccountAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.KeenAccountAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.KeenAccountAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.KeenAccountAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.KeenAccountAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.KeenAccountAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.KeenAccountAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.KeenAccountAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.KeenAccountAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.KeenAccountAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.KeenAccountAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.KeenAccountAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.KeenAccountAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Object,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.KeenAccountAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.KeenAccountAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.KeenAccountAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Byte@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.KeenAccountAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.KeenAccountAccessor.Set(Keen.VRage.Core.Analytics.EventGameMetadata@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.KeenAccountAccessor.Get(Keen.VRage.Core.Analytics.EventGameMetadata@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.SettingsGraphicsPresetAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.SettingsGraphicsPresetAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.SettingsGraphicsPresetAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.SettingsGraphicsPresetAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.SettingsGraphicsPresetAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.SettingsGraphicsPresetAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.SettingsGraphicsPresetAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.SettingsGraphicsPresetAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.SettingsGraphicsPresetAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.SettingsGraphicsPresetAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.SettingsGraphicsPresetAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.SettingsGraphicsPresetAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.SettingsGraphicsPresetAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.SettingsGraphicsPresetAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.SettingsGraphicsPresetAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Object,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.SettingsGraphicsPresetAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.SettingsGraphicsPresetAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.SettingsGraphicsPresetAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Byte@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.SettingsGraphicsPresetAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.SettingsGraphicsPresetAccessor.Set(Keen.VRage.Core.Analytics.EventGameMetadata@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.SettingsGraphicsPresetAccessor.Get(Keen.VRage.Core.Analytics.EventGameMetadata@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.WorldIDAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.WorldIDAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.WorldIDAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.WorldIDAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.WorldIDAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.WorldIDAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.WorldIDAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.WorldIDAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.WorldIDAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.WorldIDAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.WorldIDAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.WorldIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.WorldIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.WorldIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.WorldIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Object,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.WorldIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.WorldIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.WorldIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Byte@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.WorldIDAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.WorldIDAccessor.Set(Keen.VRage.Core.Analytics.EventGameMetadata@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventGameMetadata.TypeInfoHolder.WorldIDAccessor.Get(Keen.VRage.Core.Analytics.EventGameMetadata@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Analytics.EventId">
            <summary>
            A struct representing a event in the analytics system
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Analytics.EventId.Id">
            <summary>
            Guid of an event in the <see cref="T:Keen.VRage.Core.Analytics.IAnalyticsReporter"/>
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventId.#ctor">
            <summary>
            Creates a new instance of EventId with a Invalid Guid (all zeroes)
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventId.#ctor(System.Guid)">
            <summary>
            Creates a new instance of the EventId struct.
            </summary>
            <param name="id">GUID of the event</param>
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventId.ToString">
            <summary>
            Returns a string representation of this event ID
            </summary>
            <returns>String representation of this service user</returns>
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventId.Equals(Keen.VRage.Core.Analytics.EventId)">
            <summary>
            Compares if the handle refers to the same resource
            </summary>
            <param name="other">Other resource to compare with this one</param>
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventId.Equals(System.Object)">
            <summary>
            Checks if the specified object is a EventId and compares if the handle refers to the same resource
            </summary>
            <param name="obj">Other object to compare with this one</param>
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventId.GetHashCode">
            <summary>
            Returns a hashcode for this handle
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Analytics.EventIdSerializer">
            <summary/>
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventIdSerializer.Convert(Keen.VRage.Library.Serialization.SerializationContext,Keen.VRage.Core.Analytics.EventId@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.EventIdSerializer.Convert(Keen.VRage.Library.Serialization.SerializationContext,System.String@,Keen.VRage.Core.Analytics.EventId@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Analytics.Events.SessionEndEventType">
            <summary />
        </member>
        <member name="T:Keen.VRage.Core.Analytics.Events.SessionEndEvent">
            <summary/>
        </member>
        <member name="T:Keen.VRage.Core.Analytics.Events.SessionEndEvent.Reason">
            <summary>
            Game quit reason
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Analytics.Events.SessionStartEventType">
            <summary />
        </member>
        <member name="T:Keen.VRage.Core.Analytics.Events.SessionStartEvent">
            <summary />
        </member>
        <member name="T:Keen.VRage.Core.Analytics.Events.UIClickEventType">
            <summary />
        </member>
        <member name="T:Keen.VRage.Core.Analytics.Events.UIClickEvent">
            <summary/>
        </member>
        <member name="T:Keen.VRage.Core.Analytics.IAnalyticsBehavior">
            <summary> Tags a analytics event as behavior </summary>
        </member>
        <member name="T:Keen.VRage.Core.Analytics.IAnalyticsEvent">
            <summary>
            Represents an event reported to analytics
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Analytics.IAnalyticsEvent.EventType">
            <summary> Returns the type of the reported event </summary>
        </member>
        <member name="M:Keen.VRage.Core.Analytics.IAnalyticsEvent.GetPropertiesDictionary">
            <summary> Returns additional information associated with the event </summary>
        </member>
        <member name="M:Keen.VRage.Core.Analytics.IAnalyticsEvent.MetadataFieldsToInclude">
            <summary> List of fields to include in event serialization </summary>
        </member>
        <member name="T:Keen.VRage.Core.Analytics.IAnalyticsManager">
            <summary>
            Aggregator of analytics trackers
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Analytics.IAnalyticsManager.MetadataProvider">
            <summary>
            Provides base <see cref="T:Keen.VRage.Core.Analytics.EventGameMetadata"/>
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Analytics.IAnalyticsManager.ActiveEvents">
            <summary>
            List of events that are currently being requested by this backend
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Analytics.IAnalyticsManager.RegisterAnalyticsReporter(Keen.VRage.Core.Analytics.IAnalyticsReporter)">
            <summary>
            The given tracker will be reported the same events as the manager
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Analytics.IAnalyticsManager.ReportEvent(Keen.VRage.Core.Analytics.IAnalyticsEvent,Keen.VRage.Core.Analytics.EventGameMetadata,System.Exception,System.Boolean)">
            <summary>
            Reports an event as soon as possible
            </summary>
            <param name="analyticsEvent"></param>
            <param name="gameMetadata"></param>
            <param name="exception"></param>
            <param name="block">Wait for the event to finish sending before returning</param>
            <returns></returns>
        </member>
        <member name="M:Keen.VRage.Core.Analytics.IAnalyticsManager.StoreEvent(Keen.VRage.Core.Analytics.IAnalyticsEvent,Keen.VRage.Core.Analytics.EventGameMetadata,System.Exception)">
            <summary>
            Stores an event to be reported later by calling ReportPostponedEvents
            <para>Reports an event as soon as possible</para>
            <para>Used for low priority events that can be sent later</para>
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Analytics.IAnalyticsManager.ReportStoredEvents">
            <summary>
            Reports previously stored events, if it has any
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Analytics.IAnalyticsReporter">
            <summary>
            Generic interface for all analytics library integrations
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Analytics.IAnalyticsReporter.Name">
            <summary>
            Name of the reporter backend
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Analytics.IAnalyticsReporter.ActiveEvents">
            <summary>
            List of events that are currently being requested by this backend
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Analytics.IAnalyticsReporter.ReportEvent(Keen.VRage.Core.Analytics.IAnalyticsEvent,Keen.VRage.Core.Analytics.EventGameMetadata,System.Exception,System.Boolean)">
            <summary>
            Reports an event as soon as possible
            </summary>
            <param name="analyticsEvent"></param>
            <param name="gameMetadata"></param>
            <param name="exception"></param>
            <param name="block"></param>
            <returns></returns>
        </member>
        <member name="M:Keen.VRage.Core.Analytics.IAnalyticsReporter.StoreEvent(Keen.VRage.Core.Analytics.IAnalyticsEvent,Keen.VRage.Core.Analytics.EventGameMetadata,System.Exception)">
            <summary>
            Stores an event to be reported later by calling ReportPostponedEvents
            <para>Reports an event as soon as possible</para>
            <para>Used for low priority events that can be sent later</para>
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Analytics.IAnalyticsReporter.ReportStoredEvents">
            <summary>
            Reports previously stored events, if it has any
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Analytics.IEventType">
            <summary>
            A type representing an event that can be reported to analytics
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Analytics.IEventType.Name">
            <summary>Name of the event</summary>
        </member>
        <member name="T:Keen.VRage.Core.Analytics.ReportType">
            <summary>
            The type of event sent to analytics
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Analytics.ReportTypeData">
            <summary>
            Event type and customs args used by IAnalyticsEvent.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Analytics.ReportTypeData.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.ReportTypeData.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.ReportTypeData.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Analytics.ReportTypeData@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.ReportTypeData.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.ReportTypeData.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Analytics.ReportTypeData@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.ReportTypeData.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.ReportTypeData.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Analytics.ReportTypeData@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.ReportTypeData.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.ReportTypeData.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.ReportTypeData.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.ReportTypeData.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.ReportTypeData.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Analytics.ReportTypeData@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.ReportTypeData.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.ReportTypeData.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Analytics.ReportTypeData@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.ReportTypeData.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.ReportTypeData.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Analytics.ReportTypeData@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.ReportTypeData.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.ReportTypeData.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Analytics.ReportTypeData@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.ReportTypeData.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Analytics.ReportTypeData.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.ReportTypeData.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.ReportTypeData.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.ReportTypeData.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Analytics#ReportTypeData}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.ReportTypeData.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Analytics.ReportTypeData.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Analytics.ReportTypeData.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Analytics.ReportTypeData.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Analytics.ReportTypeData.TypeInfoHolder.ReportTypeEnumAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.ReportTypeData.TypeInfoHolder.ReportTypeEnumAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.ReportTypeData.TypeInfoHolder.ReportTypeEnumAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.ReportTypeData.TypeInfoHolder.ReportTypeEnumAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.ReportTypeData.TypeInfoHolder.ReportTypeEnumAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.ReportTypeData.TypeInfoHolder.ReportTypeEnumAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.ReportTypeData.TypeInfoHolder.ReportTypeEnumAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.ReportTypeData.TypeInfoHolder.ReportTypeEnumAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.ReportTypeData.TypeInfoHolder.ReportTypeEnumAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.ReportTypeData.TypeInfoHolder.ReportTypeEnumAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.ReportTypeData.TypeInfoHolder.ReportTypeEnumAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.ReportTypeData.TypeInfoHolder.ReportTypeEnumAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.ReportTypeData.TypeInfoHolder.ReportTypeEnumAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.ReportTypeData.TypeInfoHolder.ReportTypeEnumAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.ReportTypeData.TypeInfoHolder.ReportTypeEnumAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Analytics#ReportType}#Set(System.Object,Keen.VRage.Core.Analytics.ReportType@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.ReportTypeData.TypeInfoHolder.ReportTypeEnumAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Analytics#ReportType}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.ReportTypeData.TypeInfoHolder.ReportTypeEnumAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Analytics#ReportType}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.ReportTypeData.TypeInfoHolder.ReportTypeEnumAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Analytics#ReportType}#Set(System.Byte@,Keen.VRage.Core.Analytics.ReportType@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.ReportTypeData.TypeInfoHolder.ReportTypeEnumAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.ReportTypeData.TypeInfoHolder.ReportTypeEnumAccessor.Set(Keen.VRage.Core.Analytics.ReportTypeData@,Keen.VRage.Core.Analytics.ReportType@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.ReportTypeData.TypeInfoHolder.ReportTypeEnumAccessor.Get(Keen.VRage.Core.Analytics.ReportTypeData@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.ReportTypeData.TypeInfoHolder.ReportTypeAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.ReportTypeData.TypeInfoHolder.ReportTypeAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.ReportTypeData.TypeInfoHolder.ReportTypeAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.ReportTypeData.TypeInfoHolder.ReportTypeAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.ReportTypeData.TypeInfoHolder.ReportTypeAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.ReportTypeData.TypeInfoHolder.ReportTypeAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.ReportTypeData.TypeInfoHolder.ReportTypeAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.ReportTypeData.TypeInfoHolder.ReportTypeAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.ReportTypeData.TypeInfoHolder.ReportTypeAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.ReportTypeData.TypeInfoHolder.ReportTypeAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.ReportTypeData.TypeInfoHolder.ReportTypeAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.ReportTypeData.TypeInfoHolder.ReportTypeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.ReportTypeData.TypeInfoHolder.ReportTypeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.ReportTypeData.TypeInfoHolder.ReportTypeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.ReportTypeData.TypeInfoHolder.ReportTypeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int64}#Set(System.Object,System.Int64@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.ReportTypeData.TypeInfoHolder.ReportTypeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int64}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.ReportTypeData.TypeInfoHolder.ReportTypeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int64}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.ReportTypeData.TypeInfoHolder.ReportTypeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int64}#Set(System.Byte@,System.Int64@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.ReportTypeData.TypeInfoHolder.ReportTypeAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.ReportTypeData.TypeInfoHolder.ReportTypeAccessor.Set(Keen.VRage.Core.Analytics.ReportTypeData@,System.Int64@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.ReportTypeData.TypeInfoHolder.ReportTypeAccessor.Get(Keen.VRage.Core.Analytics.ReportTypeData@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.ReportTypeData.TypeInfoHolder.Arg1Accessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.ReportTypeData.TypeInfoHolder.Arg1Accessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.ReportTypeData.TypeInfoHolder.Arg1Accessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.ReportTypeData.TypeInfoHolder.Arg1Accessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.ReportTypeData.TypeInfoHolder.Arg1Accessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.ReportTypeData.TypeInfoHolder.Arg1Accessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.ReportTypeData.TypeInfoHolder.Arg1Accessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.ReportTypeData.TypeInfoHolder.Arg1Accessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.ReportTypeData.TypeInfoHolder.Arg1Accessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.ReportTypeData.TypeInfoHolder.Arg1Accessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.ReportTypeData.TypeInfoHolder.Arg1Accessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.ReportTypeData.TypeInfoHolder.Arg1Accessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.ReportTypeData.TypeInfoHolder.Arg1Accessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.ReportTypeData.TypeInfoHolder.Arg1Accessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.ReportTypeData.TypeInfoHolder.Arg1Accessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Object,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.ReportTypeData.TypeInfoHolder.Arg1Accessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.ReportTypeData.TypeInfoHolder.Arg1Accessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.ReportTypeData.TypeInfoHolder.Arg1Accessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Byte@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.ReportTypeData.TypeInfoHolder.Arg1Accessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.ReportTypeData.TypeInfoHolder.Arg1Accessor.Set(Keen.VRage.Core.Analytics.ReportTypeData@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.ReportTypeData.TypeInfoHolder.Arg1Accessor.Get(Keen.VRage.Core.Analytics.ReportTypeData@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.ReportTypeData.TypeInfoHolder.Arg2Accessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.ReportTypeData.TypeInfoHolder.Arg2Accessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.ReportTypeData.TypeInfoHolder.Arg2Accessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.ReportTypeData.TypeInfoHolder.Arg2Accessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.ReportTypeData.TypeInfoHolder.Arg2Accessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.ReportTypeData.TypeInfoHolder.Arg2Accessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.ReportTypeData.TypeInfoHolder.Arg2Accessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.ReportTypeData.TypeInfoHolder.Arg2Accessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Analytics.ReportTypeData.TypeInfoHolder.Arg2Accessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.ReportTypeData.TypeInfoHolder.Arg2Accessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.ReportTypeData.TypeInfoHolder.Arg2Accessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.ReportTypeData.TypeInfoHolder.Arg2Accessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.ReportTypeData.TypeInfoHolder.Arg2Accessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.ReportTypeData.TypeInfoHolder.Arg2Accessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.ReportTypeData.TypeInfoHolder.Arg2Accessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Object,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.ReportTypeData.TypeInfoHolder.Arg2Accessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.ReportTypeData.TypeInfoHolder.Arg2Accessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.ReportTypeData.TypeInfoHolder.Arg2Accessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Byte@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.ReportTypeData.TypeInfoHolder.Arg2Accessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.ReportTypeData.TypeInfoHolder.Arg2Accessor.Set(Keen.VRage.Core.Analytics.ReportTypeData@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Analytics.ReportTypeData.TypeInfoHolder.Arg2Accessor.Get(Keen.VRage.Core.Analytics.ReportTypeData@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.CoreConfigurations.AllowMultipleConfiguration">
            <summary>
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.AllowMultipleConfiguration.AllowMultiple">
            <summary>
            (<b>UNSAFE</b>) Whether this app allows running multiple instances, even though it was specified as single-instance (<see cref="P:Keen.VRage.Core.CoreSettings.SingleInstance"/>).
            </summary>
            <remarks>
            Use for development purposes only
            </remarks>
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.AllowMultipleConfiguration.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer{Keen#VRage#Core#CoreConfigurations#AllowMultipleConfiguration}#NameSerializer">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.AllowMultipleConfiguration.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#NameSerializer">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.AllowMultipleConfiguration.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#NameType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AllowMultipleConfiguration.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer{Keen#VRage#Core#CoreConfigurations#AllowMultipleConfiguration}#ShouldSerializeAsName(Keen.VRage.Library.Serialization.SerializationContext,Keen.VRage.Core.CoreConfigurations.AllowMultipleConfiguration@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AllowMultipleConfiguration.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#ShouldSerializeAsName(Keen.VRage.Library.Serialization.SerializationContext,System.Object@)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.CoreConfigurations.AllowMultipleConfiguration.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.AllowMultipleConfiguration.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#CoreConfigurations#AllowMultipleConfiguration}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AllowMultipleConfiguration.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AllowMultipleConfiguration.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.CoreConfigurations.AllowMultipleConfiguration.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.CoreConfigurations.AllowMultipleConfiguration.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.CoreConfigurations.AllowMultipleConfiguration.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.AllowMultipleConfiguration.TypeInfoHolder.AllowMultipleAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.AllowMultipleConfiguration.TypeInfoHolder.AllowMultipleAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.AllowMultipleConfiguration.TypeInfoHolder.AllowMultipleAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.AllowMultipleConfiguration.TypeInfoHolder.AllowMultipleAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.AllowMultipleConfiguration.TypeInfoHolder.AllowMultipleAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.AllowMultipleConfiguration.TypeInfoHolder.AllowMultipleAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.AllowMultipleConfiguration.TypeInfoHolder.AllowMultipleAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.AllowMultipleConfiguration.TypeInfoHolder.AllowMultipleAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.AllowMultipleConfiguration.TypeInfoHolder.AllowMultipleAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AllowMultipleConfiguration.TypeInfoHolder.AllowMultipleAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AllowMultipleConfiguration.TypeInfoHolder.AllowMultipleAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AllowMultipleConfiguration.TypeInfoHolder.AllowMultipleAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AllowMultipleConfiguration.TypeInfoHolder.AllowMultipleAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AllowMultipleConfiguration.TypeInfoHolder.AllowMultipleAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AllowMultipleConfiguration.TypeInfoHolder.AllowMultipleAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AllowMultipleConfiguration.TypeInfoHolder.AllowMultipleAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AllowMultipleConfiguration.TypeInfoHolder.AllowMultipleAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AllowMultipleConfiguration.TypeInfoHolder.AllowMultipleAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AllowMultipleConfiguration.TypeInfoHolder.AllowMultipleAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AllowMultipleConfiguration.TypeInfoHolder.AllowMultipleAccessor.Set(Keen.VRage.Core.CoreConfigurations.AllowMultipleConfiguration@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AllowMultipleConfiguration.TypeInfoHolder.AllowMultipleAccessor.Get(Keen.VRage.Core.CoreConfigurations.AllowMultipleConfiguration@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.CoreConfigurations.AutoTestConfiguration">
            <summary>
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.AutoTestConfiguration.Automated">
            <summary>
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.AutoTestConfiguration.SkipRender">
            <summary>
            Disable rendering of certain frames, used for CI optimization
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.AutoTestConfiguration.MinimalisticVisual">
            <summary>
            Disables the most of the visual features during the auto testing purposes.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.AutoTestConfiguration.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer{Keen#VRage#Core#CoreConfigurations#AutoTestConfiguration}#NameSerializer">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.AutoTestConfiguration.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#NameSerializer">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.AutoTestConfiguration.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#NameType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfiguration.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer{Keen#VRage#Core#CoreConfigurations#AutoTestConfiguration}#ShouldSerializeAsName(Keen.VRage.Library.Serialization.SerializationContext,Keen.VRage.Core.CoreConfigurations.AutoTestConfiguration@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfiguration.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#ShouldSerializeAsName(Keen.VRage.Library.Serialization.SerializationContext,System.Object@)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.CoreConfigurations.AutoTestConfiguration.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.AutoTestConfiguration.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#CoreConfigurations#AutoTestConfiguration}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfiguration.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfiguration.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.CoreConfigurations.AutoTestConfiguration.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.CoreConfigurations.AutoTestConfiguration.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.CoreConfigurations.AutoTestConfiguration.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.AutoTestConfiguration.TypeInfoHolder.AutomatedAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.AutoTestConfiguration.TypeInfoHolder.AutomatedAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.AutoTestConfiguration.TypeInfoHolder.AutomatedAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.AutoTestConfiguration.TypeInfoHolder.AutomatedAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.AutoTestConfiguration.TypeInfoHolder.AutomatedAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.AutoTestConfiguration.TypeInfoHolder.AutomatedAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.AutoTestConfiguration.TypeInfoHolder.AutomatedAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.AutoTestConfiguration.TypeInfoHolder.AutomatedAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.AutoTestConfiguration.TypeInfoHolder.AutomatedAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfiguration.TypeInfoHolder.AutomatedAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfiguration.TypeInfoHolder.AutomatedAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfiguration.TypeInfoHolder.AutomatedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfiguration.TypeInfoHolder.AutomatedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfiguration.TypeInfoHolder.AutomatedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfiguration.TypeInfoHolder.AutomatedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfiguration.TypeInfoHolder.AutomatedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfiguration.TypeInfoHolder.AutomatedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfiguration.TypeInfoHolder.AutomatedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfiguration.TypeInfoHolder.AutomatedAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfiguration.TypeInfoHolder.AutomatedAccessor.Set(Keen.VRage.Core.CoreConfigurations.AutoTestConfiguration@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfiguration.TypeInfoHolder.AutomatedAccessor.Get(Keen.VRage.Core.CoreConfigurations.AutoTestConfiguration@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.AutoTestConfiguration.TypeInfoHolder.SkipRenderAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.AutoTestConfiguration.TypeInfoHolder.SkipRenderAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.AutoTestConfiguration.TypeInfoHolder.SkipRenderAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.AutoTestConfiguration.TypeInfoHolder.SkipRenderAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.AutoTestConfiguration.TypeInfoHolder.SkipRenderAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.AutoTestConfiguration.TypeInfoHolder.SkipRenderAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.AutoTestConfiguration.TypeInfoHolder.SkipRenderAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.AutoTestConfiguration.TypeInfoHolder.SkipRenderAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.AutoTestConfiguration.TypeInfoHolder.SkipRenderAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfiguration.TypeInfoHolder.SkipRenderAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfiguration.TypeInfoHolder.SkipRenderAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfiguration.TypeInfoHolder.SkipRenderAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfiguration.TypeInfoHolder.SkipRenderAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfiguration.TypeInfoHolder.SkipRenderAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfiguration.TypeInfoHolder.SkipRenderAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfiguration.TypeInfoHolder.SkipRenderAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfiguration.TypeInfoHolder.SkipRenderAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfiguration.TypeInfoHolder.SkipRenderAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfiguration.TypeInfoHolder.SkipRenderAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfiguration.TypeInfoHolder.SkipRenderAccessor.Set(Keen.VRage.Core.CoreConfigurations.AutoTestConfiguration@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfiguration.TypeInfoHolder.SkipRenderAccessor.Get(Keen.VRage.Core.CoreConfigurations.AutoTestConfiguration@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.AutoTestConfiguration.TypeInfoHolder.MinimalisticVisualAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.AutoTestConfiguration.TypeInfoHolder.MinimalisticVisualAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.AutoTestConfiguration.TypeInfoHolder.MinimalisticVisualAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.AutoTestConfiguration.TypeInfoHolder.MinimalisticVisualAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.AutoTestConfiguration.TypeInfoHolder.MinimalisticVisualAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.AutoTestConfiguration.TypeInfoHolder.MinimalisticVisualAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.AutoTestConfiguration.TypeInfoHolder.MinimalisticVisualAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.AutoTestConfiguration.TypeInfoHolder.MinimalisticVisualAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.AutoTestConfiguration.TypeInfoHolder.MinimalisticVisualAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfiguration.TypeInfoHolder.MinimalisticVisualAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfiguration.TypeInfoHolder.MinimalisticVisualAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfiguration.TypeInfoHolder.MinimalisticVisualAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfiguration.TypeInfoHolder.MinimalisticVisualAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfiguration.TypeInfoHolder.MinimalisticVisualAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfiguration.TypeInfoHolder.MinimalisticVisualAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfiguration.TypeInfoHolder.MinimalisticVisualAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfiguration.TypeInfoHolder.MinimalisticVisualAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfiguration.TypeInfoHolder.MinimalisticVisualAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfiguration.TypeInfoHolder.MinimalisticVisualAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfiguration.TypeInfoHolder.MinimalisticVisualAccessor.Set(Keen.VRage.Core.CoreConfigurations.AutoTestConfiguration@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfiguration.TypeInfoHolder.MinimalisticVisualAccessor.Get(Keen.VRage.Core.CoreConfigurations.AutoTestConfiguration@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration">
            <summary>
            Command line switches to control block data generation (occupancy and mountpoints)
            Note: this is not tweakable directly in editor and is meant for passing command line settings to the generators
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.AssertOnEmptyOccupancy">
            <summary>
            Assert if no occupancy was loaded on GridBlockDefinition
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.ValidateSharedOccupancy">
            <summary>
            Verify that block sharing the same GridBlockDefinition also occupy the same space (same occupancy data)
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.LoggingEnabled">
            <summary>
            Enable dedicated logging of occupancy generation and timings
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.MountPointsEnabled">
            <summary>
            Shall we generate the block mount points data?
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.MountPointsDebugDataEnabled">
            <summary>
            Shall we also produce BlockMountPointsDebugData
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer{Keen#VRage#Core#CoreConfigurations#BlockDataGeneratorsConfiguration}#NameSerializer">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#NameSerializer">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#NameType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer{Keen#VRage#Core#CoreConfigurations#BlockDataGeneratorsConfiguration}#ShouldSerializeAsName(Keen.VRage.Library.Serialization.SerializationContext,Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#ShouldSerializeAsName(Keen.VRage.Library.Serialization.SerializationContext,System.Object@)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#CoreConfigurations#BlockDataGeneratorsConfiguration}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.AssertOnEmptyOccupancyAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.AssertOnEmptyOccupancyAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.AssertOnEmptyOccupancyAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.AssertOnEmptyOccupancyAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.AssertOnEmptyOccupancyAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.AssertOnEmptyOccupancyAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.AssertOnEmptyOccupancyAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.AssertOnEmptyOccupancyAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.AssertOnEmptyOccupancyAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.AssertOnEmptyOccupancyAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.AssertOnEmptyOccupancyAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.AssertOnEmptyOccupancyAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.AssertOnEmptyOccupancyAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.AssertOnEmptyOccupancyAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.AssertOnEmptyOccupancyAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.AssertOnEmptyOccupancyAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.AssertOnEmptyOccupancyAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.AssertOnEmptyOccupancyAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.AssertOnEmptyOccupancyAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.AssertOnEmptyOccupancyAccessor.Set(Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.AssertOnEmptyOccupancyAccessor.Get(Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.ValidateSharedOccupancyAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.ValidateSharedOccupancyAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.ValidateSharedOccupancyAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.ValidateSharedOccupancyAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.ValidateSharedOccupancyAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.ValidateSharedOccupancyAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.ValidateSharedOccupancyAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.ValidateSharedOccupancyAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.ValidateSharedOccupancyAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.ValidateSharedOccupancyAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.ValidateSharedOccupancyAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.ValidateSharedOccupancyAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.ValidateSharedOccupancyAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.ValidateSharedOccupancyAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.ValidateSharedOccupancyAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.ValidateSharedOccupancyAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.ValidateSharedOccupancyAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.ValidateSharedOccupancyAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.ValidateSharedOccupancyAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.ValidateSharedOccupancyAccessor.Set(Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.ValidateSharedOccupancyAccessor.Get(Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.LoggingEnabledAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.LoggingEnabledAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.LoggingEnabledAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.LoggingEnabledAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.LoggingEnabledAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.LoggingEnabledAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.LoggingEnabledAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.LoggingEnabledAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.LoggingEnabledAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.LoggingEnabledAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.LoggingEnabledAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.LoggingEnabledAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.LoggingEnabledAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.LoggingEnabledAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.LoggingEnabledAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.LoggingEnabledAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.LoggingEnabledAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.LoggingEnabledAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.LoggingEnabledAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.LoggingEnabledAccessor.Set(Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.LoggingEnabledAccessor.Get(Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.MountPointsEnabledAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.MountPointsEnabledAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.MountPointsEnabledAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.MountPointsEnabledAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.MountPointsEnabledAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.MountPointsEnabledAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.MountPointsEnabledAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.MountPointsEnabledAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.MountPointsEnabledAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.MountPointsEnabledAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.MountPointsEnabledAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.MountPointsEnabledAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.MountPointsEnabledAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.MountPointsEnabledAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.MountPointsEnabledAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.MountPointsEnabledAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.MountPointsEnabledAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.MountPointsEnabledAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.MountPointsEnabledAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.MountPointsEnabledAccessor.Set(Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.MountPointsEnabledAccessor.Get(Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.MountPointsDebugDataEnabledAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.MountPointsDebugDataEnabledAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.MountPointsDebugDataEnabledAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.MountPointsDebugDataEnabledAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.MountPointsDebugDataEnabledAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.MountPointsDebugDataEnabledAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.MountPointsDebugDataEnabledAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.MountPointsDebugDataEnabledAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.MountPointsDebugDataEnabledAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.MountPointsDebugDataEnabledAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.MountPointsDebugDataEnabledAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.MountPointsDebugDataEnabledAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.MountPointsDebugDataEnabledAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.MountPointsDebugDataEnabledAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.MountPointsDebugDataEnabledAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.MountPointsDebugDataEnabledAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.MountPointsDebugDataEnabledAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.MountPointsDebugDataEnabledAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.MountPointsDebugDataEnabledAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.MountPointsDebugDataEnabledAccessor.Set(Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration.TypeInfoHolder.MountPointsDebugDataEnabledAccessor.Get(Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfiguration@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfiguration">
            <summary>
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfiguration.DeterministicRuntime">
            <summary>
            Switch to deterministic VRage runtime. This suppresses all multi-threading, changes random generator and enables fixed
            timer step.
            This setting negatively affects performance, use with care.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfiguration.GetRandomSeed(System.Nullable{System.Int32})">
             <summary>
             Use to get seed for your random.
            
             Custom seed hint can be provided to achieve stable variation.
             The provided seed hint should be typically somewhat stable, usable for normal runtime/gameplay,
             but may not bet 100% according to deterministic rules and will be ignored during deterministic run.
            
             System will provide stable seed during deterministic run for you.
             </summary>
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfiguration.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer{Keen#VRage#Core#CoreConfigurations#DeterministicRuntimeConfiguration}#NameSerializer">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfiguration.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#NameSerializer">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfiguration.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#NameType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfiguration.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer{Keen#VRage#Core#CoreConfigurations#DeterministicRuntimeConfiguration}#ShouldSerializeAsName(Keen.VRage.Library.Serialization.SerializationContext,Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfiguration@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfiguration.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#ShouldSerializeAsName(Keen.VRage.Library.Serialization.SerializationContext,System.Object@)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfiguration.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfiguration.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#CoreConfigurations#DeterministicRuntimeConfiguration}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfiguration.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfiguration.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfiguration.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfiguration.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfiguration.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfiguration.TypeInfoHolder.DeterministicRuntimeAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfiguration.TypeInfoHolder.DeterministicRuntimeAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfiguration.TypeInfoHolder.DeterministicRuntimeAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfiguration.TypeInfoHolder.DeterministicRuntimeAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfiguration.TypeInfoHolder.DeterministicRuntimeAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfiguration.TypeInfoHolder.DeterministicRuntimeAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfiguration.TypeInfoHolder.DeterministicRuntimeAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfiguration.TypeInfoHolder.DeterministicRuntimeAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfiguration.TypeInfoHolder.DeterministicRuntimeAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfiguration.TypeInfoHolder.DeterministicRuntimeAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfiguration.TypeInfoHolder.DeterministicRuntimeAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfiguration.TypeInfoHolder.DeterministicRuntimeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfiguration.TypeInfoHolder.DeterministicRuntimeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfiguration.TypeInfoHolder.DeterministicRuntimeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfiguration.TypeInfoHolder.DeterministicRuntimeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfiguration.TypeInfoHolder.DeterministicRuntimeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfiguration.TypeInfoHolder.DeterministicRuntimeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfiguration.TypeInfoHolder.DeterministicRuntimeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfiguration.TypeInfoHolder.DeterministicRuntimeAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfiguration.TypeInfoHolder.DeterministicRuntimeAccessor.Set(Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfiguration@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfiguration.TypeInfoHolder.DeterministicRuntimeAccessor.Get(Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfiguration@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfiguration">
            <summary>
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfiguration.Enabled">
            <summary>
            Switch to deterministic VRage runtime. This suppresses all multi-threading, changes random generator and enables fixed
            timer step.
            This setting negatively affects performance, use with care.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfiguration.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer{Keen#VRage#Core#CoreConfigurations#ExtRenderLeaksConfiguration}#NameSerializer">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfiguration.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#NameSerializer">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfiguration.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#NameType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfiguration.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer{Keen#VRage#Core#CoreConfigurations#ExtRenderLeaksConfiguration}#ShouldSerializeAsName(Keen.VRage.Library.Serialization.SerializationContext,Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfiguration@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfiguration.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#ShouldSerializeAsName(Keen.VRage.Library.Serialization.SerializationContext,System.Object@)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfiguration.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfiguration.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#CoreConfigurations#ExtRenderLeaksConfiguration}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfiguration.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfiguration.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfiguration.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfiguration.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfiguration.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfiguration.TypeInfoHolder.EnabledAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfiguration.TypeInfoHolder.EnabledAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfiguration.TypeInfoHolder.EnabledAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfiguration.TypeInfoHolder.EnabledAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfiguration.TypeInfoHolder.EnabledAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfiguration.TypeInfoHolder.EnabledAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfiguration.TypeInfoHolder.EnabledAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfiguration.TypeInfoHolder.EnabledAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfiguration.TypeInfoHolder.EnabledAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfiguration.TypeInfoHolder.EnabledAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfiguration.TypeInfoHolder.EnabledAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfiguration.TypeInfoHolder.EnabledAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfiguration.TypeInfoHolder.EnabledAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfiguration.TypeInfoHolder.EnabledAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfiguration.TypeInfoHolder.EnabledAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfiguration.TypeInfoHolder.EnabledAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfiguration.TypeInfoHolder.EnabledAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfiguration.TypeInfoHolder.EnabledAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfiguration.TypeInfoHolder.EnabledAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfiguration.TypeInfoHolder.EnabledAccessor.Set(Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfiguration@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfiguration.TypeInfoHolder.EnabledAccessor.Get(Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfiguration@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfiguration">
            <summary>
            Configuration for disabling the ProfileOptimization. This could potentially cause different results in performance tests.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfiguration.SkipProfileOptimization">
            <summary>
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfiguration.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer{Keen#VRage#Core#CoreConfigurations#ProfileOptimizationConfiguration}#NameSerializer">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfiguration.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#NameSerializer">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfiguration.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#NameType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfiguration.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer{Keen#VRage#Core#CoreConfigurations#ProfileOptimizationConfiguration}#ShouldSerializeAsName(Keen.VRage.Library.Serialization.SerializationContext,Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfiguration@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfiguration.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#ShouldSerializeAsName(Keen.VRage.Library.Serialization.SerializationContext,System.Object@)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfiguration.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfiguration.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#CoreConfigurations#ProfileOptimizationConfiguration}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfiguration.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfiguration.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfiguration.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfiguration.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfiguration.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfiguration.TypeInfoHolder.SkipProfileOptimizationAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfiguration.TypeInfoHolder.SkipProfileOptimizationAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfiguration.TypeInfoHolder.SkipProfileOptimizationAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfiguration.TypeInfoHolder.SkipProfileOptimizationAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfiguration.TypeInfoHolder.SkipProfileOptimizationAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfiguration.TypeInfoHolder.SkipProfileOptimizationAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfiguration.TypeInfoHolder.SkipProfileOptimizationAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfiguration.TypeInfoHolder.SkipProfileOptimizationAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfiguration.TypeInfoHolder.SkipProfileOptimizationAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfiguration.TypeInfoHolder.SkipProfileOptimizationAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfiguration.TypeInfoHolder.SkipProfileOptimizationAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfiguration.TypeInfoHolder.SkipProfileOptimizationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfiguration.TypeInfoHolder.SkipProfileOptimizationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfiguration.TypeInfoHolder.SkipProfileOptimizationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfiguration.TypeInfoHolder.SkipProfileOptimizationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfiguration.TypeInfoHolder.SkipProfileOptimizationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfiguration.TypeInfoHolder.SkipProfileOptimizationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfiguration.TypeInfoHolder.SkipProfileOptimizationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfiguration.TypeInfoHolder.SkipProfileOptimizationAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfiguration.TypeInfoHolder.SkipProfileOptimizationAccessor.Set(Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfiguration@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfiguration.TypeInfoHolder.SkipProfileOptimizationAccessor.Get(Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfiguration@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfiguration">
            <summary>
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfiguration.PerformanceTestRun">
            <summary>
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfiguration.PerformanceTestRecordRate">
            <summary>
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfiguration.RecordFrames">
            <summary>
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfiguration.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer{Keen#VRage#Core#CoreConfigurations#StatsRecorderConfiguration}#NameSerializer">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfiguration.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#NameSerializer">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfiguration.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#NameType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfiguration.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer{Keen#VRage#Core#CoreConfigurations#StatsRecorderConfiguration}#ShouldSerializeAsName(Keen.VRage.Library.Serialization.SerializationContext,Keen.VRage.Core.CoreConfigurations.StatsRecorderConfiguration@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfiguration.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#ShouldSerializeAsName(Keen.VRage.Library.Serialization.SerializationContext,System.Object@)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfiguration.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfiguration.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#CoreConfigurations#StatsRecorderConfiguration}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfiguration.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfiguration.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfiguration.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfiguration.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfiguration.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfiguration.TypeInfoHolder.PerformanceTestRunAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfiguration.TypeInfoHolder.PerformanceTestRunAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfiguration.TypeInfoHolder.PerformanceTestRunAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfiguration.TypeInfoHolder.PerformanceTestRunAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfiguration.TypeInfoHolder.PerformanceTestRunAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfiguration.TypeInfoHolder.PerformanceTestRunAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfiguration.TypeInfoHolder.PerformanceTestRunAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfiguration.TypeInfoHolder.PerformanceTestRunAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfiguration.TypeInfoHolder.PerformanceTestRunAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfiguration.TypeInfoHolder.PerformanceTestRunAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfiguration.TypeInfoHolder.PerformanceTestRunAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfiguration.TypeInfoHolder.PerformanceTestRunAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfiguration.TypeInfoHolder.PerformanceTestRunAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfiguration.TypeInfoHolder.PerformanceTestRunAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfiguration.TypeInfoHolder.PerformanceTestRunAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfiguration.TypeInfoHolder.PerformanceTestRunAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfiguration.TypeInfoHolder.PerformanceTestRunAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfiguration.TypeInfoHolder.PerformanceTestRunAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfiguration.TypeInfoHolder.PerformanceTestRunAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfiguration.TypeInfoHolder.PerformanceTestRunAccessor.Set(Keen.VRage.Core.CoreConfigurations.StatsRecorderConfiguration@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfiguration.TypeInfoHolder.PerformanceTestRunAccessor.Get(Keen.VRage.Core.CoreConfigurations.StatsRecorderConfiguration@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfiguration.TypeInfoHolder.PerformanceTestRecordRateAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfiguration.TypeInfoHolder.PerformanceTestRecordRateAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfiguration.TypeInfoHolder.PerformanceTestRecordRateAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfiguration.TypeInfoHolder.PerformanceTestRecordRateAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfiguration.TypeInfoHolder.PerformanceTestRecordRateAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfiguration.TypeInfoHolder.PerformanceTestRecordRateAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfiguration.TypeInfoHolder.PerformanceTestRecordRateAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfiguration.TypeInfoHolder.PerformanceTestRecordRateAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfiguration.TypeInfoHolder.PerformanceTestRecordRateAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfiguration.TypeInfoHolder.PerformanceTestRecordRateAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfiguration.TypeInfoHolder.PerformanceTestRecordRateAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfiguration.TypeInfoHolder.PerformanceTestRecordRateAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfiguration.TypeInfoHolder.PerformanceTestRecordRateAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfiguration.TypeInfoHolder.PerformanceTestRecordRateAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfiguration.TypeInfoHolder.PerformanceTestRecordRateAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#TimeSpan}#Set(System.Object,System.TimeSpan@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfiguration.TypeInfoHolder.PerformanceTestRecordRateAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#TimeSpan}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfiguration.TypeInfoHolder.PerformanceTestRecordRateAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#TimeSpan}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfiguration.TypeInfoHolder.PerformanceTestRecordRateAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#TimeSpan}#Set(System.Byte@,System.TimeSpan@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfiguration.TypeInfoHolder.PerformanceTestRecordRateAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfiguration.TypeInfoHolder.PerformanceTestRecordRateAccessor.Set(Keen.VRage.Core.CoreConfigurations.StatsRecorderConfiguration@,System.TimeSpan@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfiguration.TypeInfoHolder.PerformanceTestRecordRateAccessor.Get(Keen.VRage.Core.CoreConfigurations.StatsRecorderConfiguration@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfiguration.TypeInfoHolder.RecordFramesAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfiguration.TypeInfoHolder.RecordFramesAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfiguration.TypeInfoHolder.RecordFramesAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfiguration.TypeInfoHolder.RecordFramesAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfiguration.TypeInfoHolder.RecordFramesAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfiguration.TypeInfoHolder.RecordFramesAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfiguration.TypeInfoHolder.RecordFramesAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfiguration.TypeInfoHolder.RecordFramesAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfiguration.TypeInfoHolder.RecordFramesAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfiguration.TypeInfoHolder.RecordFramesAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfiguration.TypeInfoHolder.RecordFramesAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfiguration.TypeInfoHolder.RecordFramesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfiguration.TypeInfoHolder.RecordFramesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfiguration.TypeInfoHolder.RecordFramesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfiguration.TypeInfoHolder.RecordFramesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#UInt64}#Set(System.Object,System.UInt64@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfiguration.TypeInfoHolder.RecordFramesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#UInt64}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfiguration.TypeInfoHolder.RecordFramesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#UInt64}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfiguration.TypeInfoHolder.RecordFramesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#UInt64}#Set(System.Byte@,System.UInt64@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfiguration.TypeInfoHolder.RecordFramesAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfiguration.TypeInfoHolder.RecordFramesAccessor.Set(Keen.VRage.Core.CoreConfigurations.StatsRecorderConfiguration@,System.UInt64@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfiguration.TypeInfoHolder.RecordFramesAccessor.Get(Keen.VRage.Core.CoreConfigurations.StatsRecorderConfiguration@)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.CoreConfigurations.AllowMultipleConfigurationObjectBuilder.AllowMultiple">
            <summary>
            (<b>UNSAFE</b>) Whether this app allows running multiple instances, even though it was specified as single-instance (<see cref="P:Keen.VRage.Core.CoreSettings.SingleInstance"/>).
            </summary>
            <remarks>
            Use for development purposes only
            </remarks>
        </member>
        <member name="T:Keen.VRage.Core.CoreConfigurations.AllowMultipleConfigurationObjectBuilder.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AllowMultipleConfigurationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AllowMultipleConfigurationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.CoreConfigurations.AllowMultipleConfigurationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AllowMultipleConfigurationObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AllowMultipleConfigurationObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.CoreConfigurations.AllowMultipleConfigurationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AllowMultipleConfigurationObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AllowMultipleConfigurationObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.CoreConfigurations.AllowMultipleConfigurationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AllowMultipleConfigurationObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AllowMultipleConfigurationObjectBuilder.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AllowMultipleConfigurationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AllowMultipleConfigurationObjectBuilder.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AllowMultipleConfigurationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.CoreConfigurations.AllowMultipleConfigurationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AllowMultipleConfigurationObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AllowMultipleConfigurationObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.CoreConfigurations.AllowMultipleConfigurationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AllowMultipleConfigurationObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AllowMultipleConfigurationObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.CoreConfigurations.AllowMultipleConfigurationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AllowMultipleConfigurationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AllowMultipleConfigurationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.CoreConfigurations.AllowMultipleConfigurationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AllowMultipleConfigurationObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.CoreConfigurations.AllowMultipleConfigurationObjectBuilder.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.AllowMultipleConfigurationObjectBuilder.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AllowMultipleConfigurationObjectBuilder.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.AllowMultipleConfigurationObjectBuilder.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#CoreConfigurations#AllowMultipleConfigurationObjectBuilder}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AllowMultipleConfigurationObjectBuilder.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.CoreConfigurations.AllowMultipleConfigurationObjectBuilder.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.CoreConfigurations.AllowMultipleConfigurationObjectBuilder.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.CoreConfigurations.AllowMultipleConfigurationObjectBuilder.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.AllowMultipleConfigurationObjectBuilder.TypeInfoHolder.AllowMultipleAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.AllowMultipleConfigurationObjectBuilder.TypeInfoHolder.AllowMultipleAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.AllowMultipleConfigurationObjectBuilder.TypeInfoHolder.AllowMultipleAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.AllowMultipleConfigurationObjectBuilder.TypeInfoHolder.AllowMultipleAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.AllowMultipleConfigurationObjectBuilder.TypeInfoHolder.AllowMultipleAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.AllowMultipleConfigurationObjectBuilder.TypeInfoHolder.AllowMultipleAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.AllowMultipleConfigurationObjectBuilder.TypeInfoHolder.AllowMultipleAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.AllowMultipleConfigurationObjectBuilder.TypeInfoHolder.AllowMultipleAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.AllowMultipleConfigurationObjectBuilder.TypeInfoHolder.AllowMultipleAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AllowMultipleConfigurationObjectBuilder.TypeInfoHolder.AllowMultipleAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AllowMultipleConfigurationObjectBuilder.TypeInfoHolder.AllowMultipleAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AllowMultipleConfigurationObjectBuilder.TypeInfoHolder.AllowMultipleAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AllowMultipleConfigurationObjectBuilder.TypeInfoHolder.AllowMultipleAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AllowMultipleConfigurationObjectBuilder.TypeInfoHolder.AllowMultipleAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AllowMultipleConfigurationObjectBuilder.TypeInfoHolder.AllowMultipleAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AllowMultipleConfigurationObjectBuilder.TypeInfoHolder.AllowMultipleAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AllowMultipleConfigurationObjectBuilder.TypeInfoHolder.AllowMultipleAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AllowMultipleConfigurationObjectBuilder.TypeInfoHolder.AllowMultipleAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AllowMultipleConfigurationObjectBuilder.TypeInfoHolder.AllowMultipleAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AllowMultipleConfigurationObjectBuilder.TypeInfoHolder.AllowMultipleAccessor.Set(Keen.VRage.Core.CoreConfigurations.AllowMultipleConfigurationObjectBuilder@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AllowMultipleConfigurationObjectBuilder.TypeInfoHolder.AllowMultipleAccessor.Get(Keen.VRage.Core.CoreConfigurations.AllowMultipleConfigurationObjectBuilder@)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.Automated">
            <summary>
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.SkipRender">
            <summary>
            Disable rendering of certain frames, used for CI optimization
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.MinimalisticVisual">
            <summary>
            Disables the most of the visual features during the auto testing purposes.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#CoreConfigurations#AutoTestConfigurationObjectBuilder}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.TypeInfoHolder.AutomatedAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.TypeInfoHolder.AutomatedAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.TypeInfoHolder.AutomatedAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.TypeInfoHolder.AutomatedAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.TypeInfoHolder.AutomatedAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.TypeInfoHolder.AutomatedAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.TypeInfoHolder.AutomatedAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.TypeInfoHolder.AutomatedAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.TypeInfoHolder.AutomatedAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.TypeInfoHolder.AutomatedAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.TypeInfoHolder.AutomatedAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.TypeInfoHolder.AutomatedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.TypeInfoHolder.AutomatedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.TypeInfoHolder.AutomatedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.TypeInfoHolder.AutomatedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.TypeInfoHolder.AutomatedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.TypeInfoHolder.AutomatedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.TypeInfoHolder.AutomatedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.TypeInfoHolder.AutomatedAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.TypeInfoHolder.AutomatedAccessor.Set(Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.TypeInfoHolder.AutomatedAccessor.Get(Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.TypeInfoHolder.SkipRenderAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.TypeInfoHolder.SkipRenderAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.TypeInfoHolder.SkipRenderAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.TypeInfoHolder.SkipRenderAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.TypeInfoHolder.SkipRenderAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.TypeInfoHolder.SkipRenderAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.TypeInfoHolder.SkipRenderAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.TypeInfoHolder.SkipRenderAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.TypeInfoHolder.SkipRenderAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.TypeInfoHolder.SkipRenderAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.TypeInfoHolder.SkipRenderAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.TypeInfoHolder.SkipRenderAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.TypeInfoHolder.SkipRenderAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.TypeInfoHolder.SkipRenderAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.TypeInfoHolder.SkipRenderAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.TypeInfoHolder.SkipRenderAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.TypeInfoHolder.SkipRenderAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.TypeInfoHolder.SkipRenderAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.TypeInfoHolder.SkipRenderAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.TypeInfoHolder.SkipRenderAccessor.Set(Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.TypeInfoHolder.SkipRenderAccessor.Get(Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.TypeInfoHolder.MinimalisticVisualAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.TypeInfoHolder.MinimalisticVisualAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.TypeInfoHolder.MinimalisticVisualAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.TypeInfoHolder.MinimalisticVisualAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.TypeInfoHolder.MinimalisticVisualAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.TypeInfoHolder.MinimalisticVisualAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.TypeInfoHolder.MinimalisticVisualAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.TypeInfoHolder.MinimalisticVisualAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.TypeInfoHolder.MinimalisticVisualAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.TypeInfoHolder.MinimalisticVisualAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.TypeInfoHolder.MinimalisticVisualAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.TypeInfoHolder.MinimalisticVisualAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.TypeInfoHolder.MinimalisticVisualAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.TypeInfoHolder.MinimalisticVisualAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.TypeInfoHolder.MinimalisticVisualAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.TypeInfoHolder.MinimalisticVisualAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.TypeInfoHolder.MinimalisticVisualAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.TypeInfoHolder.MinimalisticVisualAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.TypeInfoHolder.MinimalisticVisualAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.TypeInfoHolder.MinimalisticVisualAccessor.Set(Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder.TypeInfoHolder.MinimalisticVisualAccessor.Get(Keen.VRage.Core.CoreConfigurations.AutoTestConfigurationObjectBuilder@)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.AssertOnEmptyOccupancy">
            <summary>
            Assert if no occupancy was loaded on GridBlockDefinition
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.ValidateSharedOccupancy">
            <summary>
            Verify that block sharing the same GridBlockDefinition also occupy the same space (same occupancy data)
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.LoggingEnabled">
            <summary>
            Enable dedicated logging of occupancy generation and timings
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.MountPointsEnabled">
            <summary>
            Shall we generate the block mount points data?
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.MountPointsDebugDataEnabled">
            <summary>
            Shall we also produce BlockMountPointsDebugData
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#CoreConfigurations#BlockDataGeneratorsConfigurationObjectBuilder}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.AssertOnEmptyOccupancyAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.AssertOnEmptyOccupancyAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.AssertOnEmptyOccupancyAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.AssertOnEmptyOccupancyAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.AssertOnEmptyOccupancyAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.AssertOnEmptyOccupancyAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.AssertOnEmptyOccupancyAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.AssertOnEmptyOccupancyAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.AssertOnEmptyOccupancyAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.AssertOnEmptyOccupancyAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.AssertOnEmptyOccupancyAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.AssertOnEmptyOccupancyAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.AssertOnEmptyOccupancyAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.AssertOnEmptyOccupancyAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.AssertOnEmptyOccupancyAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.AssertOnEmptyOccupancyAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.AssertOnEmptyOccupancyAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.AssertOnEmptyOccupancyAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.AssertOnEmptyOccupancyAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.AssertOnEmptyOccupancyAccessor.Set(Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.AssertOnEmptyOccupancyAccessor.Get(Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.ValidateSharedOccupancyAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.ValidateSharedOccupancyAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.ValidateSharedOccupancyAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.ValidateSharedOccupancyAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.ValidateSharedOccupancyAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.ValidateSharedOccupancyAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.ValidateSharedOccupancyAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.ValidateSharedOccupancyAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.ValidateSharedOccupancyAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.ValidateSharedOccupancyAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.ValidateSharedOccupancyAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.ValidateSharedOccupancyAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.ValidateSharedOccupancyAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.ValidateSharedOccupancyAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.ValidateSharedOccupancyAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.ValidateSharedOccupancyAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.ValidateSharedOccupancyAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.ValidateSharedOccupancyAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.ValidateSharedOccupancyAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.ValidateSharedOccupancyAccessor.Set(Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.ValidateSharedOccupancyAccessor.Get(Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.LoggingEnabledAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.LoggingEnabledAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.LoggingEnabledAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.LoggingEnabledAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.LoggingEnabledAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.LoggingEnabledAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.LoggingEnabledAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.LoggingEnabledAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.LoggingEnabledAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.LoggingEnabledAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.LoggingEnabledAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.LoggingEnabledAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.LoggingEnabledAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.LoggingEnabledAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.LoggingEnabledAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.LoggingEnabledAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.LoggingEnabledAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.LoggingEnabledAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.LoggingEnabledAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.LoggingEnabledAccessor.Set(Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.LoggingEnabledAccessor.Get(Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.MountPointsEnabledAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.MountPointsEnabledAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.MountPointsEnabledAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.MountPointsEnabledAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.MountPointsEnabledAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.MountPointsEnabledAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.MountPointsEnabledAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.MountPointsEnabledAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.MountPointsEnabledAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.MountPointsEnabledAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.MountPointsEnabledAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.MountPointsEnabledAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.MountPointsEnabledAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.MountPointsEnabledAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.MountPointsEnabledAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.MountPointsEnabledAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.MountPointsEnabledAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.MountPointsEnabledAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.MountPointsEnabledAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.MountPointsEnabledAccessor.Set(Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.MountPointsEnabledAccessor.Get(Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.MountPointsDebugDataEnabledAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.MountPointsDebugDataEnabledAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.MountPointsDebugDataEnabledAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.MountPointsDebugDataEnabledAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.MountPointsDebugDataEnabledAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.MountPointsDebugDataEnabledAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.MountPointsDebugDataEnabledAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.MountPointsDebugDataEnabledAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.MountPointsDebugDataEnabledAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.MountPointsDebugDataEnabledAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.MountPointsDebugDataEnabledAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.MountPointsDebugDataEnabledAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.MountPointsDebugDataEnabledAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.MountPointsDebugDataEnabledAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.MountPointsDebugDataEnabledAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.MountPointsDebugDataEnabledAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.MountPointsDebugDataEnabledAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.MountPointsDebugDataEnabledAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.MountPointsDebugDataEnabledAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.MountPointsDebugDataEnabledAccessor.Set(Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder.TypeInfoHolder.MountPointsDebugDataEnabledAccessor.Get(Keen.VRage.Core.CoreConfigurations.BlockDataGeneratorsConfigurationObjectBuilder@)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfigurationObjectBuilder.DeterministicRuntime">
            <summary>
            Switch to deterministic VRage runtime. This suppresses all multi-threading, changes random generator and enables fixed
            timer step.
            This setting negatively affects performance, use with care.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfigurationObjectBuilder.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfigurationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfigurationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfigurationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfigurationObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfigurationObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfigurationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfigurationObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfigurationObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfigurationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfigurationObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfigurationObjectBuilder.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfigurationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfigurationObjectBuilder.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfigurationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfigurationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfigurationObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfigurationObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfigurationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfigurationObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfigurationObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfigurationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfigurationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfigurationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfigurationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfigurationObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfigurationObjectBuilder.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfigurationObjectBuilder.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfigurationObjectBuilder.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfigurationObjectBuilder.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#CoreConfigurations#DeterministicRuntimeConfigurationObjectBuilder}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfigurationObjectBuilder.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfigurationObjectBuilder.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfigurationObjectBuilder.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfigurationObjectBuilder.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfigurationObjectBuilder.TypeInfoHolder.DeterministicRuntimeAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfigurationObjectBuilder.TypeInfoHolder.DeterministicRuntimeAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfigurationObjectBuilder.TypeInfoHolder.DeterministicRuntimeAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfigurationObjectBuilder.TypeInfoHolder.DeterministicRuntimeAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfigurationObjectBuilder.TypeInfoHolder.DeterministicRuntimeAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfigurationObjectBuilder.TypeInfoHolder.DeterministicRuntimeAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfigurationObjectBuilder.TypeInfoHolder.DeterministicRuntimeAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfigurationObjectBuilder.TypeInfoHolder.DeterministicRuntimeAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfigurationObjectBuilder.TypeInfoHolder.DeterministicRuntimeAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfigurationObjectBuilder.TypeInfoHolder.DeterministicRuntimeAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfigurationObjectBuilder.TypeInfoHolder.DeterministicRuntimeAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfigurationObjectBuilder.TypeInfoHolder.DeterministicRuntimeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfigurationObjectBuilder.TypeInfoHolder.DeterministicRuntimeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfigurationObjectBuilder.TypeInfoHolder.DeterministicRuntimeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfigurationObjectBuilder.TypeInfoHolder.DeterministicRuntimeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfigurationObjectBuilder.TypeInfoHolder.DeterministicRuntimeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfigurationObjectBuilder.TypeInfoHolder.DeterministicRuntimeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfigurationObjectBuilder.TypeInfoHolder.DeterministicRuntimeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfigurationObjectBuilder.TypeInfoHolder.DeterministicRuntimeAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfigurationObjectBuilder.TypeInfoHolder.DeterministicRuntimeAccessor.Set(Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfigurationObjectBuilder@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfigurationObjectBuilder.TypeInfoHolder.DeterministicRuntimeAccessor.Get(Keen.VRage.Core.CoreConfigurations.DeterministicRuntimeConfigurationObjectBuilder@)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfigurationObjectBuilder.Enabled">
            <summary>
            Switch to deterministic VRage runtime. This suppresses all multi-threading, changes random generator and enables fixed
            timer step.
            This setting negatively affects performance, use with care.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfigurationObjectBuilder.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfigurationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfigurationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfigurationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfigurationObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfigurationObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfigurationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfigurationObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfigurationObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfigurationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfigurationObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfigurationObjectBuilder.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfigurationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfigurationObjectBuilder.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfigurationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfigurationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfigurationObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfigurationObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfigurationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfigurationObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfigurationObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfigurationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfigurationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfigurationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfigurationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfigurationObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfigurationObjectBuilder.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfigurationObjectBuilder.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfigurationObjectBuilder.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfigurationObjectBuilder.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#CoreConfigurations#ExtRenderLeaksConfigurationObjectBuilder}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfigurationObjectBuilder.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfigurationObjectBuilder.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfigurationObjectBuilder.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfigurationObjectBuilder.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfigurationObjectBuilder.TypeInfoHolder.EnabledAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfigurationObjectBuilder.TypeInfoHolder.EnabledAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfigurationObjectBuilder.TypeInfoHolder.EnabledAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfigurationObjectBuilder.TypeInfoHolder.EnabledAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfigurationObjectBuilder.TypeInfoHolder.EnabledAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfigurationObjectBuilder.TypeInfoHolder.EnabledAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfigurationObjectBuilder.TypeInfoHolder.EnabledAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfigurationObjectBuilder.TypeInfoHolder.EnabledAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfigurationObjectBuilder.TypeInfoHolder.EnabledAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfigurationObjectBuilder.TypeInfoHolder.EnabledAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfigurationObjectBuilder.TypeInfoHolder.EnabledAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfigurationObjectBuilder.TypeInfoHolder.EnabledAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfigurationObjectBuilder.TypeInfoHolder.EnabledAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfigurationObjectBuilder.TypeInfoHolder.EnabledAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfigurationObjectBuilder.TypeInfoHolder.EnabledAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfigurationObjectBuilder.TypeInfoHolder.EnabledAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfigurationObjectBuilder.TypeInfoHolder.EnabledAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfigurationObjectBuilder.TypeInfoHolder.EnabledAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfigurationObjectBuilder.TypeInfoHolder.EnabledAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfigurationObjectBuilder.TypeInfoHolder.EnabledAccessor.Set(Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfigurationObjectBuilder@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfigurationObjectBuilder.TypeInfoHolder.EnabledAccessor.Get(Keen.VRage.Core.CoreConfigurations.ExtRenderLeaksConfigurationObjectBuilder@)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfigurationObjectBuilder.SkipProfileOptimization">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfigurationObjectBuilder.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfigurationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfigurationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfigurationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfigurationObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfigurationObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfigurationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfigurationObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfigurationObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfigurationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfigurationObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfigurationObjectBuilder.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfigurationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfigurationObjectBuilder.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfigurationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfigurationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfigurationObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfigurationObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfigurationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfigurationObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfigurationObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfigurationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfigurationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfigurationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfigurationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfigurationObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfigurationObjectBuilder.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfigurationObjectBuilder.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfigurationObjectBuilder.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfigurationObjectBuilder.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#CoreConfigurations#ProfileOptimizationConfigurationObjectBuilder}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfigurationObjectBuilder.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfigurationObjectBuilder.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfigurationObjectBuilder.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfigurationObjectBuilder.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfigurationObjectBuilder.TypeInfoHolder.SkipProfileOptimizationAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfigurationObjectBuilder.TypeInfoHolder.SkipProfileOptimizationAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfigurationObjectBuilder.TypeInfoHolder.SkipProfileOptimizationAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfigurationObjectBuilder.TypeInfoHolder.SkipProfileOptimizationAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfigurationObjectBuilder.TypeInfoHolder.SkipProfileOptimizationAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfigurationObjectBuilder.TypeInfoHolder.SkipProfileOptimizationAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfigurationObjectBuilder.TypeInfoHolder.SkipProfileOptimizationAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfigurationObjectBuilder.TypeInfoHolder.SkipProfileOptimizationAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfigurationObjectBuilder.TypeInfoHolder.SkipProfileOptimizationAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfigurationObjectBuilder.TypeInfoHolder.SkipProfileOptimizationAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfigurationObjectBuilder.TypeInfoHolder.SkipProfileOptimizationAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfigurationObjectBuilder.TypeInfoHolder.SkipProfileOptimizationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfigurationObjectBuilder.TypeInfoHolder.SkipProfileOptimizationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfigurationObjectBuilder.TypeInfoHolder.SkipProfileOptimizationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfigurationObjectBuilder.TypeInfoHolder.SkipProfileOptimizationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfigurationObjectBuilder.TypeInfoHolder.SkipProfileOptimizationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfigurationObjectBuilder.TypeInfoHolder.SkipProfileOptimizationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfigurationObjectBuilder.TypeInfoHolder.SkipProfileOptimizationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfigurationObjectBuilder.TypeInfoHolder.SkipProfileOptimizationAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfigurationObjectBuilder.TypeInfoHolder.SkipProfileOptimizationAccessor.Set(Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfigurationObjectBuilder@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfigurationObjectBuilder.TypeInfoHolder.SkipProfileOptimizationAccessor.Get(Keen.VRage.Core.CoreConfigurations.ProfileOptimizationConfigurationObjectBuilder@)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.PerformanceTestRun">
            <summary>
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.PerformanceTestRecordRate">
            <summary>
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.RecordFrames">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#CoreConfigurations#StatsRecorderConfigurationObjectBuilder}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.TypeInfoHolder.PerformanceTestRunAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.TypeInfoHolder.PerformanceTestRunAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.TypeInfoHolder.PerformanceTestRunAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.TypeInfoHolder.PerformanceTestRunAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.TypeInfoHolder.PerformanceTestRunAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.TypeInfoHolder.PerformanceTestRunAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.TypeInfoHolder.PerformanceTestRunAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.TypeInfoHolder.PerformanceTestRunAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.TypeInfoHolder.PerformanceTestRunAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.TypeInfoHolder.PerformanceTestRunAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.TypeInfoHolder.PerformanceTestRunAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.TypeInfoHolder.PerformanceTestRunAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.TypeInfoHolder.PerformanceTestRunAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.TypeInfoHolder.PerformanceTestRunAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.TypeInfoHolder.PerformanceTestRunAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.TypeInfoHolder.PerformanceTestRunAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.TypeInfoHolder.PerformanceTestRunAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.TypeInfoHolder.PerformanceTestRunAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.TypeInfoHolder.PerformanceTestRunAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.TypeInfoHolder.PerformanceTestRunAccessor.Set(Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.TypeInfoHolder.PerformanceTestRunAccessor.Get(Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.TypeInfoHolder.PerformanceTestRecordRateAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.TypeInfoHolder.PerformanceTestRecordRateAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.TypeInfoHolder.PerformanceTestRecordRateAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.TypeInfoHolder.PerformanceTestRecordRateAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.TypeInfoHolder.PerformanceTestRecordRateAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.TypeInfoHolder.PerformanceTestRecordRateAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.TypeInfoHolder.PerformanceTestRecordRateAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.TypeInfoHolder.PerformanceTestRecordRateAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.TypeInfoHolder.PerformanceTestRecordRateAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.TypeInfoHolder.PerformanceTestRecordRateAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.TypeInfoHolder.PerformanceTestRecordRateAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.TypeInfoHolder.PerformanceTestRecordRateAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.TypeInfoHolder.PerformanceTestRecordRateAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.TypeInfoHolder.PerformanceTestRecordRateAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.TypeInfoHolder.PerformanceTestRecordRateAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#TimeSpan}#Set(System.Object,System.TimeSpan@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.TypeInfoHolder.PerformanceTestRecordRateAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#TimeSpan}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.TypeInfoHolder.PerformanceTestRecordRateAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#TimeSpan}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.TypeInfoHolder.PerformanceTestRecordRateAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#TimeSpan}#Set(System.Byte@,System.TimeSpan@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.TypeInfoHolder.PerformanceTestRecordRateAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.TypeInfoHolder.PerformanceTestRecordRateAccessor.Set(Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder@,System.TimeSpan@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.TypeInfoHolder.PerformanceTestRecordRateAccessor.Get(Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.TypeInfoHolder.RecordFramesAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.TypeInfoHolder.RecordFramesAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.TypeInfoHolder.RecordFramesAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.TypeInfoHolder.RecordFramesAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.TypeInfoHolder.RecordFramesAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.TypeInfoHolder.RecordFramesAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.TypeInfoHolder.RecordFramesAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.TypeInfoHolder.RecordFramesAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.TypeInfoHolder.RecordFramesAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.TypeInfoHolder.RecordFramesAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.TypeInfoHolder.RecordFramesAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.TypeInfoHolder.RecordFramesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.TypeInfoHolder.RecordFramesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.TypeInfoHolder.RecordFramesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.TypeInfoHolder.RecordFramesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#UInt64}#Set(System.Object,System.UInt64@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.TypeInfoHolder.RecordFramesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#UInt64}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.TypeInfoHolder.RecordFramesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#UInt64}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.TypeInfoHolder.RecordFramesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#UInt64}#Set(System.Byte@,System.UInt64@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.TypeInfoHolder.RecordFramesAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.TypeInfoHolder.RecordFramesAccessor.Set(Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder@,System.UInt64@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder.TypeInfoHolder.RecordFramesAccessor.Get(Keen.VRage.Core.CoreConfigurations.StatsRecorderConfigurationObjectBuilder@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.CoreSettings">
            <summary>
            Core settings needed to initialize <see cref="T:Keen.VRage.Core.VRageCore"/>.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.DebugMenu.DebugMenuEventArgs">
            <summary>
            Event arguments for debug item addition / removal in the registry
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.DebugMenu.DebugMenuItem">
            <summary>
            An item in the DebugMenu registry.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.DebugMenu.DebugMenuItem.#ctor(System.String,System.String,Keen.VRage.Library.Serialization.IAccessible,System.Action{System.Object})">
            <summary>
            Create a new instance of a debug menu item.
            </summary>
            <param name="category"> Debug Menu category it will belong to. </param>
            <param name="name"> Associated debug inspector name. </param>
            <param name="instance"> Instance of the object. </param>
            <param name="valueChangedCallback"> Callback when any of the object's field / property values are changed. </param>
        </member>
        <member name="T:Keen.VRage.Core.DebugMenu.DebugMenuManager">
            <summary>
            Provides the functionality to register Debug Objects to the debug menu held by VRage.
            </summary>
        </member>
        <member name="E:Keen.VRage.Core.DebugMenu.DebugMenuManager.OnObjectRegistered">
            <summary>
            Invoked every time a new object is registered to the manager.
            </summary>
        </member>
        <member name="E:Keen.VRage.Core.DebugMenu.DebugMenuManager.OnObjectUnregistered">
            <summary>
            Invoked every time a new object is unregistered from the manager.
            </summary>
        </member>
        <member name="E:Keen.VRage.Core.DebugMenu.DebugMenuManager.OnObjectRefreshCalled">
            <summary>
            Invoked every time a call to refresh a debug menu object is made.
            </summary>
        </member>
        <member name="E:Keen.VRage.Core.DebugMenu.DebugMenuManager.OnDebugMenuCleared">
            <summary>
            Invoked when a Clear action is called for the debug menu.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.DebugMenu.DebugMenuManager.RegisterDebugObject(System.String,System.String,Keen.VRage.Library.Serialization.IAccessible,System.Action{System.Object})">
            <summary>
            Registers an instance of a type for editing into the debug menu.
            </summary>
            <param name="objectCategory">
            The name of the category the object will belong to.
            Categories are displayed in a tab view in the DebugMenu.
            </param>
            <param name="objectName"> The display name of the debug object in the menu. </param>
            <param name="objectInstance"> The instance of the object sent to the debug menu. </param>
            <param name="valueChangedCallback"> Callback that's invoked when any of the object's values are changed. </param>
        </member>
        <member name="M:Keen.VRage.Core.DebugMenu.DebugMenuManager.RegisterDebugObject``1(System.String,System.String,Keen.VRage.Library.Memory.Boxed{``0},System.Action{System.Object})">
            <summary>
            Registers an instance of a type for editing into the debug menu.
            </summary>
            <param name="objectCategory">
            The name of the category the object will belong to.
            Categories are displayed in a tab view in the DebugMenu.
            </param>
            <param name="objectName"> The display name of the debug object in the menu. </param>
            <param name="objectInstance"> The boxed struct sent to the debug menu. </param>
            <param name="valueChangedCallback"> Callback that's invoked when any of the object's values are changed. </param>
        </member>
        <member name="M:Keen.VRage.Core.DebugMenu.DebugMenuManager.UnregisterObject(Keen.VRage.Library.Serialization.IAccessible)">
            <summary>
            Remove the object from the Debug Object Registry.
            </summary>
            <param name="objectInstance"> The instance of the object registered to the debug menu. </param>
        </member>
        <member name="M:Keen.VRage.Core.DebugMenu.DebugMenuManager.UnregisterObject``1(Keen.VRage.Library.Memory.Boxed{``0})">
            <summary>
            Remove the object from the Debug Object Registry.
            </summary>
            <param name="objectInstance"> The boxed struct sent to the debug menu. </param>
        </member>
        <member name="M:Keen.VRage.Core.DebugMenu.DebugMenuManager.RegisterGlobalSettings(Keen.VRage.Library.Serialization.IAccessible)">
            <summary>
            Register an object for the Global Settings position in the debug menu.
            Only one such object can be registered.
            </summary>
            <param name="globalSettings"> Object that implements IAccessible interface. </param>
            <exception cref="T:System.Exception"> Throws if more than one object is attempted to register. </exception>
        </member>
        <member name="M:Keen.VRage.Core.DebugMenu.DebugMenuManager.RefreshObjectValues(System.String,System.String)">
            <summary>
            Refreshes the debug inspector values for the object registered under this name and category.
            Does nothing if the object isn't found.
            </summary>
            <param name="category"> Category the object was registered under. </param>
            <param name="name"> Name the object was registered under. </param>
        </member>
        <member name="M:Keen.VRage.Core.DebugMenu.DebugMenuManager.RefreshObjectValues(Keen.VRage.Library.Serialization.IAccessible)">
            <summary>
            Refreshes the debug inspector values for <paramref name="debugObject"/> if that object is registered.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.DebugMenu.DebugMenuManager.GetRegisteredObjects">
            <summary>
            Gets the current list of registered debug objects.
            </summary>
            <returns>
            Immutable list of <see cref="T:Keen.VRage.Core.DebugMenu.DebugMenuItem"/>
            </returns>
        </member>
        <member name="M:Keen.VRage.Core.DebugMenu.DebugMenuManager.ClearDebugMenuRegistry">
            <summary>
            Clears all registered values from the debug menu.
            Used only in test cases. 
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.DebugMenu.IDebugMenu">
            <summary>
            Exposes the pubic controls for the Debug Menu.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.DebugMenu.IDebugMenu.IsOpen">
            <summary> Gets the bool indicating whether the debug menu is open. </summary>
        </member>
        <member name="P:Keen.VRage.Core.DebugMenu.IDebugMenu.HasFocus">
            <summary> Gets the bool indicating whether the debug menu has focus. </summary>
        </member>
        <member name="E:Keen.VRage.Core.DebugMenu.IDebugMenu.IsOpenChanged">
            <summary> An event that triggers when the debug menu changes between open / closed. </summary>
        </member>
        <member name="E:Keen.VRage.Core.DebugMenu.IDebugMenu.HasFocusChanged">
            <summary> An event that triggers when the debug menu changes between focused / unfocused. </summary>
        </member>
        <member name="M:Keen.VRage.Core.DebugMenu.IDebugMenu.ReloadData">
            <summary> Makes debug menu to reload the data it needs. </summary>
        </member>
        <member name="M:Keen.VRage.Core.DebugMenu.IDebugMenu.ClearState">
            <summary> Clears the active tabs from the debug menu state. </summary>
        </member>
        <member name="M:Keen.VRage.Core.DebugMenu.IDebugMenu.CreateDebugMenuTester">
            <summary> Creates an instance of the tester class. </summary>
        </member>
        <member name="M:Keen.VRage.Core.DebugMenu.IDebugMenu.ToggleFocus">
            <summary>
            Toggles whether the debug menu is focusable and receives input.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.DebugMenu.IDebugMenu.ToggleView">
            <summary>
            Toggles the debug menu view between hidden and shown.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.DebugMenu.IDebugMenu.SelectTab(System.String,System.String)">
            <summary>
            Selects an active tab from debug menu.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.DebugMenu.IDebugMenuComponent">
            <summary>
            Gives access to simple runtime control of debug menu from code.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.DebugMenu.IDebugMenuComponent.DebugMenu">
            <summary>
            Holds a reference to debug menu as a property;
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.DebugMenu.IDebugMenuComponent.StatRenderer">
            <summary>
            Provides bindable action to toggle the stat renderer.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.DebugMenu.IDebugMenuComponent.IsOpen">
            <summary> Gets the bool indicating whether the debug menu is open. </summary>
        </member>
        <member name="P:Keen.VRage.Core.DebugMenu.IDebugMenuComponent.HasFocus">
            <summary> Gets the bool indicating whether the debug menu has focus. </summary>
        </member>
        <member name="M:Keen.VRage.Core.DebugMenu.IDebugMenuComponent.ToggleFocus">
            <summary>
            Toggles whether the debug menu is focusable and receives input.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.DebugMenu.IDebugMenuComponent.ToggleView">
            <summary>
            Toggles the debug menu view between hidden and shown.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.DebugMenu.IDebugMenuEvents">
            <summary>
            Interface debug menu objects can implement to know when the menu is opened, shown, hidden, etc.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.DebugMenu.IDebugMenuEvents.OnEnable">
            <summary>
            Method invoked when the debug menu is enabled in the UI.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.DebugMenu.IDebugMenuEvents.OnDisable">
            <summary>
            Method invoked when the debug menu is disabled in the UI.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.DebugMenu.IDebugMenuEvents.OnShow">
            <summary>
            Method invoked when the debug menu is made visible to the user in the UI.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.DebugMenu.IDebugMenuEvents.OnHide">
            <summary>
            Method invoked when the debug menu is made invisible to the user in the UI.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.DebugMenu.IDebugMenuTester">
            <summary>
            Interface for advanced access to Debug Menu features at runtime.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.DebugMenu.IDebugMenuTester.ScrollSpeed">
            <summary>
            Gets or sets the scroll speed.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.DebugMenu.IDebugMenuTester.SelectCategory(System.String)">
            <summary>
            Selects a category from debug menu.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.DebugMenu.IDebugMenuTester.SelectTab(System.String)">
            <summary>
            Selects an active tab from debug menu.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.DebugMenu.IDebugMenuTester.ResetScrollOffset">
            <summary>
            
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.DebugMenu.IDebugMenuTester.UnitScroll(System.Boolean)">
            <summary>
            Scrolls the current inspector by one unit.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.DebugMenu.IDebugMenuTester.FocusValue">
            <summary>
            Focuses a value box in the left panel.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.DebugMenu.IDebugMenuTester.HoverButton">
            <summary>
            Presses a button in the left panel.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.DebugMenu.IStatRenderer">
            <summary>
            Provides bindable actions to Cycle Between render stats
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.DebugMenu.IStatRenderer.Presenter">
            <summary>
            Stat presenter used by the renderer.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.DebugMenu.IStatRenderer.CyclePage">
            <summary>
            Cycle the currently visible stat page.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.DefinitionLoader">
            <summary>
            Helper class useful to load definitions from specific data folder
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.DefinitionLoader.LoadDefinitions(System.String,Keen.VRage.Library.Serialization.ObjectBuilders.ObjectBuilderLoadingContext)">
            <summary>
            Load definition in specific data folder
            </summary>
            <param name="definitionSet">Folder relation to "Content\\Data"</param>
            <param name="context">Loading context. Used in PushDefinitionSetAsync</param>
        </member>
        <member name="T:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration">
            <summary>
            Describes the minimum requirements the player's system has to meet in order to run the game
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.MainMemoryBytes">
            <summary>
            Minimum amount of RAM
            </summary>  
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.VideoMemoryBytes">
            <summary>
            Minimum amount of VRAM
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TeraFlopsGPU">
            <summary>
            Minimum amount GPU TeraFlops
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.ClockSpeedCPU">
            <summary>
            Minimum clock speed of the CPU
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.MinCoreCount">
            <summary>
            Minumum CPU core count
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer{Keen#VRage#Core#Definitions#MinimumHardwareRequirementsConfiguration}#NameSerializer">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#NameSerializer">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#NameType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer{Keen#VRage#Core#Definitions#MinimumHardwareRequirementsConfiguration}#ShouldSerializeAsName(Keen.VRage.Library.Serialization.SerializationContext,Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#ShouldSerializeAsName(Keen.VRage.Library.Serialization.SerializationContext,System.Object@)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Definitions#MinimumHardwareRequirementsConfiguration}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.MainMemoryBytesAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.MainMemoryBytesAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.MainMemoryBytesAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.MainMemoryBytesAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.MainMemoryBytesAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.MainMemoryBytesAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.MainMemoryBytesAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.MainMemoryBytesAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.MainMemoryBytesAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.MainMemoryBytesAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.MainMemoryBytesAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.MainMemoryBytesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.MainMemoryBytesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.MainMemoryBytesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.MainMemoryBytesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#UInt64}#Set(System.Object,System.UInt64@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.MainMemoryBytesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#UInt64}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.MainMemoryBytesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#UInt64}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.MainMemoryBytesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#UInt64}#Set(System.Byte@,System.UInt64@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.MainMemoryBytesAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.MainMemoryBytesAccessor.Set(Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration@,System.UInt64@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.MainMemoryBytesAccessor.Get(Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.VideoMemoryBytesAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.VideoMemoryBytesAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.VideoMemoryBytesAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.VideoMemoryBytesAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.VideoMemoryBytesAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.VideoMemoryBytesAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.VideoMemoryBytesAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.VideoMemoryBytesAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.VideoMemoryBytesAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.VideoMemoryBytesAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.VideoMemoryBytesAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.VideoMemoryBytesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.VideoMemoryBytesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.VideoMemoryBytesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.VideoMemoryBytesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#UInt64}#Set(System.Object,System.UInt64@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.VideoMemoryBytesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#UInt64}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.VideoMemoryBytesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#UInt64}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.VideoMemoryBytesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#UInt64}#Set(System.Byte@,System.UInt64@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.VideoMemoryBytesAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.VideoMemoryBytesAccessor.Set(Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration@,System.UInt64@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.VideoMemoryBytesAccessor.Get(Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.TeraFlopsGPUAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.TeraFlopsGPUAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.TeraFlopsGPUAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.TeraFlopsGPUAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.TeraFlopsGPUAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.TeraFlopsGPUAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.TeraFlopsGPUAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.TeraFlopsGPUAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.TeraFlopsGPUAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.TeraFlopsGPUAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.TeraFlopsGPUAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.TeraFlopsGPUAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.TeraFlopsGPUAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.TeraFlopsGPUAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.TeraFlopsGPUAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Object,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.TeraFlopsGPUAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.TeraFlopsGPUAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.TeraFlopsGPUAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Byte@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.TeraFlopsGPUAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.TeraFlopsGPUAccessor.Set(Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.TeraFlopsGPUAccessor.Get(Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.ClockSpeedCPUAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.ClockSpeedCPUAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.ClockSpeedCPUAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.ClockSpeedCPUAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.ClockSpeedCPUAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.ClockSpeedCPUAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.ClockSpeedCPUAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.ClockSpeedCPUAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.ClockSpeedCPUAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.ClockSpeedCPUAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.ClockSpeedCPUAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.ClockSpeedCPUAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.ClockSpeedCPUAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.ClockSpeedCPUAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.ClockSpeedCPUAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Object,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.ClockSpeedCPUAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.ClockSpeedCPUAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.ClockSpeedCPUAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Byte@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.ClockSpeedCPUAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.ClockSpeedCPUAccessor.Set(Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.ClockSpeedCPUAccessor.Get(Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.MinCoreCountAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.MinCoreCountAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.MinCoreCountAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.MinCoreCountAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.MinCoreCountAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.MinCoreCountAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.MinCoreCountAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.MinCoreCountAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.MinCoreCountAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.MinCoreCountAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.MinCoreCountAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.MinCoreCountAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.MinCoreCountAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.MinCoreCountAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.MinCoreCountAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Object,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.MinCoreCountAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.MinCoreCountAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.MinCoreCountAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Byte@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.MinCoreCountAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.MinCoreCountAccessor.Set(Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration.TypeInfoHolder.MinCoreCountAccessor.Get(Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfiguration@)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.MainMemoryBytes">
            <summary>
            Minimum amount of RAM
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.VideoMemoryBytes">
            <summary>
            Minimum amount of VRAM
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TeraFlopsGPU">
            <summary>
            Minimum amount GPU TeraFlops
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.ClockSpeedCPU">
            <summary>
            Minimum clock speed of the CPU
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.MinCoreCount">
            <summary>
            Minumum CPU core count
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Definitions#MinimumHardwareRequirementsConfigurationObjectBuilder}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.MainMemoryBytesAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.MainMemoryBytesAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.MainMemoryBytesAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.MainMemoryBytesAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.MainMemoryBytesAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.MainMemoryBytesAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.MainMemoryBytesAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.MainMemoryBytesAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.MainMemoryBytesAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.MainMemoryBytesAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.MainMemoryBytesAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.MainMemoryBytesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.MainMemoryBytesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.MainMemoryBytesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.MainMemoryBytesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#UInt64}#Set(System.Object,System.UInt64@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.MainMemoryBytesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#UInt64}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.MainMemoryBytesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#UInt64}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.MainMemoryBytesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#UInt64}#Set(System.Byte@,System.UInt64@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.MainMemoryBytesAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.MainMemoryBytesAccessor.Set(Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder@,System.UInt64@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.MainMemoryBytesAccessor.Get(Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.VideoMemoryBytesAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.VideoMemoryBytesAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.VideoMemoryBytesAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.VideoMemoryBytesAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.VideoMemoryBytesAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.VideoMemoryBytesAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.VideoMemoryBytesAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.VideoMemoryBytesAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.VideoMemoryBytesAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.VideoMemoryBytesAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.VideoMemoryBytesAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.VideoMemoryBytesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.VideoMemoryBytesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.VideoMemoryBytesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.VideoMemoryBytesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#UInt64}#Set(System.Object,System.UInt64@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.VideoMemoryBytesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#UInt64}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.VideoMemoryBytesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#UInt64}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.VideoMemoryBytesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#UInt64}#Set(System.Byte@,System.UInt64@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.VideoMemoryBytesAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.VideoMemoryBytesAccessor.Set(Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder@,System.UInt64@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.VideoMemoryBytesAccessor.Get(Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.TeraFlopsGPUAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.TeraFlopsGPUAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.TeraFlopsGPUAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.TeraFlopsGPUAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.TeraFlopsGPUAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.TeraFlopsGPUAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.TeraFlopsGPUAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.TeraFlopsGPUAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.TeraFlopsGPUAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.TeraFlopsGPUAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.TeraFlopsGPUAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.TeraFlopsGPUAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.TeraFlopsGPUAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.TeraFlopsGPUAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.TeraFlopsGPUAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Object,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.TeraFlopsGPUAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.TeraFlopsGPUAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.TeraFlopsGPUAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Byte@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.TeraFlopsGPUAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.TeraFlopsGPUAccessor.Set(Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.TeraFlopsGPUAccessor.Get(Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.ClockSpeedCPUAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.ClockSpeedCPUAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.ClockSpeedCPUAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.ClockSpeedCPUAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.ClockSpeedCPUAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.ClockSpeedCPUAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.ClockSpeedCPUAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.ClockSpeedCPUAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.ClockSpeedCPUAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.ClockSpeedCPUAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.ClockSpeedCPUAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.ClockSpeedCPUAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.ClockSpeedCPUAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.ClockSpeedCPUAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.ClockSpeedCPUAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Object,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.ClockSpeedCPUAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.ClockSpeedCPUAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.ClockSpeedCPUAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Byte@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.ClockSpeedCPUAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.ClockSpeedCPUAccessor.Set(Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.ClockSpeedCPUAccessor.Get(Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.MinCoreCountAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.MinCoreCountAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.MinCoreCountAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.MinCoreCountAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.MinCoreCountAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.MinCoreCountAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.MinCoreCountAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.MinCoreCountAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.MinCoreCountAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.MinCoreCountAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.MinCoreCountAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.MinCoreCountAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.MinCoreCountAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.MinCoreCountAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.MinCoreCountAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Object,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.MinCoreCountAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.MinCoreCountAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.MinCoreCountAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Byte@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.MinCoreCountAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.MinCoreCountAccessor.Set(Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder.TypeInfoHolder.MinCoreCountAccessor.Get(Keen.VRage.Core.Definitions.MinimumHardwareRequirementsConfigurationObjectBuilder@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Diagnostics.DiagnosticHandlerBase">
            <summary>
            Base diagnostic handler implementation that provides the default engine Assertion Handling Behavior.
            </summary>
            <remarks>The default Assertion Handling Behavior is dependent on the build configuration and is specified as follows:
            <list type="table">
            <item>
            <term>Debug</term>
            <description>Assertions open a diagnostic dialog, allowing the user to abort the process, start debugging or ignore the message.</description>
            </item>
            <item>
            <term>Dev</term>
            <description>Assertions throw <see cref="T:Keen.VRage.Library.Diagnostics.AssertionException"/>.</description>
            </item>
            <item>
            <term>Release</term>
            <description>Assertions are logged and future occurrences of the same assertion are ignored.</description>
            </item>
            </list>
            </remarks>
        </member>
        <member name="P:Keen.VRage.Core.Diagnostics.DiagnosticHandlerBase.AutoIgnoreMessages">
            <summary>
            Whether any reported messages are automatically ignored.
            </summary>
            <remarks>
            <para>Messages are still logged, but no dialog is shown and no exception is thrown.</para>
            <para>Messages only log on the first occurence, but a count is logged at the end of the process lifetime.</para>
            </remarks>
        </member>
        <member name="M:Keen.VRage.Core.Diagnostics.DiagnosticHandlerBase.AssertionFailed(System.String,System.String,System.String,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Diagnostics.DiagnosticHandlerBase.ReportAssertionSummary">
            <summary>
            Write a diagnostic failure summary to the log.
            </summary>
            <returns>Whether there were any </returns>
        </member>
        <member name="T:Keen.VRage.Core.EngineBuilder">
            <summary>
            Builder used to compose <see cref="T:Keen.VRage.DCS.Components.Component"/>s into the <see cref="P:Keen.VRage.Core.VRageCore.Engine"/> entity.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.EngineComponents.DebugDrawServerEngineComponent">
            <summary>
            </summary>\
        </member>
        <member name="T:Keen.VRage.Core.EngineComponents.DebugDrawServerEngineComponent.ObjectBuilder">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.EngineComponents.LimitedDefSetConfiguration">
            <summary>
            TODO: Temp until SE2-13435
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.EngineComponents.LimitedDefSetConfiguration.UseLimitedDefs">
            <summary />
        </member>
        <member name="P:Keen.VRage.Core.EngineComponents.LimitedDefSetConfiguration.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer{Keen#VRage#Core#EngineComponents#LimitedDefSetConfiguration}#NameSerializer">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.EngineComponents.LimitedDefSetConfiguration.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#NameSerializer">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.EngineComponents.LimitedDefSetConfiguration.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#NameType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.LimitedDefSetConfiguration.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer{Keen#VRage#Core#EngineComponents#LimitedDefSetConfiguration}#ShouldSerializeAsName(Keen.VRage.Library.Serialization.SerializationContext,Keen.VRage.Core.EngineComponents.LimitedDefSetConfiguration@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.LimitedDefSetConfiguration.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#ShouldSerializeAsName(Keen.VRage.Library.Serialization.SerializationContext,System.Object@)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.EngineComponents.LimitedDefSetConfiguration.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.EngineComponents.LimitedDefSetConfiguration.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#EngineComponents#LimitedDefSetConfiguration}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.LimitedDefSetConfiguration.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.LimitedDefSetConfiguration.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.EngineComponents.LimitedDefSetConfiguration.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.EngineComponents.LimitedDefSetConfiguration.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.EngineComponents.LimitedDefSetConfiguration.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.EngineComponents.LimitedDefSetConfiguration.TypeInfoHolder.UseLimitedDefsAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.EngineComponents.LimitedDefSetConfiguration.TypeInfoHolder.UseLimitedDefsAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.EngineComponents.LimitedDefSetConfiguration.TypeInfoHolder.UseLimitedDefsAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.EngineComponents.LimitedDefSetConfiguration.TypeInfoHolder.UseLimitedDefsAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.EngineComponents.LimitedDefSetConfiguration.TypeInfoHolder.UseLimitedDefsAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.EngineComponents.LimitedDefSetConfiguration.TypeInfoHolder.UseLimitedDefsAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.EngineComponents.LimitedDefSetConfiguration.TypeInfoHolder.UseLimitedDefsAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.EngineComponents.LimitedDefSetConfiguration.TypeInfoHolder.UseLimitedDefsAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.EngineComponents.LimitedDefSetConfiguration.TypeInfoHolder.UseLimitedDefsAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.LimitedDefSetConfiguration.TypeInfoHolder.UseLimitedDefsAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.LimitedDefSetConfiguration.TypeInfoHolder.UseLimitedDefsAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.LimitedDefSetConfiguration.TypeInfoHolder.UseLimitedDefsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.LimitedDefSetConfiguration.TypeInfoHolder.UseLimitedDefsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.LimitedDefSetConfiguration.TypeInfoHolder.UseLimitedDefsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.LimitedDefSetConfiguration.TypeInfoHolder.UseLimitedDefsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.LimitedDefSetConfiguration.TypeInfoHolder.UseLimitedDefsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.LimitedDefSetConfiguration.TypeInfoHolder.UseLimitedDefsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.LimitedDefSetConfiguration.TypeInfoHolder.UseLimitedDefsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.LimitedDefSetConfiguration.TypeInfoHolder.UseLimitedDefsAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.LimitedDefSetConfiguration.TypeInfoHolder.UseLimitedDefsAccessor.Set(Keen.VRage.Core.EngineComponents.LimitedDefSetConfiguration@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.LimitedDefSetConfiguration.TypeInfoHolder.UseLimitedDefsAccessor.Get(Keen.VRage.Core.EngineComponents.LimitedDefSetConfiguration@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.EngineComponents.DefinitionSetManagerEngineComponent">
            <summary>
            Stores all loaded definition sets files and listens to new mounts.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.DefinitionSetManagerEngineComponent.PushDefinitionSetAsync(System.String,Keen.VRage.Library.Serialization.ObjectBuilders.ObjectBuilderLoadingContext)">
            <summary>
            Load all definitions from <paramref name="setName"/> into a new definition set and push it on the stack.
            </summary>
            <remarks>
            <para>Definition set is located using a <see cref="T:Keen.VRage.Core.EngineComponents.DefinitionSetManagerEngineComponent"/> singleton.</para>
            <para>The definition manager should not be accessed until this task finishes.</para>
            </remarks>
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.DefinitionSetManagerEngineComponent.PrepareDefinitionSetAsync(System.String,Keen.VRage.Library.Serialization.ObjectBuilders.ObjectBuilderLoadingContext)">
            <summary>
            Start loading all definitions from <paramref name="setName"/> into a new definition set and
            return a token that can be used to finalize the push of the set on the stack.
            </summary>
            <remarks>
            <para>Definition set is located using a <see cref="T:Keen.VRage.Core.EngineComponents.DefinitionSetManagerEngineComponent"/> singleton.</para>
            <para>This method can be invoked from a background thread and definition manager without restrictions.</para>
            </remarks>
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.DefinitionSetManagerEngineComponent.TryGetDefinitionList(System.String,Keen.VRage.Library.Definitions.DefinitionList@)">
            <summary>
            Gets the <see cref="T:Keen.VRage.Library.Definitions.DefinitionList"/> associated with the specified <paramref name="name"/>.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.DefinitionSetManagerEngineComponent.GetDefinitionList(System.String)">
            <summary>
            Gets the <see cref="T:Keen.VRage.Library.Definitions.DefinitionList"/> associated with the specified <paramref name="name"/>.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.EngineComponents.EngineComponent">
            <summary>
            A <see cref="T:Keen.VRage.DCS.Components.Component"/> that represents part of the <see cref="P:Keen.VRage.Core.VRageCore.Engine"/>.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.EngineComponent.Get``1">
            <summary>
            Get this component from <see cref="P:Keen.VRage.Core.VRageCore.Engine"/>.
            </summary>
            <remarks>
            Consider NOT using this method and injecting components you need via DCS. 
            </remarks>
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.EngineComponent.Get``1(Keen.VRage.Library.Utils.StringId)">
            <summary>
            Get this component from <see cref="P:Keen.VRage.Core.VRageCore.Engine"/>.
            </summary>
            <remarks>
            Consider NOT using this method and injecting components you need via DCS. 
            </remarks>
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.EngineComponent.FromTag``1">
            <summary>
            Get the component corresponding to this type's name from <see cref="P:Keen.VRage.Core.VRageCore.Engine"/>.
            </summary>
            <remarks>
            Consider NOT using this method and injecting components you need via DCS. 
            </remarks>
        </member>
        <member name="T:Keen.VRage.Core.EngineComponents.EngineComponentBase">
            <summary>
            Base class for <see cref="T:Keen.VRage.Core.EngineComponents.EngineComponent"/>
            </summary>
            <remarks>
            <see cref="T:Keen.VRage.Core.EngineComponents.LibraryEngineComponent"/> inherits from it but not from <see cref="T:Keen.VRage.Core.EngineComponents.EngineComponent"/>
            </remarks>
        </member>
        <member name="T:Keen.VRage.Core.EngineComponents.EngineDataLoaderComponent">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.EngineComponents.EngineDataLoaderComponent.ObjectBuilder">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent">
            <summary>
            See <see cref="T:Keen.VRage.Core.EngineComponents.IOptions"/>
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.NeedsUpdate">
            <summary>
            TODO: SE2-19874 Remove and restore Job
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.WriteToDiskAsync(System.Collections.Generic.IEnumerable{Keen.VRage.Core.EngineComponents.IOptionsPart})">
            <summary>
            <paramref name="partsToSave"/> will be used and processed fully before the method yields
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.EngineOptionsContainer">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.EngineOptionsContainer.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.EngineOptionsContainer.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.EngineOptionsContainer.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.EngineOptionsContainer@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.EngineOptionsContainer.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.EngineOptionsContainer.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.EngineOptionsContainer@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.EngineOptionsContainer.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.EngineOptionsContainer.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.EngineOptionsContainer@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.EngineOptionsContainer.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.EngineOptionsContainer.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.EngineOptionsContainer.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.EngineOptionsContainer.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.EngineOptionsContainer.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.EngineOptionsContainer@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.EngineOptionsContainer.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.EngineOptionsContainer.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.EngineOptionsContainer@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.EngineOptionsContainer.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.EngineOptionsContainer.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.EngineOptionsContainer.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.EngineOptionsContainer@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.EngineOptionsContainer.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.EngineOptionsContainer.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.EngineOptionsContainer.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.EngineOptionsContainer.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.EngineOptionsContainer.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#EngineComponents#EngineOptionsStorageEngineComponent#EngineOptionsContainer}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.EngineOptionsContainer.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.EngineOptionsContainer.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.EngineOptionsContainer.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.EngineOptionsContainer.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="T:Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.EngineOptions">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.EngineOptions.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.EngineOptions.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.EngineOptions.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.EngineOptions@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.EngineOptions.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.EngineOptions.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.EngineOptions@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.EngineOptions.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.EngineOptions.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.EngineOptions@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.EngineOptions.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.EngineOptions.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.EngineOptions.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.EngineOptions.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.EngineOptions.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.EngineOptions@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.EngineOptions.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.EngineOptions.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.EngineOptions@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.EngineOptions.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.EngineOptions.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.EngineOptions@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.EngineOptions.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.EngineOptions.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.EngineOptions@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.EngineOptions.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.EngineOptions.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.EngineOptions.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.EngineOptions.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.EngineOptions.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#EngineComponents#EngineOptionsStorageEngineComponent#EngineOptions}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.EngineOptions.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.EngineOptions.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.EngineOptions.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.EngineOptions.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.EngineOptions.TypeInfoHolder.OptionsPartsAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.EngineOptions.TypeInfoHolder.OptionsPartsAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.EngineOptions.TypeInfoHolder.OptionsPartsAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.EngineOptions.TypeInfoHolder.OptionsPartsAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.EngineOptions.TypeInfoHolder.OptionsPartsAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.EngineOptions.TypeInfoHolder.OptionsPartsAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.EngineOptions.TypeInfoHolder.OptionsPartsAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.EngineOptions.TypeInfoHolder.OptionsPartsAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.EngineOptions.TypeInfoHolder.OptionsPartsAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.EngineOptions.TypeInfoHolder.OptionsPartsAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.EngineOptions.TypeInfoHolder.OptionsPartsAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.EngineOptions.TypeInfoHolder.OptionsPartsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.EngineOptions.TypeInfoHolder.OptionsPartsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.EngineOptions.TypeInfoHolder.OptionsPartsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.EngineOptions.TypeInfoHolder.OptionsPartsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#Dictionary{System#Type,Keen#VRage#Core#EngineComponents#IOptionsPart}}#Set(System.Object,System.Collections.Generic.Dictionary{System.Type,Keen.VRage.Core.EngineComponents.IOptionsPart}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.EngineOptions.TypeInfoHolder.OptionsPartsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#Dictionary{System#Type,Keen#VRage#Core#EngineComponents#IOptionsPart}}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.EngineOptions.TypeInfoHolder.OptionsPartsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#Dictionary{System#Type,Keen#VRage#Core#EngineComponents#IOptionsPart}}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.EngineOptions.TypeInfoHolder.OptionsPartsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#Dictionary{System#Type,Keen#VRage#Core#EngineComponents#IOptionsPart}}#Set(System.Byte@,System.Collections.Generic.Dictionary{System.Type,Keen.VRage.Core.EngineComponents.IOptionsPart}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.EngineOptions.TypeInfoHolder.OptionsPartsAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.EngineOptions.TypeInfoHolder.OptionsPartsAccessor.Set(Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.EngineOptions@,System.Collections.Generic.Dictionary{System.Type,Keen.VRage.Core.EngineComponents.IOptionsPart}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.EngineOptions.TypeInfoHolder.OptionsPartsAccessor.Get(Keen.VRage.Core.EngineComponents.EngineOptionsStorageEngineComponent.EngineOptions@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.EngineComponents.IEngineServiceProvider">
            <summary>
            Engine Components can implement this interface to expose services they offer for use
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.IEngineServiceProvider.RegisterServices(Keen.VRage.Library.Utils.ServiceLocatorContext.Builder@)">
            <summary />
        </member>
        <member name="T:Keen.VRage.Core.EngineComponents.IOptions">
            <summary>
            Saves persistent data/options/setting for player.
            All parts instances are persistent for the whole duration of <see cref="T:Keen.VRage.Core.EngineComponents.IOptions"/> lifetime.
            Maybe be synchronized across machines (manually by player or via cloud)
            Options are Internally synchronized, Parts are NOT and need to be Externally synchronized.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.IOptions.TryGetPart``1">
            <summary>
            Tries to get a given <see cref="T:Keen.VRage.Core.EngineComponents.IOptionsPart"/>. Does not create the part if it is not found
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.IOptions.GetOrCreatePart``1(System.Func{``0})">
            <summary>
            Gets a given <see cref="T:Keen.VRage.Core.EngineComponents.IOptionsPart"/>, creating the part if it is not found
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.EngineComponents.IOptionsPart">
            <summary>
            Each Option part is considered atomic and self-sufficient.
            Parts should have no dependencies between them, as individual parts may be lost due to serialization errors, version incompatibility or user intervention.
            Options are saved automatically when changed.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.EngineComponents.LibraryEngineComponent">
            <summary>
            Necessary for the engine to run, configures basic systems incl. CrashHandler and FileSystem.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.EngineComponents.LibraryEngineComponent.ObjectBuilder">
            <summary>
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.EngineComponents.LibraryEngineComponent.ObjectBuilder.ContentSetup">
            <summary>
            Initialization parameters for the Content sub-file-system.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.EngineComponents.LibraryEngineComponent.ObjectBuilder.CrashReportingSetup">
            <summary>
            Default application info used by the crash reporter.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.EngineComponents.LocalizationEngineComponent">
            <summary>
            Controls <see cref="T:Keen.VRage.Library.Localization.TextManager"/> and <see cref="T:Keen.VRage.Library.Localization.LocalizationManager"/>.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.EngineComponents.ProjectManagerEngineComponent">
            <summary>
            Singleton for loading and managing VRage projects.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.ProjectManagerEngineComponent.AddLocator(System.String,Keen.VRage.Core.Project.IProjectLocator)">
            <summary>
            Add new <see cref="T:Keen.VRage.Core.Project.IProjectLocator"/> for the modServiceId. modServiceId can have only one locator
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.ProjectManagerEngineComponent.AddCodeProvider(Keen.VRage.Core.Project.ProjectType,Keen.VRage.Core.Project.IProjectCodeProvider)">
            <summary>
            Add new <see cref="T:Keen.VRage.Core.Project.IProjectCodeProvider"/> for the <see cref="T:Keen.VRage.Core.Project.ProjectType"/>. <see cref="T:Keen.VRage.Core.Project.ProjectType"/> can have only one code provider 
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.EngineComponents.ProjectManagerEngineComponent.Token">
            <summary>
            Token for handling life time of pushed projects. Once disposed, projects are unloaded.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.EngineComponents.ProjectManagerEngineComponent.ObjectBuilder">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.EngineComponents.Utils.DefinitionSetLoaderComponent">
            <summary>
            Takes care of assigned <see cref="T:Keen.VRage.Library.Definitions.DefinitionSet"/>s
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.EngineComponents.Utils.NamedDefinitionSetLoaderComponent">
            <summary>
            Loads specified <see cref="T:Keen.VRage.Library.Definitions.DefinitionSet"/>s by name
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.EngineComponents.Utils.PreloadDefinitionSetLoaderComponentObjectBuilder">
            <seealso cref="T:Keen.VRage.Core.EngineComponents.Utils.PreloadDefinitionSetLoaderComponent"/>
        </member>
        <member name="T:Keen.VRage.Core.EngineComponents.Utils.PreloadDefinitionSetLoaderComponent">
            <summary>
            Finalize pushing definition set that was prepared first
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.Utils.PreloadDefinitionSetLoaderComponent.PreloadOnBackground">
            <summary>
            Initiate preloading of the definition set on background thread. Repeat calls have no effect.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.Utils.PreloadDefinitionSetLoaderComponent.FinalizePush">
            <summary>
            Finalizes push of definition set. Repeat calls are ignored.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.EngineComponents.LimitedDefSetConfigurationObjectBuilder.UseLimitedDefs">
            <summary />
        </member>
        <member name="T:Keen.VRage.Core.EngineComponents.LimitedDefSetConfigurationObjectBuilder.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.LimitedDefSetConfigurationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.LimitedDefSetConfigurationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.EngineComponents.LimitedDefSetConfigurationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.LimitedDefSetConfigurationObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.LimitedDefSetConfigurationObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.EngineComponents.LimitedDefSetConfigurationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.LimitedDefSetConfigurationObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.LimitedDefSetConfigurationObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.EngineComponents.LimitedDefSetConfigurationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.LimitedDefSetConfigurationObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.LimitedDefSetConfigurationObjectBuilder.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.LimitedDefSetConfigurationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.LimitedDefSetConfigurationObjectBuilder.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.LimitedDefSetConfigurationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.EngineComponents.LimitedDefSetConfigurationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.LimitedDefSetConfigurationObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.LimitedDefSetConfigurationObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.EngineComponents.LimitedDefSetConfigurationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.LimitedDefSetConfigurationObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.LimitedDefSetConfigurationObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.EngineComponents.LimitedDefSetConfigurationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.LimitedDefSetConfigurationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.LimitedDefSetConfigurationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.EngineComponents.LimitedDefSetConfigurationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.LimitedDefSetConfigurationObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.EngineComponents.LimitedDefSetConfigurationObjectBuilder.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.EngineComponents.LimitedDefSetConfigurationObjectBuilder.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.LimitedDefSetConfigurationObjectBuilder.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.EngineComponents.LimitedDefSetConfigurationObjectBuilder.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#EngineComponents#LimitedDefSetConfigurationObjectBuilder}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.LimitedDefSetConfigurationObjectBuilder.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.EngineComponents.LimitedDefSetConfigurationObjectBuilder.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.EngineComponents.LimitedDefSetConfigurationObjectBuilder.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.EngineComponents.LimitedDefSetConfigurationObjectBuilder.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.EngineComponents.LimitedDefSetConfigurationObjectBuilder.TypeInfoHolder.UseLimitedDefsAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.EngineComponents.LimitedDefSetConfigurationObjectBuilder.TypeInfoHolder.UseLimitedDefsAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.EngineComponents.LimitedDefSetConfigurationObjectBuilder.TypeInfoHolder.UseLimitedDefsAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.EngineComponents.LimitedDefSetConfigurationObjectBuilder.TypeInfoHolder.UseLimitedDefsAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.EngineComponents.LimitedDefSetConfigurationObjectBuilder.TypeInfoHolder.UseLimitedDefsAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.EngineComponents.LimitedDefSetConfigurationObjectBuilder.TypeInfoHolder.UseLimitedDefsAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.EngineComponents.LimitedDefSetConfigurationObjectBuilder.TypeInfoHolder.UseLimitedDefsAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.EngineComponents.LimitedDefSetConfigurationObjectBuilder.TypeInfoHolder.UseLimitedDefsAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.EngineComponents.LimitedDefSetConfigurationObjectBuilder.TypeInfoHolder.UseLimitedDefsAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.LimitedDefSetConfigurationObjectBuilder.TypeInfoHolder.UseLimitedDefsAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.LimitedDefSetConfigurationObjectBuilder.TypeInfoHolder.UseLimitedDefsAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.LimitedDefSetConfigurationObjectBuilder.TypeInfoHolder.UseLimitedDefsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.LimitedDefSetConfigurationObjectBuilder.TypeInfoHolder.UseLimitedDefsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.LimitedDefSetConfigurationObjectBuilder.TypeInfoHolder.UseLimitedDefsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.LimitedDefSetConfigurationObjectBuilder.TypeInfoHolder.UseLimitedDefsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.LimitedDefSetConfigurationObjectBuilder.TypeInfoHolder.UseLimitedDefsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.LimitedDefSetConfigurationObjectBuilder.TypeInfoHolder.UseLimitedDefsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.LimitedDefSetConfigurationObjectBuilder.TypeInfoHolder.UseLimitedDefsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.LimitedDefSetConfigurationObjectBuilder.TypeInfoHolder.UseLimitedDefsAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.LimitedDefSetConfigurationObjectBuilder.TypeInfoHolder.UseLimitedDefsAccessor.Set(Keen.VRage.Core.EngineComponents.LimitedDefSetConfigurationObjectBuilder@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineComponents.LimitedDefSetConfigurationObjectBuilder.TypeInfoHolder.UseLimitedDefsAccessor.Get(Keen.VRage.Core.EngineComponents.LimitedDefSetConfigurationObjectBuilder@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.EngineLifetime">
            <summary>
            Adapter that ties the lifetime of some object to the engine's lifetime.
            </summary>
            <remarks>See VRage.<see cref="F:Keen.VRage.Core.VRageCore.Lifetime"/>.<see cref="F:Keen.VRage.Core.VRageLifetime.Engine"/>.</remarks>
        </member>
        <member name="M:Keen.VRage.Core.EngineLifetime.GetTrackingHandle(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineLifetime.IsExpired(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.EngineLifetime.GetLifetimePolicy(System.Object)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Extensions.AssemblyLoaderExtensions">
            <summary>
            Helper methods to load assemblies from <see cref="T:Keen.VRage.Core.Project.VRageProject"/>
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Extensions.AssemblyLoaderExtensions.SearchRelativeToProjectFolder(Keen.VRage.Core.Utils.IAssemblySearchStrategy,Keen.VRage.Core.Project.VRageProject)">
            <summary>
            Set <see cref="P:Keen.VRage.Core.Utils.IAssemblySearchStrategy.RelativeToFolder"/> to the <paramref name="vRageProject"/> location.
            </summary>
            <param name="strategy"></param>
            <param name="vRageProject"></param>
        </member>
        <member name="M:Keen.VRage.Core.Extensions.AssemblyLoaderExtensions.LoadExtensionAssemblies(Keen.VRage.Core.Utils.AssemblyLoader,Keen.VRage.Core.Project.VRageProject,System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
            <summary>
            Finds correct extension assemblies and loads them
            </summary>
            <param name="assemblyLoader"></param>
            <param name="vRageProject"></param>
            <param name="additionalSearchPaths">Will prioritize searching in this list rather than in <see cref="P:Keen.VRage.Core.Project.VRageProjectData.EditorExtensionAssembliesSearchPaths"/></param>
            <param name="optional"></param>
            <returns></returns>
        </member>
        <member name="M:Keen.VRage.Core.Extensions.AssemblyLoaderExtensions.LoadAdditionalAssemblies(Keen.VRage.Core.Utils.AssemblyLoader,Keen.VRage.Core.Project.VRageProject,System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
            <summary>
            Finds correct reference assemblies and loads them 
            </summary>
            <param name="assemblyLoader"></param>
            <param name="vRageProject"></param>
            <param name="additionalSearchPaths">Will prioritize searching in this list rather than in <see cref="P:Keen.VRage.Core.Project.VRageProjectData.ReferencedAssembliesSearchPaths"/></param>
            <param name="optional"></param>
            <returns></returns>
        </member>
        <member name="M:Keen.VRage.Core.Extensions.AssemblyLoaderExtensions.GetSearchPath(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Combine and format vrgproj paths with global/external folder paths to a single list.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Extensions.EngineBuilderExtensions">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.GlobalDebugSettings">
            <summary>
            Global setting that are visible on the debug screen
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.GlobalDebugSettings.EnabledDebugDraw">
            <summary>
            If false MeshBatches stop gathering geometry data
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.GlobalDebugSettings.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.GlobalDebugSettings.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.GlobalDebugSettings.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.GlobalDebugSettings.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.GlobalDebugSettings.TypeInfoHolder.EnabledDebugDrawAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.GlobalDebugSettings.TypeInfoHolder.EnabledDebugDrawAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.GlobalDebugSettings.TypeInfoHolder.EnabledDebugDrawAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.GlobalDebugSettings.TypeInfoHolder.EnabledDebugDrawAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.GlobalDebugSettings.TypeInfoHolder.EnabledDebugDrawAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.GlobalDebugSettings.TypeInfoHolder.EnabledDebugDrawAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.GlobalDebugSettings.TypeInfoHolder.EnabledDebugDrawAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.GlobalDebugSettings.TypeInfoHolder.EnabledDebugDrawAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.GlobalDebugSettings.TypeInfoHolder.EnabledDebugDrawAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.GlobalDebugSettings.TypeInfoHolder.EnabledDebugDrawAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.GlobalDebugSettings.TypeInfoHolder.EnabledDebugDrawAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.GlobalDebugSettings.TypeInfoHolder.EnabledDebugDrawAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.GlobalDebugSettings.TypeInfoHolder.EnabledDebugDrawAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.GlobalDebugSettings.TypeInfoHolder.EnabledDebugDrawAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.GlobalDebugSettings.TypeInfoHolder.EnabledDebugDrawAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.GlobalDebugSettings.TypeInfoHolder.EnabledDebugDrawAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.GlobalDebugSettings.TypeInfoHolder.EnabledDebugDrawAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.GlobalDebugSettings.TypeInfoHolder.EnabledDebugDrawAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.GlobalDebugSettings.TypeInfoHolder.EnabledDebugDrawAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.GlobalDebugSettings.TypeInfoHolder.EnabledDebugDrawAccessor.Set(Keen.VRage.Core.GlobalDebugSettings@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.GlobalDebugSettings.TypeInfoHolder.EnabledDebugDrawAccessor.Get(Keen.VRage.Core.GlobalDebugSettings@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.GlobalDebugSettings.TypeInfoHolder._enabledDebugDrawAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.GlobalDebugSettings.TypeInfoHolder._enabledDebugDrawAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.GlobalDebugSettings.TypeInfoHolder._enabledDebugDrawAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.GlobalDebugSettings.TypeInfoHolder._enabledDebugDrawAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.GlobalDebugSettings.TypeInfoHolder._enabledDebugDrawAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.GlobalDebugSettings.TypeInfoHolder._enabledDebugDrawAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.GlobalDebugSettings.TypeInfoHolder._enabledDebugDrawAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.GlobalDebugSettings.TypeInfoHolder._enabledDebugDrawAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.GlobalDebugSettings.TypeInfoHolder._enabledDebugDrawAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.GlobalDebugSettings.TypeInfoHolder._enabledDebugDrawAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.GlobalDebugSettings.TypeInfoHolder._enabledDebugDrawAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.GlobalDebugSettings.TypeInfoHolder._enabledDebugDrawAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.GlobalDebugSettings.TypeInfoHolder._enabledDebugDrawAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.GlobalDebugSettings.TypeInfoHolder._enabledDebugDrawAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.GlobalDebugSettings.TypeInfoHolder._enabledDebugDrawAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.GlobalDebugSettings.TypeInfoHolder._enabledDebugDrawAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.GlobalDebugSettings.TypeInfoHolder._enabledDebugDrawAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.GlobalDebugSettings.TypeInfoHolder._enabledDebugDrawAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.GlobalDebugSettings.TypeInfoHolder._enabledDebugDrawAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.GlobalDebugSettings.TypeInfoHolder._enabledDebugDrawAccessor.Set(Keen.VRage.Core.GlobalDebugSettings@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.GlobalDebugSettings.TypeInfoHolder._enabledDebugDrawAccessor.Get(Keen.VRage.Core.GlobalDebugSettings@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Input.AnalogInput">
            <summary>
            Type safe helper for analog inputs.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.AnalogInput.Id">
            <summary>
            The actual input id.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Input.AnalogInput.#ctor(Keen.VRage.Core.Input.InputId)">
            <summary>
            Create a new analog input from a preexisting Id.
            </summary>
            <param name="id">The preexisting input id.</param>
            <exception cref="T:System.ArgumentException">When the preexisting input is not analog.</exception>
        </member>
        <member name="M:Keen.VRage.Core.Input.AnalogInput.#ctor(System.Int32,System.UInt16)">
            <summary>
            Create a new analog input.
            </summary>
            <param name="id">The unique input index for this device class.</param>
            <param name="deviceClass">The device class.</param>
            <exception cref="T:System.ArgumentException">If the device class is not in the correct range (<c>value &gt;= </c><see cref="T:Keen.VRage.Core.Input.GenericDeviceClass" />.<see cref="F:Keen.VRage.Core.Input.GenericDeviceClass.MaxValue" />)</exception>
        </member>
        <member name="M:Keen.VRage.Core.Input.AnalogInput.#ctor(System.Int32,Keen.VRage.Core.Input.GenericDeviceClass)">
            <summary>
            Create a new analog input.
            </summary>
            <param name="id">The unique input index for this device class.</param>
            <param name="deviceClass">The generic device class.</param>
        </member>
        <member name="M:Keen.VRage.Core.Input.AnalogInput.op_Implicit(Keen.VRage.Core.Input.AnalogInput@)~Keen.VRage.Core.Input.InputId">
            <summary>
            Implicit conversion to input Id.
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Keen.VRage.Core.Input.AnalogInput.GetValue(Keen.VRage.Core.Input.IInputDevice)">
            <summary>
            Get the current value for this input.
            </summary>
            <param name="device"></param>
            <returns>The current value for this input on <paramref name="device" /></returns>
        </member>
        <member name="M:Keen.VRage.Core.Input.AnalogInput.Equals(Keen.VRage.Core.Input.AnalogInput)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Input.AnalogInput.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Input.AnalogInput.GetHashCode">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Input.DigitalInput">
            <summary>
            Type safe helper for digital inputs.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.DigitalInput.Id">
            <summary>
            The actual input id.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Input.DigitalInput.#ctor(Keen.VRage.Core.Input.InputId)">
            <summary>
            Create a new digital input from a preexisting Id.
            </summary>
            <param name="id">The preexisting input id.</param>
            <exception cref="T:System.ArgumentException">When the preexisting input is not digital.</exception>
        </member>
        <member name="M:Keen.VRage.Core.Input.DigitalInput.#ctor(System.Int32,System.UInt16)">
            <summary>
            Create a new digital input.
            </summary>
            <param name="id">The unique input index for this device class.</param>
            <param name="deviceClass">The device class.</param>
            <exception cref="T:System.ArgumentException">If the device class is not in the correct range (<c>value &gt;= </c><see cref="T:Keen.VRage.Core.Input.GenericDeviceClass" />.<see cref="F:Keen.VRage.Core.Input.GenericDeviceClass.MaxValue" />)</exception>
        </member>
        <member name="M:Keen.VRage.Core.Input.DigitalInput.#ctor(System.Int32,Keen.VRage.Core.Input.GenericDeviceClass)">
            <summary>
            Create a new digital input.
            </summary>
            <param name="id">The unique input index for this device class.</param>
            <param name="deviceClass">The generic device class.</param>
        </member>
        <member name="M:Keen.VRage.Core.Input.DigitalInput.op_Implicit(Keen.VRage.Core.Input.DigitalInput@)~Keen.VRage.Core.Input.InputId">
            <summary>
            Implicit conversion to input Id.
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Keen.VRage.Core.Input.DigitalInput.IsActive(Keen.VRage.Core.Input.IInputDevice)">
            <summary>
            Whether this input is currently active.
            </summary>
            <param name="device">The input device.</param>
            <returns>Whether this input is currently active on <paramref name="device" /></returns>
        </member>
        <member name="M:Keen.VRage.Core.Input.DigitalInput.Equals(Keen.VRage.Core.Input.DigitalInput)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Input.DigitalInput.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Input.DigitalInput.GetHashCode">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Input.GameControllerInputs">
            <summary>
            Well known input codes that any GameController input class should support.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.GameControllerInputs.Menu">
            <summary>
            Menu Button
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.GameControllerInputs.View">
            <summary>
            View Button
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.GameControllerInputs.A">
            <summary>
            A Button
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.GameControllerInputs.B">
            <summary>
            B Button
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.GameControllerInputs.X">
            <summary>
            X Button
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.GameControllerInputs.Y">
            <summary>
            Y Button
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.GameControllerInputs.DPadUp">
            <summary>
            DPadUp Button
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.GameControllerInputs.DPadDown">
            <summary>
            DPadDown Button
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.GameControllerInputs.DPadLeft">
            <summary>
            DPadLeft Button
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.GameControllerInputs.DPadRight">
            <summary>
            DPadRight Button
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.GameControllerInputs.LeftShoulder">
            <summary>
            LeftShoulder Button
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.GameControllerInputs.RightShoulder">
            <summary>
            RightShoulder Button
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.GameControllerInputs.LeftThumbstickPress">
            <summary>
            LeftThumbstick Button
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.GameControllerInputs.RightThumbstickPress">
            <summary>
            RightThumbstick Button
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.GameControllerInputs.LeftTrigger">
            <summary>
            LeftTrigger Analog input
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.GameControllerInputs.RightTrigger">
            <summary>
            RightTrigger Analog input
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.GameControllerInputs.LeftThumbstickX">
            <summary>
            LeftThumbstick Horizontal Analog input
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.GameControllerInputs.LeftThumbstickY">
            <summary>
            LeftThumbstick Vertical Analog input
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.GameControllerInputs.RightThumbstickX">
            <summary>
            RightThumbstick Horizontal Analog input
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.GameControllerInputs.RightThumbstickY">
            <summary>
            RightThumbstick Vertical Analog input
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.GameControllerInputs.MAX_PREDEFINED_INPUT_ID">
            <summary>
            Maximum input id that could ever be predefined in this class.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Input.GameControllerInputs.TryGetName(Keen.VRage.Core.Input.InputId,System.String@)">
            <summary>
            Get the name of an input defined in this class given it's id.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Input.GameControllerInputs.GetInputFromName(System.String)">
            <summary>
            Get an input id given the name of a field in this class.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Input.GenericDeviceClass">
            <summary>
            Generic device class.
            </summary>
            <remarks>A generic device class is used to identify a control that is commonly found on devices within that class,
            input devices can identify themselves as implementing a generic class to improve compatibility between similar devices.</remarks>
        </member>
        <member name="F:Keen.VRage.Core.Input.GenericDeviceClass.Unknown">
            <summary>
            Not a generic input.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.GenericDeviceClass.Keyboard">
            <summary>
            Standard PC keyboard.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.GenericDeviceClass.Mouse">
            <summary>
            Standard PC mouse.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.GenericDeviceClass.GameController">
            <summary>
            Generic gamepad controller.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.GenericDeviceClass.Touch">
            <summary>
            Touch sensitive digitizer.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.GenericDeviceClass.ArcadeStick">
            <summary>
            Arcade style game controller (stick and buttons).
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.GenericDeviceClass.FlightStick">
            <summary>
            Flight stick.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.GenericDeviceClass.RacingWheel">
            <summary>
            Racing wheel.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.GenericDeviceClass.Motion">
            <summary>
            Motion sensors (abstraction over sensors like a magnetometer, accelerometer and or gyroscope)
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.GenericDeviceClass.MaxValue">
            <summary>
            Maximum possible generic input class.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Input.GenericDeviceClassFlags">
            <summary>
            A set of generic input devices.
            </summary>
            <remarks>This is a flags version of <see cref="T:Keen.VRage.Core.Input.GenericDeviceClass" />.</remarks>
        </member>
        <member name="F:Keen.VRage.Core.Input.GenericDeviceClassFlags.None">
            <summary>
            Not a generic input.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.GenericDeviceClassFlags.Keyboard">
            <summary>
            Standard PC keyboard.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.GenericDeviceClassFlags.Mouse">
            <summary>
            Standard PC mouse.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.GenericDeviceClassFlags.GameController">
            <summary>
            Generic gamepad controller.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.GenericDeviceClassFlags.Touch">
            <summary>
            Touch sensitive digitizer.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.GenericDeviceClassFlags.ArcadeStick">
            <summary>
            Arcade style game controller (stick and buttons).
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.GenericDeviceClassFlags.FlightStick">
            <summary>
            Flight stick.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.GenericDeviceClassFlags.RacingWheel">
            <summary>
            Racing wheel.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.GenericDeviceClassFlags.Motion">
            <summary>
            Motion sensors (abstraction over sensors like a magnetometer, accelerometer and or gyroscope)
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Input.ICustomInputDeviceClass">
            <summary>
            User provided device class.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Input.ICustomInputDeviceClass.UpdateDevices">
            <summary>
            Process device updates.
            </summary>
            <autogeneratedoc />
        </member>
        <member name="T:Keen.VRage.Core.Input.IInputDevice">
            <summary>
            Defines an actual physical device connected to the current system.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Input.IInputDevice.Name">
            <summary>
            The display name for this device.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Input.IInputDevice.DeviceId">
            <summary>
            Unique name for this device that can be persisted and used to identify it over multiple application sessions.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Input.IInputDevice.Class">
            <summary>
            The device class for this device.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Input.IInputDevice.HasActive">
            <summary>
            Whether this device has any active inputs.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Input.IInputDevice.HasChanged">
            <summary>
            Whether this device had any inputs change in the last update cycle.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Input.IInputDevice.FillActive(System.Collections.Generic.HashSet{Keen.VRage.Core.Input.InputId})">
            <summary>
            Fill a collection with the inputs in this device that have non-zero values.
            </summary>
            <param name="destination"></param>
        </member>
        <member name="M:Keen.VRage.Core.Input.IInputDevice.FillChanged(System.Collections.Generic.HashSet{Keen.VRage.Core.Input.InputId})">
            <summary>
            Fill a collection with the inputs in this device that have changed in the last update.
            </summary>
            <param name="destination"></param>
        </member>
        <member name="M:Keen.VRage.Core.Input.IInputDevice.GetDigitalState(Keen.VRage.Core.Input.InputId)">
            <summary>
            Get the states for a digital input.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Input.IInputDevice.GetAnalogState(Keen.VRage.Core.Input.InputId)">
            <summary>
            Get the states for an analogue input.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Input.IInputDevice.GetPointerState(Keen.VRage.Core.Input.InputId,Keen.VRage.Core.Input.PointerStateKind)">
            <summary>
            Get the positions for a pointer input.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Input.IInputDeviceClass">
            <summary>
            Defines a type of device that can be supported.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Input.IInputDeviceClass.Name">
            <summary>
            Device class name.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Input.IInputDeviceClass.DeviceClassId">
            <summary>
            Unique and stable id for this device class.
            </summary>
            <remarks>Generic devices should return the generic class number that best matches their chosen
            <see cref="P:Keen.VRage.Core.Input.IInputDeviceClass.GenericClasses" />.</remarks>
        </member>
        <member name="P:Keen.VRage.Core.Input.IInputDeviceClass.VendorInfo">
            <summary>
            Vendor specific description.
            </summary>
            <remarks>Can include any data the vendor finds relevant to be displayed in logs such as software and hardware versions.</remarks>
        </member>
        <member name="P:Keen.VRage.Core.Input.IInputDeviceClass.GenericClasses">
            <summary>
            Generic class for this device. Non-generic devices should return <see cref="F:Keen.VRage.Core.Input.GenericDeviceClassFlags.None" />.
            </summary>
            <remarks>It's best to support as few classes as possible on the same implementation. This option is mostly available to
            specialized game controls (racing wheels, arcade controllers, flight sticks, etc) which often also present themselves
            as standard gamepads).</remarks>
        </member>
        <member name="P:Keen.VRage.Core.Input.IInputDeviceClass.ConnectedDevices">
            <summary>
            All plugged in devices for this class.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Input.IInputDeviceClass.ActiveDevices">
            <summary>
            Devices that had inputs change in the last update.
            </summary>
        </member>
        <member name="E:Keen.VRage.Core.Input.IInputDeviceClass.DeviceConnected">
            <summary>
            Event fired when a device supported by this class is connected.
            </summary>
            <remarks>This event can only fire during <see cref="M:Keen.VRage.Core.Platform.IPlatformInput.ProcessInput" /> for platform devices or
            <see cref="M:Keen.VRage.Core.Input.ICustomInputDeviceClass.UpdateDevices" /> for custom devices.</remarks>
        </member>
        <member name="E:Keen.VRage.Core.Input.IInputDeviceClass.DeviceDisconnected">
            <summary>
            Event fired when a device supported by this class is disconnected.
            </summary>
            <remarks>This event can only fire during <see cref="M:Keen.VRage.Core.Platform.IPlatformInput.ProcessInput" /> for platform devices or
            <see cref="M:Keen.VRage.Core.Input.ICustomInputDeviceClass.UpdateDevices" /> for custom devices.</remarks>
        </member>
        <member name="M:Keen.VRage.Core.Input.IInputDeviceClass.GetInputs(Keen.VRage.Core.Input.InputType)">
            <summary>
            Get standard inputs this class supports for all plugged in devices.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Keen.VRage.Core.Input.IInputDeviceClass.GetInputs(Keen.VRage.Core.Input.IInputDevice,Keen.VRage.Core.Input.InputType)">
            <summary>
            Get all the inputs a specific plugged in device supports.
            </summary>
            <param name="device"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Keen.VRage.Core.Input.IInputDeviceClass.GetDescription(Keen.VRage.Core.Input.InputId)">
            <summary>
            Get a description for an input.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:Keen.VRage.Core.Input.IInputMethodEditor">
            <summary>
            Interface for accessing advanced text entry via a platform's built-in Input Method Editor.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Input.IInputMethodEditor.Name">
            <summary>
            Descriptive name of this input method editor.
            </summary>
        </member>
        <member name="E:Keen.VRage.Core.Input.IInputMethodEditor.TextEntered">
            <summary>
            Simple IME text entry event.
            </summary>
            <remarks>Event triggers when a simple text input mode is used to input characters. That would be the keyboard or some character picker.</remarks>
        </member>
        <member name="T:Keen.VRage.Core.Input.IMETextDelegate">
            <summary>
            Delegate describing the <see cref="E:Keen.VRage.Core.Input.IInputMethodEditor.TextEntered"/> event.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Input.InputDescription">
            <summary>
            Description of a input action;
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.InputDescription.Name">
            <summary>
            Input name, mostly used for debugging.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.InputDescription.UIString">
            <summary>
            Rich text sequence that graphically displays the input device actions that represent this input.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Input.InputDescription.#ctor(System.String,System.String)">
            <summary>
            </summary>
            <param name="name"></param>
            <param name="uiString"></param>
            <autogeneratedoc />
        </member>
        <member name="T:Keen.VRage.Core.Input.InputExtensions">
            <summary>
            Extensions for input devices.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Input.InputExtensions.SupportsInput(Keen.VRage.Core.Input.IInputDevice,Keen.VRage.Core.Input.InputId)">
            <summary>
            Whether this device supports a given input.
            </summary>
            <param name="self">The device.</param>
            <param name="id">The input in question.</param>
            <returns>Whether the input is supported by the device.</returns>
        </member>
        <member name="M:Keen.VRage.Core.Input.InputExtensions.SupportsInput(Keen.VRage.Core.Input.IInputDeviceClass,Keen.VRage.Core.Input.InputId)">
            <summary>
            Whether this device class supports a given input.
            </summary>
            <param name="self">The device class.</param>
            <param name="id">The input in question.</param>
            <returns>Whether the input is supported by the device.</returns>
        </member>
        <member name="M:Keen.VRage.Core.Input.InputExtensions.GetDescription(Keen.VRage.Core.Input.IInputDeviceClass)">
            <summary>
            Get a formatted, human readable description of this device class. 
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Input.InputExtensions.GetDescription(Keen.VRage.Core.Input.IInputDevice)">
            <summary>
            Get a formatted, human readable description of this device. 
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Input.InputExtensions.Contains(Keen.VRage.Core.Input.GenericDeviceClassFlags,Keen.VRage.Core.Input.GenericDeviceClass)">
            <summary>
            Whether these generic device flags contain a specific device.
            </summary>
            <param name="flags"></param>
            <param name="genericClass"></param>
            <returns></returns>
        </member>
        <member name="M:Keen.VRage.Core.Input.InputExtensions.AsFlags(Keen.VRage.Core.Input.GenericDeviceClass)">
            <summary>
            Convert a generic class to the matching flag.
            </summary>
            <param name="genericClass">The original device class.</param>
            <returns>The resulting flag.</returns>
        </member>
        <member name="M:Keen.VRage.Core.Input.InputExtensions.GetValues(Keen.VRage.Core.Input.GenericDeviceClassFlags)">
            <summary>
            Enumerate the generic devices set on the current flags instance.
            </summary>
            <param name="flags">The set of flags.</param>
            <returns>An enumeration of the individual generic devices that are set on the current flags.</returns>
        </member>
        <member name="M:Keen.VRage.Core.Input.InputExtensions.CheckValueType``1(Keen.VRage.Core.Input.InputType,System.Boolean)">
            <summary>
            Check that a type argument is compatible with the current input type.
            </summary>
            <param name="self">The input type.</param>
            <param name="throws">Whether to throw an exception if the type is not a valid match.</param>
            <typeparam name="T">The value type argument.</typeparam>
            <exception cref="T:System.ArgumentOutOfRangeException">The current type is invalid.</exception>
            <exception cref="T:System.ArgumentException">The type argument does not match the input argument.</exception>
        </member>
        <member name="T:Keen.VRage.Core.Input.InputExtensions.GenericDeviceClassEnumerator">
            <summary>
            Enumerator for generic device flags that are set.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Input.InputExtensions.GenericDeviceClassEnumerator.Current">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Input.InputExtensions.GenericDeviceClassEnumerator.System#Collections#IEnumerator#Current">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Input.InputExtensions.GenericDeviceClassEnumerator.#ctor(Keen.VRage.Core.Input.GenericDeviceClassFlags)">
            <summary>
            </summary>
            <param name="flags"></param>
            <autogeneratedoc />
        </member>
        <member name="M:Keen.VRage.Core.Input.InputExtensions.GenericDeviceClassEnumerator.Dispose">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Input.InputExtensions.GenericDeviceClassEnumerator.GetEnumerator">
            <summary>
            </summary>
            <returns></returns>
            <autogeneratedoc />
        </member>
        <member name="M:Keen.VRage.Core.Input.InputExtensions.GenericDeviceClassEnumerator.MoveNext">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Input.InputExtensions.GenericDeviceClassEnumerator.Reset">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Input.InputExtensions.GenericDeviceClassEnumerator.System#Collections#Generic#IEnumerable{Keen#VRage#Core#Input#GenericDeviceClass}#GetEnumerator">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Input.InputExtensions.GenericDeviceClassEnumerator.System#Collections#IEnumerable#GetEnumerator">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Input.InputId">
            <summary>
            Identifier for a specific input on some device class.
            </summary>
            <remarks>
            The identifier should be stable and safe to write to disk for a given device class.
            </remarks>
        </member>
        <member name="F:Keen.VRage.Core.Input.InputId.Index">
            <summary>
            Input index.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.InputId.Type">
            <summary>
            Value type for this input.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.InputId.DeviceClass">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="P:Keen.VRage.Core.Input.InputId.IsGeneric">
            <summary>
            Whether the device class for this input is generic.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Input.InputId.GenericClass">
            <summary>
            Generic input class for this input.
            </summary>
            <exception cref="T:System.InvalidOperationException">When the input class is not generic.</exception>
        </member>
        <member name="M:Keen.VRage.Core.Input.InputId.#ctor(System.Int32,Keen.VRage.Core.Input.InputType,System.UInt16)">
            <summary>
            Create a new input identifier.
            </summary>
            <param name="index">The unique input index for this device class.</param>
            <param name="type">The input's type.</param>
            <param name="deviceClass">The device class.</param>
            <exception cref="T:System.ArgumentException">If the device class is not in the correct range (<c>value &gt;= </c><see cref="T:Keen.VRage.Core.Input.GenericDeviceClass" />.<see cref="F:Keen.VRage.Core.Input.GenericDeviceClass.MaxValue" />)</exception>
        </member>
        <member name="M:Keen.VRage.Core.Input.InputId.#ctor(System.Int32,Keen.VRage.Core.Input.InputType,Keen.VRage.Core.Input.GenericDeviceClass)">
            <summary>
            Create a new input identifier.
            </summary>
            <param name="id">The unique input index for this device class.</param>
            <param name="type">The input's type.</param>
            <param name="deviceClass">The generic device class.</param>
        </member>
        <member name="M:Keen.VRage.Core.Input.InputId.#ctor(System.Int32,Keen.VRage.Core.Input.InputType,System.UInt16,Keen.VRage.Core.Input.GenericDeviceClass)">
            <summary>
            Constructor used by serialization.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Input.InputId.op_Equality(Keen.VRage.Core.Input.InputId,Keen.VRage.Core.Input.InputId)">
            <summary>
            Compare two inputs for equality.
            </summary>
            <param name="left">The first input argument.</param>
            <param name="right">The second input argument.</param>
            <returns>Whether the two input ids are identical.</returns>
        </member>
        <member name="M:Keen.VRage.Core.Input.InputId.op_Inequality(Keen.VRage.Core.Input.InputId,Keen.VRage.Core.Input.InputId)">
            <summary>
            Compare two inputs for inequality.
            </summary>
            <param name="left">The first input argument.</param>
            <param name="right">The second input argument.</param>
            <returns>Whether the two input ids are not identical.</returns>
        </member>
        <member name="M:Keen.VRage.Core.Input.InputId.Equals(Keen.VRage.Core.Input.InputId)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Input.InputId.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Input.InputId.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Input.InputId.ToString">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Input.InputId.ValidateAsync(Keen.VRage.Library.Serialization.Validation.ValidationContext,Keen.VRage.Library.Serialization.MemberReference)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Input.InputType">
            <summary>
            Game input type.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.InputType.Digital">
            <summary>
            Input represents a on or off state.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.InputType.Analog">
            <summary>
            Input represents a single floating point value.
            Range is [0,1] or [-1,1], depending on the input.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.InputType.Pointer">
            <summary>
            Input represents the position of a pointing device on the application's viewport.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Input.IPredefinedInputProvider">
            <summary>
            Interface describing types that provide predefined input constants.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Input.IPredefinedInputProvider.Inputs">
            <summary>
            All inputs that this provider has
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Input.IPredefinedInputProvider.TryGetName(Keen.VRage.Core.Input.InputId,System.String@)">
            <summary>
            Get the name for a predefined input.
            </summary>
            <returns>Whether the input was predefined or not.</returns>
        </member>
        <member name="M:Keen.VRage.Core.Input.IPredefinedInputProvider.GetInputFromName(System.String)">
            <summary>
            Get the predefined input with the given name.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Input.KeyboardInputs">
            <summary>
            Standard keyboard keys based on windows Virtual key codes.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.Back">
            <summary>
            BACKSPACE key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.Tab">
            <summary>
            TAB key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.Clear">
            <summary>
            CLEAR key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.Enter">
            <summary>
            ENTER key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.Shift">
            <summary>
            SHIFT key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.Control">
            <summary>
            CTRL key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.Alt">
            <summary>
            ALT key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.Pause">
            <summary>
            PAUSE key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.Capital">
            <summary>
            CAPS LOCK key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.Escape">
            <summary>
            ESC key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.Space">
            <summary>
            SPACEBAR
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.PageUp">
            <summary>
            PAGE UP key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.PageDown">
            <summary>
            PAGE DOWN key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.End">
            <summary>
            END key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.Home">
            <summary>
            HOME key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.Left">
            <summary>
            LEFT ARROW key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.Up">
            <summary>
            UP ARROW key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.Right">
            <summary>
            RIGHT ARROW key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.Down">
            <summary>
            DOWN ARROW key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.Select">
            <summary>
            SELECT key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.Print">
            <summary>
            PRINT key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.PrintScreen">
            <summary>
            PRINT SCREEN key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.Insert">
            <summary>
            INS key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.Delete">
            <summary>
            DEL key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.Help">
            <summary>
            HELP key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.D0">
            <summary>
            0 key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.D1">
            <summary>
            1 key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.D2">
            <summary>
            2 key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.D3">
            <summary>
            3 key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.D4">
            <summary>
            4 key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.D5">
            <summary>
            5 key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.D6">
            <summary>
            6 key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.D7">
            <summary>
            7 key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.D8">
            <summary>
            8 key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.D9">
            <summary>
            9 key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.A">
            <summary>
            A key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.B">
            <summary>
            B key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.C">
            <summary>
            C key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.D">
            <summary>
            D key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.E">
            <summary>
            E key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.F">
            <summary>
            F key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.G">
            <summary>
            G key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.H">
            <summary>
            H key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.I">
            <summary>
            I key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.J">
            <summary>
            J key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.K">
            <summary>
            K key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.L">
            <summary>
            L key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.M">
            <summary>
            M key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.N">
            <summary>
            N key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.O">
            <summary>
            O key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.P">
            <summary>
            P key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.Q">
            <summary>
            Q key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.R">
            <summary>
            R key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.S">
            <summary>
            S key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.T">
            <summary>
            T key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.U">
            <summary>
            U key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.V">
            <summary>
            V key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.W">
            <summary>
            W key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.X">
            <summary>
            X key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.Y">
            <summary>
            Y key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.Z">
            <summary>
            Z key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.LWin">
            <summary>
            Left Windows key (Natural keyboard)
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.RWin">
            <summary>
            Right Windows key (Natural keyboard)
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.Apps">
            <summary>
            Applications key (Natural keyboard)
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.Sleep">
            <summary>
            Computer Sleep key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.Numpad0">
            <summary>
            Numeric keypad 0 key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.Numpad1">
            <summary>
            Numeric keypad 1 key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.Numpad2">
            <summary>
            Numeric keypad 2 key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.Numpad3">
            <summary>
            Numeric keypad 3 key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.Numpad4">
            <summary>
            Numeric keypad 4 key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.Numpad5">
            <summary>
            Numeric keypad 5 key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.Numpad6">
            <summary>
            Numeric keypad 6 key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.Numpad7">
            <summary>
            Numeric keypad 7 key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.Numpad8">
            <summary>
            Numeric keypad 8 key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.Numpad9">
            <summary>
            Numeric keypad 9 key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.NumpadMultiply">
            <summary>
            Multiply key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.NumpadAdd">
            <summary>
            Add key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.NumpadSeparator">
            <summary>
            Separator key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.NumpadSubtract">
            <summary>
            Subtract key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.NumpadDecimal">
            <summary>
            Decimal key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.NumpadDivide">
            <summary>
            Divide key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.F1">
            <summary>
            F1 key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.F2">
            <summary>
            F2 key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.F3">
            <summary>
            F3 key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.F4">
            <summary>
            F4 key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.F5">
            <summary>
            F5 key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.F6">
            <summary>
            F6 key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.F7">
            <summary>
            F7 key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.F8">
            <summary>
            F8 key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.F9">
            <summary>
            F9 key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.F10">
            <summary>
            F10 key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.F11">
            <summary>
            F11 key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.F12">
            <summary>
            F12 key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.F13">
            <summary>
            F13 key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.F14">
            <summary>
            F14 key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.F15">
            <summary>
            F15 key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.F16">
            <summary>
            F16 key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.F17">
            <summary>
            F17 key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.F18">
            <summary>
            F18 key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.F19">
            <summary>
            F19 key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.F20">
            <summary>
            F20 key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.F21">
            <summary>
            F21 key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.F22">
            <summary>
            F22 key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.F23">
            <summary>
            F23 key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.F24">
            <summary>
            F24 key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.NumLock">
            <summary>
            NUM LOCK key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.ScrollLock">
            <summary>
            SCROLL LOCK key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.BrowserBack">
            <summary>
            Browser Back key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.BrowserForward">
            <summary>
            Browser Forward key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.BrowserRefresh">
            <summary>
            Browser Refresh key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.BrowserStop">
            <summary>
            Browser Stop key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.BrowserSearch">
            <summary>
            Browser Search key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.BrowserFavorites">
            <summary>
            Browser Favorites key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.BrowserHome">
            <summary>
            Browser Start and Home key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.VolumeMute">
            <summary>
            Volume Mute key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.VolumeDown">
            <summary>
            Volume Down key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.VolumeUp">
            <summary>
            Volume Up key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.MediaNextTrack">
            <summary>
            Next Track key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.MediaPrevTrack">
            <summary>
            Previous Track key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.MediaStop">
            <summary>
            Stop Media key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.MediaPlayPause">
            <summary>
            Play/Pause Media key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.LaunchMail">
            <summary>
            Start Mail key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.LaunchMediaSelect">
            <summary>
            Select Media key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.LaunchApp1">
            <summary>
            Start Application 1 key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.LaunchApp2">
            <summary>
            Start Application 2 key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.OemSemicolon">
            <summary>
            Used for miscellaneous characters; it can vary by keyboard. For the US standard keyboard, the ';:' key"
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.OemEquals">
            <summary>
            For any country/region, the '=' key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.OemComma">
            <summary>
            For any country/region, the ',' key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.OemMinus">
            <summary>
            For any country/region, the '-' key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.OemPeriod">
            <summary>
            For any country/region, the '.' key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.OemForwardSlash">
            <summary>
            Used for miscellaneous characters; it can vary by keyboard. For the US standard keyboard, the '/?' key"
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.OemBacktick">
            <summary>
            Used for miscellaneous characters; it can vary by keyboard.  For the US standard keyboard, the '`~' key"
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.OemOpenBrackets">
            <summary>
            Used for miscellaneous characters; it can vary by keyboard.  For the US standard keyboard, the '[{' key"
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.OemCloseBrackets">
            <summary>
            Used for miscellaneous characters; it can vary by keyboard.  For the US standard keyboard, the '\|' key"
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.OemBackSlash">
            <summary>
            Used for miscellaneous characters; it can vary by keyboard.  For the US standard keyboard, the ']}' key"
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.OemQuotes">
            <summary>
            Used for miscellaneous characters; it can vary by keyboard.  For the US standard keyboard, the
            'single-quote/double-quote' key"
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.Play">
            <summary>
            Play key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.Zoom">
            <summary>
            Zoom key
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.KeyboardInputs.MAX_PREDEFINED_INPUT_ID">
            <summary>
            Maximum input id that could ever be predefined in this class.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Input.KeyboardInputs.TryGetName(Keen.VRage.Core.Input.InputId,System.String@)">
            <summary>
            Get the name of an input defined in this class given it's id.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Input.KeyboardInputs.GetInputFromName(System.String)">
            <summary>
            Get an input id given the name of a field in this class.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Input.MouseInputs">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Input.MouseInputs.Position">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Input.MouseInputs.Left">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Input.MouseInputs.Middle">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Input.MouseInputs.Right">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Input.MouseInputs.Button4">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Input.MouseInputs.Button5">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Input.MouseInputs.VerticalWheel">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Input.MouseInputs.HorizontalWheel">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Input.MouseInputs.WheelTiltLeft">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Input.MouseInputs.WheelTiltRight">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Input.MouseInputs.MAX_PREDEFINED_INPUT_ID">
            <summary>
            Maximum input id that could ever be predefined in this class.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Input.MouseInputs.TryGetName(Keen.VRage.Core.Input.InputId,System.String@)">
            <summary>
            Get the name of an input defined in this class given it's id.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Input.MouseInputs.GetInputFromName(System.String)">
            <summary>
            Get an input id given the name of a field in this class.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Input.NonGenericInput`1">
            <summary>
            Type safe helper for non generic inputs.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.NonGenericInput`1.Id">
            <summary>
            The actual input id.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Input.NonGenericInput`1.#ctor(Keen.VRage.Core.Input.InputId)">
            <summary>
            Create a new non generic input from a preexisting Id.
            </summary>
            <param name="id">The preexisting input id.</param>
            <exception cref="T:System.ArgumentException">When the preexisting input is generic.</exception>
        </member>
        <member name="M:Keen.VRage.Core.Input.NonGenericInput`1.#ctor(System.Int32,Keen.VRage.Core.Input.InputType,System.UInt16)">
            <summary>
            Create a new non generic input.
            </summary>
            <param name="id">The unique input index for this device class.</param>
            <param name="inputType">The type of this input.</param>
            <param name="deviceClass">The device class.</param>
            <exception cref="T:System.ArgumentException">If the device class is not in the correct range (<c>value &gt;= </c><see cref="T:Keen.VRage.Core.Input.GenericDeviceClass" />.<see cref="F:Keen.VRage.Core.Input.GenericDeviceClass.MaxValue" />)</exception>
        </member>
        <member name="M:Keen.VRage.Core.Input.NonGenericInput`1.op_Implicit(Keen.VRage.Core.Input.NonGenericInput{`0}@)~Keen.VRage.Core.Input.InputId">
            <summary>
            Implicit conversion to input Id.
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:Keen.VRage.Core.Input.NullInputComponent">
            <summary>
            Empty input implementation, suitable for headless scenarios so systems that rely on input can still function.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Input.NullInputComponent.SupportedDeviceClasses">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Input.NullInputComponent.ConnectedDevices">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Input.NullInputComponent.DefaultInputMethodEditor">
            <inheritdoc />
        </member>
        <member name="E:Keen.VRage.Core.Input.NullInputComponent.DeviceConnected">
            <inheritdoc />
        </member>
        <member name="E:Keen.VRage.Core.Input.NullInputComponent.DeviceDisconnected">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Input.NullInputComponent.ProcessInput">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Input.NullInputMethodEditor">
            <summary>
            Dummy input method editor that never produces any text.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Input.NullInputMethodEditor.Name">
            <inheritdoc />
        </member>
        <member name="E:Keen.VRage.Core.Input.NullInputMethodEditor.TextEntered">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Input.PointerInput">
            <summary>
            Type safe helper for pointer inputs.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.PointerInput.Id">
            <summary>
            The actual input id.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Input.PointerInput.#ctor(Keen.VRage.Core.Input.InputId)">
            <summary>
            Create a new pointer input from a preexisting Id.
            </summary>
            <param name="id">The preexisting input id.</param>
            <exception cref="T:System.ArgumentException">When the preexisting input is not pointer.</exception>
        </member>
        <member name="M:Keen.VRage.Core.Input.PointerInput.#ctor(System.Int32,System.UInt16)">
            <summary>
            Create a new pointer input.
            </summary>
            <param name="id">The unique input index for this device class.</param>
            <param name="deviceClass">The device class.</param>
            <exception cref="T:System.ArgumentException">If the device class is not in the correct range (<c>value &gt;= </c><see cref="T:Keen.VRage.Core.Input.GenericDeviceClass" />.<see cref="F:Keen.VRage.Core.Input.GenericDeviceClass.MaxValue" />)</exception>
        </member>
        <member name="M:Keen.VRage.Core.Input.PointerInput.#ctor(System.Int32,Keen.VRage.Core.Input.GenericDeviceClass)">
            <summary>
            Create a new pointer input.
            </summary>
            <param name="id">The unique input index for this device class.</param>
            <param name="deviceClass">The generic device class.</param>
        </member>
        <member name="M:Keen.VRage.Core.Input.PointerInput.op_Implicit(Keen.VRage.Core.Input.PointerInput@)~Keen.VRage.Core.Input.InputId">
            <summary>
            Implicit conversion to input Id.
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Keen.VRage.Core.Input.PointerInput.GetPosition(Keen.VRage.Core.Input.IInputDevice,Keen.VRage.Core.Input.PointerStateKind)">
            <summary>
            Get the current value for this input.
            </summary>
            <returns>The current value for this input on <paramref name="device" /></returns>
        </member>
        <member name="M:Keen.VRage.Core.Input.PointerInput.Equals(Keen.VRage.Core.Input.PointerInput)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Input.PointerInput.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Input.PointerInput.GetHashCode">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Input.PointerStateKind">
            <summary>
            Describes how the state of a pointer input is provided.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.PointerStateKind.Relative">
            <summary>
            Value is is the difference in pixels between the current and previous value that the device reported.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Input.PointerStateKind.Absolute">
            <summary>
            Value is the current position of the pointer relative to the application's viewport
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Input.Serializers.AnalogInputSerializer">
            <summary>
            Serializer for <see cref="T:Keen.VRage.Core.Input.AnalogInput"/>
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Input.Serializers.DigitalInputSerializer">
            <summary>
            Serializer for <see cref="T:Keen.VRage.Core.Input.DigitalInput"/>
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Input.Serializers.InputIdSerializer">
            <summary>
            Serializer for <see cref="T:Keen.VRage.Core.Input.InputId"/>
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Input.Serializers.InputIdSerializer.Convert(Keen.VRage.Library.Serialization.SerializationContext,Keen.VRage.Core.Input.InputId@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Input.Serializers.InputIdSerializer.Convert(Keen.VRage.Library.Serialization.SerializationContext,System.String@,Keen.VRage.Core.Input.InputId@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Input.Serializers.PointerInputSerializer">
            <summary>
            Serializer for <see cref="T:Keen.VRage.Core.Input.PointerInput"/>
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.IVideoPlayer">
            <summary>
            Instance of interface represents one video being played. There may be multiple instances at any point.
            It is instantiated in render, see Keen.VRage.Render.Messages.MessageProxy.PlayVideo 
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.IVideoPlayer.VideoWidth">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="P:Keen.VRage.Core.IVideoPlayer.VideoHeight">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="P:Keen.VRage.Core.IVideoPlayer.Volume">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="P:Keen.VRage.Core.IVideoPlayer.CurrentState">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="P:Keen.VRage.Core.IVideoPlayer.TextureSrv">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="M:Keen.VRage.Core.IVideoPlayer.Init(System.String)">
            <summary>
            </summary>
            <param name="filename"></param>
            <autogeneratedoc />
        </member>
        <member name="M:Keen.VRage.Core.IVideoPlayer.Dispose">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="M:Keen.VRage.Core.IVideoPlayer.Play">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="M:Keen.VRage.Core.IVideoPlayer.Stop">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="M:Keen.VRage.Core.IVideoPlayer.Update(System.Object)">
            <summary>
            </summary>
            <param name="context"></param>
            <autogeneratedoc />
        </member>
        <member name="T:Keen.VRage.Core.IVideoPlayer.VideoState">
            <summary>
            Describes the state of a video player
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.IVideoPlayer.VideoState.Playing">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.IVideoPlayer.VideoState.Paused">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.IVideoPlayer.VideoState.Stopped">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="T:Keen.VRage.Core.VRagePlatformCore">
            <summary>
            A struct that holds the references of the core systems that platform will to have initiated early.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.VRagePlatformCore.AppDataPath">
            <summary>
            The path to user app data.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.VRagePlatformCore.Http">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="P:Keen.VRage.Core.VRagePlatformCore.CrashReporter">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="T:Keen.VRage.Core.IPlatformFactory">
            <summary>
            Interface implemented for each supported platform in separate assembly (i.e. VRage.Platform.Windows)
            It holds methods for creating the core systems and the complete platform.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.IPlatformFactory.CreateCore(System.String,System.String[],System.String,System.String)">
            <summary>
            Creates the core platform specific systems needed at startup.
            </summary>
            <param name="customUserDataPath"> Path to the system's user data folder. </param>
            <param name="args"> Args passed to the current program. </param>
            <param name="splashScreen">Path to image for the splash screen</param>
            <param name="splashScreenIcon">Path to image for the splash screen window icon</param>
            <returns></returns>
        </member>
        <member name="M:Keen.VRage.Core.IPlatformFactory.CreateNativeCrashReporter">
            <summary>
            Creates the native crash reporter for the current platform.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.PlatformObjectBuilder">
            <summary>
            Common OB for all platforms
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Worlds.WorldSaveId">
            <summary>
            Identifier of a world save
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Worlds.WorldSaveId.SaveName">
            <summary>
            Name of the world save (folder with the saved world) that is available with this project's data.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Worlds.WorldSaveId.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSaveId.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSaveId.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Worlds.WorldSaveId@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSaveId.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSaveId.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Worlds.WorldSaveId@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSaveId.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSaveId.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Worlds.WorldSaveId@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSaveId.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSaveId.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSaveId.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSaveId.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSaveId.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Worlds.WorldSaveId@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSaveId.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSaveId.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Worlds.WorldSaveId@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSaveId.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSaveId.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Worlds.WorldSaveId@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSaveId.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSaveId.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Worlds.WorldSaveId@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSaveId.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Worlds.WorldSaveId.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Worlds.WorldSaveId.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSaveId.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Worlds.WorldSaveId.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Worlds#WorldSaveId}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSaveId.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Worlds.WorldSaveId.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Worlds.WorldSaveId.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Worlds.WorldSaveId.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Worlds.WorldSaveId.TypeInfoHolder.SaveNameAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Worlds.WorldSaveId.TypeInfoHolder.SaveNameAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Worlds.WorldSaveId.TypeInfoHolder.SaveNameAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Worlds.WorldSaveId.TypeInfoHolder.SaveNameAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Worlds.WorldSaveId.TypeInfoHolder.SaveNameAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Worlds.WorldSaveId.TypeInfoHolder.SaveNameAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Worlds.WorldSaveId.TypeInfoHolder.SaveNameAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Worlds.WorldSaveId.TypeInfoHolder.SaveNameAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Worlds.WorldSaveId.TypeInfoHolder.SaveNameAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSaveId.TypeInfoHolder.SaveNameAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSaveId.TypeInfoHolder.SaveNameAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSaveId.TypeInfoHolder.SaveNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSaveId.TypeInfoHolder.SaveNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSaveId.TypeInfoHolder.SaveNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSaveId.TypeInfoHolder.SaveNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Object,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSaveId.TypeInfoHolder.SaveNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSaveId.TypeInfoHolder.SaveNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSaveId.TypeInfoHolder.SaveNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Byte@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSaveId.TypeInfoHolder.SaveNameAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSaveId.TypeInfoHolder.SaveNameAccessor.Set(Keen.VRage.Core.Worlds.WorldSaveId@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSaveId.TypeInfoHolder.SaveNameAccessor.Get(Keen.VRage.Core.Worlds.WorldSaveId@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Worlds.DefaultWorldsComponent">
            <summary>
            Component responsible for making save games accessible and modifiable by the game.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Worlds.DefaultWorldsComponent.TryFindDefaultWorldContainerId(System.String)">
            <summary>
            Try find save game container given only the save name.
            If multiple worlds from different project use same name, the world from top-most project is used.
            </summary>
            <param name="name">Container ID of the default world.</param>
        </member>
        <member name="M:Keen.VRage.Core.Worlds.DefaultWorldsComponent.TryFindDefaultWorldContainerId(Keen.VRage.Core.Worlds.WorldSaveId)">
            <summary>
            Try finds save game given the save ID.
            </summary>
            <param name="saveId">World ID of the default world.</param>
            <returns>Returns null if the world ID does not match any worlds that were loaded from available projects.</returns>
        </member>
        <member name="T:Keen.VRage.Core.Worlds.SaveHelper">
            <summary>
            Helper class for handling things related to saves and loading.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Worlds.SaveHelper.IterateAllSavesAsync">
            <summary>
            Iterate all saves files
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Worlds.SaveHelper.GetOrCreateSaveAsync(Keen.VRage.Library.Filesystem.StorageManagers.ContainerId)">
            <summary>
            Get specific save or create one
            </summary>
            <param name="saveId">Identifier of the save</param>
        </member>
        <member name="M:Keen.VRage.Core.Worlds.SaveHelper.TryGetSaveAsync(Keen.VRage.Library.Filesystem.StorageManagers.ContainerId)">
            <summary>
            Try get specific save
            </summary>
            <param name="saveId">Identifier of the save</param>
        </member>
        <member name="M:Keen.VRage.Core.Worlds.SaveHelper.HasPlayerMadeSave">
            <summary>
            Test whether there are any player-made saves
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Worlds.SaveHelper.GetSequentialContainerIdString``1(System.String,System.Object)">
            <summary>
            Get a container identifier that does not collide with existing saves by appending numbers
            </summary>
            <returns></returns>
        </member>
        <member name="M:Keen.VRage.Core.Worlds.SaveHelper.GetSuffixedName(System.String,System.String,System.Object)">
            <summary>
            Get a save name that does not collide with existing saves by appending suffix
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Worlds.SaveHelper.StripPrefixes(System.String)">
            <summary>
            Strip prefixes from the name.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Keen.VRage.Core.Worlds.SaveHelper.PrefixRegex">
            <remarks>
            Pattern:<br/>
            <code>^\\$.*:</code><br/>
            Explanation:<br/>
            <code>
            ○ Match if at the beginning of the string.<br/>
            ○ Match '$'.<br/>
            ○ Match a character other than '\n' greedily any number of times.<br/>
            ○ Match ':'.<br/>
            </code>
            </remarks>
        </member>
        <member name="T:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData">
            <summary>
            Meta data for save game container.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Worlds#WorldSessionSaveGameMetaData}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.TypeInfoHolder.DisplayNameAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.TypeInfoHolder.DisplayNameAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.TypeInfoHolder.DisplayNameAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.TypeInfoHolder.DisplayNameAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.TypeInfoHolder.DisplayNameAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.TypeInfoHolder.DisplayNameAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.TypeInfoHolder.DisplayNameAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.TypeInfoHolder.DisplayNameAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.TypeInfoHolder.DisplayNameAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.TypeInfoHolder.DisplayNameAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.TypeInfoHolder.DisplayNameAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.TypeInfoHolder.DisplayNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.TypeInfoHolder.DisplayNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.TypeInfoHolder.DisplayNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.TypeInfoHolder.DisplayNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Object,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.TypeInfoHolder.DisplayNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.TypeInfoHolder.DisplayNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.TypeInfoHolder.DisplayNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Byte@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.TypeInfoHolder.DisplayNameAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.TypeInfoHolder.DisplayNameAccessor.Set(Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.TypeInfoHolder.DisplayNameAccessor.Get(Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.TypeInfoHolder.GameVersionAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.TypeInfoHolder.GameVersionAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.TypeInfoHolder.GameVersionAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.TypeInfoHolder.GameVersionAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.TypeInfoHolder.GameVersionAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.TypeInfoHolder.GameVersionAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.TypeInfoHolder.GameVersionAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.TypeInfoHolder.GameVersionAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.TypeInfoHolder.GameVersionAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.TypeInfoHolder.GameVersionAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.TypeInfoHolder.GameVersionAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.TypeInfoHolder.GameVersionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.TypeInfoHolder.GameVersionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.TypeInfoHolder.GameVersionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.TypeInfoHolder.GameVersionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Set(System.Object,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.TypeInfoHolder.GameVersionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.TypeInfoHolder.GameVersionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.TypeInfoHolder.GameVersionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Set(System.Byte@,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.TypeInfoHolder.GameVersionAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.TypeInfoHolder.GameVersionAccessor.Set(Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData@,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.TypeInfoHolder.GameVersionAccessor.Get(Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.TypeInfoHolder.GameBuildNumberAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.TypeInfoHolder.GameBuildNumberAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.TypeInfoHolder.GameBuildNumberAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.TypeInfoHolder.GameBuildNumberAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.TypeInfoHolder.GameBuildNumberAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.TypeInfoHolder.GameBuildNumberAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.TypeInfoHolder.GameBuildNumberAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.TypeInfoHolder.GameBuildNumberAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.TypeInfoHolder.GameBuildNumberAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.TypeInfoHolder.GameBuildNumberAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.TypeInfoHolder.GameBuildNumberAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.TypeInfoHolder.GameBuildNumberAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.TypeInfoHolder.GameBuildNumberAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.TypeInfoHolder.GameBuildNumberAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.TypeInfoHolder.GameBuildNumberAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Set(System.Object,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.TypeInfoHolder.GameBuildNumberAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.TypeInfoHolder.GameBuildNumberAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.TypeInfoHolder.GameBuildNumberAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Set(System.Byte@,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.TypeInfoHolder.GameBuildNumberAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.TypeInfoHolder.GameBuildNumberAccessor.Set(Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData@,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.TypeInfoHolder.GameBuildNumberAccessor.Get(Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.TypeInfoHolder.SaveGameCreationTimeInTicksAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.TypeInfoHolder.SaveGameCreationTimeInTicksAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.TypeInfoHolder.SaveGameCreationTimeInTicksAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.TypeInfoHolder.SaveGameCreationTimeInTicksAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.TypeInfoHolder.SaveGameCreationTimeInTicksAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.TypeInfoHolder.SaveGameCreationTimeInTicksAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.TypeInfoHolder.SaveGameCreationTimeInTicksAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.TypeInfoHolder.SaveGameCreationTimeInTicksAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.TypeInfoHolder.SaveGameCreationTimeInTicksAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.TypeInfoHolder.SaveGameCreationTimeInTicksAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.TypeInfoHolder.SaveGameCreationTimeInTicksAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.TypeInfoHolder.SaveGameCreationTimeInTicksAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.TypeInfoHolder.SaveGameCreationTimeInTicksAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.TypeInfoHolder.SaveGameCreationTimeInTicksAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.TypeInfoHolder.SaveGameCreationTimeInTicksAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int64}#Set(System.Object,System.Int64@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.TypeInfoHolder.SaveGameCreationTimeInTicksAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int64}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.TypeInfoHolder.SaveGameCreationTimeInTicksAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int64}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.TypeInfoHolder.SaveGameCreationTimeInTicksAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int64}#Set(System.Byte@,System.Int64@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.TypeInfoHolder.SaveGameCreationTimeInTicksAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.TypeInfoHolder.SaveGameCreationTimeInTicksAccessor.Set(Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData@,System.Int64@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData.TypeInfoHolder.SaveGameCreationTimeInTicksAccessor.Get(Keen.VRage.Core.Worlds.WorldSessionSaveGameMetaData@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Model.ModelDummy">
            <summary>
            Dummies (aka anchors or pivots) define special points or volumes in relation to the model. For example: Cockpit camera position, terminal button.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Model.ModelDummy.Name">
            <summary>
            Name of the dummy.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Model.ModelDummy.Transform">
            <summary>
            Position, rotation of the dummy.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Model.ModelDummy.Scale">
            <summary>
            Scale of the dummy.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Model.ModelDummy.Type">
            <summary>
            Either denotes the IUseAction Type for the interaction system which will be used by the interaction system if not null. Or it can specify
            whether the dummy should be used as a conveyor port based on mapping in ConveyorSystemConfiguration.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Model.ModelDummy.SupportingFracture">
            <summary>
            Specifies which fracture of the block supports the dummy. If fracture is broken, the dummy is disabled.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Model.ModelDummy.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelDummy.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelDummy.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Model.ModelDummy@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelDummy.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelDummy.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Model.ModelDummy@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelDummy.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelDummy.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Model.ModelDummy@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelDummy.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelDummy.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelDummy.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelDummy.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelDummy.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Model.ModelDummy@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelDummy.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelDummy.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Model.ModelDummy@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelDummy.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelDummy.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Model.ModelDummy@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelDummy.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelDummy.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Model.ModelDummy@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelDummy.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Model.ModelDummy.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.ModelDummy.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelDummy.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.ModelDummy.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Model#ModelDummy}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelDummy.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.NameAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.NameAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.NameAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.NameAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.NameAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.NameAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.NameAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.NameAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.NameAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.NameAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.NameAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.NameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.NameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.NameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.NameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Object,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.NameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.NameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.NameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Byte@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.NameAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.NameAccessor.Set(Keen.VRage.Core.Model.ModelDummy@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.NameAccessor.Get(Keen.VRage.Core.Model.ModelDummy@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.TransformAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.TransformAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.TransformAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.TransformAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.TransformAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.TransformAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.TransformAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.TransformAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.TransformAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.TransformAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.TransformAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.TransformAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.TransformAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.TransformAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.TransformAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#RelativeTransformWithEulerHint}#Set(System.Object,Keen.VRage.Core.RelativeTransformWithEulerHint@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.TransformAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#RelativeTransformWithEulerHint}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.TransformAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#RelativeTransformWithEulerHint}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.TransformAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#RelativeTransformWithEulerHint}#Set(System.Byte@,Keen.VRage.Core.RelativeTransformWithEulerHint@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.TransformAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.TransformAccessor.Set(Keen.VRage.Core.Model.ModelDummy@,Keen.VRage.Core.RelativeTransformWithEulerHint@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.TransformAccessor.Get(Keen.VRage.Core.Model.ModelDummy@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.ScaleAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.ScaleAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.ScaleAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.ScaleAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.ScaleAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.ScaleAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.ScaleAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.ScaleAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.ScaleAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.ScaleAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.ScaleAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.ScaleAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.ScaleAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.ScaleAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.ScaleAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3}#Set(System.Object,Keen.VRage.Library.Mathematics.Vector3@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.ScaleAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.ScaleAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.ScaleAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3}#Set(System.Byte@,Keen.VRage.Library.Mathematics.Vector3@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.ScaleAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.ScaleAccessor.Set(Keen.VRage.Core.Model.ModelDummy@,Keen.VRage.Library.Mathematics.Vector3@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.ScaleAccessor.Get(Keen.VRage.Core.Model.ModelDummy@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.TypeAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.TypeAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.TypeAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.TypeAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.TypeAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.TypeAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.TypeAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.TypeAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.TypeAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.TypeAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.TypeAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.TypeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.TypeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.TypeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.TypeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Model#DummyTypeDefinition}#Set(System.Object,Keen.VRage.Core.Model.DummyTypeDefinition@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.TypeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Model#DummyTypeDefinition}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.TypeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Model#DummyTypeDefinition}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.TypeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Model#DummyTypeDefinition}#Set(System.Byte@,Keen.VRage.Core.Model.DummyTypeDefinition@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.TypeAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.TypeAccessor.Set(Keen.VRage.Core.Model.ModelDummy@,Keen.VRage.Core.Model.DummyTypeDefinition@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.TypeAccessor.Get(Keen.VRage.Core.Model.ModelDummy@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.SupportingFractureAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.SupportingFractureAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.SupportingFractureAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.SupportingFractureAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.SupportingFractureAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.SupportingFractureAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.SupportingFractureAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.SupportingFractureAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.SupportingFractureAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.SupportingFractureAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.SupportingFractureAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.SupportingFractureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.SupportingFractureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.SupportingFractureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.SupportingFractureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Utils#StringId}#Set(System.Object,Keen.VRage.Library.Utils.StringId@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.SupportingFractureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Utils#StringId}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.SupportingFractureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Utils#StringId}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.SupportingFractureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Utils#StringId}#Set(System.Byte@,Keen.VRage.Library.Utils.StringId@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.SupportingFractureAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.SupportingFractureAccessor.Set(Keen.VRage.Core.Model.ModelDummy@,Keen.VRage.Library.Utils.StringId@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelDummy.TypeInfoHolder.SupportingFractureAccessor.Get(Keen.VRage.Core.Model.ModelDummy@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Model.AnimationAsset">
            <summary>
            Asset for animations.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Model.AnimationClip">
            <summary>
            An animation clip is a set of keyframes with associated bones.
            VRAGE TODO: Any link to actual animation collection? Or at least to rest pose? Please?
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Model.AnimationClip.Name">
            <summary>
            Name of the animation clip
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Model.AnimationClip.Duration">
            <summary>
            Duration of the animation clip
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Model.AnimationClip.ReferencePose">
            <summary>
            How the reference pose is determined for the animation
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Model.AnimationClip.Bones">
            <summary>
            The bones for this animation clip with their keyframes
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Model.AnimationClip._bones">
            <summary>
            The bones for this animation
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Model.AnimationClip.BoneState">
            <summary>
            BoneState is a rotation and translation of the bone.
            It would be easy to extend this to include scaling as well.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Model.AnimationClip.BoneState.Rotation">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Model.AnimationClip.BoneState.Translation">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="T:Keen.VRage.Core.Model.AnimationClip.Keyframe">
            <summary>
            An Keyframe extends rotation and translation of the bone by specifying time of the event.
            </summary>
            Beware, this class is used also in MWM builder and changing it to struct may cause problems during MWM generation.
        </member>
        <member name="F:Keen.VRage.Core.Model.AnimationClip.Keyframe.Time">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Model.AnimationClip.Keyframe.InvTimeDiff">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="T:Keen.VRage.Core.Model.AnimationClip.Bone">
            <summary>
            Keyframes are grouped per bone for an animation clip
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Model.AnimationClip.Bone.Name">
            <summary>
            The bone name for these keyframes
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Model.AnimationClip.Bone.Keyframes">
            <summary>
            The keyframes for this bone
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Model.AnimationClip.Bone.ToString">
            <inheritdoc />
            <autogeneratedoc />
        </member>
        <member name="T:Keen.VRage.Core.Model.AnimationClip.ReferencePoseType">
            <summary>
            Describes type of reference pose that should be used with this animation clip
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Model.AnimationClip.ReferencePoseType.FirstKeyframe">
            <summary>
            Pose should be taken from the first keyframe of the animation clip.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Model.AnimationClip.ReferencePoseType.Explicit">
            <summary>
            The reference pose is stored in <see cref="P:Keen.VRage.Core.Model.AnimationClip.Bone.ReferenceTransform"/>
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Model.AnimationClip.ReferencePoseType.ModelSkeleton">
            <summary>
            Use pose from the model skeleton.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Model.AnimationEvent">
            <summary>
            Represents a single event in the animation clip.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Model.AnimationEvent.Time">
            <summary>
            Time in animation clip at which the event is triggered.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Model.AnimationEvent.EventName">
            <summary>
            The name of the event that is triggered.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Model.AnimationEvent.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AnimationEvent.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AnimationEvent.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Model.AnimationEvent@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AnimationEvent.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AnimationEvent.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Model.AnimationEvent@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AnimationEvent.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AnimationEvent.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Model.AnimationEvent@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AnimationEvent.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AnimationEvent.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AnimationEvent.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AnimationEvent.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AnimationEvent.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Model.AnimationEvent@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AnimationEvent.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AnimationEvent.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Model.AnimationEvent@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AnimationEvent.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AnimationEvent.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AnimationEvent.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Model.AnimationEvent@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AnimationEvent.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Model.AnimationEvent.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AnimationEvent.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AnimationEvent.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AnimationEvent.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Model#AnimationEvent}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AnimationEvent.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Model.AnimationEvent.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Model.AnimationEvent.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Model.AnimationEvent.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Model.AnimationEvent.TypeInfoHolder.TimeAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AnimationEvent.TypeInfoHolder.TimeAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AnimationEvent.TypeInfoHolder.TimeAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AnimationEvent.TypeInfoHolder.TimeAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AnimationEvent.TypeInfoHolder.TimeAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AnimationEvent.TypeInfoHolder.TimeAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AnimationEvent.TypeInfoHolder.TimeAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AnimationEvent.TypeInfoHolder.TimeAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AnimationEvent.TypeInfoHolder.TimeAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AnimationEvent.TypeInfoHolder.TimeAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AnimationEvent.TypeInfoHolder.TimeAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AnimationEvent.TypeInfoHolder.TimeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AnimationEvent.TypeInfoHolder.TimeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AnimationEvent.TypeInfoHolder.TimeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AnimationEvent.TypeInfoHolder.TimeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Object,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AnimationEvent.TypeInfoHolder.TimeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AnimationEvent.TypeInfoHolder.TimeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AnimationEvent.TypeInfoHolder.TimeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Byte@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AnimationEvent.TypeInfoHolder.TimeAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AnimationEvent.TypeInfoHolder.TimeAccessor.Set(Keen.VRage.Core.Model.AnimationEvent@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AnimationEvent.TypeInfoHolder.TimeAccessor.Get(Keen.VRage.Core.Model.AnimationEvent@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AnimationEvent.TypeInfoHolder.EventNameAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AnimationEvent.TypeInfoHolder.EventNameAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AnimationEvent.TypeInfoHolder.EventNameAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AnimationEvent.TypeInfoHolder.EventNameAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AnimationEvent.TypeInfoHolder.EventNameAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AnimationEvent.TypeInfoHolder.EventNameAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AnimationEvent.TypeInfoHolder.EventNameAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AnimationEvent.TypeInfoHolder.EventNameAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AnimationEvent.TypeInfoHolder.EventNameAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AnimationEvent.TypeInfoHolder.EventNameAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AnimationEvent.TypeInfoHolder.EventNameAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AnimationEvent.TypeInfoHolder.EventNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AnimationEvent.TypeInfoHolder.EventNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AnimationEvent.TypeInfoHolder.EventNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AnimationEvent.TypeInfoHolder.EventNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Utils#StringId}#Set(System.Object,Keen.VRage.Library.Utils.StringId@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AnimationEvent.TypeInfoHolder.EventNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Utils#StringId}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AnimationEvent.TypeInfoHolder.EventNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Utils#StringId}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AnimationEvent.TypeInfoHolder.EventNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Utils#StringId}#Set(System.Byte@,Keen.VRage.Library.Utils.StringId@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AnimationEvent.TypeInfoHolder.EventNameAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AnimationEvent.TypeInfoHolder.EventNameAccessor.Set(Keen.VRage.Core.Model.AnimationEvent@,Keen.VRage.Library.Utils.StringId@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AnimationEvent.TypeInfoHolder.EventNameAccessor.Get(Keen.VRage.Core.Model.AnimationEvent@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Model.AssetModelMetadata">
            <summary>
            General data about the model and the data about the last LOD. If the amount of vertices is bigger than threshold geometry data wont be cached
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Model.AssetModelMetadata.Bones">
            <summary>
            List of bones in skeleton. Bones are ordered both topologically (parent bones precede children)
            and LOD-aware (when a bone is not present in a LOD, none of subsequent bones are present either;
            allowing to define "cutoff" point after which the LOD skeleton bones are ignored).
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Model.AssetModelMetadata.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Model.AssetModelMetadata@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Model.AssetModelMetadata@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Model.AssetModelMetadata@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Model.AssetModelMetadata@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Model.AssetModelMetadata@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Model.AssetModelMetadata@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Model.AssetModelMetadata@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Model.AssetModelMetadata.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AssetModelMetadata.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AssetModelMetadata.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Model#AssetModelMetadata}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.BonesAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.BonesAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.BonesAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.BonesAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.BonesAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.BonesAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.BonesAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.BonesAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.BonesAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.BonesAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.BonesAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.BonesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.BonesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.BonesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.BonesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Model#ModelBone[]}#Set(System.Object,Keen.VRage.Core.Model.ModelBone[]@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.BonesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Model#ModelBone[]}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.BonesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Model#ModelBone[]}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.BonesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Model#ModelBone[]}#Set(System.Byte@,Keen.VRage.Core.Model.ModelBone[]@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.BonesAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.BonesAccessor.Set(Keen.VRage.Core.Model.AssetModelMetadata@,Keen.VRage.Core.Model.ModelBone[]@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.BonesAccessor.Get(Keen.VRage.Core.Model.AssetModelMetadata@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.LODDescriptorsAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.LODDescriptorsAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.LODDescriptorsAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.LODDescriptorsAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.LODDescriptorsAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.LODDescriptorsAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.LODDescriptorsAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.LODDescriptorsAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.LODDescriptorsAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.LODDescriptorsAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.LODDescriptorsAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.LODDescriptorsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.LODDescriptorsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.LODDescriptorsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.LODDescriptorsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Model#LODDescriptor[]}#Set(System.Object,Keen.VRage.Core.Model.LODDescriptor[]@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.LODDescriptorsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Model#LODDescriptor[]}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.LODDescriptorsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Model#LODDescriptor[]}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.LODDescriptorsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Model#LODDescriptor[]}#Set(System.Byte@,Keen.VRage.Core.Model.LODDescriptor[]@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.LODDescriptorsAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.LODDescriptorsAccessor.Set(Keen.VRage.Core.Model.AssetModelMetadata@,Keen.VRage.Core.Model.LODDescriptor[]@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.LODDescriptorsAccessor.Get(Keen.VRage.Core.Model.AssetModelMetadata@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.IsSkinnedAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.IsSkinnedAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.IsSkinnedAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.IsSkinnedAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.IsSkinnedAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.IsSkinnedAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.IsSkinnedAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.IsSkinnedAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.IsSkinnedAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.IsSkinnedAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.IsSkinnedAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.IsSkinnedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.IsSkinnedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.IsSkinnedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.IsSkinnedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.IsSkinnedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.IsSkinnedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.IsSkinnedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.IsSkinnedAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.IsSkinnedAccessor.Set(Keen.VRage.Core.Model.AssetModelMetadata@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.IsSkinnedAccessor.Get(Keen.VRage.Core.Model.AssetModelMetadata@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.BoundingBoxAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.BoundingBoxAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.BoundingBoxAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.BoundingBoxAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.BoundingBoxAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.BoundingBoxAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.BoundingBoxAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.BoundingBoxAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.BoundingBoxAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.BoundingBoxAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.BoundingBoxAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.BoundingBoxAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.BoundingBoxAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.BoundingBoxAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.BoundingBoxAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#BoundingBox}#Set(System.Object,Keen.VRage.Library.Mathematics.BoundingBox@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.BoundingBoxAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#BoundingBox}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.BoundingBoxAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#BoundingBox}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.BoundingBoxAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#BoundingBox}#Set(System.Byte@,Keen.VRage.Library.Mathematics.BoundingBox@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.BoundingBoxAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.BoundingBoxAccessor.Set(Keen.VRage.Core.Model.AssetModelMetadata@,Keen.VRage.Library.Mathematics.BoundingBox@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.BoundingBoxAccessor.Get(Keen.VRage.Core.Model.AssetModelMetadata@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.BoundingSphereAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.BoundingSphereAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.BoundingSphereAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.BoundingSphereAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.BoundingSphereAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.BoundingSphereAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.BoundingSphereAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.BoundingSphereAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.BoundingSphereAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.BoundingSphereAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.BoundingSphereAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.BoundingSphereAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.BoundingSphereAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.BoundingSphereAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.BoundingSphereAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#BoundingSphere}#Set(System.Object,Keen.VRage.Library.Mathematics.BoundingSphere@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.BoundingSphereAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#BoundingSphere}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.BoundingSphereAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#BoundingSphere}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.BoundingSphereAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#BoundingSphere}#Set(System.Byte@,Keen.VRage.Library.Mathematics.BoundingSphere@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.BoundingSphereAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.BoundingSphereAccessor.Set(Keen.VRage.Core.Model.AssetModelMetadata@,Keen.VRage.Library.Mathematics.BoundingSphere@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.BoundingSphereAccessor.Get(Keen.VRage.Core.Model.AssetModelMetadata@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.MaterialAssignmentAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.MaterialAssignmentAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.MaterialAssignmentAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.MaterialAssignmentAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.MaterialAssignmentAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.MaterialAssignmentAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.MaterialAssignmentAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.MaterialAssignmentAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.MaterialAssignmentAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.MaterialAssignmentAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.MaterialAssignmentAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.MaterialAssignmentAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.MaterialAssignmentAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.MaterialAssignmentAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.MaterialAssignmentAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#Dictionary{Keen#VRage#Library#Utils#StringId,System#Guid}}#Set(System.Object,System.Collections.Generic.Dictionary{Keen.VRage.Library.Utils.StringId,System.Guid}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.MaterialAssignmentAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#Dictionary{Keen#VRage#Library#Utils#StringId,System#Guid}}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.MaterialAssignmentAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#Dictionary{Keen#VRage#Library#Utils#StringId,System#Guid}}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.MaterialAssignmentAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#Dictionary{Keen#VRage#Library#Utils#StringId,System#Guid}}#Set(System.Byte@,System.Collections.Generic.Dictionary{Keen.VRage.Library.Utils.StringId,System.Guid}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.MaterialAssignmentAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.MaterialAssignmentAccessor.Set(Keen.VRage.Core.Model.AssetModelMetadata@,System.Collections.Generic.Dictionary{Keen.VRage.Library.Utils.StringId,System.Guid}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.MaterialAssignmentAccessor.Get(Keen.VRage.Core.Model.AssetModelMetadata@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.MaterialStateOverridesAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.MaterialStateOverridesAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.MaterialStateOverridesAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.MaterialStateOverridesAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.MaterialStateOverridesAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.MaterialStateOverridesAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.MaterialStateOverridesAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.MaterialStateOverridesAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.MaterialStateOverridesAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.MaterialStateOverridesAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.MaterialStateOverridesAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.MaterialStateOverridesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.MaterialStateOverridesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.MaterialStateOverridesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.MaterialStateOverridesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#Dictionary{System#Guid,System#Guid}}#Set(System.Object,System.Collections.Generic.Dictionary{System.Guid,System.Guid}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.MaterialStateOverridesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#Dictionary{System#Guid,System#Guid}}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.MaterialStateOverridesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#Dictionary{System#Guid,System#Guid}}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.MaterialStateOverridesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#Dictionary{System#Guid,System#Guid}}#Set(System.Byte@,System.Collections.Generic.Dictionary{System.Guid,System.Guid}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.MaterialStateOverridesAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.MaterialStateOverridesAccessor.Set(Keen.VRage.Core.Model.AssetModelMetadata@,System.Collections.Generic.Dictionary{System.Guid,System.Guid}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.MaterialStateOverridesAccessor.Get(Keen.VRage.Core.Model.AssetModelMetadata@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.GeometryDataAssetAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.GeometryDataAssetAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.GeometryDataAssetAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.GeometryDataAssetAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.GeometryDataAssetAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.GeometryDataAssetAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.GeometryDataAssetAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.GeometryDataAssetAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.GeometryDataAssetAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.GeometryDataAssetAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.GeometryDataAssetAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.GeometryDataAssetAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.GeometryDataAssetAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.GeometryDataAssetAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.GeometryDataAssetAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Utils#ResourceHandle{Keen#VRage#Core#Model#MeshAsset}?}#Set(System.Object,System.Nullable{Keen.VRage.Library.Utils.ResourceHandle{Keen.VRage.Core.Model.MeshAsset}}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.GeometryDataAssetAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Utils#ResourceHandle{Keen#VRage#Core#Model#MeshAsset}?}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.GeometryDataAssetAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Utils#ResourceHandle{Keen#VRage#Core#Model#MeshAsset}?}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.GeometryDataAssetAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Utils#ResourceHandle{Keen#VRage#Core#Model#MeshAsset}?}#Set(System.Byte@,System.Nullable{Keen.VRage.Library.Utils.ResourceHandle{Keen.VRage.Core.Model.MeshAsset}}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.GeometryDataAssetAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.GeometryDataAssetAccessor.Set(Keen.VRage.Core.Model.AssetModelMetadata@,System.Nullable{Keen.VRage.Library.Utils.ResourceHandle{Keen.VRage.Core.Model.MeshAsset}}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.AssetModelMetadata.TypeInfoHolder.GeometryDataAssetAccessor.Get(Keen.VRage.Core.Model.AssetModelMetadata@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Model.AssetModelMetadataExtractor">
            <summary>
            Extracts <see cref="T:Keen.VRage.Core.Model.AssetModelMetadata"/> from a <see cref="F:Keen.VRage.Core.Utils.ContentFileExtensions.MODEL"/> asset.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Model.MWMAssetType">
            <summary>
            MWM asset type
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Model.MWAAssetType">
            <summary>
            MWA asset type, used for animation files
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Model.FractureReferenceSuggesterAttribute">
            <summary>
            Suggests fractures 
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Model.ImporterConstants">
            <summary>
            Tag constants for the model format.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Model.ImporterConstants.TAG_DEBUG">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Model.ImporterConstants.TAG_VERTICES">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Model.ImporterConstants.TAG_NORMALS">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Model.ImporterConstants.TAG_INDICES">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Model.ImporterConstants.TAG_TEXCOORDS0">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Model.ImporterConstants.TAG_TANGENTS">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Model.ImporterConstants.TAG_TEXCOORDS1">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Model.ImporterConstants.TAG_USE_CHANNEL_TEXTURES">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Model.ImporterConstants.TAG_BOUNDING_BOX">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Model.ImporterConstants.TAG_BOUNDING_SPHERE">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Model.ImporterConstants.TAG_RESCALE_FACTOR">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Model.ImporterConstants.TAG_SWAP_WINDING_ORDER">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Model.ImporterConstants.TAG_MESH_PARTS">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Model.ImporterConstants.TAG_MESH_SECTIONS">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Model.ImporterConstants.TAG_MODEL_BVH">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Model.ImporterConstants.TAG_MODEL_INFO">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Model.ImporterConstants.TAG_BLENDINDICES">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Model.ImporterConstants.TAG_BLENDWEIGHTS">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Model.ImporterConstants.TAG_ANIMATIONS">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Model.ImporterConstants.TAG_BONES">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Model.ImporterConstants.TAG_BONE_MAPPING">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Model.ImporterConstants.TAG_HAVOK_COLLISION_GEOMETRY">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Model.ImporterConstants.TAG_HAVOK_ADDITIONAL_OCCUPANCY_GEOMETRY">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Model.ImporterConstants.TAG_HAVOK_ADDITIONAL_MOUNTPOINTS_GEOMETRY">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Model.ImporterConstants.TAG_PATTERN_SCALE">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Model.ImporterConstants.TAG_LODS">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Model.ImporterConstants.TAG_HAVOK_DESTRUCTION_GEOMETRY">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Model.ImporterConstants.TAG_HAVOK_DESTRUCTION">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Model.ImporterConstants.TAG_FBXHASHSTRING">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Model.ImporterConstants.TAG_HKTHASHSTRING">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Model.ImporterConstants.TAG_XMLHASHSTRING">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Model.ImporterConstants.TAG_MODEL_FRACTURES">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Model.ImporterConstants.TAG_GEOMETRY_DATA_ASSET">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Model.ImporterConstants.TAG_IS_SKINNED">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Model.ImporterConstants.TAG_MATERIAL_ASSIGNMENT">
            <summary>
            Tag denoting start of material - mesh pairing
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Model.ImporterConstants.TAG_MATERIAL_STATE_OVERRIDE">
            <summary>
            Tag denoting start of state overrides
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Model.ImporterConstants.TAG_HAVOK_PRECISE_COLLISION_GEOMETRY">
            <summary>
            The precise mesh collider of this model based off LOD0
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Model.ImporterConstants.TAG_HAVOK_PRECISE_COLLISION_GEOMETRY_MATERIALS_MAP">
            <summary>
            The materials map associated to precise mesh collider above, used to look up material ID from raycast hits
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Model.LODDescriptor">
            <summary>
            Lod is a mesh. Model consists of one or more lods, which are rendered usually based on the distance from camera.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Model.LODDescriptor.Distance">
            <summary>
            In meters
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Model.LODDescriptor.ModelHandle">
            <summary>
            Resource handle for the mesh
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Model.LODDescriptor.RenderQuality">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Model.LODDescriptor.RenderQualityList">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Model.LODDescriptor.BonesCount">
            <summary>
            Number of bones used in that LOD in collection of all model bones.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Model.LODDescriptor.Write(System.IO.BinaryWriter)">
            <summary>
            </summary>
            <param name="writer"></param>
            <returns></returns>
            <autogeneratedoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.LODDescriptor.Read(System.IO.BinaryReader)">
            <summary>
            </summary>
            <param name="reader"></param>
            <returns></returns>
            <autogeneratedoc />
        </member>
        <member name="T:Keen.VRage.Core.Model.LODDescriptor.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.LODDescriptor.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.LODDescriptor.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Model.LODDescriptor@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.LODDescriptor.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.LODDescriptor.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Model.LODDescriptor@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.LODDescriptor.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.LODDescriptor.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Model.LODDescriptor@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.LODDescriptor.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.LODDescriptor.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.LODDescriptor.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.LODDescriptor.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.LODDescriptor.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Model.LODDescriptor@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.LODDescriptor.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.LODDescriptor.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Model.LODDescriptor@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.LODDescriptor.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.LODDescriptor.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Model.LODDescriptor@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.LODDescriptor.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.LODDescriptor.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Model.LODDescriptor@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.LODDescriptor.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Model.LODDescriptor.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.LODDescriptor.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.LODDescriptor.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.LODDescriptor.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Model#LODDescriptor}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.LODDescriptor.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.DistanceAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.DistanceAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.DistanceAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.DistanceAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.DistanceAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.DistanceAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.DistanceAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.DistanceAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.DistanceAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.DistanceAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.DistanceAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.DistanceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.DistanceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.DistanceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.DistanceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Object,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.DistanceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.DistanceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.DistanceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Byte@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.DistanceAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.DistanceAccessor.Set(Keen.VRage.Core.Model.LODDescriptor@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.DistanceAccessor.Get(Keen.VRage.Core.Model.LODDescriptor@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.ModelHandleAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.ModelHandleAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.ModelHandleAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.ModelHandleAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.ModelHandleAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.ModelHandleAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.ModelHandleAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.ModelHandleAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.ModelHandleAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.ModelHandleAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.ModelHandleAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.ModelHandleAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.ModelHandleAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.ModelHandleAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.ModelHandleAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Utils#ResourceHandle{Keen#VRage#Core#Model#MeshAsset}?}#Set(System.Object,System.Nullable{Keen.VRage.Library.Utils.ResourceHandle{Keen.VRage.Core.Model.MeshAsset}}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.ModelHandleAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Utils#ResourceHandle{Keen#VRage#Core#Model#MeshAsset}?}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.ModelHandleAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Utils#ResourceHandle{Keen#VRage#Core#Model#MeshAsset}?}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.ModelHandleAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Utils#ResourceHandle{Keen#VRage#Core#Model#MeshAsset}?}#Set(System.Byte@,System.Nullable{Keen.VRage.Library.Utils.ResourceHandle{Keen.VRage.Core.Model.MeshAsset}}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.ModelHandleAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.ModelHandleAccessor.Set(Keen.VRage.Core.Model.LODDescriptor@,System.Nullable{Keen.VRage.Library.Utils.ResourceHandle{Keen.VRage.Core.Model.MeshAsset}}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.ModelHandleAccessor.Get(Keen.VRage.Core.Model.LODDescriptor@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.RenderQualityAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.RenderQualityAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.RenderQualityAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.RenderQualityAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.RenderQualityAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.RenderQualityAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.RenderQualityAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.RenderQualityAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.RenderQualityAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.RenderQualityAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.RenderQualityAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.RenderQualityAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.RenderQualityAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.RenderQualityAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.RenderQualityAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Object,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.RenderQualityAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.RenderQualityAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.RenderQualityAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Byte@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.RenderQualityAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.RenderQualityAccessor.Set(Keen.VRage.Core.Model.LODDescriptor@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.RenderQualityAccessor.Get(Keen.VRage.Core.Model.LODDescriptor@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.RenderQualityListAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.RenderQualityListAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.RenderQualityListAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.RenderQualityListAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.RenderQualityListAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.RenderQualityListAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.RenderQualityListAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.RenderQualityListAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.RenderQualityListAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.RenderQualityListAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.RenderQualityListAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.RenderQualityListAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.RenderQualityListAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.RenderQualityListAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.RenderQualityListAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{System#Int32}}#Set(System.Object,System.Collections.Generic.List{System.Int32}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.RenderQualityListAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{System#Int32}}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.RenderQualityListAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{System#Int32}}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.RenderQualityListAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{System#Int32}}#Set(System.Byte@,System.Collections.Generic.List{System.Int32}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.RenderQualityListAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.RenderQualityListAccessor.Set(Keen.VRage.Core.Model.LODDescriptor@,System.Collections.Generic.List{System.Int32}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.RenderQualityListAccessor.Get(Keen.VRage.Core.Model.LODDescriptor@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.BonesCountAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.BonesCountAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.BonesCountAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.BonesCountAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.BonesCountAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.BonesCountAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.BonesCountAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.BonesCountAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.BonesCountAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.BonesCountAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.BonesCountAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.BonesCountAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.BonesCountAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.BonesCountAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.BonesCountAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Set(System.Object,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.BonesCountAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.BonesCountAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.BonesCountAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Set(System.Byte@,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.BonesCountAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.BonesCountAccessor.Set(Keen.VRage.Core.Model.LODDescriptor@,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.LODDescriptor.TypeInfoHolder.BonesCountAccessor.Get(Keen.VRage.Core.Model.LODDescriptor@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Model.MaterialDescriptor">
            <summary>
            material params for export
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Model.MaterialDescriptor.UserData">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.MaterialDescriptor.MaterialName">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.MaterialDescriptor.#ctor(System.String)">
            <summary>
            c-tor
            </summary>
            <param name="materialName"></param>
        </member>
        <member name="M:Keen.VRage.Core.Model.MaterialDescriptor.#ctor">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.MaterialDescriptor.Write(System.IO.BinaryWriter)">
            <summary>
            Write to binary file
            </summary>
            <param name="writer"></param>
            <returns></returns>
        </member>
        <member name="M:Keen.VRage.Core.Model.MaterialDescriptor.Read(System.IO.BinaryReader,System.Int32)">
            <summary>
            </summary>
            <param name="reader"></param>
            <param name="version"></param>
            <returns></returns>
            <autogeneratedoc />
        </member>
        <member name="T:Keen.VRage.Core.Model.MaterialDescriptor.MeshDrawTechniqueOld">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Model.MaterialDescriptor.MeshDrawTechniqueOld.Mesh">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Model.MaterialDescriptor.MeshDrawTechniqueOld.VoxelsDebris">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Model.MaterialDescriptor.MeshDrawTechniqueOld.VoxelMap">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Model.MaterialDescriptor.MeshDrawTechniqueOld.AlphaMasked">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Model.MaterialDescriptor.MeshDrawTechniqueOld.Foliage">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Model.MaterialDescriptor.MeshDrawTechniqueOld.Decal">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Model.MaterialDescriptor.MeshDrawTechniqueOld.DecalCutout">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Model.MaterialDescriptor.MeshDrawTechniqueOld.Holo">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Model.MaterialDescriptor.MeshDrawTechniqueOld.VoxelMapSingle">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Model.MaterialDescriptor.MeshDrawTechniqueOld.VoxelMapMulti">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Model.MaterialDescriptor.MeshDrawTechniqueOld.Skinned">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Model.MaterialDescriptor.MeshDrawTechniqueOld.Glass">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="T:Keen.VRage.Core.Model.MeshAsset">
            <summary>
            Asset for mesh.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Model.MeshPartInfo">
            <summary>
            Part of the mesh description. Meshes are split to parts because of different materials or render techniques (pipeline state / shader)
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Model.MeshPartInfo.PartId">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Model.MeshPartInfo.Material">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Model.MeshPartInfo.Indices">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.MeshPartInfo.Export(System.IO.BinaryWriter)">
            <summary>
            </summary>
            <param name="writer"></param>
            <returns></returns>
            <autogeneratedoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.MeshPartInfo.Import(System.IO.BinaryReader,System.Int32)">
            <summary>
            </summary>
            <param name="reader"></param>
            <param name="version"></param>
            <returns></returns>
            <autogeneratedoc />
        </member>
        <member name="T:Keen.VRage.Core.Model.MeshSectionMeshPartInfo">
            <summary>
            References a continuous subset of indices in a mesh part. 
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Model.MeshSectionMeshPartInfo.PartIndicesOffset">
            <summary>
            Offset from the start of the mesh part's indices range 
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Model.MeshSectionInfo">
            <summary>
            Mesh section serves to reference group of indices pointing to multiple mesh parts. That means one section
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Model.MeshSectionInfo.Name">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Model.MeshSectionInfo.MeshPartInfos">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.MeshSectionInfo.Export(System.IO.BinaryWriter)">
            <summary>
            </summary>
            <param name="writer"></param>
            <returns></returns>
            <autogeneratedoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.MeshSectionInfo.Import(System.IO.BinaryReader,System.Int32)">
            <summary>
            </summary>
            <param name="reader"></param>
            <param name="version"></param>
            <returns></returns>
            <autogeneratedoc />
        </member>
        <member name="T:Keen.VRage.Core.Model.ModelAnimations">
            <summary>
            Class that contains additional information attached to the model and
            shared with the runtime.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Model.ModelAnimations.Skeleton">
            <summary>
            The bone indices for the skeleton associated with any
            skinned model.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Model.ModelAnimations.Clips">
            <summary>
            Animation clips associated with this model
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Model.ModelAnimations._skeleton">
            <summary>
            The bone indices for the skeleton associated with any
            skinned model.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Model.ModelAnimations._clips">
            <summary>
            Any associated animation clips
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Model.ModelAsset">
            <summary>
            Asset for models
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Model.ModelBoneSuggesterAttribute">
            <summary>
            Suggests skinned model bone names from current prefab 
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Model.ModelBone">
            <summary>
            Represents bone data for a model.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Model.ModelBone.Index">
            <summary>
            Gets the index of this bone in the Bones collection.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Model.ModelBone.Name">
            <summary>
            Gets the name of this bone.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Model.ModelBone.Parent">
            <summary>
            Gets the parent of this bone.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Model.ModelBone.Transform">
            <summary>
            Gets or sets the matrix used to transform this bone relative to its parent bone.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelBone.ToString">
            <summary>
            </summary>
            <returns></returns>
            <autogeneratedoc />
        </member>
        <member name="T:Keen.VRage.Core.Model.ModelBone.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelBone.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelBone.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Model.ModelBone@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelBone.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelBone.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Model.ModelBone@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelBone.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelBone.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Model.ModelBone@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelBone.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelBone.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelBone.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelBone.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelBone.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Model.ModelBone@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelBone.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelBone.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Model.ModelBone@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelBone.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelBone.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Model.ModelBone@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelBone.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelBone.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Model.ModelBone@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelBone.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Model.ModelBone.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.ModelBone.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelBone.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.ModelBone.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Model#ModelBone}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelBone.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Model.ModelBone.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Model.ModelBone.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Model.ModelBone.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Model.ModelBone.TypeInfoHolder.IndexAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.ModelBone.TypeInfoHolder.IndexAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.ModelBone.TypeInfoHolder.IndexAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.ModelBone.TypeInfoHolder.IndexAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.ModelBone.TypeInfoHolder.IndexAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.ModelBone.TypeInfoHolder.IndexAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.ModelBone.TypeInfoHolder.IndexAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.ModelBone.TypeInfoHolder.IndexAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.ModelBone.TypeInfoHolder.IndexAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelBone.TypeInfoHolder.IndexAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelBone.TypeInfoHolder.IndexAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelBone.TypeInfoHolder.IndexAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelBone.TypeInfoHolder.IndexAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelBone.TypeInfoHolder.IndexAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelBone.TypeInfoHolder.IndexAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Set(System.Object,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelBone.TypeInfoHolder.IndexAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelBone.TypeInfoHolder.IndexAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelBone.TypeInfoHolder.IndexAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Set(System.Byte@,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelBone.TypeInfoHolder.IndexAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelBone.TypeInfoHolder.IndexAccessor.Set(Keen.VRage.Core.Model.ModelBone@,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelBone.TypeInfoHolder.IndexAccessor.Get(Keen.VRage.Core.Model.ModelBone@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.ModelBone.TypeInfoHolder.NameAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.ModelBone.TypeInfoHolder.NameAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.ModelBone.TypeInfoHolder.NameAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.ModelBone.TypeInfoHolder.NameAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.ModelBone.TypeInfoHolder.NameAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.ModelBone.TypeInfoHolder.NameAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.ModelBone.TypeInfoHolder.NameAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.ModelBone.TypeInfoHolder.NameAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.ModelBone.TypeInfoHolder.NameAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelBone.TypeInfoHolder.NameAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelBone.TypeInfoHolder.NameAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelBone.TypeInfoHolder.NameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelBone.TypeInfoHolder.NameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelBone.TypeInfoHolder.NameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelBone.TypeInfoHolder.NameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Object,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelBone.TypeInfoHolder.NameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelBone.TypeInfoHolder.NameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelBone.TypeInfoHolder.NameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Byte@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelBone.TypeInfoHolder.NameAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelBone.TypeInfoHolder.NameAccessor.Set(Keen.VRage.Core.Model.ModelBone@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelBone.TypeInfoHolder.NameAccessor.Get(Keen.VRage.Core.Model.ModelBone@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.ModelBone.TypeInfoHolder.ParentAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.ModelBone.TypeInfoHolder.ParentAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.ModelBone.TypeInfoHolder.ParentAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.ModelBone.TypeInfoHolder.ParentAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.ModelBone.TypeInfoHolder.ParentAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.ModelBone.TypeInfoHolder.ParentAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.ModelBone.TypeInfoHolder.ParentAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.ModelBone.TypeInfoHolder.ParentAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.ModelBone.TypeInfoHolder.ParentAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelBone.TypeInfoHolder.ParentAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelBone.TypeInfoHolder.ParentAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelBone.TypeInfoHolder.ParentAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelBone.TypeInfoHolder.ParentAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelBone.TypeInfoHolder.ParentAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelBone.TypeInfoHolder.ParentAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Set(System.Object,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelBone.TypeInfoHolder.ParentAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelBone.TypeInfoHolder.ParentAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelBone.TypeInfoHolder.ParentAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Set(System.Byte@,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelBone.TypeInfoHolder.ParentAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelBone.TypeInfoHolder.ParentAccessor.Set(Keen.VRage.Core.Model.ModelBone@,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelBone.TypeInfoHolder.ParentAccessor.Get(Keen.VRage.Core.Model.ModelBone@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.ModelBone.TypeInfoHolder.TransformAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.ModelBone.TypeInfoHolder.TransformAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.ModelBone.TypeInfoHolder.TransformAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.ModelBone.TypeInfoHolder.TransformAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.ModelBone.TypeInfoHolder.TransformAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.ModelBone.TypeInfoHolder.TransformAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.ModelBone.TypeInfoHolder.TransformAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.ModelBone.TypeInfoHolder.TransformAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.ModelBone.TypeInfoHolder.TransformAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelBone.TypeInfoHolder.TransformAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelBone.TypeInfoHolder.TransformAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelBone.TypeInfoHolder.TransformAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelBone.TypeInfoHolder.TransformAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelBone.TypeInfoHolder.TransformAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelBone.TypeInfoHolder.TransformAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Matrix}#Set(System.Object,Keen.VRage.Library.Mathematics.Matrix@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelBone.TypeInfoHolder.TransformAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Matrix}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelBone.TypeInfoHolder.TransformAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Matrix}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelBone.TypeInfoHolder.TransformAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Matrix}#Set(System.Byte@,Keen.VRage.Library.Mathematics.Matrix@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelBone.TypeInfoHolder.TransformAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelBone.TypeInfoHolder.TransformAccessor.Set(Keen.VRage.Core.Model.ModelBone@,Keen.VRage.Library.Mathematics.Matrix@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelBone.TypeInfoHolder.TransformAccessor.Get(Keen.VRage.Core.Model.ModelBone@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Model.DummyTypeDefinition">
            <summary>
            Type of dummy.
            Used by other systems like UseActionBindingsDefinition, ConveyorSystemConfiguration etc
            to mark type as usable for those systems
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Model.DummyTypeDefinition.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer{Keen#VRage#Core#Model#DummyTypeDefinition}#NameSerializer">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.DummyTypeDefinition.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#NameSerializer">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.DummyTypeDefinition.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#NameType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.DummyTypeDefinition.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer{Keen#VRage#Core#Model#DummyTypeDefinition}#ShouldSerializeAsName(Keen.VRage.Library.Serialization.SerializationContext,Keen.VRage.Core.Model.DummyTypeDefinition@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.DummyTypeDefinition.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#ShouldSerializeAsName(Keen.VRage.Library.Serialization.SerializationContext,System.Object@)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Model.DummyTypeDefinition.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.DummyTypeDefinition.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Model#DummyTypeDefinition}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.DummyTypeDefinition.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.DummyTypeDefinition.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Model.DummyTypeDefinition.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Model.DummyTypeDefinition.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Model.DummyTypeDefinition.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="T:Keen.VRage.Core.Model.DummyReferenceSuggesterAttribute">
            <summary>
            Suggests model dummy names from current prefab 
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Model.ModelImporter">
            <summary>
            Importer reads model data from supplied file and splits them to Dictionary with individual tag data (<see cref="M:Keen.VRage.Core.Model.ModelImporter.GetTagData"/>).  
            </summary>
            <autogeneratedoc />
        </member>
        <member name="T:Keen.VRage.Core.Model.ModelImporter.ReductionInfo">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Model.ModelImporter.ReductionInfo.BoneName">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Model.ModelImporter.ReductionInfo.OriginalKeys">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Model.ModelImporter.ReductionInfo.OptimizedKeys">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Model.ModelImporter.UseLinearKeyframeReduction">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Model.ModelImporter.LinearKeyframeReductionStats">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Model.ModelImporter.ReductionStats">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.ModelImporter.DataVersion">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelImporter.GetTagData">
            <summary>
            </summary>
            <returns></returns>
            <autogeneratedoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelImporter.ImportData(Keen.VRage.Library.Filesystem.FileHandle,System.Nullable{System.Collections.Immutable.ImmutableArray{Keen.VRage.Library.Utils.StringId}})">
            <summary>
            </summary>
            <param name="assetFile"></param>
            <param name="tags"></param>
            <autogeneratedoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelImporter.ImportDataAsync(Keen.VRage.Library.Filesystem.FileHandle,System.Object,System.Nullable{System.Collections.Immutable.ImmutableArray{Keen.VRage.Library.Utils.StringId}})">
            <summary>
            Async version of <see cref="M:Keen.VRage.Core.Model.ModelImporter.ImportData(Keen.VRage.Library.Filesystem.FileHandle,System.Nullable{System.Collections.Immutable.ImmutableArray{Keen.VRage.Library.Utils.StringId}})"/>.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelImporter.ImportData(System.IO.Stream,System.String,System.Nullable{System.Collections.Immutable.ImmutableArray{Keen.VRage.Library.Utils.StringId}})">
            <summary>
            </summary>
            <param name="assetFileName"></param>
            <param name="assetStream"></param>
            <param name="tags"></param>
            <autogeneratedoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelImporter.Clear">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelImporter.ReadVector3(System.IO.BinaryReader)">
            <summary>
            Read Vector34
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelImporter.ReadHalfVector4(System.IO.BinaryReader)">
            <summary>
            Read HalfVector4
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelImporter.ReadHalfVector2(System.IO.BinaryReader)">
            <summary>
            Read HalfVector2
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelImporter.ReadByte4(System.IO.BinaryReader)">
            <summary>
            Read Byte4
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelImporter.ImportVector3(System.IO.BinaryReader)">
            <summary>
            ImportVector3
            </summary>
            <param name="reader"></param>
            <returns></returns>
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelImporter.ImportVector4(System.IO.BinaryReader)">
            <summary>
            ImportVector4
            </summary>
            <param name="reader"></param>
            <returns></returns>
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelImporter.ImportQuaternion(System.IO.BinaryReader)">
            <summary>
            ImportQuaternion
            </summary>
            <param name="reader"></param>
            <returns></returns>
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelImporter.ImportVector4Int(System.IO.BinaryReader)">
            <summary>
            ImportVector4Int
            </summary>
            <param name="reader"></param>
            <returns></returns>
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelImporter.ImportVector3Int(System.IO.BinaryReader)">
            <summary>
            ImportVector3Int
            </summary>
            <param name="reader"></param>
            <returns></returns>
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelImporter.ImportVector2(System.IO.BinaryReader)">
            <summary>
            ImportVector2
            </summary>
            <param name="reader"></param>
            <returns></returns>
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelImporter.ReadArrayOfHalfVector4(System.IO.BinaryReader)">
            <summary>
            Read array of HalfVector4
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelImporter.ReadArrayOfByte4(System.IO.BinaryReader)">
            <summary>
            Read array of Byte4
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelImporter.ReadArrayOfHalfVector2(System.IO.BinaryReader)">
            <summary>
            Read array of HalfVector2
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelImporter.ReadArrayOfVector3(System.IO.BinaryReader)">
            <summary>
            ReadArrayOfVector3
            </summary>
            <returns></returns>
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelImporter.ReadArrayOfVector4(System.IO.BinaryReader)">
            <summary>
            ReadArrayOfVector4
            </summary>
            <returns></returns>
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelImporter.ReadArrayOfVector4Int(System.IO.BinaryReader)">
            <summary>
            ReadArrayOfVector4
            </summary>
            <returns></returns>
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelImporter.ReadArrayOfVector3Int(System.IO.BinaryReader)">
            <summary>
            ReadArrayOfVector3I
            </summary>
            <returns></returns>
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelImporter.ReadArrayOfVector2(System.IO.BinaryReader)">
            <summary>
            ReadArrayOfVector2
            </summary>
            <returns></returns>
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelImporter.ReadArrayOfString(System.IO.BinaryReader)">
            <summary>
            ReadArrayOfString
            </summary>
            <param name="reader"></param>
            <returns></returns>
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelImporter.ReadBoundingBox(System.IO.BinaryReader)">
            <summary>
            ReadBoundingBox
            </summary>
            <param name="reader"></param>
            <returns></returns>
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelImporter.ReadBoundingSphere(System.IO.BinaryReader)">
            <summary>
            ReadBoundingSphere
            </summary>
            <param name="reader"></param>
            <returns></returns>
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelImporter.ReadMatrix(System.IO.BinaryReader)">
            <summary>
            ReadMatrix
            </summary>
            <param name="reader"></param>
            <returns></returns>
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelImporter.ReadMeshParts(System.IO.BinaryReader,System.Int32)">
            <summary>
            ReadMeshParts
            </summary>
            <param name="reader"></param>
            <param name="version"></param>
            <returns></returns>
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelImporter.ReadArrayOfInt(System.IO.BinaryReader)">
            <summary>
            ReadArrayOfInt
            </summary>
            <param name="reader"></param>
            <returns></returns>
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelImporter.LinearKeyframeReduction(System.Collections.Generic.LinkedList{Keen.VRage.Core.Model.AnimationClip.Keyframe},System.Single,System.Single)">
            <summary>
            This function filters out keyframes that can be approximated well with
            linear interpolation.
            </summary>
            <param name="keyframes"></param>
            <param name="translationThreshold"></param>
            <param name="rotationThreshold"></param>
        </member>
        <member name="T:Keen.VRage.Core.Model.ModelImporter.TagReader`1">
            <summary>
            </summary>
            <typeparam name="T"></typeparam>
            <autogeneratedoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelImporter.TagReader`1.#ctor(System.Func{System.IO.BinaryReader,`0})">
            <summary>
            </summary>
            <param name="tagReader"></param>
            <autogeneratedoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelImporter.TagReader`1.#ctor(System.Func{System.IO.BinaryReader,System.Int32,`0})">
            <summary>
            </summary>
            <param name="tagReader"></param>
            <autogeneratedoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelImporter.TagReader`1.#ctor(System.Func{System.IO.BinaryReader,System.Int32,Keen.VRage.Core.Model.ModelImporter,`0})">
            <summary>
            </summary>
            <param name="tagReader"></param>
            <autogeneratedoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelImporter.TagReader`1.Read(System.IO.BinaryReader,System.Int32,Keen.VRage.Core.Model.ModelImporter)">
            <summary>
            </summary>
            <param name="reader"></param>
            <param name="version"></param>
            <param name="importer"></param>
            <returns></returns>
            <autogeneratedoc />
        </member>
        <member name="T:Keen.VRage.Core.Model.ModelImporter.ITagReader">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelImporter.ITagReader.Read(System.IO.BinaryReader,System.Int32,Keen.VRage.Core.Model.ModelImporter)">
            <summary>
            </summary>
            <param name="reader"></param>
            <param name="version"></param>
            <param name="importer"></param>
            <returns></returns>
            <autogeneratedoc />
        </member>
        <member name="T:Keen.VRage.Core.Model.ModelInfo">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Model.ModelInfo.TrianglesCount">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Model.ModelInfo.VerticesCount">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Model.ModelInfo.BoundingBoxSize">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.ModelInfo.#ctor(System.Int32,System.Int32,Keen.VRage.Library.Mathematics.Vector3)">
            <summary>
            </summary>
            <param name="triCnt"></param>
            <param name="vertCnt"></param>
            <param name="bBsize"></param>
            <autogeneratedoc />
        </member>
        <member name="T:Keen.VRage.Core.Model.NamespaceDoc">
            <summary>
            Namespace for loading models. For starting point, see <see cref="T:Keen.VRage.Core.Model.ModelImporter"/>.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Model.SkeletonBone">
            <summary>
            Represent bone in skeleton, without any attached data. Used only to specify the hierarchy.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Model.SkeletonBone.#ctor(System.String,System.Int32)">
            <summary>
            Represent bone in skeleton, without any attached data. Used only to specify the hierarchy.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Model.Skeleton">
            <summary>
            Represents skeleton hierarchy.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Model.Skeleton.#ctor(System.Collections.Immutable.ImmutableArray{Keen.VRage.Core.Model.SkeletonBone})">
            <summary>
            Represents skeleton hierarchy.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Model.ISkeletonProvider">
            <summary>
            Provides a skeleton hierarchy.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Model.ISkeletonProvider.Skeleton">
            <summary>
            Get the skeleton hierarchy.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Model.SkeletonBoneNameEqualityComparer">
            <summary>
            Equality comparer for <see cref="T:Keen.VRage.Core.Model.SkeletonBone"/> based on <see cref="F:Keen.VRage.Core.Model.SkeletonBone.Name"/> (case-sensitive).
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Model.DummyTypeDefinitionObjectBuilder.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.DummyTypeDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.DummyTypeDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Model.DummyTypeDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.DummyTypeDefinitionObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.DummyTypeDefinitionObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Model.DummyTypeDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.DummyTypeDefinitionObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.DummyTypeDefinitionObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Model.DummyTypeDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.DummyTypeDefinitionObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.DummyTypeDefinitionObjectBuilder.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.DummyTypeDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.DummyTypeDefinitionObjectBuilder.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.DummyTypeDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Model.DummyTypeDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.DummyTypeDefinitionObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.DummyTypeDefinitionObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Model.DummyTypeDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.DummyTypeDefinitionObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.DummyTypeDefinitionObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Model.DummyTypeDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.DummyTypeDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.DummyTypeDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Model.DummyTypeDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.DummyTypeDefinitionObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Model.DummyTypeDefinitionObjectBuilder.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.DummyTypeDefinitionObjectBuilder.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.DummyTypeDefinitionObjectBuilder.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Model.DummyTypeDefinitionObjectBuilder.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Model#DummyTypeDefinitionObjectBuilder}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Model.DummyTypeDefinitionObjectBuilder.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Model.DummyTypeDefinitionObjectBuilder.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Model.DummyTypeDefinitionObjectBuilder.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Model.DummyTypeDefinitionObjectBuilder.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="T:Keen.VRage.Core.Project.VRageProjectData">
            <summary>
            Data related to the given VRage project
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.Name">
            <summary>
            User-friendly name of the project
            </summary>    
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.Version">
            <summary>
            Version of the project
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.Type">
            <summary>
            Type of the project, such as normal, mod, DLC etc.
            </summary>    
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.ProjectID">
            <summary>
            Unique identifier of the project
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.ModSetup">
            <summary>
            Settings for the mod setup. Should be used by the editor to determine what definition sets are allowed to be used in the mod projects
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.ProjectDependencies">
            <summary>
            Identifiers of the projects this project depends on
            </summary>    
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.ProjectDirectories">
            <summary>
            List of paths where dependencies are looked for
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.UsedBuildStream">
            <summary>
            What stream this project should be used with. Working on this project using different stream might cause issues.
            For internal purposes only.
            </summary>    
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.DefinitionSetNames">
            <summary>
            Collection of definition set names that can be assigned in this project
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.GameExecutable">
            <summary>
            Name of the game executable. Will be combined with <see cref="P:Keen.VRage.Core.Project.VRageProjectData.GameExecutableSearchPaths"/> to find executable file on the disk.  
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.GameExecutableSearchPaths">
            <summary>
            Search paths where it will try to locate <see cref="P:Keen.VRage.Core.Project.VRageProjectData.GameExecutable"/>. First existing path is used
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.ReferencedAssemblies">
            <summary>
            List of reference assembly names. Will be combined with <see cref="P:Keen.VRage.Core.Project.VRageProjectData.ReferencedAssembliesSearchPaths"/> to find assembly files on the disk.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.ReferencedAssembliesSearchPaths">
            <summary>
            Search paths for <see cref="P:Keen.VRage.Core.Project.VRageProjectData.ReferencedAssemblies"/> that need to be loaded prior to loading the project. Meaning the project might have serialized types from these assemblies
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.EditorExtensionAssemblies">
            <summary>
            List of editor extension assembly names. Will be combined with <see cref="P:Keen.VRage.Core.Project.VRageProjectData.EditorExtensionAssembliesSearchPaths"/> to find assembly files on the disk.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.EditorExtensionAssembliesSearchPaths">
            <summary>
            Search paths for <see cref="P:Keen.VRage.Core.Project.VRageProjectData.EditorExtensionAssemblies"/> that extend Editor's functionality (plugins).
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.SkipContentMounting">
            <summary>
            Flag to not mount this project's Content to the Engine.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.EnableIgnoreProcessingErrorFlags">
            <summary>
            Flag for this project enabling ignoring processing errors for selected assets
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Project.VRageProjectData.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Project.VRageProjectData@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Project.VRageProjectData@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Project.VRageProjectData@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Project.VRageProjectData@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Project.VRageProjectData@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Project.VRageProjectData@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Project.VRageProjectData@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Project.VRageProjectData.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Project#VRageProjectData}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.NameAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.NameAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.NameAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.NameAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.NameAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.NameAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.NameAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.NameAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.NameAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.NameAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.NameAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.NameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.NameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.NameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.NameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Object,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.NameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.NameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.NameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Byte@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.NameAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.NameAccessor.Set(Keen.VRage.Core.Project.VRageProjectData@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.NameAccessor.Get(Keen.VRage.Core.Project.VRageProjectData@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.VersionAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.VersionAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.VersionAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.VersionAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.VersionAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.VersionAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.VersionAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.VersionAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.VersionAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.VersionAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.VersionAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.VersionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.VersionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.VersionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.VersionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Version}#Set(System.Object,System.Version@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.VersionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Version}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.VersionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Version}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.VersionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Version}#Set(System.Byte@,System.Version@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.VersionAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.VersionAccessor.Set(Keen.VRage.Core.Project.VRageProjectData@,System.Version@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.VersionAccessor.Get(Keen.VRage.Core.Project.VRageProjectData@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.TypeAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.TypeAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.TypeAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.TypeAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.TypeAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.TypeAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.TypeAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.TypeAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.TypeAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.TypeAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.TypeAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.TypeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.TypeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.TypeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.TypeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Project#ProjectType}#Set(System.Object,Keen.VRage.Core.Project.ProjectType@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.TypeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Project#ProjectType}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.TypeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Project#ProjectType}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.TypeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Project#ProjectType}#Set(System.Byte@,Keen.VRage.Core.Project.ProjectType@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.TypeAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.TypeAccessor.Set(Keen.VRage.Core.Project.VRageProjectData@,Keen.VRage.Core.Project.ProjectType@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.TypeAccessor.Get(Keen.VRage.Core.Project.VRageProjectData@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ProjectIDAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ProjectIDAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ProjectIDAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ProjectIDAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ProjectIDAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ProjectIDAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ProjectIDAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ProjectIDAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ProjectIDAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ProjectIDAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ProjectIDAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ProjectIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ProjectIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ProjectIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ProjectIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Project#VRageProjectID}#Set(System.Object,Keen.VRage.Core.Project.VRageProjectID@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ProjectIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Project#VRageProjectID}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ProjectIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Project#VRageProjectID}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ProjectIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Project#VRageProjectID}#Set(System.Byte@,Keen.VRage.Core.Project.VRageProjectID@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ProjectIDAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ProjectIDAccessor.Set(Keen.VRage.Core.Project.VRageProjectData@,Keen.VRage.Core.Project.VRageProjectID@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ProjectIDAccessor.Get(Keen.VRage.Core.Project.VRageProjectData@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ModSetupAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ModSetupAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ModSetupAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ModSetupAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ModSetupAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ModSetupAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ModSetupAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ModSetupAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ModSetupAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ModSetupAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ModSetupAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ModSetupAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ModSetupAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ModSetupAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ModSetupAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Project#ModSetupSettings?}#Set(System.Object,System.Nullable{Keen.VRage.Core.Project.ModSetupSettings}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ModSetupAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Project#ModSetupSettings?}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ModSetupAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Project#ModSetupSettings?}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ModSetupAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Project#ModSetupSettings?}#Set(System.Byte@,System.Nullable{Keen.VRage.Core.Project.ModSetupSettings}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ModSetupAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ModSetupAccessor.Set(Keen.VRage.Core.Project.VRageProjectData@,System.Nullable{Keen.VRage.Core.Project.ModSetupSettings}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ModSetupAccessor.Get(Keen.VRage.Core.Project.VRageProjectData@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ProjectDependenciesAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ProjectDependenciesAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ProjectDependenciesAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ProjectDependenciesAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ProjectDependenciesAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ProjectDependenciesAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ProjectDependenciesAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ProjectDependenciesAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ProjectDependenciesAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ProjectDependenciesAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ProjectDependenciesAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ProjectDependenciesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ProjectDependenciesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ProjectDependenciesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ProjectDependenciesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{Keen#VRage#Core#Project#VRageProjectID}}#Set(System.Object,System.Collections.Generic.List{Keen.VRage.Core.Project.VRageProjectID}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ProjectDependenciesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{Keen#VRage#Core#Project#VRageProjectID}}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ProjectDependenciesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{Keen#VRage#Core#Project#VRageProjectID}}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ProjectDependenciesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{Keen#VRage#Core#Project#VRageProjectID}}#Set(System.Byte@,System.Collections.Generic.List{Keen.VRage.Core.Project.VRageProjectID}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ProjectDependenciesAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ProjectDependenciesAccessor.Set(Keen.VRage.Core.Project.VRageProjectData@,System.Collections.Generic.List{Keen.VRage.Core.Project.VRageProjectID}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ProjectDependenciesAccessor.Get(Keen.VRage.Core.Project.VRageProjectData@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ProjectDirectoriesAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ProjectDirectoriesAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ProjectDirectoriesAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ProjectDirectoriesAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ProjectDirectoriesAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ProjectDirectoriesAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ProjectDirectoriesAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ProjectDirectoriesAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ProjectDirectoriesAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ProjectDirectoriesAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ProjectDirectoriesAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ProjectDirectoriesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ProjectDirectoriesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ProjectDirectoriesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ProjectDirectoriesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{System#String}}#Set(System.Object,System.Collections.Generic.List{System.String}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ProjectDirectoriesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{System#String}}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ProjectDirectoriesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{System#String}}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ProjectDirectoriesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{System#String}}#Set(System.Byte@,System.Collections.Generic.List{System.String}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ProjectDirectoriesAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ProjectDirectoriesAccessor.Set(Keen.VRage.Core.Project.VRageProjectData@,System.Collections.Generic.List{System.String}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ProjectDirectoriesAccessor.Get(Keen.VRage.Core.Project.VRageProjectData@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.UsedBuildStreamAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.UsedBuildStreamAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.UsedBuildStreamAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.UsedBuildStreamAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.UsedBuildStreamAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.UsedBuildStreamAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.UsedBuildStreamAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.UsedBuildStreamAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.UsedBuildStreamAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.UsedBuildStreamAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.UsedBuildStreamAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.UsedBuildStreamAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.UsedBuildStreamAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.UsedBuildStreamAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.UsedBuildStreamAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Object,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.UsedBuildStreamAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.UsedBuildStreamAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.UsedBuildStreamAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Byte@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.UsedBuildStreamAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.UsedBuildStreamAccessor.Set(Keen.VRage.Core.Project.VRageProjectData@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.UsedBuildStreamAccessor.Get(Keen.VRage.Core.Project.VRageProjectData@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.DefinitionSetNamesAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.DefinitionSetNamesAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.DefinitionSetNamesAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.DefinitionSetNamesAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.DefinitionSetNamesAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.DefinitionSetNamesAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.DefinitionSetNamesAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.DefinitionSetNamesAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.DefinitionSetNamesAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.DefinitionSetNamesAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.DefinitionSetNamesAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.DefinitionSetNamesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.DefinitionSetNamesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.DefinitionSetNamesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.DefinitionSetNamesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{System#String}}#Set(System.Object,System.Collections.Generic.List{System.String}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.DefinitionSetNamesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{System#String}}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.DefinitionSetNamesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{System#String}}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.DefinitionSetNamesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{System#String}}#Set(System.Byte@,System.Collections.Generic.List{System.String}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.DefinitionSetNamesAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.DefinitionSetNamesAccessor.Set(Keen.VRage.Core.Project.VRageProjectData@,System.Collections.Generic.List{System.String}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.DefinitionSetNamesAccessor.Get(Keen.VRage.Core.Project.VRageProjectData@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.GameExecutableAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.GameExecutableAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.GameExecutableAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.GameExecutableAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.GameExecutableAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.GameExecutableAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.GameExecutableAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.GameExecutableAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.GameExecutableAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.GameExecutableAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.GameExecutableAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.GameExecutableAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.GameExecutableAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.GameExecutableAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.GameExecutableAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Object,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.GameExecutableAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.GameExecutableAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.GameExecutableAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Byte@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.GameExecutableAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.GameExecutableAccessor.Set(Keen.VRage.Core.Project.VRageProjectData@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.GameExecutableAccessor.Get(Keen.VRage.Core.Project.VRageProjectData@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.GameExecutableSearchPathsAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.GameExecutableSearchPathsAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.GameExecutableSearchPathsAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.GameExecutableSearchPathsAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.GameExecutableSearchPathsAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.GameExecutableSearchPathsAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.GameExecutableSearchPathsAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.GameExecutableSearchPathsAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.GameExecutableSearchPathsAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.GameExecutableSearchPathsAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.GameExecutableSearchPathsAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.GameExecutableSearchPathsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.GameExecutableSearchPathsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.GameExecutableSearchPathsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.GameExecutableSearchPathsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{System#String}}#Set(System.Object,System.Collections.Generic.List{System.String}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.GameExecutableSearchPathsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{System#String}}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.GameExecutableSearchPathsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{System#String}}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.GameExecutableSearchPathsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{System#String}}#Set(System.Byte@,System.Collections.Generic.List{System.String}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.GameExecutableSearchPathsAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.GameExecutableSearchPathsAccessor.Set(Keen.VRage.Core.Project.VRageProjectData@,System.Collections.Generic.List{System.String}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.GameExecutableSearchPathsAccessor.Get(Keen.VRage.Core.Project.VRageProjectData@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ReferencedAssembliesAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ReferencedAssembliesAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ReferencedAssembliesAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ReferencedAssembliesAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ReferencedAssembliesAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ReferencedAssembliesAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ReferencedAssembliesAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ReferencedAssembliesAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ReferencedAssembliesAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ReferencedAssembliesAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ReferencedAssembliesAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ReferencedAssembliesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ReferencedAssembliesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ReferencedAssembliesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ReferencedAssembliesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{System#String}}#Set(System.Object,System.Collections.Generic.List{System.String}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ReferencedAssembliesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{System#String}}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ReferencedAssembliesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{System#String}}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ReferencedAssembliesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{System#String}}#Set(System.Byte@,System.Collections.Generic.List{System.String}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ReferencedAssembliesAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ReferencedAssembliesAccessor.Set(Keen.VRage.Core.Project.VRageProjectData@,System.Collections.Generic.List{System.String}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ReferencedAssembliesAccessor.Get(Keen.VRage.Core.Project.VRageProjectData@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ReferencedAssembliesSearchPathsAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ReferencedAssembliesSearchPathsAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ReferencedAssembliesSearchPathsAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ReferencedAssembliesSearchPathsAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ReferencedAssembliesSearchPathsAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ReferencedAssembliesSearchPathsAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ReferencedAssembliesSearchPathsAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ReferencedAssembliesSearchPathsAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ReferencedAssembliesSearchPathsAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ReferencedAssembliesSearchPathsAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ReferencedAssembliesSearchPathsAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ReferencedAssembliesSearchPathsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ReferencedAssembliesSearchPathsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ReferencedAssembliesSearchPathsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ReferencedAssembliesSearchPathsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{System#String}}#Set(System.Object,System.Collections.Generic.List{System.String}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ReferencedAssembliesSearchPathsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{System#String}}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ReferencedAssembliesSearchPathsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{System#String}}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ReferencedAssembliesSearchPathsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{System#String}}#Set(System.Byte@,System.Collections.Generic.List{System.String}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ReferencedAssembliesSearchPathsAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ReferencedAssembliesSearchPathsAccessor.Set(Keen.VRage.Core.Project.VRageProjectData@,System.Collections.Generic.List{System.String}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.ReferencedAssembliesSearchPathsAccessor.Get(Keen.VRage.Core.Project.VRageProjectData@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.EditorExtensionAssembliesAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.EditorExtensionAssembliesAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.EditorExtensionAssembliesAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.EditorExtensionAssembliesAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.EditorExtensionAssembliesAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.EditorExtensionAssembliesAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.EditorExtensionAssembliesAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.EditorExtensionAssembliesAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.EditorExtensionAssembliesAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.EditorExtensionAssembliesAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.EditorExtensionAssembliesAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.EditorExtensionAssembliesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.EditorExtensionAssembliesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.EditorExtensionAssembliesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.EditorExtensionAssembliesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{System#String}}#Set(System.Object,System.Collections.Generic.List{System.String}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.EditorExtensionAssembliesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{System#String}}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.EditorExtensionAssembliesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{System#String}}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.EditorExtensionAssembliesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{System#String}}#Set(System.Byte@,System.Collections.Generic.List{System.String}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.EditorExtensionAssembliesAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.EditorExtensionAssembliesAccessor.Set(Keen.VRage.Core.Project.VRageProjectData@,System.Collections.Generic.List{System.String}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.EditorExtensionAssembliesAccessor.Get(Keen.VRage.Core.Project.VRageProjectData@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.EditorExtensionAssembliesSearchPathsAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.EditorExtensionAssembliesSearchPathsAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.EditorExtensionAssembliesSearchPathsAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.EditorExtensionAssembliesSearchPathsAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.EditorExtensionAssembliesSearchPathsAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.EditorExtensionAssembliesSearchPathsAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.EditorExtensionAssembliesSearchPathsAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.EditorExtensionAssembliesSearchPathsAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.EditorExtensionAssembliesSearchPathsAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.EditorExtensionAssembliesSearchPathsAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.EditorExtensionAssembliesSearchPathsAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.EditorExtensionAssembliesSearchPathsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.EditorExtensionAssembliesSearchPathsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.EditorExtensionAssembliesSearchPathsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.EditorExtensionAssembliesSearchPathsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{System#String}}#Set(System.Object,System.Collections.Generic.List{System.String}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.EditorExtensionAssembliesSearchPathsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{System#String}}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.EditorExtensionAssembliesSearchPathsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{System#String}}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.EditorExtensionAssembliesSearchPathsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{System#String}}#Set(System.Byte@,System.Collections.Generic.List{System.String}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.EditorExtensionAssembliesSearchPathsAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.EditorExtensionAssembliesSearchPathsAccessor.Set(Keen.VRage.Core.Project.VRageProjectData@,System.Collections.Generic.List{System.String}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.EditorExtensionAssembliesSearchPathsAccessor.Get(Keen.VRage.Core.Project.VRageProjectData@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.SkipContentMountingAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.SkipContentMountingAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.SkipContentMountingAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.SkipContentMountingAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.SkipContentMountingAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.SkipContentMountingAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.SkipContentMountingAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.SkipContentMountingAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.SkipContentMountingAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.SkipContentMountingAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.SkipContentMountingAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.SkipContentMountingAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.SkipContentMountingAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.SkipContentMountingAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.SkipContentMountingAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.SkipContentMountingAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.SkipContentMountingAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.SkipContentMountingAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.SkipContentMountingAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.SkipContentMountingAccessor.Set(Keen.VRage.Core.Project.VRageProjectData@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.SkipContentMountingAccessor.Get(Keen.VRage.Core.Project.VRageProjectData@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.EnableIgnoreProcessingErrorFlagsAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.EnableIgnoreProcessingErrorFlagsAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.EnableIgnoreProcessingErrorFlagsAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.EnableIgnoreProcessingErrorFlagsAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.EnableIgnoreProcessingErrorFlagsAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.EnableIgnoreProcessingErrorFlagsAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.EnableIgnoreProcessingErrorFlagsAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.EnableIgnoreProcessingErrorFlagsAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.EnableIgnoreProcessingErrorFlagsAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.EnableIgnoreProcessingErrorFlagsAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.EnableIgnoreProcessingErrorFlagsAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.EnableIgnoreProcessingErrorFlagsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.EnableIgnoreProcessingErrorFlagsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.EnableIgnoreProcessingErrorFlagsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.EnableIgnoreProcessingErrorFlagsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.EnableIgnoreProcessingErrorFlagsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.EnableIgnoreProcessingErrorFlagsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.EnableIgnoreProcessingErrorFlagsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.EnableIgnoreProcessingErrorFlagsAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.EnableIgnoreProcessingErrorFlagsAccessor.Set(Keen.VRage.Core.Project.VRageProjectData@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData.TypeInfoHolder.EnableIgnoreProcessingErrorFlagsAccessor.Get(Keen.VRage.Core.Project.VRageProjectData@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Project#VRageProjectData_Migrations#VRageProjectDataOld}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.NameAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.NameAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.NameAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.NameAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.NameAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.NameAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.NameAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.NameAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.NameAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.NameAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.NameAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.NameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.NameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.NameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.NameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Object,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.NameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.NameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.NameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Byte@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.NameAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.NameAccessor.Set(Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.NameAccessor.Get(Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.VersionAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.VersionAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.VersionAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.VersionAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.VersionAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.VersionAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.VersionAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.VersionAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.VersionAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.VersionAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.VersionAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.VersionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.VersionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.VersionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.VersionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Version}#Set(System.Object,System.Version@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.VersionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Version}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.VersionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Version}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.VersionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Version}#Set(System.Byte@,System.Version@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.VersionAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.VersionAccessor.Set(Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld@,System.Version@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.VersionAccessor.Get(Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.TypeAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.TypeAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.TypeAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.TypeAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.TypeAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.TypeAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.TypeAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.TypeAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.TypeAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.TypeAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.TypeAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.TypeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.TypeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.TypeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.TypeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Project#ProjectType}#Set(System.Object,Keen.VRage.Core.Project.ProjectType@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.TypeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Project#ProjectType}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.TypeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Project#ProjectType}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.TypeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Project#ProjectType}#Set(System.Byte@,Keen.VRage.Core.Project.ProjectType@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.TypeAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.TypeAccessor.Set(Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld@,Keen.VRage.Core.Project.ProjectType@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.TypeAccessor.Get(Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ProjectIDAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ProjectIDAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ProjectIDAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ProjectIDAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ProjectIDAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ProjectIDAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ProjectIDAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ProjectIDAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ProjectIDAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ProjectIDAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ProjectIDAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ProjectIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ProjectIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ProjectIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ProjectIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Project#VRageProjectID}#Set(System.Object,Keen.VRage.Core.Project.VRageProjectID@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ProjectIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Project#VRageProjectID}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ProjectIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Project#VRageProjectID}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ProjectIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Project#VRageProjectID}#Set(System.Byte@,Keen.VRage.Core.Project.VRageProjectID@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ProjectIDAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ProjectIDAccessor.Set(Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld@,Keen.VRage.Core.Project.VRageProjectID@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ProjectIDAccessor.Get(Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ModSetupAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ModSetupAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ModSetupAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ModSetupAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ModSetupAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ModSetupAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ModSetupAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ModSetupAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ModSetupAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ModSetupAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ModSetupAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ModSetupAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ModSetupAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ModSetupAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ModSetupAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Project#ModSetupSettings?}#Set(System.Object,System.Nullable{Keen.VRage.Core.Project.ModSetupSettings}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ModSetupAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Project#ModSetupSettings?}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ModSetupAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Project#ModSetupSettings?}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ModSetupAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Project#ModSetupSettings?}#Set(System.Byte@,System.Nullable{Keen.VRage.Core.Project.ModSetupSettings}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ModSetupAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ModSetupAccessor.Set(Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld@,System.Nullable{Keen.VRage.Core.Project.ModSetupSettings}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ModSetupAccessor.Get(Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ProjectDependenciesAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ProjectDependenciesAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ProjectDependenciesAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ProjectDependenciesAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ProjectDependenciesAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ProjectDependenciesAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ProjectDependenciesAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ProjectDependenciesAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ProjectDependenciesAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ProjectDependenciesAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ProjectDependenciesAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ProjectDependenciesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ProjectDependenciesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ProjectDependenciesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ProjectDependenciesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{Keen#VRage#Core#Project#VRageProjectID}}#Set(System.Object,System.Collections.Generic.List{Keen.VRage.Core.Project.VRageProjectID}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ProjectDependenciesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{Keen#VRage#Core#Project#VRageProjectID}}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ProjectDependenciesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{Keen#VRage#Core#Project#VRageProjectID}}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ProjectDependenciesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{Keen#VRage#Core#Project#VRageProjectID}}#Set(System.Byte@,System.Collections.Generic.List{Keen.VRage.Core.Project.VRageProjectID}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ProjectDependenciesAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ProjectDependenciesAccessor.Set(Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld@,System.Collections.Generic.List{Keen.VRage.Core.Project.VRageProjectID}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ProjectDependenciesAccessor.Get(Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ProjectDirectoriesAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ProjectDirectoriesAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ProjectDirectoriesAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ProjectDirectoriesAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ProjectDirectoriesAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ProjectDirectoriesAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ProjectDirectoriesAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ProjectDirectoriesAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ProjectDirectoriesAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ProjectDirectoriesAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ProjectDirectoriesAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ProjectDirectoriesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ProjectDirectoriesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ProjectDirectoriesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ProjectDirectoriesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{System#String}}#Set(System.Object,System.Collections.Generic.List{System.String}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ProjectDirectoriesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{System#String}}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ProjectDirectoriesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{System#String}}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ProjectDirectoriesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{System#String}}#Set(System.Byte@,System.Collections.Generic.List{System.String}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ProjectDirectoriesAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ProjectDirectoriesAccessor.Set(Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld@,System.Collections.Generic.List{System.String}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ProjectDirectoriesAccessor.Get(Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.UsedBuildStreamAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.UsedBuildStreamAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.UsedBuildStreamAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.UsedBuildStreamAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.UsedBuildStreamAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.UsedBuildStreamAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.UsedBuildStreamAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.UsedBuildStreamAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.UsedBuildStreamAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.UsedBuildStreamAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.UsedBuildStreamAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.UsedBuildStreamAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.UsedBuildStreamAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.UsedBuildStreamAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.UsedBuildStreamAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Object,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.UsedBuildStreamAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.UsedBuildStreamAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.UsedBuildStreamAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Byte@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.UsedBuildStreamAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.UsedBuildStreamAccessor.Set(Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.UsedBuildStreamAccessor.Get(Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.DefinitionSetNamesAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.DefinitionSetNamesAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.DefinitionSetNamesAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.DefinitionSetNamesAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.DefinitionSetNamesAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.DefinitionSetNamesAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.DefinitionSetNamesAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.DefinitionSetNamesAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.DefinitionSetNamesAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.DefinitionSetNamesAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.DefinitionSetNamesAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.DefinitionSetNamesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.DefinitionSetNamesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.DefinitionSetNamesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.DefinitionSetNamesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{System#String}}#Set(System.Object,System.Collections.Generic.List{System.String}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.DefinitionSetNamesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{System#String}}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.DefinitionSetNamesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{System#String}}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.DefinitionSetNamesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{System#String}}#Set(System.Byte@,System.Collections.Generic.List{System.String}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.DefinitionSetNamesAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.DefinitionSetNamesAccessor.Set(Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld@,System.Collections.Generic.List{System.String}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.DefinitionSetNamesAccessor.Get(Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.GameExecutableAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.GameExecutableAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.GameExecutableAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.GameExecutableAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.GameExecutableAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.GameExecutableAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.GameExecutableAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.GameExecutableAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.GameExecutableAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.GameExecutableAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.GameExecutableAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.GameExecutableAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.GameExecutableAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.GameExecutableAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.GameExecutableAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Object,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.GameExecutableAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.GameExecutableAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.GameExecutableAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Byte@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.GameExecutableAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.GameExecutableAccessor.Set(Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.GameExecutableAccessor.Get(Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.GameExecutableSearchPathsAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.GameExecutableSearchPathsAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.GameExecutableSearchPathsAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.GameExecutableSearchPathsAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.GameExecutableSearchPathsAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.GameExecutableSearchPathsAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.GameExecutableSearchPathsAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.GameExecutableSearchPathsAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.GameExecutableSearchPathsAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.GameExecutableSearchPathsAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.GameExecutableSearchPathsAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.GameExecutableSearchPathsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.GameExecutableSearchPathsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.GameExecutableSearchPathsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.GameExecutableSearchPathsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{System#String}}#Set(System.Object,System.Collections.Generic.List{System.String}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.GameExecutableSearchPathsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{System#String}}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.GameExecutableSearchPathsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{System#String}}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.GameExecutableSearchPathsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{System#String}}#Set(System.Byte@,System.Collections.Generic.List{System.String}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.GameExecutableSearchPathsAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.GameExecutableSearchPathsAccessor.Set(Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld@,System.Collections.Generic.List{System.String}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.GameExecutableSearchPathsAccessor.Get(Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ReferencedAssembliesAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ReferencedAssembliesAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ReferencedAssembliesAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ReferencedAssembliesAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ReferencedAssembliesAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ReferencedAssembliesAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ReferencedAssembliesAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ReferencedAssembliesAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ReferencedAssembliesAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ReferencedAssembliesAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ReferencedAssembliesAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ReferencedAssembliesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ReferencedAssembliesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ReferencedAssembliesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ReferencedAssembliesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{System#String}}#Set(System.Object,System.Collections.Generic.List{System.String}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ReferencedAssembliesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{System#String}}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ReferencedAssembliesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{System#String}}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ReferencedAssembliesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{System#String}}#Set(System.Byte@,System.Collections.Generic.List{System.String}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ReferencedAssembliesAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ReferencedAssembliesAccessor.Set(Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld@,System.Collections.Generic.List{System.String}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ReferencedAssembliesAccessor.Get(Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ReferencedAssembliesSearchPathsAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ReferencedAssembliesSearchPathsAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ReferencedAssembliesSearchPathsAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ReferencedAssembliesSearchPathsAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ReferencedAssembliesSearchPathsAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ReferencedAssembliesSearchPathsAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ReferencedAssembliesSearchPathsAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ReferencedAssembliesSearchPathsAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ReferencedAssembliesSearchPathsAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ReferencedAssembliesSearchPathsAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ReferencedAssembliesSearchPathsAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ReferencedAssembliesSearchPathsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ReferencedAssembliesSearchPathsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ReferencedAssembliesSearchPathsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ReferencedAssembliesSearchPathsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{System#String}}#Set(System.Object,System.Collections.Generic.List{System.String}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ReferencedAssembliesSearchPathsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{System#String}}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ReferencedAssembliesSearchPathsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{System#String}}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ReferencedAssembliesSearchPathsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{System#String}}#Set(System.Byte@,System.Collections.Generic.List{System.String}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ReferencedAssembliesSearchPathsAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ReferencedAssembliesSearchPathsAccessor.Set(Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld@,System.Collections.Generic.List{System.String}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.ReferencedAssembliesSearchPathsAccessor.Get(Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.EditorExtensionAssembliesAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.EditorExtensionAssembliesAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.EditorExtensionAssembliesAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.EditorExtensionAssembliesAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.EditorExtensionAssembliesAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.EditorExtensionAssembliesAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.EditorExtensionAssembliesAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.EditorExtensionAssembliesAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.EditorExtensionAssembliesAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.EditorExtensionAssembliesAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.EditorExtensionAssembliesAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.EditorExtensionAssembliesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.EditorExtensionAssembliesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.EditorExtensionAssembliesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.EditorExtensionAssembliesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{System#String}}#Set(System.Object,System.Collections.Generic.List{System.String}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.EditorExtensionAssembliesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{System#String}}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.EditorExtensionAssembliesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{System#String}}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.EditorExtensionAssembliesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{System#String}}#Set(System.Byte@,System.Collections.Generic.List{System.String}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.EditorExtensionAssembliesAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.EditorExtensionAssembliesAccessor.Set(Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld@,System.Collections.Generic.List{System.String}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.EditorExtensionAssembliesAccessor.Get(Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.EditorExtensionAssembliesSearchPathsAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.EditorExtensionAssembliesSearchPathsAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.EditorExtensionAssembliesSearchPathsAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.EditorExtensionAssembliesSearchPathsAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.EditorExtensionAssembliesSearchPathsAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.EditorExtensionAssembliesSearchPathsAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.EditorExtensionAssembliesSearchPathsAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.EditorExtensionAssembliesSearchPathsAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.EditorExtensionAssembliesSearchPathsAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.EditorExtensionAssembliesSearchPathsAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.EditorExtensionAssembliesSearchPathsAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.EditorExtensionAssembliesSearchPathsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.EditorExtensionAssembliesSearchPathsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.EditorExtensionAssembliesSearchPathsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.EditorExtensionAssembliesSearchPathsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{System#String}}#Set(System.Object,System.Collections.Generic.List{System.String}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.EditorExtensionAssembliesSearchPathsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{System#String}}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.EditorExtensionAssembliesSearchPathsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{System#String}}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.EditorExtensionAssembliesSearchPathsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{System#String}}#Set(System.Byte@,System.Collections.Generic.List{System.String}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.EditorExtensionAssembliesSearchPathsAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.EditorExtensionAssembliesSearchPathsAccessor.Set(Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld@,System.Collections.Generic.List{System.String}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.EditorExtensionAssembliesSearchPathsAccessor.Get(Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.SkipContentMountingAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.SkipContentMountingAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.SkipContentMountingAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.SkipContentMountingAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.SkipContentMountingAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.SkipContentMountingAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.SkipContentMountingAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.SkipContentMountingAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.SkipContentMountingAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.SkipContentMountingAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.SkipContentMountingAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.SkipContentMountingAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.SkipContentMountingAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.SkipContentMountingAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.SkipContentMountingAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.SkipContentMountingAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.SkipContentMountingAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.SkipContentMountingAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.SkipContentMountingAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.SkipContentMountingAccessor.Set(Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.SkipContentMountingAccessor.Get(Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.EnableIgnoreProcessingErrorFlagsAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.EnableIgnoreProcessingErrorFlagsAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.EnableIgnoreProcessingErrorFlagsAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.EnableIgnoreProcessingErrorFlagsAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.EnableIgnoreProcessingErrorFlagsAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.EnableIgnoreProcessingErrorFlagsAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.EnableIgnoreProcessingErrorFlagsAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.EnableIgnoreProcessingErrorFlagsAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.EnableIgnoreProcessingErrorFlagsAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.EnableIgnoreProcessingErrorFlagsAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.EnableIgnoreProcessingErrorFlagsAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.EnableIgnoreProcessingErrorFlagsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.EnableIgnoreProcessingErrorFlagsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.EnableIgnoreProcessingErrorFlagsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.EnableIgnoreProcessingErrorFlagsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.EnableIgnoreProcessingErrorFlagsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.EnableIgnoreProcessingErrorFlagsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.EnableIgnoreProcessingErrorFlagsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.EnableIgnoreProcessingErrorFlagsAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.EnableIgnoreProcessingErrorFlagsAccessor.Set(Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld.TypeInfoHolder.EnableIgnoreProcessingErrorFlagsAccessor.Get(Keen.VRage.Core.Project.VRageProjectData_Migrations.VRageProjectDataOld@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Project.CompositeProjectCodeProvider">
            <summary>
            Wraps multiple code providers into one
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Project.EditorCodeProvider">
            <summary>
            
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Project.GameCodeProvider">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Project.IProjectCodeProvider">
            <summary>
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Project.IProjectCodeProvider.LoadProjectAssembliesAsync(Keen.VRage.Core.Project.VRageProject)">
            <summary>
            
            </summary>
            <param name="project"></param>
        </member>
        <member name="T:Keen.VRage.Core.Project.IProjectLocator">
            <summary>
            Provides a way to locate projects in the local file system or from the different UGC services
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Project.IProjectLocator.GetProjectsAsync(System.Collections.Generic.IEnumerable{Keen.VRage.Core.Project.VRageProjectID})">
            <summary>
            Locates multiple project by their IDs
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Project.LocalProjectLocator">
            <summary>
            Searches for projects in the local file system
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Project.LocalProjectLocator.AddSearchPath(System.String)">
            <summary>
            Adds search path to the list of cached paths. Locator will search for projects in these paths.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Project.LocalProjectLocator.CacheProjectPaths(Keen.VRage.Core.Project.VRageProject)">
            <summary>
            Caches project root folder, relative project directories and relative global search paths
            </summary>
            <param name="project"></param>
        </member>
        <member name="M:Keen.VRage.Core.Project.LocalProjectLocator.TryGetProject(System.IO.FileInfo,Keen.VRage.Core.Project.VRageProject@)">
            <summary>
            Load vrage project directly from file
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Project.LocalProjectLocator.GetProject(System.IO.FileInfo)">
            <summary>
            Load vrage project directly from file
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Project.LocalProjectLocator.GetProject(System.IO.FileStream)">
            <summary>
            Load vrage project directly from file stream. Used in the Editor because it has special wrappers for file streams. 
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Project.LocalProjectLocator.GetProjectAsync(Keen.VRage.Core.Project.VRageProjectID)">
            <summary>
            Locates project by their IDs in local file system
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Project.LocalProjectLocator.GetProjectsAsync(System.Collections.Generic.IEnumerable{Keen.VRage.Core.Project.VRageProjectID})">
            <inheritdoc/>
        </member>
        <member name="T:Keen.VRage.Core.Project.ModServiceId">
            <summary>
            DEPRECATED, use <see cref="T:Keen.VRage.Core.Project.ServiceIdCommon"/> instead. Defines api where mod is uploaded.   
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Project.ModSetupSettings">
            <summary>
            Settings for the mod setup. Should be used by the editor to determine what definition sets are allowed to be used in the mod projects
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Project.ModSetupSettings.AllowedDefinitionSets">
            <summary>
            Definition sets that are allowed to be used in the mod projects
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Project.ModSetupSettings.DefinitionBlackList">
            <summary>
            Definitions/configurations that are not allowed to be used in the mod projects
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Project.ModSetupSettings.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.ModSetupSettings.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.ModSetupSettings.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Project.ModSetupSettings@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.ModSetupSettings.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.ModSetupSettings.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Project.ModSetupSettings@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.ModSetupSettings.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.ModSetupSettings.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Project.ModSetupSettings@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.ModSetupSettings.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.ModSetupSettings.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.ModSetupSettings.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.ModSetupSettings.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.ModSetupSettings.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Project.ModSetupSettings@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.ModSetupSettings.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.ModSetupSettings.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Project.ModSetupSettings@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.ModSetupSettings.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.ModSetupSettings.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Project.ModSetupSettings@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.ModSetupSettings.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.ModSetupSettings.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Project.ModSetupSettings@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.ModSetupSettings.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Project.ModSetupSettings.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.ModSetupSettings.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.ModSetupSettings.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.ModSetupSettings.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Project#ModSetupSettings}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.ModSetupSettings.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Project.ModSetupSettings.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Project.ModSetupSettings.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Project.ModSetupSettings.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Project.ModSetupSettings.TypeInfoHolder.AllowedDefinitionSetsAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.ModSetupSettings.TypeInfoHolder.AllowedDefinitionSetsAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.ModSetupSettings.TypeInfoHolder.AllowedDefinitionSetsAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.ModSetupSettings.TypeInfoHolder.AllowedDefinitionSetsAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.ModSetupSettings.TypeInfoHolder.AllowedDefinitionSetsAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.ModSetupSettings.TypeInfoHolder.AllowedDefinitionSetsAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.ModSetupSettings.TypeInfoHolder.AllowedDefinitionSetsAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.ModSetupSettings.TypeInfoHolder.AllowedDefinitionSetsAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.ModSetupSettings.TypeInfoHolder.AllowedDefinitionSetsAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.ModSetupSettings.TypeInfoHolder.AllowedDefinitionSetsAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.ModSetupSettings.TypeInfoHolder.AllowedDefinitionSetsAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.ModSetupSettings.TypeInfoHolder.AllowedDefinitionSetsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.ModSetupSettings.TypeInfoHolder.AllowedDefinitionSetsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.ModSetupSettings.TypeInfoHolder.AllowedDefinitionSetsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.ModSetupSettings.TypeInfoHolder.AllowedDefinitionSetsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{System#String}}#Set(System.Object,System.Collections.Generic.List{System.String}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.ModSetupSettings.TypeInfoHolder.AllowedDefinitionSetsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{System#String}}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.ModSetupSettings.TypeInfoHolder.AllowedDefinitionSetsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{System#String}}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.ModSetupSettings.TypeInfoHolder.AllowedDefinitionSetsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{System#String}}#Set(System.Byte@,System.Collections.Generic.List{System.String}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.ModSetupSettings.TypeInfoHolder.AllowedDefinitionSetsAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.ModSetupSettings.TypeInfoHolder.AllowedDefinitionSetsAccessor.Set(Keen.VRage.Core.Project.ModSetupSettings@,System.Collections.Generic.List{System.String}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.ModSetupSettings.TypeInfoHolder.AllowedDefinitionSetsAccessor.Get(Keen.VRage.Core.Project.ModSetupSettings@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.ModSetupSettings.TypeInfoHolder.DefinitionBlackListAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.ModSetupSettings.TypeInfoHolder.DefinitionBlackListAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.ModSetupSettings.TypeInfoHolder.DefinitionBlackListAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.ModSetupSettings.TypeInfoHolder.DefinitionBlackListAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.ModSetupSettings.TypeInfoHolder.DefinitionBlackListAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.ModSetupSettings.TypeInfoHolder.DefinitionBlackListAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.ModSetupSettings.TypeInfoHolder.DefinitionBlackListAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.ModSetupSettings.TypeInfoHolder.DefinitionBlackListAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.ModSetupSettings.TypeInfoHolder.DefinitionBlackListAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.ModSetupSettings.TypeInfoHolder.DefinitionBlackListAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.ModSetupSettings.TypeInfoHolder.DefinitionBlackListAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.ModSetupSettings.TypeInfoHolder.DefinitionBlackListAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.ModSetupSettings.TypeInfoHolder.DefinitionBlackListAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.ModSetupSettings.TypeInfoHolder.DefinitionBlackListAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.ModSetupSettings.TypeInfoHolder.DefinitionBlackListAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#HashSet{System#Type}}#Set(System.Object,System.Collections.Generic.HashSet{System.Type}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.ModSetupSettings.TypeInfoHolder.DefinitionBlackListAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#HashSet{System#Type}}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.ModSetupSettings.TypeInfoHolder.DefinitionBlackListAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#HashSet{System#Type}}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.ModSetupSettings.TypeInfoHolder.DefinitionBlackListAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#HashSet{System#Type}}#Set(System.Byte@,System.Collections.Generic.HashSet{System.Type}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.ModSetupSettings.TypeInfoHolder.DefinitionBlackListAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.ModSetupSettings.TypeInfoHolder.DefinitionBlackListAccessor.Set(Keen.VRage.Core.Project.ModSetupSettings@,System.Collections.Generic.HashSet{System.Type}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.ModSetupSettings.TypeInfoHolder.DefinitionBlackListAccessor.Get(Keen.VRage.Core.Project.ModSetupSettings@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Project.ProjectDependencyResolver">
            <summary>
            Loads <see cref="T:Keen.VRage.Core.Project.VRageProject"/>'s dependencies in the topological order
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Project.ProjectDependencyResolver.ReadDependenciesAsync(Keen.VRage.Core.Project.VRageProject)">
            <summary>
            Returns projects dependencies in topological ordering recursively. 
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Project.ProjectType">
            <summary>
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Project.ProjectType.Unknown">
            <summary>
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Project.ProjectType.Vanilla">
            <summary>
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Project.ProjectType.DLC">
            <summary>
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Project.ProjectType.Mod">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Project.ServiceIdCommon">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Project.VRageProject">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Project.VRageProjectCommon">
            <summary>
            Common constants for VRage projects
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Project.VRageProjectCommon.ASSETS_SOURCES_FOLDER_NAME">
            <summary>
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Project.VRageProjectCommon.ASSETS_FOLDER_NAME">
            <summary>
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Project.VRageProjectCommon.CONTENT_FOLDER_NAME">
            <summary>
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Project.VRageProjectCommon.SCRIPTS_FOLDER_NAME">
            <summary>
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Project.VRageProjectCommon.SHADER_FOLDER_NAME">
            <summary>
            TODO SE2-17066 - the path will change when the shaders will be dug out of the assets.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Project.VRageProjectCommon.USER_DATA_SETTINGS_FOLDER">
            <summary>
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Project.VRageProjectCommon.VRAGE_PROJECT_FILE">
            <summary>
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Project.VRageProjectCommon.FMOD_PROJECT_FOLDER">
            <summary>
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectCommon.FolderToProjectFilePath(System.String)">
            <summary>
            Returns path to the vrgproj from the folder where it is located
            </summary>
            <param name="folder"></param>
            <returns></returns>
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectCommon.ReadProjects(System.Collections.Generic.IEnumerable{Keen.VRage.Core.Project.VRageProjectID},System.Collections.Generic.IReadOnlyDictionary{System.String,Keen.VRage.Core.Project.IProjectLocator})">
            <summary>
            Helper method to read projects from multiple locators using their <see cref="T:Keen.VRage.Core.Project.VRageProjectID"/>'s. Locators are selected by service ID defined in the <see cref="T:Keen.VRage.Core.Project.VRageProjectID"/>.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectCommon.GetModSetupSettings(Keen.VRage.Core.EngineComponents.ProjectManagerEngineComponent.Token)">
            <summary>
            Helper to get mod setup settings from the project token
            </summary>
            <returns><see cref="T:Keen.VRage.Core.Project.ModSetupSettings"/> from the dependency projects if contains main project</returns>
        </member>
        <member name="T:Keen.VRage.Core.Project.VRageProjectID">
            <summary>
            Project identifier. Used for resolving project dependencies
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectID.Guid">
            <summary>
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectID.ModId">
            <summary>
            Id from the mod API
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectID.ServiceId">
            <summary>
            API where mode is uploaded. 'Unknown' for projects that are not uploaded to any mod api
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Project.VRageProjectID.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectID.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectID.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Project.VRageProjectID@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectID.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectID.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Project.VRageProjectID@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectID.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectID.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Project.VRageProjectID@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectID.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectID.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectID.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectID.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectID.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Project.VRageProjectID@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectID.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectID.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Project.VRageProjectID@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectID.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectID.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Project.VRageProjectID@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectID.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectID.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Project.VRageProjectID@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectID.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Project.VRageProjectID.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectID.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectID.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectID.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Project#VRageProjectID}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectID.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Project.VRageProjectID.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Project.VRageProjectID.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Project.VRageProjectID.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectID.TypeInfoHolder.GuidAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectID.TypeInfoHolder.GuidAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectID.TypeInfoHolder.GuidAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectID.TypeInfoHolder.GuidAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectID.TypeInfoHolder.GuidAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectID.TypeInfoHolder.GuidAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectID.TypeInfoHolder.GuidAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectID.TypeInfoHolder.GuidAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectID.TypeInfoHolder.GuidAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectID.TypeInfoHolder.GuidAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectID.TypeInfoHolder.GuidAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectID.TypeInfoHolder.GuidAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectID.TypeInfoHolder.GuidAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectID.TypeInfoHolder.GuidAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectID.TypeInfoHolder.GuidAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Guid}#Set(System.Object,System.Guid@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectID.TypeInfoHolder.GuidAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Guid}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectID.TypeInfoHolder.GuidAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Guid}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectID.TypeInfoHolder.GuidAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Guid}#Set(System.Byte@,System.Guid@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectID.TypeInfoHolder.GuidAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectID.TypeInfoHolder.GuidAccessor.Set(Keen.VRage.Core.Project.VRageProjectID@,System.Guid@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectID.TypeInfoHolder.GuidAccessor.Get(Keen.VRage.Core.Project.VRageProjectID@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectID.TypeInfoHolder.ModIdAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectID.TypeInfoHolder.ModIdAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectID.TypeInfoHolder.ModIdAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectID.TypeInfoHolder.ModIdAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectID.TypeInfoHolder.ModIdAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectID.TypeInfoHolder.ModIdAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectID.TypeInfoHolder.ModIdAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectID.TypeInfoHolder.ModIdAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectID.TypeInfoHolder.ModIdAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectID.TypeInfoHolder.ModIdAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectID.TypeInfoHolder.ModIdAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectID.TypeInfoHolder.ModIdAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectID.TypeInfoHolder.ModIdAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectID.TypeInfoHolder.ModIdAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectID.TypeInfoHolder.ModIdAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Object,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectID.TypeInfoHolder.ModIdAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectID.TypeInfoHolder.ModIdAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectID.TypeInfoHolder.ModIdAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Byte@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectID.TypeInfoHolder.ModIdAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectID.TypeInfoHolder.ModIdAccessor.Set(Keen.VRage.Core.Project.VRageProjectID@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectID.TypeInfoHolder.ModIdAccessor.Get(Keen.VRage.Core.Project.VRageProjectID@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectID.TypeInfoHolder.ServiceIdAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectID.TypeInfoHolder.ServiceIdAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectID.TypeInfoHolder.ServiceIdAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectID.TypeInfoHolder.ServiceIdAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectID.TypeInfoHolder.ServiceIdAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectID.TypeInfoHolder.ServiceIdAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectID.TypeInfoHolder.ServiceIdAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectID.TypeInfoHolder.ServiceIdAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Project.VRageProjectID.TypeInfoHolder.ServiceIdAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectID.TypeInfoHolder.ServiceIdAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectID.TypeInfoHolder.ServiceIdAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectID.TypeInfoHolder.ServiceIdAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectID.TypeInfoHolder.ServiceIdAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectID.TypeInfoHolder.ServiceIdAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectID.TypeInfoHolder.ServiceIdAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Object,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectID.TypeInfoHolder.ServiceIdAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectID.TypeInfoHolder.ServiceIdAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectID.TypeInfoHolder.ServiceIdAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Byte@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectID.TypeInfoHolder.ServiceIdAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectID.TypeInfoHolder.ServiceIdAccessor.Set(Keen.VRage.Core.Project.VRageProjectID@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Project.VRageProjectID.TypeInfoHolder.ServiceIdAccessor.Get(Keen.VRage.Core.Project.VRageProjectID@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.NamespaceDoc">
            <summary>
            Contains Platform and Service interfaces and implementation accessors, accessible by systems higher in the dependency chain.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Physics.ArmorModelAsset">
            <summary>
            Asset for armor models
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Physics.ArmorSideAsset">
            <summary>
            Asset for armor sides
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Physics.ArmsideAssetType">
            <summary>
            Armside asset type
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Physics.ArmblockAssetType">
            <summary>
            Armblock asset type
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Platform.CrashReporting.CollectedCrash@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Platform.CrashReporting.CollectedCrash@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Platform.CrashReporting.CollectedCrash@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Platform.CrashReporting.CollectedCrash@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Platform.CrashReporting.CollectedCrash@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Platform.CrashReporting.CollectedCrash@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Platform.CrashReporting.CollectedCrash@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Platform#CrashReporting#CollectedCrash}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.GameIDAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.GameIDAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.GameIDAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.GameIDAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.GameIDAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.GameIDAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.GameIDAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.GameIDAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.GameIDAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.GameIDAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.GameIDAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.GameIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.GameIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.GameIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.GameIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Object,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.GameIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.GameIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.GameIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Byte@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.GameIDAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.GameIDAccessor.Set(Keen.VRage.Core.Platform.CrashReporting.CollectedCrash@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.GameIDAccessor.Get(Keen.VRage.Core.Platform.CrashReporting.CollectedCrash@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.IsOfficialAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.IsOfficialAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.IsOfficialAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.IsOfficialAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.IsOfficialAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.IsOfficialAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.IsOfficialAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.IsOfficialAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.IsOfficialAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.IsOfficialAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.IsOfficialAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.IsOfficialAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.IsOfficialAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.IsOfficialAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.IsOfficialAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.IsOfficialAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.IsOfficialAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.IsOfficialAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.IsOfficialAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.IsOfficialAccessor.Set(Keen.VRage.Core.Platform.CrashReporting.CollectedCrash@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.IsOfficialAccessor.Get(Keen.VRage.Core.Platform.CrashReporting.CollectedCrash@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.AppVersionAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.AppVersionAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.AppVersionAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.AppVersionAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.AppVersionAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.AppVersionAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.AppVersionAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.AppVersionAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.AppVersionAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.AppVersionAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.AppVersionAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.AppVersionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.AppVersionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.AppVersionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.AppVersionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Object,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.AppVersionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.AppVersionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.AppVersionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Byte@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.AppVersionAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.AppVersionAccessor.Set(Keen.VRage.Core.Platform.CrashReporting.CollectedCrash@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.AppVersionAccessor.Get(Keen.VRage.Core.Platform.CrashReporting.CollectedCrash@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.UserContactAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.UserContactAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.UserContactAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.UserContactAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.UserContactAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.UserContactAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.UserContactAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.UserContactAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.UserContactAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.UserContactAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.UserContactAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.UserContactAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.UserContactAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.UserContactAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.UserContactAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Object,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.UserContactAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.UserContactAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.UserContactAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Byte@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.UserContactAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.UserContactAccessor.Set(Keen.VRage.Core.Platform.CrashReporting.CollectedCrash@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.UserContactAccessor.Get(Keen.VRage.Core.Platform.CrashReporting.CollectedCrash@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.StateAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.StateAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.StateAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.StateAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.StateAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.StateAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.StateAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.StateAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.StateAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.StateAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.StateAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.StateAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.StateAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.StateAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.StateAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Platform#CrashReporting#CrashState}#Set(System.Object,Keen.VRage.Core.Platform.CrashReporting.CrashState@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.StateAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Platform#CrashReporting#CrashState}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.StateAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Platform#CrashReporting#CrashState}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.StateAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Platform#CrashReporting#CrashState}#Set(System.Byte@,Keen.VRage.Core.Platform.CrashReporting.CrashState@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.StateAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.StateAccessor.Set(Keen.VRage.Core.Platform.CrashReporting.CollectedCrash@,Keen.VRage.Core.Platform.CrashReporting.CrashState@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.StateAccessor.Get(Keen.VRage.Core.Platform.CrashReporting.CollectedCrash@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.TotalProcessTimeAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.TotalProcessTimeAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.TotalProcessTimeAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.TotalProcessTimeAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.TotalProcessTimeAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.TotalProcessTimeAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.TotalProcessTimeAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.TotalProcessTimeAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.TotalProcessTimeAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.TotalProcessTimeAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.TotalProcessTimeAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.TotalProcessTimeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.TotalProcessTimeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.TotalProcessTimeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.TotalProcessTimeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#TimeSpan}#Set(System.Object,System.TimeSpan@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.TotalProcessTimeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#TimeSpan}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.TotalProcessTimeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#TimeSpan}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.TotalProcessTimeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#TimeSpan}#Set(System.Byte@,System.TimeSpan@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.TotalProcessTimeAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.TotalProcessTimeAccessor.Set(Keen.VRage.Core.Platform.CrashReporting.CollectedCrash@,System.TimeSpan@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.TotalProcessTimeAccessor.Get(Keen.VRage.Core.Platform.CrashReporting.CollectedCrash@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.IsTaskAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.IsTaskAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.IsTaskAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.IsTaskAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.IsTaskAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.IsTaskAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.IsTaskAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.IsTaskAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.IsTaskAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.IsTaskAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.IsTaskAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.IsTaskAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.IsTaskAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.IsTaskAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.IsTaskAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.IsTaskAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.IsTaskAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.IsTaskAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.IsTaskAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.IsTaskAccessor.Set(Keen.VRage.Core.Platform.CrashReporting.CollectedCrash@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.IsTaskAccessor.Get(Keen.VRage.Core.Platform.CrashReporting.CollectedCrash@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.BranchNameAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.BranchNameAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.BranchNameAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.BranchNameAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.BranchNameAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.BranchNameAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.BranchNameAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.BranchNameAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.BranchNameAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.BranchNameAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.BranchNameAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.BranchNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.BranchNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.BranchNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.BranchNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Object,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.BranchNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.BranchNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.BranchNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Byte@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.BranchNameAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.BranchNameAccessor.Set(Keen.VRage.Core.Platform.CrashReporting.CollectedCrash@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.BranchNameAccessor.Get(Keen.VRage.Core.Platform.CrashReporting.CollectedCrash@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.MainLogNameAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.MainLogNameAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.MainLogNameAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.MainLogNameAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.MainLogNameAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.MainLogNameAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.MainLogNameAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.MainLogNameAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.MainLogNameAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.MainLogNameAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.MainLogNameAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.MainLogNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.MainLogNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.MainLogNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.MainLogNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Object,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.MainLogNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.MainLogNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.MainLogNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Byte@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.MainLogNameAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.MainLogNameAccessor.Set(Keen.VRage.Core.Platform.CrashReporting.CollectedCrash@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.MainLogNameAccessor.Get(Keen.VRage.Core.Platform.CrashReporting.CollectedCrash@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.ProcessFilesAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.ProcessFilesAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.ProcessFilesAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.ProcessFilesAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.ProcessFilesAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.ProcessFilesAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.ProcessFilesAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.ProcessFilesAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.ProcessFilesAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.ProcessFilesAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.ProcessFilesAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.ProcessFilesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.ProcessFilesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.ProcessFilesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.ProcessFilesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{System#String}}#Set(System.Object,System.Collections.Generic.List{System.String}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.ProcessFilesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{System#String}}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.ProcessFilesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{System#String}}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.ProcessFilesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{System#String}}#Set(System.Byte@,System.Collections.Generic.List{System.String}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.ProcessFilesAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.ProcessFilesAccessor.Set(Keen.VRage.Core.Platform.CrashReporting.CollectedCrash@,System.Collections.Generic.List{System.String}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.ProcessFilesAccessor.Get(Keen.VRage.Core.Platform.CrashReporting.CollectedCrash@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.ExceptionAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.ExceptionAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.ExceptionAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.ExceptionAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.ExceptionAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.ExceptionAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.ExceptionAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.ExceptionAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.ExceptionAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.ExceptionAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.ExceptionAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.ExceptionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.ExceptionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.ExceptionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.ExceptionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Platform#CrashReporting#ExceptionInfo}#Set(System.Object,Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.ExceptionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Platform#CrashReporting#ExceptionInfo}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.ExceptionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Platform#CrashReporting#ExceptionInfo}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.ExceptionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Platform#CrashReporting#ExceptionInfo}#Set(System.Byte@,Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.ExceptionAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.ExceptionAccessor.Set(Keen.VRage.Core.Platform.CrashReporting.CollectedCrash@,Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.ExceptionAccessor.Get(Keen.VRage.Core.Platform.CrashReporting.CollectedCrash@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.RawProcessDataAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.RawProcessDataAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.RawProcessDataAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.RawProcessDataAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.RawProcessDataAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.RawProcessDataAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.RawProcessDataAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.RawProcessDataAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.RawProcessDataAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.RawProcessDataAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.RawProcessDataAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.RawProcessDataAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.RawProcessDataAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.RawProcessDataAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.RawProcessDataAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#Dictionary{System#String,System#Object}}#Set(System.Object,System.Collections.Generic.Dictionary{System.String,System.Object}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.RawProcessDataAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#Dictionary{System#String,System#Object}}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.RawProcessDataAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#Dictionary{System#String,System#Object}}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.RawProcessDataAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#Dictionary{System#String,System#Object}}#Set(System.Byte@,System.Collections.Generic.Dictionary{System.String,System.Object}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.RawProcessDataAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.RawProcessDataAccessor.Set(Keen.VRage.Core.Platform.CrashReporting.CollectedCrash@,System.Collections.Generic.Dictionary{System.String,System.Object}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CollectedCrash.TypeInfoHolder.RawProcessDataAccessor.Get(Keen.VRage.Core.Platform.CrashReporting.CollectedCrash@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Platform.CrashReporting.ICrashInfoCollector">
            <summary>
            Collects additional files and data for the crash handler.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ICrashInfoCollector.AddDataCollector(Keen.VRage.Core.Platform.CrashReporting.CrashHandler.SupplyAdditionalDataHandler)">
            <summary>
            Adds a handler to collect additional process data on crash info requested.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ICrashInfoCollector.RemoveDataCollector(Keen.VRage.Core.Platform.CrashReporting.CrashHandler.SupplyAdditionalDataHandler)">
            <summary>
            Removes a handler for collecting additional process data on crash info requested.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ICrashInfoCollector.AddFileCollector(Keen.VRage.Core.Platform.CrashReporting.CrashHandler.SupplyAdditionalFileHandler)">
            <summary>
            Adds a handler to collect additional files on crash info requested.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ICrashInfoCollector.RemoveFileCollector(Keen.VRage.Core.Platform.CrashReporting.CrashHandler.SupplyAdditionalFileHandler)">
            <summary>
            Removes a handler for collecting additional files on crash info requested.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Platform.CrashReporting.CrashHandler">
            <summary>
            CrashHandler is responsible for preparing and submitting reports to remote as well as generating crash messages for displaying to the user.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CrashHandler.ShowMessageBox">
            <summary>
            Show a message to users upon crashing.
            </summary>
        </member>
        <member name="E:Keen.VRage.Core.Platform.CrashReporting.CrashHandler.OnAdditionalDataRequested">
            <summary>
            An event fired when crash handler requires more data to be sent with the report.
            </summary>
        </member>
        <member name="E:Keen.VRage.Core.Platform.CrashReporting.CrashHandler.OnAdditionalFileRequested">
            <summary>
            An event fired when crash handler requires additional file to be sent with the report.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Platform.CrashReporting.CrashHandler.SupplyAdditionalDataHandler">
            <summary>
            Handler delegate for <see cref="T:Keen.VRage.Core.Platform.CrashReporting.CrashHandler.SupplyAdditionalDataHandler"/>
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Platform.CrashReporting.CrashHandler.SupplyAdditionalFileHandler">
            <summary>
            Handler delegate for <see cref="T:Keen.VRage.Core.Platform.CrashReporting.CrashHandler.SupplyAdditionalFileHandler"/>
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashHandler.InitializeEarly">
            <summary>
            Initializes the CrashHandler and sets up the unhandled exception handlers.
            <remarks>Initializes the bare minimum to catch unhandled exceptions in early loading stages</remarks>
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashHandler.Initialize(Keen.VRage.Core.Platform.CrashReporting.CrashReportingSetup,Keen.VRage.Core.Platform.CrashReporting.ICrashReporter,Keen.VRage.Core.Platform.Http.IPlatformHttp,System.Action{System.Int32})">
            <summary>
            Initializes the CrashHandler with the provided setup.
            </summary>
            <param name="setup">Crash reporting setup parameters</param>
            <param name="reporter">Interface to where to report crashes</param>
            <param name="http">HTTP Client instance</param>
            <param name="terminationCallback">Callback when the termination has been done</param>
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashHandler.Dispose">
            <summary>
            Disposes the CrashHandler and cancels all pending tasks.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashHandler.PostInit(Keen.VRage.Core.Analytics.IAnalyticsManager,Keen.VRage.Core.EngineComponents.IOptions)">
            <summary>
            Post-initialize the analytics manager with optional components.
            </summary>
            <param name="analytics">Used to send events in case a crash is detected.</param>
            <param name="optionsStorage">Used to retrieve the <see cref="T:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart"/> when provided.</param>
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashHandler.OverrideCrashStateForUnsupportedProcess(Keen.VRage.Core.Platform.CrashReporting.CrashState,System.String)">
            <summary>
            In the case when the process is running on an unsupported machine or with unsupported software, we override the crash state to filter out unwanted crash.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashHandler.TerminateProcess">
            <summary>
            Terminates the current process but adds a termination log to prevent flagging the termination as sudden death.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashHandler.CreateTerminationLog">
            <summary>
            Creates and saves a termination log.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashHandler.RequestDump">
            <summary>
            Makes sure that the crash handler will produce a dump regardless of whether crash reporting was enabled.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashHandler.SendSuddenDeathReport">
            <summary>
            Send a sudden crash report.
            <remarks>Used when the game didn't had enough time to create the proper crash logs and crashed it anyways</remarks> 
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashHandler.GetCrashInfoFileName">
            <summary>
            Returns the crash report log file as a tuple of name and text.
            </summary>
            <returns>string containing the name of the crash report file</returns>
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashHandler.CreateNewCrashReportFile(System.String,System.String,Keen.VRage.Library.Filesystem.FileHandle@)">
            <summary>
            Create a new file in the CrashReports temp folder that can be added to the crash reporting data as additional file.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashHandler.AddDataCollector(Keen.VRage.Core.Platform.CrashReporting.CrashHandler.SupplyAdditionalDataHandler)">
            <inheritdoc cref="M:Keen.VRage.Core.Platform.CrashReporting.ICrashInfoCollector.AddDataCollector(Keen.VRage.Core.Platform.CrashReporting.CrashHandler.SupplyAdditionalDataHandler)"/>
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashHandler.RemoveDataCollector(Keen.VRage.Core.Platform.CrashReporting.CrashHandler.SupplyAdditionalDataHandler)">
            <inheritdoc cref="M:Keen.VRage.Core.Platform.CrashReporting.ICrashInfoCollector.RemoveDataCollector(Keen.VRage.Core.Platform.CrashReporting.CrashHandler.SupplyAdditionalDataHandler)"/>
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashHandler.AddFileCollector(Keen.VRage.Core.Platform.CrashReporting.CrashHandler.SupplyAdditionalFileHandler)">
            <inheritdoc cref="M:Keen.VRage.Core.Platform.CrashReporting.ICrashInfoCollector.AddFileCollector(Keen.VRage.Core.Platform.CrashReporting.CrashHandler.SupplyAdditionalFileHandler)"/>
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashHandler.RemoveFileCollector(Keen.VRage.Core.Platform.CrashReporting.CrashHandler.SupplyAdditionalFileHandler)">
            <inheritdoc cref="M:Keen.VRage.Core.Platform.CrashReporting.ICrashInfoCollector.RemoveFileCollector(Keen.VRage.Core.Platform.CrashReporting.CrashHandler.SupplyAdditionalFileHandler)"/>
        </member>
        <member name="T:Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfiguration">
            <summary>
            Configures the crash handler on startup to override any default values in the reporting setup.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfiguration.EnableCrashReportingOverride">
            <summary>
            Regardless of the default crash reporting setup, this value will forcefully set it and log the set value.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfiguration.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer{Keen#VRage#Core#Platform#CrashReporting#CrashHandlerCoreConfiguration}#NameSerializer">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfiguration.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#NameSerializer">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfiguration.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#NameType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfiguration.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer{Keen#VRage#Core#Platform#CrashReporting#CrashHandlerCoreConfiguration}#ShouldSerializeAsName(Keen.VRage.Library.Serialization.SerializationContext,Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfiguration@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfiguration.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#ShouldSerializeAsName(Keen.VRage.Library.Serialization.SerializationContext,System.Object@)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfiguration.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfiguration.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Platform#CrashReporting#CrashHandlerCoreConfiguration}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfiguration.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfiguration.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfiguration.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfiguration.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfiguration.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfiguration.TypeInfoHolder.EnableCrashReportingOverrideAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfiguration.TypeInfoHolder.EnableCrashReportingOverrideAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfiguration.TypeInfoHolder.EnableCrashReportingOverrideAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfiguration.TypeInfoHolder.EnableCrashReportingOverrideAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfiguration.TypeInfoHolder.EnableCrashReportingOverrideAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfiguration.TypeInfoHolder.EnableCrashReportingOverrideAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfiguration.TypeInfoHolder.EnableCrashReportingOverrideAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfiguration.TypeInfoHolder.EnableCrashReportingOverrideAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfiguration.TypeInfoHolder.EnableCrashReportingOverrideAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfiguration.TypeInfoHolder.EnableCrashReportingOverrideAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfiguration.TypeInfoHolder.EnableCrashReportingOverrideAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfiguration.TypeInfoHolder.EnableCrashReportingOverrideAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfiguration.TypeInfoHolder.EnableCrashReportingOverrideAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfiguration.TypeInfoHolder.EnableCrashReportingOverrideAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfiguration.TypeInfoHolder.EnableCrashReportingOverrideAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean?}#Set(System.Object,System.Nullable{System.Boolean}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfiguration.TypeInfoHolder.EnableCrashReportingOverrideAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean?}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfiguration.TypeInfoHolder.EnableCrashReportingOverrideAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean?}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfiguration.TypeInfoHolder.EnableCrashReportingOverrideAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean?}#Set(System.Byte@,System.Nullable{System.Boolean}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfiguration.TypeInfoHolder.EnableCrashReportingOverrideAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfiguration.TypeInfoHolder.EnableCrashReportingOverrideAccessor.Set(Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfiguration@,System.Nullable{System.Boolean}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfiguration.TypeInfoHolder.EnableCrashReportingOverrideAccessor.Get(Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfiguration@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Platform.CrashReporting.CrashMonitorHelper">
            <summary>
            A class that provides useful methods for monitoring crashes that are unobserved by the crash handler.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashMonitorHelper.StartNativeCrashTracking(Keen.VRage.Core.IPlatformFactory,System.String,System.String[]@)">
            <summary>
            Starts tracking of native crashes for the current platform.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashMonitorHelper.SetTrackingPathToHandler(System.String)">
            <summary>
            Sets the path of the native dump for the CrashHandler to use.
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashMonitorHelper.IsBuildAgent">
            <summary>
            Checks whether the process runs on a build agent.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashMonitorHelper.IsLocalBranch(System.String@)">
            <summary>
            Informs whether it is a local developer process and returns the process branch name.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashMonitorHelper.GenerateTempPath(System.String)">
            <summary>
            Generates a temp path for dumping the application information.
            Used to generate the path early when the engine is not initialized yet.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart">
            <summary>
            Options for the user for handling crash reporting events.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Platform#CrashReporting#CrashReportingOptionsPart}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.TypeInfoHolder._shareContactInformationAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.TypeInfoHolder._shareContactInformationAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.TypeInfoHolder._shareContactInformationAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.TypeInfoHolder._shareContactInformationAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.TypeInfoHolder._shareContactInformationAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.TypeInfoHolder._shareContactInformationAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.TypeInfoHolder._shareContactInformationAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.TypeInfoHolder._shareContactInformationAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.TypeInfoHolder._shareContactInformationAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.TypeInfoHolder._shareContactInformationAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.TypeInfoHolder._shareContactInformationAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.TypeInfoHolder._shareContactInformationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.TypeInfoHolder._shareContactInformationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.TypeInfoHolder._shareContactInformationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.TypeInfoHolder._shareContactInformationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.TypeInfoHolder._shareContactInformationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.TypeInfoHolder._shareContactInformationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.TypeInfoHolder._shareContactInformationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.TypeInfoHolder._shareContactInformationAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.TypeInfoHolder._shareContactInformationAccessor.Set(Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.TypeInfoHolder._shareContactInformationAccessor.Get(Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.TypeInfoHolder._contactInformationAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.TypeInfoHolder._contactInformationAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.TypeInfoHolder._contactInformationAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.TypeInfoHolder._contactInformationAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.TypeInfoHolder._contactInformationAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.TypeInfoHolder._contactInformationAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.TypeInfoHolder._contactInformationAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.TypeInfoHolder._contactInformationAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.TypeInfoHolder._contactInformationAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.TypeInfoHolder._contactInformationAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.TypeInfoHolder._contactInformationAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.TypeInfoHolder._contactInformationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.TypeInfoHolder._contactInformationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.TypeInfoHolder._contactInformationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.TypeInfoHolder._contactInformationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Object,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.TypeInfoHolder._contactInformationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.TypeInfoHolder._contactInformationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.TypeInfoHolder._contactInformationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Byte@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.TypeInfoHolder._contactInformationAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.TypeInfoHolder._contactInformationAccessor.Set(Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.TypeInfoHolder._contactInformationAccessor.Get(Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.TypeInfoHolder.ShareContactInformationAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.TypeInfoHolder.ShareContactInformationAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.TypeInfoHolder.ShareContactInformationAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.TypeInfoHolder.ShareContactInformationAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.TypeInfoHolder.ShareContactInformationAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.TypeInfoHolder.ShareContactInformationAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.TypeInfoHolder.ShareContactInformationAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.TypeInfoHolder.ShareContactInformationAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.TypeInfoHolder.ShareContactInformationAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.TypeInfoHolder.ShareContactInformationAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.TypeInfoHolder.ShareContactInformationAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.TypeInfoHolder.ShareContactInformationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.TypeInfoHolder.ShareContactInformationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.TypeInfoHolder.ShareContactInformationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.TypeInfoHolder.ShareContactInformationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.TypeInfoHolder.ShareContactInformationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.TypeInfoHolder.ShareContactInformationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.TypeInfoHolder.ShareContactInformationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.TypeInfoHolder.ShareContactInformationAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.TypeInfoHolder.ShareContactInformationAccessor.Set(Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.TypeInfoHolder.ShareContactInformationAccessor.Get(Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.TypeInfoHolder.ContactInformationAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.TypeInfoHolder.ContactInformationAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.TypeInfoHolder.ContactInformationAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.TypeInfoHolder.ContactInformationAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.TypeInfoHolder.ContactInformationAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.TypeInfoHolder.ContactInformationAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.TypeInfoHolder.ContactInformationAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.TypeInfoHolder.ContactInformationAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.TypeInfoHolder.ContactInformationAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.TypeInfoHolder.ContactInformationAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.TypeInfoHolder.ContactInformationAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.TypeInfoHolder.ContactInformationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.TypeInfoHolder.ContactInformationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.TypeInfoHolder.ContactInformationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.TypeInfoHolder.ContactInformationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Object,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.TypeInfoHolder.ContactInformationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.TypeInfoHolder.ContactInformationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.TypeInfoHolder.ContactInformationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Byte@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.TypeInfoHolder.ContactInformationAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.TypeInfoHolder.ContactInformationAccessor.Set(Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart.TypeInfoHolder.ContactInformationAccessor.Get(Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptionsPart@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Platform.CrashReporting.CrashReportingSetup">
            <summary>
            VRage initialization struct that provides the CrashHandler with the basic application info of the initializing app.
            If not set - application will not perform crash reporting.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Platform.CrashReporting.CrashReportingSetup.GameID">
            <summary>
            ID of the game
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Platform.CrashReporting.CrashReportingSetup.GameVersion">
            <summary>
            Version of the game
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Platform.CrashReporting.CrashReportingSetup.Options">
            <summary>
            How the crash reporting system should behave.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Platform.CrashReporting.CrashReportingSetup.Reporter">
            <summary>
            What reporter should be used. By default use the current platform one.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptions">
            <summary>
            Options for enabling the crash reporting system in the engine.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptions.Disabled">
            <summary>
            Crash reporting will not be performed at all.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptions.EnabledForUsers">
            <summary>
            Crash reporting will work only if the debugger is not attached.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Platform.CrashReporting.CrashReportingOptions.EnabledForDevelopers">
            <summary>
            Crash reporting will work in all situations.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Platform.CrashReporting.CrashReportMeta.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashReportMeta.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashReportMeta.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Platform.CrashReporting.CrashReportMeta@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashReportMeta.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashReportMeta.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Platform.CrashReporting.CrashReportMeta@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashReportMeta.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashReportMeta.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Platform.CrashReporting.CrashReportMeta@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashReportMeta.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashReportMeta.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashReportMeta.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashReportMeta.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashReportMeta.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Platform.CrashReporting.CrashReportMeta@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashReportMeta.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashReportMeta.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Platform.CrashReporting.CrashReportMeta@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashReportMeta.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashReportMeta.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashReportMeta.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Platform.CrashReporting.CrashReportMeta@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashReportMeta.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Platform.CrashReporting.CrashReportMeta.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CrashReportMeta.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashReportMeta.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CrashReportMeta.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Platform#CrashReporting#CrashReportMeta}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashReportMeta.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Platform.CrashReporting.CrashReportMeta.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Platform.CrashReporting.CrashReportMeta.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Platform.CrashReporting.CrashReportMeta.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="T:Keen.VRage.Core.Platform.CrashReporting.CrashState">
            <summary>
            Describes the type of crash that occurred.
            WARNING: maximum length of 16 characters, otherwise it will cause server error
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Platform.CrashReporting.DiagnosticReporter">
            <summary>
            Add-on for the crash-handler to upload information about non-fatal errors. 
            </summary>
            <remarks>
            Reports on assertion failures and Log warnings/errors.
            </remarks>
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.DiagnosticReporter.Active">
            <summary>
            Is reporting active and reports will be sent?
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.DiagnosticReporter.AddNonFatalErrorReport(System.String,System.Collections.Generic.List{Keen.VRage.Library.Filesystem.FileHandle})">
            <summary>
            Adds a non fatal error message that can have attached additional files to add to the report.
            Error message is logged and if configuration is set to sent reports, callback for files will be called
            </summary>
            <param name="message">Error message</param>
            <param name="additionalFiles">User callback to supply additional files </param>
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.DiagnosticReporter.Activate">
            <summary>
            Start listening for unexpected diagnostic events that can be reported to analytics.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Platform.CrashReporting.FirstAssertionException">
            <summary>
            Exception used for crash reporting to bucket assertions.
            </summary>
            <remarks><para>If <see cref="P:Keen.VRage.Core.Diagnostics.DiagnosticHandlerBase.AutoIgnoreMessages"/> is enabled and <see cref="T:Keen.VRage.Core.Platform.CrashReporting.DiagnosticReporter"/> is active then this exception
            is thrown to push those diagnostics to Crash Analytics.</para>
            <para>The first encountered assertion is reported, that is used for bucketing.</para>
            </remarks>
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.FirstAssertionException.#ctor(System.String,System.String)">
            <summary>
            Exception used for crash reporting to bucket assertions.
            </summary>
            <remarks><para>If <see cref="P:Keen.VRage.Core.Diagnostics.DiagnosticHandlerBase.AutoIgnoreMessages"/> is enabled and <see cref="T:Keen.VRage.Core.Platform.CrashReporting.DiagnosticReporter"/> is active then this exception
            is thrown to push those diagnostics to Crash Analytics.</para>
            <para>The first encountered assertion is reported, that is used for bucketing.</para>
            </remarks>
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.FirstAssertionException.ExceptionState">
            <summary>Special state so that it is correctly recognized by the crash handler.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.FirstAssertionException.FirstMessage">
            <summary> Message on the first reported assertion. </summary>
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.FirstAssertionException.FirstStackTrace">
            <summary> Stack trace of the first reported assertion. </summary>
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.FirstAssertionException.Message">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Platform.CrashReporting.FirstLogMessageException">
            <summary>
            Exception used for crash reporting to bucket log warnings/errors.
            </summary>
            <remarks><para>If <see cref="T:Keen.VRage.Core.Platform.CrashReporting.DiagnosticReporter"/> is active then this exception
            is thrown to push those diagnostics to Crash Analytics.</para>
            <para>The first encountered log message is reported, that is used for bucketing.</para>
            </remarks>
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.FirstLogMessageException.#ctor(System.String,System.String)">
            <summary>
            Exception used for crash reporting to bucket log warnings/errors.
            </summary>
            <remarks><para>If <see cref="T:Keen.VRage.Core.Platform.CrashReporting.DiagnosticReporter"/> is active then this exception
            is thrown to push those diagnostics to Crash Analytics.</para>
            <para>The first encountered log message is reported, that is used for bucketing.</para>
            </remarks>
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.FirstLogMessageException.ExceptionState">
            <summary>Special state so that it is correctly recognized by the crash handler.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.FirstLogMessageException.FirstMessage">
            <summary> Message on the first reported assertion. </summary>
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.FirstLogMessageException.FirstStackTrace">
            <summary> Stack trace of the first reported assertion. </summary>
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.FirstLogMessageException.Message">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Platform.CrashReporting.NonFatalErrorInfo">
            <summary>
            Structure used to store error information with attached created files for crash report
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Platform.CrashReporting.NonFatalErrorInfo.Message">
            <summary>
            Message 
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Platform.CrashReporting.NonFatalErrorInfo.Files">
            <summary>
            List of absolute paths of files to attach to report 
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Platform.CrashReporting.NonFatalErrorException">
            <summary>
            Exception used to pass custom non fatal error to crash reporter
            </summary>
            <param name="errorList"> List of custom errors</param>
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.NonFatalErrorException.#ctor(System.Collections.Generic.List{Keen.VRage.Core.Platform.CrashReporting.NonFatalErrorInfo})">
            <summary>
            Exception used to pass custom non fatal error to crash reporter
            </summary>
            <param name="errorList"> List of custom errors</param>
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.NonFatalErrorException.ExceptionState">
            <summary>Special state so that it is correctly recognized by the crash handler.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.NonFatalErrorException.ErrorList">
            <summary>
            List of reported errors 
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.NonFatalErrorException.Message">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Platform#CrashReporting#ExceptionInfo}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.ExceptionTypeAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.ExceptionTypeAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.ExceptionTypeAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.ExceptionTypeAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.ExceptionTypeAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.ExceptionTypeAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.ExceptionTypeAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.ExceptionTypeAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.ExceptionTypeAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.ExceptionTypeAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.ExceptionTypeAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.ExceptionTypeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.ExceptionTypeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.ExceptionTypeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.ExceptionTypeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Object,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.ExceptionTypeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.ExceptionTypeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.ExceptionTypeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Byte@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.ExceptionTypeAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.ExceptionTypeAccessor.Set(Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.ExceptionTypeAccessor.Get(Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.InnerExceptionInfoAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.InnerExceptionInfoAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.InnerExceptionInfoAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.InnerExceptionInfoAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.InnerExceptionInfoAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.InnerExceptionInfoAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.InnerExceptionInfoAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.InnerExceptionInfoAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.InnerExceptionInfoAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.InnerExceptionInfoAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.InnerExceptionInfoAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.InnerExceptionInfoAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.InnerExceptionInfoAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.InnerExceptionInfoAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.InnerExceptionInfoAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{Keen#VRage#Core#Platform#CrashReporting#ExceptionInfo}}#Set(System.Object,System.Collections.Generic.List{Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.InnerExceptionInfoAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{Keen#VRage#Core#Platform#CrashReporting#ExceptionInfo}}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.InnerExceptionInfoAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{Keen#VRage#Core#Platform#CrashReporting#ExceptionInfo}}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.InnerExceptionInfoAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{Keen#VRage#Core#Platform#CrashReporting#ExceptionInfo}}#Set(System.Byte@,System.Collections.Generic.List{Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.InnerExceptionInfoAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.InnerExceptionInfoAccessor.Set(Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo@,System.Collections.Generic.List{Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.InnerExceptionInfoAccessor.Get(Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.MessageAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.MessageAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.MessageAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.MessageAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.MessageAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.MessageAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.MessageAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.MessageAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.MessageAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.MessageAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.MessageAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.MessageAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.MessageAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.MessageAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.MessageAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Object,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.MessageAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.MessageAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.MessageAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Byte@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.MessageAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.MessageAccessor.Set(Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.MessageAccessor.Get(Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.StackTraceAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.StackTraceAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.StackTraceAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.StackTraceAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.StackTraceAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.StackTraceAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.StackTraceAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.StackTraceAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.StackTraceAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.StackTraceAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.StackTraceAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.StackTraceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.StackTraceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.StackTraceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.StackTraceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Object,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.StackTraceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.StackTraceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.StackTraceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Byte@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.StackTraceAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.StackTraceAccessor.Set(Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.StackTraceAccessor.Get(Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.HResultAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.HResultAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.HResultAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.HResultAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.HResultAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.HResultAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.HResultAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.HResultAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.HResultAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.HResultAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.HResultAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.HResultAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.HResultAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.HResultAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.HResultAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Set(System.Object,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.HResultAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.HResultAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.HResultAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Set(System.Byte@,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.HResultAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.HResultAccessor.Set(Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo@,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.HResultAccessor.Get(Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.SourceAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.SourceAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.SourceAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.SourceAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.SourceAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.SourceAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.SourceAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.SourceAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.SourceAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.SourceAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.SourceAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.SourceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.SourceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.SourceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.SourceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Object,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.SourceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.SourceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.SourceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Byte@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.SourceAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.SourceAccessor.Set(Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.SourceAccessor.Get(Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.NamespaceAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.NamespaceAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.NamespaceAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.NamespaceAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.NamespaceAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.NamespaceAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.NamespaceAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.NamespaceAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.NamespaceAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.NamespaceAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.NamespaceAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.NamespaceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.NamespaceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.NamespaceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.NamespaceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Object,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.NamespaceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.NamespaceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.NamespaceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Byte@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.NamespaceAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.NamespaceAccessor.Set(Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo.TypeInfoHolder.NamespaceAccessor.Get(Keen.VRage.Core.Platform.CrashReporting.ExceptionInfo@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfoSimplified.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfoSimplified.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfoSimplified.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Platform.CrashReporting.ExceptionInfoSimplified@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfoSimplified.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfoSimplified.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Platform.CrashReporting.ExceptionInfoSimplified@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfoSimplified.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfoSimplified.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Platform.CrashReporting.ExceptionInfoSimplified@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfoSimplified.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfoSimplified.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfoSimplified.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfoSimplified.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfoSimplified.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Platform.CrashReporting.ExceptionInfoSimplified@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfoSimplified.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfoSimplified.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Platform.CrashReporting.ExceptionInfoSimplified@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfoSimplified.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfoSimplified.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Platform.CrashReporting.ExceptionInfoSimplified@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfoSimplified.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfoSimplified.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Platform.CrashReporting.ExceptionInfoSimplified@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfoSimplified.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfoSimplified.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfoSimplified.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfoSimplified.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfoSimplified.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Platform#CrashReporting#ExceptionInfoSimplified}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfoSimplified.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfoSimplified.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfoSimplified.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfoSimplified.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfoSimplified.TypeInfoHolder.StackTraceAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfoSimplified.TypeInfoHolder.StackTraceAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfoSimplified.TypeInfoHolder.StackTraceAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfoSimplified.TypeInfoHolder.StackTraceAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfoSimplified.TypeInfoHolder.StackTraceAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfoSimplified.TypeInfoHolder.StackTraceAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfoSimplified.TypeInfoHolder.StackTraceAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfoSimplified.TypeInfoHolder.StackTraceAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfoSimplified.TypeInfoHolder.StackTraceAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfoSimplified.TypeInfoHolder.StackTraceAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfoSimplified.TypeInfoHolder.StackTraceAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfoSimplified.TypeInfoHolder.StackTraceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfoSimplified.TypeInfoHolder.StackTraceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfoSimplified.TypeInfoHolder.StackTraceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfoSimplified.TypeInfoHolder.StackTraceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Object,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfoSimplified.TypeInfoHolder.StackTraceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfoSimplified.TypeInfoHolder.StackTraceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfoSimplified.TypeInfoHolder.StackTraceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Byte@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfoSimplified.TypeInfoHolder.StackTraceAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfoSimplified.TypeInfoHolder.StackTraceAccessor.Set(Keen.VRage.Core.Platform.CrashReporting.ExceptionInfoSimplified@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfoSimplified.TypeInfoHolder.StackTraceAccessor.Get(Keen.VRage.Core.Platform.CrashReporting.ExceptionInfoSimplified@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfoSimplified.TypeInfoHolder.NamespaceAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfoSimplified.TypeInfoHolder.NamespaceAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfoSimplified.TypeInfoHolder.NamespaceAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfoSimplified.TypeInfoHolder.NamespaceAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfoSimplified.TypeInfoHolder.NamespaceAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfoSimplified.TypeInfoHolder.NamespaceAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfoSimplified.TypeInfoHolder.NamespaceAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfoSimplified.TypeInfoHolder.NamespaceAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfoSimplified.TypeInfoHolder.NamespaceAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfoSimplified.TypeInfoHolder.NamespaceAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfoSimplified.TypeInfoHolder.NamespaceAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfoSimplified.TypeInfoHolder.NamespaceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfoSimplified.TypeInfoHolder.NamespaceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfoSimplified.TypeInfoHolder.NamespaceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfoSimplified.TypeInfoHolder.NamespaceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Object,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfoSimplified.TypeInfoHolder.NamespaceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfoSimplified.TypeInfoHolder.NamespaceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfoSimplified.TypeInfoHolder.NamespaceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Byte@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfoSimplified.TypeInfoHolder.NamespaceAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfoSimplified.TypeInfoHolder.NamespaceAccessor.Set(Keen.VRage.Core.Platform.CrashReporting.ExceptionInfoSimplified@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ExceptionInfoSimplified.TypeInfoHolder.NamespaceAccessor.Get(Keen.VRage.Core.Platform.CrashReporting.ExceptionInfoSimplified@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Platform.CrashReporting.FormattedCrashReport">
            <summary>
            New format of crash meta used for Opicka 3.0
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Platform.CrashReporting.FormattedCrashReport.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.FormattedCrashReport.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.FormattedCrashReport.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Platform.CrashReporting.FormattedCrashReport@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.FormattedCrashReport.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.FormattedCrashReport.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Platform.CrashReporting.FormattedCrashReport@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.FormattedCrashReport.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.FormattedCrashReport.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Platform.CrashReporting.FormattedCrashReport@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.FormattedCrashReport.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.FormattedCrashReport.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.FormattedCrashReport.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.FormattedCrashReport.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.FormattedCrashReport.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Platform.CrashReporting.FormattedCrashReport@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.FormattedCrashReport.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.FormattedCrashReport.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Platform.CrashReporting.FormattedCrashReport@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.FormattedCrashReport.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.FormattedCrashReport.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Platform.CrashReporting.FormattedCrashReport@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.FormattedCrashReport.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.FormattedCrashReport.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Platform.CrashReporting.FormattedCrashReport@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.FormattedCrashReport.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Platform.CrashReporting.FormattedCrashReport.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.FormattedCrashReport.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.FormattedCrashReport.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.FormattedCrashReport.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Platform#CrashReporting#FormattedCrashReport}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.FormattedCrashReport.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Platform.CrashReporting.FormattedCrashReport.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Platform.CrashReporting.FormattedCrashReport.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Platform.CrashReporting.FormattedCrashReport.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.FormattedCrashReport.TypeInfoHolder.ReportInfoAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.FormattedCrashReport.TypeInfoHolder.ReportInfoAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.FormattedCrashReport.TypeInfoHolder.ReportInfoAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.FormattedCrashReport.TypeInfoHolder.ReportInfoAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.FormattedCrashReport.TypeInfoHolder.ReportInfoAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.FormattedCrashReport.TypeInfoHolder.ReportInfoAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.FormattedCrashReport.TypeInfoHolder.ReportInfoAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.FormattedCrashReport.TypeInfoHolder.ReportInfoAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.FormattedCrashReport.TypeInfoHolder.ReportInfoAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.FormattedCrashReport.TypeInfoHolder.ReportInfoAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.FormattedCrashReport.TypeInfoHolder.ReportInfoAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.FormattedCrashReport.TypeInfoHolder.ReportInfoAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.FormattedCrashReport.TypeInfoHolder.ReportInfoAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.FormattedCrashReport.TypeInfoHolder.ReportInfoAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.FormattedCrashReport.TypeInfoHolder.ReportInfoAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Platform#CrashReporting#ReportInfo}#Set(System.Object,Keen.VRage.Core.Platform.CrashReporting.ReportInfo@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.FormattedCrashReport.TypeInfoHolder.ReportInfoAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Platform#CrashReporting#ReportInfo}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.FormattedCrashReport.TypeInfoHolder.ReportInfoAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Platform#CrashReporting#ReportInfo}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.FormattedCrashReport.TypeInfoHolder.ReportInfoAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Platform#CrashReporting#ReportInfo}#Set(System.Byte@,Keen.VRage.Core.Platform.CrashReporting.ReportInfo@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.FormattedCrashReport.TypeInfoHolder.ReportInfoAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.FormattedCrashReport.TypeInfoHolder.ReportInfoAccessor.Set(Keen.VRage.Core.Platform.CrashReporting.FormattedCrashReport@,Keen.VRage.Core.Platform.CrashReporting.ReportInfo@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.FormattedCrashReport.TypeInfoHolder.ReportInfoAccessor.Get(Keen.VRage.Core.Platform.CrashReporting.FormattedCrashReport@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.FormattedCrashReport.TypeInfoHolder.ProcessDataAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.FormattedCrashReport.TypeInfoHolder.ProcessDataAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.FormattedCrashReport.TypeInfoHolder.ProcessDataAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.FormattedCrashReport.TypeInfoHolder.ProcessDataAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.FormattedCrashReport.TypeInfoHolder.ProcessDataAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.FormattedCrashReport.TypeInfoHolder.ProcessDataAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.FormattedCrashReport.TypeInfoHolder.ProcessDataAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.FormattedCrashReport.TypeInfoHolder.ProcessDataAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.FormattedCrashReport.TypeInfoHolder.ProcessDataAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.FormattedCrashReport.TypeInfoHolder.ProcessDataAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.FormattedCrashReport.TypeInfoHolder.ProcessDataAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.FormattedCrashReport.TypeInfoHolder.ProcessDataAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.FormattedCrashReport.TypeInfoHolder.ProcessDataAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.FormattedCrashReport.TypeInfoHolder.ProcessDataAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.FormattedCrashReport.TypeInfoHolder.ProcessDataAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#Dictionary{System#String,Keen#VRage#Core#Analytics#AnalyticsProperty}}#Set(System.Object,System.Collections.Generic.Dictionary{System.String,Keen.VRage.Core.Analytics.AnalyticsProperty}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.FormattedCrashReport.TypeInfoHolder.ProcessDataAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#Dictionary{System#String,Keen#VRage#Core#Analytics#AnalyticsProperty}}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.FormattedCrashReport.TypeInfoHolder.ProcessDataAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#Dictionary{System#String,Keen#VRage#Core#Analytics#AnalyticsProperty}}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.FormattedCrashReport.TypeInfoHolder.ProcessDataAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#Dictionary{System#String,Keen#VRage#Core#Analytics#AnalyticsProperty}}#Set(System.Byte@,System.Collections.Generic.Dictionary{System.String,Keen.VRage.Core.Analytics.AnalyticsProperty}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.FormattedCrashReport.TypeInfoHolder.ProcessDataAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.FormattedCrashReport.TypeInfoHolder.ProcessDataAccessor.Set(Keen.VRage.Core.Platform.CrashReporting.FormattedCrashReport@,System.Collections.Generic.Dictionary{System.String,Keen.VRage.Core.Analytics.AnalyticsProperty}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.FormattedCrashReport.TypeInfoHolder.ProcessDataAccessor.Get(Keen.VRage.Core.Platform.CrashReporting.FormattedCrashReport@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Platform.CrashReporting.ReportInfo">
            <summary>
            Detailed report info with all client side information required for crash reporting.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Platform.CrashReporting.ReportInfo@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Platform.CrashReporting.ReportInfo@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Platform.CrashReporting.ReportInfo@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Platform.CrashReporting.ReportInfo@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Platform.CrashReporting.ReportInfo@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Platform.CrashReporting.ReportInfo@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Platform.CrashReporting.ReportInfo@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Platform#CrashReporting#ReportInfo}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.CrashTimestampAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.CrashTimestampAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.CrashTimestampAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.CrashTimestampAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.CrashTimestampAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.CrashTimestampAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.CrashTimestampAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.CrashTimestampAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.CrashTimestampAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.CrashTimestampAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.CrashTimestampAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.CrashTimestampAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.CrashTimestampAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.CrashTimestampAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.CrashTimestampAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#DateTime?}#Set(System.Object,System.Nullable{System.DateTime}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.CrashTimestampAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#DateTime?}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.CrashTimestampAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#DateTime?}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.CrashTimestampAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#DateTime?}#Set(System.Byte@,System.Nullable{System.DateTime}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.CrashTimestampAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.CrashTimestampAccessor.Set(Keen.VRage.Core.Platform.CrashReporting.ReportInfo@,System.Nullable{System.DateTime}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.CrashTimestampAccessor.Get(Keen.VRage.Core.Platform.CrashReporting.ReportInfo@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.UserIDAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.UserIDAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.UserIDAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.UserIDAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.UserIDAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.UserIDAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.UserIDAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.UserIDAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.UserIDAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.UserIDAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.UserIDAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.UserIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.UserIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.UserIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.UserIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Object,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.UserIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.UserIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.UserIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Byte@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.UserIDAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.UserIDAccessor.Set(Keen.VRage.Core.Platform.CrashReporting.ReportInfo@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.UserIDAccessor.Get(Keen.VRage.Core.Platform.CrashReporting.ReportInfo@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.SessionIDAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.SessionIDAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.SessionIDAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.SessionIDAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.SessionIDAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.SessionIDAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.SessionIDAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.SessionIDAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.SessionIDAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.SessionIDAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.SessionIDAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.SessionIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.SessionIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.SessionIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.SessionIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Guid}#Set(System.Object,System.Guid@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.SessionIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Guid}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.SessionIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Guid}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.SessionIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Guid}#Set(System.Byte@,System.Guid@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.SessionIDAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.SessionIDAccessor.Set(Keen.VRage.Core.Platform.CrashReporting.ReportInfo@,System.Guid@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.SessionIDAccessor.Get(Keen.VRage.Core.Platform.CrashReporting.ReportInfo@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.GameIDAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.GameIDAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.GameIDAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.GameIDAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.GameIDAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.GameIDAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.GameIDAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.GameIDAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.GameIDAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.GameIDAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.GameIDAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.GameIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.GameIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.GameIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.GameIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Object,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.GameIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.GameIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.GameIDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Byte@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.GameIDAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.GameIDAccessor.Set(Keen.VRage.Core.Platform.CrashReporting.ReportInfo@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.GameIDAccessor.Get(Keen.VRage.Core.Platform.CrashReporting.ReportInfo@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.PlatformAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.PlatformAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.PlatformAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.PlatformAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.PlatformAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.PlatformAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.PlatformAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.PlatformAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.PlatformAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.PlatformAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.PlatformAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.PlatformAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.PlatformAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.PlatformAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.PlatformAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Object,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.PlatformAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.PlatformAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.PlatformAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Byte@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.PlatformAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.PlatformAccessor.Set(Keen.VRage.Core.Platform.CrashReporting.ReportInfo@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.PlatformAccessor.Get(Keen.VRage.Core.Platform.CrashReporting.ReportInfo@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.AppVersionAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.AppVersionAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.AppVersionAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.AppVersionAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.AppVersionAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.AppVersionAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.AppVersionAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.AppVersionAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.AppVersionAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.AppVersionAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.AppVersionAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.AppVersionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.AppVersionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.AppVersionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.AppVersionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Object,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.AppVersionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.AppVersionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.AppVersionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Byte@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.AppVersionAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.AppVersionAccessor.Set(Keen.VRage.Core.Platform.CrashReporting.ReportInfo@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.AppVersionAccessor.Get(Keen.VRage.Core.Platform.CrashReporting.ReportInfo@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.CrashStateAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.CrashStateAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.CrashStateAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.CrashStateAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.CrashStateAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.CrashStateAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.CrashStateAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.CrashStateAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.CrashStateAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.CrashStateAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.CrashStateAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.CrashStateAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.CrashStateAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.CrashStateAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.CrashStateAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Platform#CrashReporting#CrashState}#Set(System.Object,Keen.VRage.Core.Platform.CrashReporting.CrashState@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.CrashStateAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Platform#CrashReporting#CrashState}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.CrashStateAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Platform#CrashReporting#CrashState}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.CrashStateAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Platform#CrashReporting#CrashState}#Set(System.Byte@,Keen.VRage.Core.Platform.CrashReporting.CrashState@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.CrashStateAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.CrashStateAccessor.Set(Keen.VRage.Core.Platform.CrashReporting.ReportInfo@,Keen.VRage.Core.Platform.CrashReporting.CrashState@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.CrashStateAccessor.Get(Keen.VRage.Core.Platform.CrashReporting.ReportInfo@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.FeedbackAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.FeedbackAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.FeedbackAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.FeedbackAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.FeedbackAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.FeedbackAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.FeedbackAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.FeedbackAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.FeedbackAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.FeedbackAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.FeedbackAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.FeedbackAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.FeedbackAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.FeedbackAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.FeedbackAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Object,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.FeedbackAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.FeedbackAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.FeedbackAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Byte@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.FeedbackAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.FeedbackAccessor.Set(Keen.VRage.Core.Platform.CrashReporting.ReportInfo@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.FeedbackAccessor.Get(Keen.VRage.Core.Platform.CrashReporting.ReportInfo@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.EmailAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.EmailAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.EmailAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.EmailAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.EmailAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.EmailAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.EmailAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.EmailAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.EmailAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.EmailAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.EmailAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.EmailAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.EmailAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.EmailAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.EmailAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Object,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.EmailAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.EmailAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.EmailAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Byte@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.EmailAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.EmailAccessor.Set(Keen.VRage.Core.Platform.CrashReporting.ReportInfo@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.EmailAccessor.Get(Keen.VRage.Core.Platform.CrashReporting.ReportInfo@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.AutogeneratedAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.AutogeneratedAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.AutogeneratedAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.AutogeneratedAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.AutogeneratedAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.AutogeneratedAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.AutogeneratedAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.AutogeneratedAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.AutogeneratedAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.AutogeneratedAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.AutogeneratedAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.AutogeneratedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.AutogeneratedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.AutogeneratedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.AutogeneratedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.AutogeneratedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.AutogeneratedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.AutogeneratedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.AutogeneratedAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.AutogeneratedAccessor.Set(Keen.VRage.Core.Platform.CrashReporting.ReportInfo@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.AutogeneratedAccessor.Get(Keen.VRage.Core.Platform.CrashReporting.ReportInfo@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.ReportTypeAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.ReportTypeAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.ReportTypeAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.ReportTypeAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.ReportTypeAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.ReportTypeAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.ReportTypeAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.ReportTypeAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.ReportTypeAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.ReportTypeAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.ReportTypeAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.ReportTypeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.ReportTypeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.ReportTypeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.ReportTypeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Object,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.ReportTypeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.ReportTypeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.ReportTypeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Byte@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.ReportTypeAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.ReportTypeAccessor.Set(Keen.VRage.Core.Platform.CrashReporting.ReportInfo@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.ReportTypeAccessor.Get(Keen.VRage.Core.Platform.CrashReporting.ReportInfo@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.BranchAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.BranchAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.BranchAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.BranchAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.BranchAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.BranchAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.BranchAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.BranchAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.BranchAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.BranchAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.BranchAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.BranchAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.BranchAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.BranchAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.BranchAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Object,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.BranchAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.BranchAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.BranchAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Byte@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.BranchAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.BranchAccessor.Set(Keen.VRage.Core.Platform.CrashReporting.ReportInfo@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.BranchAccessor.Get(Keen.VRage.Core.Platform.CrashReporting.ReportInfo@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.ExceptionAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.ExceptionAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.ExceptionAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.ExceptionAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.ExceptionAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.ExceptionAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.ExceptionAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.ExceptionAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.ExceptionAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.ExceptionAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.ExceptionAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.ExceptionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.ExceptionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.ExceptionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.ExceptionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Platform#CrashReporting#ExceptionInfoSimplified}#Set(System.Object,Keen.VRage.Core.Platform.CrashReporting.ExceptionInfoSimplified@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.ExceptionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Platform#CrashReporting#ExceptionInfoSimplified}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.ExceptionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Platform#CrashReporting#ExceptionInfoSimplified}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.ExceptionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Platform#CrashReporting#ExceptionInfoSimplified}#Set(System.Byte@,Keen.VRage.Core.Platform.CrashReporting.ExceptionInfoSimplified@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.ExceptionAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.ExceptionAccessor.Set(Keen.VRage.Core.Platform.CrashReporting.ReportInfo@,Keen.VRage.Core.Platform.CrashReporting.ExceptionInfoSimplified@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ReportInfo.TypeInfoHolder.ExceptionAccessor.Get(Keen.VRage.Core.Platform.CrashReporting.ReportInfo@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Platform.CrashReporting.GPUCrashException">
            <summary>
            GPU Crash Exception is wrap to gpu related crashes, where render thread stack trace is irrelevant.
            The stack trace contains the place where the first CPU-GPU communication happens - which is not usually related to the cause of the crash.
            Stack trace is replaced with fixed value so crash analytics board can merge GPU crashes into one report.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Platform.CrashReporting.ICrashReporter">
            <summary>
            Platform specific interface
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ICrashReporter.WriteMiniDump(System.String,Keen.VRage.Core.Platform.CrashReporting.MiniDump.Options,System.IntPtr)">
            <summary>
            Writes a mini dump to memory.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ICrashReporter.SetNativeExceptionHandler(System.Action{System.IntPtr})">
            <summary>
            Sets a handler for native exceptions.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ICrashReporter.CheckDevelopmentParentProcess">
            <summary>
            Checks if the parent process of the current process is a development tool like an IDE
            When implementing for platforms, feel free to return false if you don't want crash reporting to search for this.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ICrashReporter.MessageBox(System.String,System.String,Keen.VRage.Core.Platform.MessageBoxOptions)">
            <summary>
            </summary>
            <param name="text"></param>
            <param name="caption"></param>
            <param name="options"></param>
            <returns></returns>
            <autogeneratedoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.ICrashReporter.MessageBoxLocalized(Keen.VRage.Library.Localization.LocKey,Keen.VRage.Library.Localization.LocKey,Keen.VRage.Core.Platform.MessageBoxOptions,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Will display message with localised text.  
            </summary>
            <param name="text">Localised content of the message</param>
            <param name="caption">Title of the message</param>
            <param name="options">Will define behavior of the message</param>
            <param name="formatArguments">Interpolation for localised text</param>
            <returns></returns>
        </member>
        <member name="T:Keen.VRage.Core.Platform.CrashReporting.IExceptionSource">
            <summary>
            Flags certain exceptions with their source category for easier catogeroziation in the crash reporter
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.IExceptionSource.ExceptionState">
            <summary>
            The state that will represent the exception.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Platform.CrashReporting.INativeCrashReporter">
            <summary>
            Interface that supplies methods for handling native crashes that are not picked up by the crash reporter.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.INativeCrashReporter.TrackNativeCrashes(System.String,System.String[]@)">
            <summary>
            If eligible wraps the process in a host process that sets environment variables for crash reporting.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Platform.CrashReporting.LogDiagnosticWatcher">
            <summary>
            Monitors a log for errors or warnings and takes action to report any failures. 
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.LogDiagnosticWatcher.AssertOnFailure">
            <summary>
            Whether this watcher produces and assertion or just logs if there were messages on the log.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.LogDiagnosticWatcher.FirstReportedMessage">
            <summary>
            First reported log message.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.LogDiagnosticWatcher.#ctor(Keen.VRage.Library.Diagnostics.Log)">
            <summary>
            Create a new <see cref="T:Keen.VRage.Core.Platform.CrashReporting.LogDiagnosticWatcher"/>.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.LogDiagnosticWatcher.CheckAndReport">
            <summary>
            Check if any error or warning was observed.
            </summary>
            <returns>Whether any message was observed.</returns>
        </member>
        <member name="T:Keen.VRage.Core.Platform.CrashReporting.LogDiagnosticWatcher.ReportedMessage">
            <summary>
            Record of a log message.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.LogDiagnosticWatcher.ReportedMessage.#ctor(System.String,Keen.VRage.Library.Diagnostics.LogSeverity,System.Int32,System.String)">
            <summary>
            Record of a log message.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Platform.CrashReporting.MiniDump">
            <summary>
            Wrapper for <see cref="T:Keen.VRage.Core.Platform.CrashReporting.ICrashReporter"/> part of interface related to Minidump.
            </summary>
            <autogeneratedoc />
        </member>
        <member name="T:Keen.VRage.Core.Platform.CrashReporting.MiniDump.ExceptionInformation">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Platform.CrashReporting.MiniDump.ExceptionInformation.ThreadId">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Platform.CrashReporting.MiniDump.ExceptionInformation.ExceptionPointers">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Platform.CrashReporting.MiniDump.ExceptionInformation.ClientPointers">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="T:Keen.VRage.Core.Platform.CrashReporting.MiniDump.Options">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Platform.CrashReporting.MiniDump.Options.Normal">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Platform.CrashReporting.MiniDump.Options.WithDataSegs">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Platform.CrashReporting.MiniDump.Options.WithFullMemory">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Platform.CrashReporting.MiniDump.Options.WithHandleData">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Platform.CrashReporting.MiniDump.Options.FilterMemory">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Platform.CrashReporting.MiniDump.Options.ScanMemory">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Platform.CrashReporting.MiniDump.Options.WithUnloadedModules">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Platform.CrashReporting.MiniDump.Options.WithIndirectlyReferencedMemory">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Platform.CrashReporting.MiniDump.Options.FilterModulePaths">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Platform.CrashReporting.MiniDump.Options.WithProcessThreadData">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Platform.CrashReporting.MiniDump.Options.WithPrivateReadWriteMemory">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Platform.CrashReporting.MiniDump.Options.WithoutOptionalData">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Platform.CrashReporting.MiniDump.Options.WithFullMemoryInfo">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Platform.CrashReporting.MiniDump.Options.WithThreadInfo">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Platform.CrashReporting.MiniDump.Options.WithCodeSegs">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Platform.CrashReporting.MiniDump.Options.WithoutAuxiliaryState">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Platform.CrashReporting.MiniDump.Options.WithFullAuxiliaryState">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Platform.CrashReporting.MiniDump.Options.WithPrivateWriteCopyMemory">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Platform.CrashReporting.MiniDump.Options.IgnoreInaccessibleMemory">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.MiniDump.CollectExceptionDump(Keen.VRage.Core.Platform.CrashReporting.ICrashReporter,System.Exception)">
            <summary>
            </summary>
            <param name="reporter"></param>
            <param name="ex"></param>
            <autogeneratedoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.MiniDump.CollectExceptionDump(System.Exception)">
            <summary>
            </summary>
            <param name="ex"></param>
            <autogeneratedoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.MiniDump.CollectExceptionDump(Keen.VRage.Core.Platform.CrashReporting.ICrashReporter,System.Exception,System.String)">
            <summary>
            </summary>
            <param name="reporter"></param>
            <param name="ex"></param>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.MiniDump.CollectExceptionDump(System.Exception,System.String)">
            <summary>
            </summary>
            <param name="ex"></param>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.MiniDump.CollectCrashDump(Keen.VRage.Core.Platform.CrashReporting.ICrashReporter,System.IntPtr)">
            <summary>
            </summary>
            <param name="reporter"></param>
            <param name="exceptionPointers"></param>
            <autogeneratedoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.MiniDump.CollectCrashDump(System.IntPtr)">
            <summary>
            </summary>
            <param name="exceptionPointers"></param>
            <autogeneratedoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.MiniDump.CollectStateDump(Keen.VRage.Core.Platform.CrashReporting.ICrashReporter)">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.MiniDump.CollectStateDump">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="T:Keen.VRage.Core.Platform.CrashReporting.MiniDumpMeta">
            <summary>
            Metadata type for MiniDump temp container.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Platform.CrashReporting.MiniDumpMeta.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.MiniDumpMeta.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.MiniDumpMeta.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Platform.CrashReporting.MiniDumpMeta@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.MiniDumpMeta.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.MiniDumpMeta.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Platform.CrashReporting.MiniDumpMeta@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.MiniDumpMeta.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.MiniDumpMeta.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Platform.CrashReporting.MiniDumpMeta@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.MiniDumpMeta.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.MiniDumpMeta.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.MiniDumpMeta.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.MiniDumpMeta.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.MiniDumpMeta.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Platform.CrashReporting.MiniDumpMeta@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.MiniDumpMeta.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.MiniDumpMeta.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Platform.CrashReporting.MiniDumpMeta@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.MiniDumpMeta.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.MiniDumpMeta.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.MiniDumpMeta.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Platform.CrashReporting.MiniDumpMeta@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.MiniDumpMeta.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Platform.CrashReporting.MiniDumpMeta.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.MiniDumpMeta.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.MiniDumpMeta.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.MiniDumpMeta.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Platform#CrashReporting#MiniDumpMeta}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.MiniDumpMeta.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Platform.CrashReporting.MiniDumpMeta.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Platform.CrashReporting.MiniDumpMeta.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Platform.CrashReporting.MiniDumpMeta.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="T:Keen.VRage.Core.Platform.CrashReporting.TerminationLog.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.TerminationLog.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.TerminationLog.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Platform.CrashReporting.TerminationLog@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.TerminationLog.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.TerminationLog.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Platform.CrashReporting.TerminationLog@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.TerminationLog.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.TerminationLog.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Platform.CrashReporting.TerminationLog@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.TerminationLog.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.TerminationLog.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.TerminationLog.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.TerminationLog.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.TerminationLog.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Platform.CrashReporting.TerminationLog@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.TerminationLog.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.TerminationLog.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Platform.CrashReporting.TerminationLog@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.TerminationLog.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.TerminationLog.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.TerminationLog.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Platform.CrashReporting.TerminationLog@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.TerminationLog.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Platform.CrashReporting.TerminationLog.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.TerminationLog.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.TerminationLog.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.TerminationLog.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Platform#CrashReporting#TerminationLog}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.TerminationLog.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Platform.CrashReporting.TerminationLog.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Platform.CrashReporting.TerminationLog.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Platform.CrashReporting.TerminationLog.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.TerminationLog.TypeInfoHolder.TerminationTimeAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.TerminationLog.TypeInfoHolder.TerminationTimeAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.TerminationLog.TypeInfoHolder.TerminationTimeAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.TerminationLog.TypeInfoHolder.TerminationTimeAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.TerminationLog.TypeInfoHolder.TerminationTimeAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.TerminationLog.TypeInfoHolder.TerminationTimeAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.TerminationLog.TypeInfoHolder.TerminationTimeAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.TerminationLog.TypeInfoHolder.TerminationTimeAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.TerminationLog.TypeInfoHolder.TerminationTimeAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.TerminationLog.TypeInfoHolder.TerminationTimeAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.TerminationLog.TypeInfoHolder.TerminationTimeAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.TerminationLog.TypeInfoHolder.TerminationTimeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.TerminationLog.TypeInfoHolder.TerminationTimeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.TerminationLog.TypeInfoHolder.TerminationTimeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.TerminationLog.TypeInfoHolder.TerminationTimeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#DateTime}#Set(System.Object,System.DateTime@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.TerminationLog.TypeInfoHolder.TerminationTimeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#DateTime}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.TerminationLog.TypeInfoHolder.TerminationTimeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#DateTime}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.TerminationLog.TypeInfoHolder.TerminationTimeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#DateTime}#Set(System.Byte@,System.DateTime@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.TerminationLog.TypeInfoHolder.TerminationTimeAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.TerminationLog.TypeInfoHolder.TerminationTimeAccessor.Set(Keen.VRage.Core.Platform.CrashReporting.TerminationLog@,System.DateTime@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.TerminationLog.TypeInfoHolder.TerminationTimeAccessor.Get(Keen.VRage.Core.Platform.CrashReporting.TerminationLog@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.TerminationLog.TypeInfoHolder.StartTimeAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.TerminationLog.TypeInfoHolder.StartTimeAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.TerminationLog.TypeInfoHolder.StartTimeAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.TerminationLog.TypeInfoHolder.StartTimeAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.TerminationLog.TypeInfoHolder.StartTimeAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.TerminationLog.TypeInfoHolder.StartTimeAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.TerminationLog.TypeInfoHolder.StartTimeAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.TerminationLog.TypeInfoHolder.StartTimeAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.TerminationLog.TypeInfoHolder.StartTimeAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.TerminationLog.TypeInfoHolder.StartTimeAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.TerminationLog.TypeInfoHolder.StartTimeAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.TerminationLog.TypeInfoHolder.StartTimeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.TerminationLog.TypeInfoHolder.StartTimeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.TerminationLog.TypeInfoHolder.StartTimeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.TerminationLog.TypeInfoHolder.StartTimeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#DateTime}#Set(System.Object,System.DateTime@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.TerminationLog.TypeInfoHolder.StartTimeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#DateTime}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.TerminationLog.TypeInfoHolder.StartTimeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#DateTime}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.TerminationLog.TypeInfoHolder.StartTimeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#DateTime}#Set(System.Byte@,System.DateTime@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.TerminationLog.TypeInfoHolder.StartTimeAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.TerminationLog.TypeInfoHolder.StartTimeAccessor.Set(Keen.VRage.Core.Platform.CrashReporting.TerminationLog@,System.DateTime@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.TerminationLog.TypeInfoHolder.StartTimeAccessor.Get(Keen.VRage.Core.Platform.CrashReporting.TerminationLog@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Platform.CrashReporting.UnsupportedProcessDetector">
            <summary>
            Helper methods for detecting unsupported processes
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.UnsupportedProcessDetector.CheckRunningOnWine">
            <summary>
            Checks if the current process is running under Wine.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfigurationObjectBuilder.EnableCrashReportingOverride">
            <summary>
            Regardless of the default crash reporting setup, this value will forcefully set it and log the set value.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfigurationObjectBuilder.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfigurationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfigurationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfigurationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfigurationObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfigurationObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfigurationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfigurationObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfigurationObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfigurationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfigurationObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfigurationObjectBuilder.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfigurationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfigurationObjectBuilder.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfigurationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfigurationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfigurationObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfigurationObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfigurationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfigurationObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfigurationObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfigurationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfigurationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfigurationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfigurationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfigurationObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfigurationObjectBuilder.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfigurationObjectBuilder.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfigurationObjectBuilder.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfigurationObjectBuilder.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Platform#CrashReporting#CrashHandlerCoreConfigurationObjectBuilder}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfigurationObjectBuilder.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfigurationObjectBuilder.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfigurationObjectBuilder.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfigurationObjectBuilder.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfigurationObjectBuilder.TypeInfoHolder.EnableCrashReportingOverrideAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfigurationObjectBuilder.TypeInfoHolder.EnableCrashReportingOverrideAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfigurationObjectBuilder.TypeInfoHolder.EnableCrashReportingOverrideAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfigurationObjectBuilder.TypeInfoHolder.EnableCrashReportingOverrideAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfigurationObjectBuilder.TypeInfoHolder.EnableCrashReportingOverrideAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfigurationObjectBuilder.TypeInfoHolder.EnableCrashReportingOverrideAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfigurationObjectBuilder.TypeInfoHolder.EnableCrashReportingOverrideAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfigurationObjectBuilder.TypeInfoHolder.EnableCrashReportingOverrideAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfigurationObjectBuilder.TypeInfoHolder.EnableCrashReportingOverrideAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfigurationObjectBuilder.TypeInfoHolder.EnableCrashReportingOverrideAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfigurationObjectBuilder.TypeInfoHolder.EnableCrashReportingOverrideAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfigurationObjectBuilder.TypeInfoHolder.EnableCrashReportingOverrideAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfigurationObjectBuilder.TypeInfoHolder.EnableCrashReportingOverrideAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfigurationObjectBuilder.TypeInfoHolder.EnableCrashReportingOverrideAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfigurationObjectBuilder.TypeInfoHolder.EnableCrashReportingOverrideAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean?}#Set(System.Object,System.Nullable{System.Boolean}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfigurationObjectBuilder.TypeInfoHolder.EnableCrashReportingOverrideAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean?}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfigurationObjectBuilder.TypeInfoHolder.EnableCrashReportingOverrideAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean?}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfigurationObjectBuilder.TypeInfoHolder.EnableCrashReportingOverrideAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean?}#Set(System.Byte@,System.Nullable{System.Boolean}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfigurationObjectBuilder.TypeInfoHolder.EnableCrashReportingOverrideAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfigurationObjectBuilder.TypeInfoHolder.EnableCrashReportingOverrideAccessor.Set(Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfigurationObjectBuilder@,System.Nullable{System.Boolean}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfigurationObjectBuilder.TypeInfoHolder.EnableCrashReportingOverrideAccessor.Get(Keen.VRage.Core.Platform.CrashReporting.CrashHandlerCoreConfigurationObjectBuilder@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Platform.Http.HttpTools">
            <summary>
            Helper function for data conversions for <see cref="T:Keen.VRage.Core.Platform.Http.IPlatformHttp"/>
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Platform.Http.HttpTools.ConvertToString(System.Byte[],System.String)">
            <summary>
            </summary>
            <param name="data"></param>
            <param name="preferredEncodingName"></param>
            <returns></returns>
            <autogeneratedoc />
        </member>
        <member name="T:Keen.VRage.Core.Platform.Http.IPlatformHttp">
            <summary>
            Asynchronous platform Http requests and downloads.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Platform.Http.IPlatformHttp.ProgressDelegate">
            <summary>
            A callback that happens on download progress.
            </summary>
            <param name="progress"> The downloaded bytes. </param>
            <param name="total"> The total bytes. </param>
        </member>
        <member name="T:Keen.VRage.Core.Platform.Http.IPlatformHttp.Data">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Platform.Http.IPlatformHttp.Data.Name">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Platform.Http.IPlatformHttp.Data.Value">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Platform.Http.IPlatformHttp.Data.Type">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.Http.IPlatformHttp.Data.#ctor(System.String,System.Object,Keen.VRage.Core.Platform.Http.IPlatformHttp.DataType)">
            <summary>
            </summary>
            <param name="name"></param>
            <param name="value"></param>
            <param name="type"></param>
            <autogeneratedoc />
        </member>
        <member name="T:Keen.VRage.Core.Platform.Http.IPlatformHttp.DataType">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Platform.Http.IPlatformHttp.DataType.GetOrPost">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Platform.Http.IPlatformHttp.DataType.HttpHeader">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Platform.Http.IPlatformHttp.DataType.RequestBody">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Platform.Http.IPlatformHttp.DataType.Filename">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="T:Keen.VRage.Core.Platform.Http.IPlatformHttp.Method">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Platform.Http.IPlatformHttp.Method.Get">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Platform.Http.IPlatformHttp.Method.Post">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Platform.Http.IPlatformHttp.Method.Put">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Platform.Http.IPlatformHttp.Method.Delete">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.Http.IPlatformHttp.SendRequestAsync(System.String,Keen.VRage.Core.Platform.Http.IPlatformHttp.Data[],Keen.VRage.Core.Platform.Http.IPlatformHttp.Method,System.Object,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Sends an asynchronous request through the Http client.
            </summary>
            <param name="url"> Url to send the request to. </param>
            <param name="parameters"> Request parameters. </param>
            <param name="method"> Http request method. </param>
            <param name="taskLifetime"> The lifetime of the asynchronous task. </param>
            <param name="cancellationToken"></param>
            <autogeneratedoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.Http.IPlatformHttp.SendFormattedCrashReportAsync(System.String,System.String,System.Collections.Generic.List{System.Tuple{System.String,System.String}},System.Collections.Generic.List{System.Tuple{System.String,System.Byte[]}},Keen.VRage.Core.Platform.Http.IPlatformHttp.Method,System.Object,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            
            </summary>
            <param name="url"></param>
            <param name="jsonBody"></param>
            <param name="logs"></param>
            <param name="additionalFiles"></param>
            <param name="method"></param>
            <param name="taskLifetime"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Keen.VRage.Core.Platform.Http.IPlatformHttp.DownloadAsync(System.String,Keen.VRage.Library.Filesystem.FileHandleWritable,Keen.VRage.Core.Platform.Http.IPlatformHttp.ProgressDelegate,System.Object)">
            <summary>
            Downloads a file from through the Http client.
            </summary>
            <param name="url"> Uri to send the request to. </param>
            <param name="file"> The writable handle to the location the result will be written. </param>
            <param name="progressCallback"> Callback that happens on download progress. </param>
            <param name="taskLifetime"> The lifetime of the asynchronous task. </param>
            <autogeneratedoc />
        </member>
        <member name="T:Keen.VRage.Core.Platform.IPlatformInput">
            <summary>
            Platform dependent default input device provider.
            </summary>
        </member>
        <member name="E:Keen.VRage.Core.Platform.IPlatformInput.DeviceConnected">
            <summary>
            A platform supported device was plugged in.
            </summary>
            <remarks>This event is fired for all supported device classes. This event can only fire during <see cref="M:Keen.VRage.Core.Platform.IPlatformInput.ProcessInput" />.</remarks>
        </member>
        <member name="E:Keen.VRage.Core.Platform.IPlatformInput.DeviceDisconnected">
            <summary>
            A platform supported device was unplugged.
            </summary>
            <remarks>This event is fired for all supported device classes. This event can only fire during <see cref="M:Keen.VRage.Core.Platform.IPlatformInput.ProcessInput" />.</remarks>
        </member>
        <member name="P:Keen.VRage.Core.Platform.IPlatformInput.SupportedDeviceClasses">
            <summary>
            Device classes natively supported by the platform implementation.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Platform.IPlatformInput.ConnectedDevices">
            <summary>
            Connected supported input devices.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Platform.IPlatformInput.DefaultInputMethodEditor">
            <summary>
            Get the default input method editor for this platform.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Platform.IPlatformInput.ProcessInput">
            <summary>
            Perform input polling on the supported devices.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Platform.IPlatformMemory">
            <summary>
            Platform specific memory related methods.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Platform.IPlatformMemory.HasVirtualMemory">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.IPlatformMemory.TotalPhysicalMemory">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.IPlatformMemory.ProcessMemory">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.IPlatformMemory.MemoryState">
            <inheritdoc cref="T:Keen.VRage.Core.Platform.IPlatformMemory.AvailableMemoryState"/>
        </member>
        <member name="P:Keen.VRage.Core.Platform.IPlatformMemory.IsAllocationProfilingReady">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.IPlatformMemory.MaxGeneration">
            <inheritdoc cref="P:System.GC.MaxGeneration"/>
        </member>
        <member name="M:Keen.VRage.Core.Platform.IPlatformMemory.GetThreadAllocationStamp">
            <summary>
            </summary>
            <returns></returns>
            <autogeneratedoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.IPlatformMemory.GetGlobalAllocationsStamp">
            <summary>
            </summary>
            <returns></returns>
            <autogeneratedoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.IPlatformMemory.GetGCMemoryInfo(System.Int64@,System.Int64@,System.Int64@)">
            <summary>
            Get statistical information about memory used by the Garbage Collector.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Platform.IPlatformMemory.GetGCCollectionCount(System.Int32)">
            <inheritdoc cref="M:System.GC.CollectionCount(System.Int32)"/>
        </member>
        <member name="M:Keen.VRage.Core.Platform.IPlatformMemory.GetGCTotalPauseDuration">
            <inheritdoc cref="M:System.GC.GetTotalPauseDuration"/>
        </member>
        <member name="T:Keen.VRage.Core.Platform.IPlatformMemory.AvailableMemoryState">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Platform.IPlatformMemory.AvailableMemoryState.Normal">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Platform.IPlatformMemory.AvailableMemoryState.Low">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Platform.IPlatformMemory.AvailableMemoryState.Critical">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="T:Keen.VRage.Core.Platform.IPlatformSystem">
            <summary>
            System platform specific interface.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Platform.IPlatformSystem.SimulationQuality">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.IPlatformSystem.IsSingleInstance">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.IPlatformSystem.IsDeprecatedOS">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.IPlatformSystem.ThreeLetterISORegionName">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.IPlatformSystem.TwoLetterISORegionName">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.IPlatformSystem.RegionLatitude">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.IPlatformSystem.RegionLongitude">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.IPlatformSystem.Diagnostics">
            <summary>
            The diagnostic service for this platform implementation.
            </summary>
        </member>
        <member name="E:Keen.VRage.Core.Platform.IPlatformSystem.OnSystemProtocolActivated">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.IPlatformSystem.LogEnvironmentInformation">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.IPlatformSystem.GetInfoCPU">
            <summary>
            Get information about the CPU model and manufacturer.
            </summary>
            <remarks>May contain information about core count and frequency if provided by the platform.</remarks>
        </member>
        <member name="M:Keen.VRage.Core.Platform.IPlatformSystem.GetInfoCPU(System.UInt32@,System.UInt32@)">
            <summary>
            Get information about the CPU model and manufacturer.
            </summary>
            <param name="physicalCores">Number of physical cores</param>
            <param name="logicalCores">Number of logical cores</param>
            <returns></returns>
        </member>
        <member name="M:Keen.VRage.Core.Platform.IPlatformSystem.GetMaxClockSpeedCpuMHz">
            <summary>
            Get information about the CPU clock speed in MHz
            </summary>
            <returns></returns>
        </member>
        <member name="M:Keen.VRage.Core.Platform.IPlatformSystem.OnSessionStarted(Keen.VRage.Core.Platform.IPlatformSystem.SessionType)">
            <summary>
            </summary>
            <param name="sessionType"></param>
            <autogeneratedoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.IPlatformSystem.OnSessionUnloaded">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.IPlatformSystem.ResetColdStartRegister">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.IPlatformSystem.OpenUrl(System.String)">
            <summary>
            Open a URL in the default web browser for the platform.
            </summary>
            <remarks>This method returns a boolean indicating whether the request to open the URL was successful. This does not mean a web browser has been opened and that the website loaded correctly. Just that no error happened immediately upon requesting the URL to be opened.</remarks>
            <returns>Whether we could succesfully request the URL to be opened by the OS.</returns>
        </member>
        <member name="M:Keen.VRage.Core.Platform.IPlatformSystem.GetNetworkTimeUTC">
            <summary>
            Blocking call to get the current UTC time via NTP or equivalent.
            </summary>
            <remarks>This call may throw if Network time is not available.</remarks>
            <returns>A relatively accurate value for the current UTC time.</returns>
        </member>
        <member name="T:Keen.VRage.Core.Platform.IPlatformSystem.SessionType">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Platform.IPlatformSystem.SessionType.Normal">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Platform.IPlatformSystem.SessionType.ExtendedEntities">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="T:Keen.VRage.Core.Platform.IPlatformSystem.SimulationQualityEnum">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Platform.IPlatformSystem.SimulationQualityEnum.Normal">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Platform.IPlatformSystem.SimulationQualityEnum.Low">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Platform.IPlatformSystem.SimulationQualityEnum.VeryLow">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="T:Keen.VRage.Core.Platform.IPlatformDiagnostics">
            <summary>
            Implements diagnostic functions for a platform. 
            </summary>
            <remarks>The entry points on this interface are development diagnostics. Used in automated and manual tests.</remarks>
        </member>
        <member name="M:Keen.VRage.Core.Platform.IPlatformDiagnostics.ThrowExceptionInMessageLoop">
            <summary>
            Throw an exception within the platforms native message loop. 
            </summary>
            <remarks>
            Implemented as needed.
            </remarks>
        </member>
        <member name="T:Keen.VRage.Core.Platform.IPlatformWindow">
            <summary>
            Interface representing game or editor window, which can be rendered to. Accessed via <see cref="T:Keen.VRage.Core.Platform.IPlatformWindows"/>
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Platform.IPlatformWindow.WindowHandle">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.IPlatformWindow.DrawEnabled">
            <summary>
            True when Present on device should be called (e.g. window not minimized)
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Platform.IPlatformWindow.IsActive">
            <summary>
            Focused and not minimized
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Platform.IPlatformWindow.ShowCursor">
            <summary>
            Gets or sets whether the cursor is visible or not.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Platform.IPlatformWindow.CaptureCursor">
            <summary>
            Sets whether the cursor is to be captured to the render screen.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Platform.IPlatformWindow.ClientSize">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.IPlatformWindow.ClientMousePosition">
            <summary>
            Gets the mouse position in client-area coordinates.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Platform.IPlatformWindow.RepeatedInputDelay">
            <summary>
            Gets the input repetition delay setting.
            From 0 (approximately 250 millisecond delay) through 3 (approximately 1 second delay).
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Platform.IPlatformWindow.RepeatedInputSpeed">
            <summary>
            Gets the input repetition speed setting.
            From 0 (approximately 2.5 repetitions per second) through 31 (approximately 30 repetitions per second).
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Platform.IPlatformWindow.IsFullscreen">
            <summary>
            Gets if the window is in fullscreen mode
            </summary>
        </member>
        <member name="E:Keen.VRage.Core.Platform.IPlatformWindow.OnExit">
            <summary>
            Event called when user or system closes the window.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Platform.IPlatformWindow.NextFrame">
            <summary>
            Should be called every frame to process system events on the thread that created the window. 
            </summary>
            <returns>False - window was closed, exit application.</returns>
        </member>
        <member name="M:Keen.VRage.Core.Platform.IPlatformWindow.SetCursor(System.IO.Stream)">
            <summary>
            Changes the cursor.
            </summary>
            <param name="stream"></param>
        </member>
        <member name="M:Keen.VRage.Core.Platform.IPlatformWindow.SetCursor(Keen.VRage.Core.Platform.StandardPlatformCursor)">
            <summary>
            Changes the cursor for a platform native cursor.
            </summary>
            <param name="cursor"></param>
        </member>
        <member name="M:Keen.VRage.Core.Platform.IPlatformWindow.SetCursor(System.IO.Stream,System.Int32,System.Int32)">
            <summary>
            Changes the cursor.
            </summary>
            <param name="stream"></param>
            <param name="hotspotX"></param>
            <param name="hotspotY"></param>
        </member>
        <member name="M:Keen.VRage.Core.Platform.IPlatformWindow.ClearCursor">
            <summary>
            Clears the current cursor setting, restoring it to the default cursor.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Platform.IPlatformWindow.ShowAndFocus">
            <summary>
            Show the window when the application is initialized and ready (in the meantime, use splash screen)  
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Platform.IPlatformWindow.Hide">
            <summary>
            Hide this window from view.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Platform.IPlatformWindow.OnModeChanged(System.Boolean,System.Int32,System.Int32,System.Boolean,System.Boolean,Keen.VRage.Library.Mathematics.BoundingBox2I@)">
            <summary>
            Notifies window that the display settings has changed, to update its properties
            </summary>
            <param name="fullscreenMode">Use fullscreen mode</param>
            <param name="width">Backbuffer width</param>
            <param name="height">Backbuffer height</param>
            <param name="topMost">Window is forced as top most</param>
            <param name="isOutputAttachedToAdapter">The current adapter has attached output desktop</param>
            <param name="desktopBounds">Boundaries of the target display to center window onto</param>
        </member>
        <member name="M:Keen.VRage.Core.Platform.IPlatformWindow.UpdateRenderTargetSize(Keen.VRage.Library.Mathematics.Vector2I)">
            <summary>
            Notify the window of the new size of the current render target. 
            </summary>
            <param name="size"></param>
        </member>
        <member name="M:Keen.VRage.Core.Platform.IPlatformWindow.Present(System.IntPtr,System.Int32,System.Int32)">
            <summary>
            Present the provided swap chain.
            </summary>
            <remarks>Modeled after <c>IDXGISwapChain::Present(int syncInterval, int flags)</c></remarks>
        </member>
        <member name="T:Keen.VRage.Core.Platform.IPlatformWindows">
            <summary>
            Interface with methods for Game or editor window lifetime and some helper methods for system MessageBox or Splash screen. 
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Platform.IPlatformWindows.WindowHandle">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.IPlatformWindows.Window">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="P:Keen.VRage.Core.Platform.IPlatformWindows.DoubleClickTime">
            <summary>
            Gets the maximum number of milliseconds that can elapse between a first click
            and a second click for the OS to consider the mouse action a double-click.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Platform.IPlatformWindows.DoubleClickSize">
            <summary>
            Gets the dimensions, in pixels, of the area within which the user must
            click twice for the operating system to consider the two clicks a double-click.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Platform.IPlatformWindows.GetClipboardTextAsync">
            <summary>
            Asynchronously gets the set text from the clipboard.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Platform.IPlatformWindows.SetClipboardTextAsync(System.String)">
            <summary>
            Asynchronously sets the text to the clipboard.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Platform.IPlatformWindows.MessageBox(System.String,System.String,Keen.VRage.Core.Platform.MessageBoxOptions)">
            <summary>
            </summary>
            <param name="text"></param>
            <param name="caption"></param>
            <param name="options"></param>
            <returns></returns>
            <autogeneratedoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.IPlatformWindows.MessageBoxLocalized(Keen.VRage.Library.Utils.StringId,Keen.VRage.Library.Utils.StringId,Keen.VRage.Core.Platform.MessageBoxOptions,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Will display message with localised text.  
            </summary>
            <param name="text">Localised content of the message</param>
            <param name="caption">Title of the message</param>
            <param name="options">Will define behavior of the message</param>
            <param name="formatArguments">Interpolation for localised text</param>
            <returns></returns>
        </member>
        <member name="M:Keen.VRage.Core.Platform.IPlatformWindows.SetRenderWindow(Keen.VRage.Core.Platform.IPlatformWindow)">
            <summary>
            </summary>
            <param name="window"></param>
            <autogeneratedoc />
        </member>
        <member name="M:Keen.VRage.Core.Platform.IPlatformWindows.OnApplicationReady">
            <summary>
            Called when the application is ready, e.g. main menu is opened, game is loaded in case we skip the menu and go straight to game
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Platform.MessageBoxOptions">
            Flags that define appearance and behaviour of a standard message box displayed by a call to the MessageBox function.
        </member>
        <member name="F:Keen.VRage.Core.Platform.MessageBoxOptions.OkOnly">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Platform.MessageBoxOptions.OkCancel">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Platform.MessageBoxOptions.AbortRetryIgnore">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Platform.MessageBoxOptions.YesNoCancel">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Platform.MessageBoxOptions.YesNo">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Platform.MessageBoxOptions.RetryCancel">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Platform.MessageBoxOptions.CancelTryContinue">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Platform.MessageBoxOptions.IconHand">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Platform.MessageBoxOptions.IconQuestion">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Platform.MessageBoxOptions.IconExclamation">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="T:Keen.VRage.Core.Platform.MessageBoxResult">
            <summary>
            Represents possible values returned by the MessageBox function.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Platform.MessageBoxResult.Ok">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Platform.MessageBoxResult.Cancel">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Platform.MessageBoxResult.Abort">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Platform.MessageBoxResult.Retry">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Platform.MessageBoxResult.Ignore">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Platform.MessageBoxResult.Yes">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Platform.MessageBoxResult.No">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Platform.MessageBoxResult.Close">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Platform.MessageBoxResult.Help">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Platform.MessageBoxResult.TryAgain">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Platform.MessageBoxResult.Continue">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Platform.MessageBoxResult.Timeout">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="T:Keen.VRage.Core.Platform.StandardPlatformCursor">
            <summary>
            Standard platform cursor types.
            Mirrored from Avalonia.Input.StandardCursorType
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.RelativeTransform">
            <summary>
            
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.RelativeTransform.Identity">
            <summary>
            Transform that does not move or rotate any point in local space when transformed to world space.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.RelativeTransform.Position">
            <summary>
            Position component
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.RelativeTransform.Orientation">
            <summary>
            Orientation component
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransform.op_Implicit(Keen.VRage.Library.Mathematics.Matrix@)~Keen.VRage.Core.RelativeTransform">
            
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransform.op_Implicit(Keen.VRage.Core.RelativeTransform@)~Keen.VRage.Library.Mathematics.Matrix">
            
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransform.op_Explicit(Keen.VRage.Core.WorldTransform)~Keen.VRage.Core.RelativeTransform">
            <summary>
            Creates RelativeTransform from WorldTransform components
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransform.IsRelativeTransform(Keen.VRage.Library.Mathematics.Matrix@)">
            <summary>
            Check if the conversion to relative transform method will succeed.
            </summary>
            <returns>Whether the given <see cref="T:Keen.VRage.Library.Mathematics.Matrix"/> can be converted into <see cref="T:Keen.VRage.Core.RelativeTransform"/></returns>
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransform.ToString">
            <summary>
            Retrieves a string representation of the current object.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransform.System#IEquatable{Keen#VRage#Core#RelativeTransform}#Equals(Keen.VRage.Core.RelativeTransform)">
            <summary>
            Determines whether the specified Object is equal to the RelativeTransform.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransform.Equals(Keen.VRage.Core.RelativeTransform@)">
            <summary>
            Determines whether the specified Object is equal to the RelativeTransform.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransform.Equals(System.Object)">
            <summary>
            Returns a value that indicates whether the current instance is equal to a specified object.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransform.GetHashCode">
            <summary>
            Gets the hash code of this object.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransform.Lerp(Keen.VRage.Core.RelativeTransform@,Keen.VRage.Core.RelativeTransform@,System.Single)">
            <summary>
            Linearly interpolates between the corresponding values of two transforms.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransform.Slerp(Keen.VRage.Core.RelativeTransform@,Keen.VRage.Core.RelativeTransform@,System.Single)">
            <summary>
            Interpolates between the corresponding values of two transforms, 
            using spherical linear interpolation for orientation a linear interpolation for position.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransform.Transform(Keen.VRage.Library.Mathematics.Vector3,Keen.VRage.Core.RelativeTransform)">
            <summary>
            Transforms position vector by a RelativeTransform
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransform.Transform(Keen.VRage.Library.Mathematics.Vector2,Keen.VRage.Core.RelativeTransform)">
            <summary>
            Transforms 2D position vector by a RelativeTransform
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransform.TransformDirection(Keen.VRage.Library.Mathematics.Vector3,Keen.VRage.Core.RelativeTransform)">
            <summary>
            Transform direction vector (normal) by a RelativeTransform orientation
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransform.TransformInv(Keen.VRage.Library.Mathematics.Vector3,Keen.VRage.Core.RelativeTransform)">
            <summary>
            Transforms position vector of a RelativeTransform in inverse order
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransform.TransformDirectionInv(Keen.VRage.Library.Mathematics.Vector3,Keen.VRage.Core.RelativeTransform)">
            <summary>
            Transform direction vector (normal) by a RelativeTransform orientation's inverse
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransform.IsValid">
            <summary>
            Determines whether each transform component is valid
            </summary>
            <returns></returns>
            <autogeneratedoc />
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransform.op_Multiply(Keen.VRage.Core.RelativeTransform,Keen.VRage.Core.RelativeTransform)">
            <summary>
            Transforms RelativeTransform by another RelativeTransform
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransform.AssertIsValid">
            <summary>
            Performs assert on transform validity
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.RelativeTransform.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransform.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransform.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.RelativeTransform@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransform.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransform.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.RelativeTransform@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransform.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransform.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.RelativeTransform@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransform.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransform.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransform.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransform.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransform.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.RelativeTransform@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransform.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransform.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.RelativeTransform@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransform.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransform.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransform.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.RelativeTransform@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransform.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.RelativeTransform.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.RelativeTransform.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransform.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.RelativeTransform.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#RelativeTransform}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransform.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.RelativeTransform.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.RelativeTransform.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.RelativeTransform.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.RelativeTransform.TypeInfoHolder.PositionAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.RelativeTransform.TypeInfoHolder.PositionAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.RelativeTransform.TypeInfoHolder.PositionAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.RelativeTransform.TypeInfoHolder.PositionAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.RelativeTransform.TypeInfoHolder.PositionAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.RelativeTransform.TypeInfoHolder.PositionAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.RelativeTransform.TypeInfoHolder.PositionAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.RelativeTransform.TypeInfoHolder.PositionAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.RelativeTransform.TypeInfoHolder.PositionAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransform.TypeInfoHolder.PositionAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransform.TypeInfoHolder.PositionAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransform.TypeInfoHolder.PositionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransform.TypeInfoHolder.PositionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransform.TypeInfoHolder.PositionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransform.TypeInfoHolder.PositionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3}#Set(System.Object,Keen.VRage.Library.Mathematics.Vector3@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransform.TypeInfoHolder.PositionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransform.TypeInfoHolder.PositionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransform.TypeInfoHolder.PositionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3}#Set(System.Byte@,Keen.VRage.Library.Mathematics.Vector3@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransform.TypeInfoHolder.PositionAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransform.TypeInfoHolder.PositionAccessor.Set(Keen.VRage.Core.RelativeTransform@,Keen.VRage.Library.Mathematics.Vector3@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransform.TypeInfoHolder.PositionAccessor.Get(Keen.VRage.Core.RelativeTransform@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.RelativeTransform.TypeInfoHolder.OrientationAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.RelativeTransform.TypeInfoHolder.OrientationAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.RelativeTransform.TypeInfoHolder.OrientationAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.RelativeTransform.TypeInfoHolder.OrientationAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.RelativeTransform.TypeInfoHolder.OrientationAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.RelativeTransform.TypeInfoHolder.OrientationAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.RelativeTransform.TypeInfoHolder.OrientationAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.RelativeTransform.TypeInfoHolder.OrientationAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.RelativeTransform.TypeInfoHolder.OrientationAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransform.TypeInfoHolder.OrientationAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransform.TypeInfoHolder.OrientationAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransform.TypeInfoHolder.OrientationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransform.TypeInfoHolder.OrientationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransform.TypeInfoHolder.OrientationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransform.TypeInfoHolder.OrientationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Quaternion}#Set(System.Object,Keen.VRage.Library.Mathematics.Quaternion@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransform.TypeInfoHolder.OrientationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Quaternion}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransform.TypeInfoHolder.OrientationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Quaternion}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransform.TypeInfoHolder.OrientationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Quaternion}#Set(System.Byte@,Keen.VRage.Library.Mathematics.Quaternion@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransform.TypeInfoHolder.OrientationAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransform.TypeInfoHolder.OrientationAccessor.Set(Keen.VRage.Core.RelativeTransform@,Keen.VRage.Library.Mathematics.Quaternion@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransform.TypeInfoHolder.OrientationAccessor.Get(Keen.VRage.Core.RelativeTransform@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.RelativeTransformWithEulerHint">
            <summary>
            Extra wrapper around <see cref="T:Keen.VRage.Core.RelativeTransform"/> to provide support
            for euler hint to editor. 
            This data structure should only be used for serialization.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.RelativeTransformWithEulerHint.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransformWithEulerHint.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransformWithEulerHint.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.RelativeTransformWithEulerHint@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransformWithEulerHint.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransformWithEulerHint.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.RelativeTransformWithEulerHint@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransformWithEulerHint.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransformWithEulerHint.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.RelativeTransformWithEulerHint@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransformWithEulerHint.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransformWithEulerHint.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransformWithEulerHint.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransformWithEulerHint.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransformWithEulerHint.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.RelativeTransformWithEulerHint@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransformWithEulerHint.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransformWithEulerHint.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.RelativeTransformWithEulerHint@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransformWithEulerHint.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransformWithEulerHint.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransformWithEulerHint.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.RelativeTransformWithEulerHint@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransformWithEulerHint.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.RelativeTransformWithEulerHint.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.RelativeTransformWithEulerHint.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransformWithEulerHint.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.RelativeTransformWithEulerHint.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#RelativeTransformWithEulerHint}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransformWithEulerHint.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.RelativeTransformWithEulerHint.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.RelativeTransformWithEulerHint.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.RelativeTransformWithEulerHint.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.RelativeTransformWithEulerHint.TypeInfoHolder.TransformAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.RelativeTransformWithEulerHint.TypeInfoHolder.TransformAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.RelativeTransformWithEulerHint.TypeInfoHolder.TransformAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.RelativeTransformWithEulerHint.TypeInfoHolder.TransformAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.RelativeTransformWithEulerHint.TypeInfoHolder.TransformAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.RelativeTransformWithEulerHint.TypeInfoHolder.TransformAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.RelativeTransformWithEulerHint.TypeInfoHolder.TransformAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.RelativeTransformWithEulerHint.TypeInfoHolder.TransformAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.RelativeTransformWithEulerHint.TypeInfoHolder.TransformAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransformWithEulerHint.TypeInfoHolder.TransformAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransformWithEulerHint.TypeInfoHolder.TransformAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransformWithEulerHint.TypeInfoHolder.TransformAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransformWithEulerHint.TypeInfoHolder.TransformAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransformWithEulerHint.TypeInfoHolder.TransformAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransformWithEulerHint.TypeInfoHolder.TransformAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#RelativeTransform}#Set(System.Object,Keen.VRage.Core.RelativeTransform@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransformWithEulerHint.TypeInfoHolder.TransformAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#RelativeTransform}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransformWithEulerHint.TypeInfoHolder.TransformAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#RelativeTransform}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransformWithEulerHint.TypeInfoHolder.TransformAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#RelativeTransform}#Set(System.Byte@,Keen.VRage.Core.RelativeTransform@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransformWithEulerHint.TypeInfoHolder.TransformAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransformWithEulerHint.TypeInfoHolder.TransformAccessor.Set(Keen.VRage.Core.RelativeTransformWithEulerHint@,Keen.VRage.Core.RelativeTransform@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransformWithEulerHint.TypeInfoHolder.TransformAccessor.Get(Keen.VRage.Core.RelativeTransformWithEulerHint@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.RelativeTransformWithEulerHint.TypeInfoHolder.EulerHintAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.RelativeTransformWithEulerHint.TypeInfoHolder.EulerHintAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.RelativeTransformWithEulerHint.TypeInfoHolder.EulerHintAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.RelativeTransformWithEulerHint.TypeInfoHolder.EulerHintAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.RelativeTransformWithEulerHint.TypeInfoHolder.EulerHintAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.RelativeTransformWithEulerHint.TypeInfoHolder.EulerHintAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.RelativeTransformWithEulerHint.TypeInfoHolder.EulerHintAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.RelativeTransformWithEulerHint.TypeInfoHolder.EulerHintAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.RelativeTransformWithEulerHint.TypeInfoHolder.EulerHintAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransformWithEulerHint.TypeInfoHolder.EulerHintAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransformWithEulerHint.TypeInfoHolder.EulerHintAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransformWithEulerHint.TypeInfoHolder.EulerHintAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransformWithEulerHint.TypeInfoHolder.EulerHintAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransformWithEulerHint.TypeInfoHolder.EulerHintAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransformWithEulerHint.TypeInfoHolder.EulerHintAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3}#Set(System.Object,Keen.VRage.Library.Mathematics.Vector3@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransformWithEulerHint.TypeInfoHolder.EulerHintAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransformWithEulerHint.TypeInfoHolder.EulerHintAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransformWithEulerHint.TypeInfoHolder.EulerHintAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3}#Set(System.Byte@,Keen.VRage.Library.Mathematics.Vector3@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransformWithEulerHint.TypeInfoHolder.EulerHintAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransformWithEulerHint.TypeInfoHolder.EulerHintAccessor.Set(Keen.VRage.Core.RelativeTransformWithEulerHint@,Keen.VRage.Library.Mathematics.Vector3@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.RelativeTransformWithEulerHint.TypeInfoHolder.EulerHintAccessor.Get(Keen.VRage.Core.RelativeTransformWithEulerHint@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.RenderSessionLifetime">
            <summary>
            Adapter that ties the lifetime of some object to the engine's current rendering session.
            </summary>
            <remarks>See VRage.<see cref="F:Keen.VRage.Core.VRageCore.Lifetime"/>.<see cref="P:Keen.VRage.Core.VRageLifetime.RenderSession"/>.</remarks>
        </member>
        <member name="M:Keen.VRage.Core.RenderSessionLifetime.GetTrackingHandle(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.RenderSessionLifetime.IsExpired(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.RenderSessionLifetime.GetLifetimePolicy(System.Object)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Render.AdapterInfo">
            <summary>
            Information about single GPU Adapter in the computer. Each active output on the GPU is reported as separate Adapter, as it may have different
            available resolutions. To ask for available adapters, use Keen.VRage.Render.Messages.MessageProxy.RequestVideoAdapters.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Render.AdapterInfo.Name">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Render.AdapterInfo.DeviceName">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Render.AdapterInfo.SupportedDisplayModes">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Render.AdapterInfo.OutputName">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Render.AdapterInfo.Description">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Render.AdapterInfo.AdapterLuid">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Render.AdapterInfo.OutputId">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Render.AdapterInfo.DesktopBounds">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Render.AdapterInfo.DesktopResolution">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Render.AdapterInfo.DesktopRefreshRate">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Render.AdapterInfo.IsOutputAttached">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Render.AdapterInfo.DedicatedRAM">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Render.AdapterInfo.SharedRAM">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Render.AdapterInfo.DeviceSupported">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Render.AdapterInfo.VendorId">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Render.AdapterInfo.DeviceId">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Render.AdapterInfo.DriverVersion">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Render.AdapterInfo.DriverUpdateNecessary">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Render.AdapterInfo.DriverUpdateLink">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Render.AdapterInfo.Quality">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Render.AdapterInfo.Mobile">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Render.AdapterInfo.IsRayTracingSupported">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Render.AdapterInfo.Teraflops">
            <summary>
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Render.AdapterInfo.IsIntegrated">
            <summary>
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Render.AdapterInfo.SupportDetails">
            <summary>
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.GetDisplayMode(System.Int32,System.Int32,Keen.VRage.Core.Render.Rational)">
            <summary>
            </summary>
            <param name="width"></param>
            <param name="height"></param>
            <param name="refreshRate"></param>
            <returns></returns>
            <autogeneratedoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.GetDisplayMode(System.Int32,System.Int32,System.Single)">
            <summary>
            Finds the exact DisplayMode for resolution and closest match for refresh rate
            </summary>
            <param name="width"></param>
            <param name="height"></param>
            <param name="refreshRate"></param>
            <returns></returns>
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.SortSupportedDisplayModes">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="T:Keen.VRage.Core.Render.AdapterInfo.VendorIds">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Render.AdapterInfo.VendorIds.Amd">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Render.AdapterInfo.VendorIds.Nvidia">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Render.AdapterInfo.VendorIds.Microsoft">
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Render.AdapterInfo.VendorIds.Intel">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Render.AdapterInfo.VendorIds.VmWare">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Render.AdapterInfo.VendorIds.Parallels">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="T:Keen.VRage.Core.Render.AdapterInfo.DisplayMode">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.Width">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.Height">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.RefreshRate">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.#ctor(System.Int32,System.Int32,Keen.VRage.Core.Render.Rational)">
            <summary>
            </summary>
            <param name="width"></param>
            <param name="height"></param>
            <param name="refreshRate"></param>
            <autogeneratedoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.ToString">
            <summary>
            </summary>
            <returns></returns>
            <autogeneratedoc />
        </member>
        <member name="T:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Render.AdapterInfo.DisplayMode@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Render.AdapterInfo.DisplayMode@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Render.AdapterInfo.DisplayMode@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Render.AdapterInfo.DisplayMode@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Render.AdapterInfo.DisplayMode@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Render.AdapterInfo.DisplayMode@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Render#AdapterInfo#DisplayMode}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.TypeInfoHolder.WidthAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.TypeInfoHolder.WidthAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.TypeInfoHolder.WidthAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.TypeInfoHolder.WidthAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.TypeInfoHolder.WidthAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.TypeInfoHolder.WidthAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.TypeInfoHolder.WidthAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.TypeInfoHolder.WidthAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.TypeInfoHolder.WidthAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.TypeInfoHolder.WidthAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.TypeInfoHolder.WidthAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.TypeInfoHolder.WidthAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.TypeInfoHolder.WidthAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.TypeInfoHolder.WidthAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.TypeInfoHolder.WidthAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Set(System.Object,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.TypeInfoHolder.WidthAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.TypeInfoHolder.WidthAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.TypeInfoHolder.WidthAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Set(System.Byte@,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.TypeInfoHolder.WidthAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.TypeInfoHolder.WidthAccessor.Set(Keen.VRage.Core.Render.AdapterInfo.DisplayMode@,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.TypeInfoHolder.WidthAccessor.Get(Keen.VRage.Core.Render.AdapterInfo.DisplayMode@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.TypeInfoHolder.HeightAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.TypeInfoHolder.HeightAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.TypeInfoHolder.HeightAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.TypeInfoHolder.HeightAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.TypeInfoHolder.HeightAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.TypeInfoHolder.HeightAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.TypeInfoHolder.HeightAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.TypeInfoHolder.HeightAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.TypeInfoHolder.HeightAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.TypeInfoHolder.HeightAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.TypeInfoHolder.HeightAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.TypeInfoHolder.HeightAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.TypeInfoHolder.HeightAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.TypeInfoHolder.HeightAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.TypeInfoHolder.HeightAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Set(System.Object,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.TypeInfoHolder.HeightAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.TypeInfoHolder.HeightAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.TypeInfoHolder.HeightAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Set(System.Byte@,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.TypeInfoHolder.HeightAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.TypeInfoHolder.HeightAccessor.Set(Keen.VRage.Core.Render.AdapterInfo.DisplayMode@,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.TypeInfoHolder.HeightAccessor.Get(Keen.VRage.Core.Render.AdapterInfo.DisplayMode@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.TypeInfoHolder.RefreshRateAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.TypeInfoHolder.RefreshRateAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.TypeInfoHolder.RefreshRateAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.TypeInfoHolder.RefreshRateAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.TypeInfoHolder.RefreshRateAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.TypeInfoHolder.RefreshRateAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.TypeInfoHolder.RefreshRateAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.TypeInfoHolder.RefreshRateAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.TypeInfoHolder.RefreshRateAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.TypeInfoHolder.RefreshRateAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.TypeInfoHolder.RefreshRateAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.TypeInfoHolder.RefreshRateAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.TypeInfoHolder.RefreshRateAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.TypeInfoHolder.RefreshRateAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.TypeInfoHolder.RefreshRateAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Render#Rational}#Set(System.Object,Keen.VRage.Core.Render.Rational@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.TypeInfoHolder.RefreshRateAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Render#Rational}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.TypeInfoHolder.RefreshRateAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Render#Rational}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.TypeInfoHolder.RefreshRateAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Render#Rational}#Set(System.Byte@,Keen.VRage.Core.Render.Rational@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.TypeInfoHolder.RefreshRateAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.TypeInfoHolder.RefreshRateAccessor.Set(Keen.VRage.Core.Render.AdapterInfo.DisplayMode@,Keen.VRage.Core.Render.Rational@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.DisplayMode.TypeInfoHolder.RefreshRateAccessor.Get(Keen.VRage.Core.Render.AdapterInfo.DisplayMode@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Render.AdapterInfo.RefreshRatePriorityComparer">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.RefreshRatePriorityComparer.Compare(Keen.VRage.Core.Render.AdapterInfo.DisplayMode,Keen.VRage.Core.Render.AdapterInfo.DisplayMode)">
            <summary>
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
            <autogeneratedoc />
        </member>
        <member name="T:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData">
            <summary>
            Details about various aspects of the required gpu device support.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Render#AdapterInfo#SupportDetailsData}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.IsFeatureLevelAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.IsFeatureLevelAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.IsFeatureLevelAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.IsFeatureLevelAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.IsFeatureLevelAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.IsFeatureLevelAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.IsFeatureLevelAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.IsFeatureLevelAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.IsFeatureLevelAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.IsFeatureLevelAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.IsFeatureLevelAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.IsFeatureLevelAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.IsFeatureLevelAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.IsFeatureLevelAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.IsFeatureLevelAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.IsFeatureLevelAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.IsFeatureLevelAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.IsFeatureLevelAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.IsFeatureLevelAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.IsFeatureLevelAccessor.Set(Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.IsFeatureLevelAccessor.Get(Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.IsMicrosoftBasicRenderDriverAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.IsMicrosoftBasicRenderDriverAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.IsMicrosoftBasicRenderDriverAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.IsMicrosoftBasicRenderDriverAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.IsMicrosoftBasicRenderDriverAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.IsMicrosoftBasicRenderDriverAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.IsMicrosoftBasicRenderDriverAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.IsMicrosoftBasicRenderDriverAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.IsMicrosoftBasicRenderDriverAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.IsMicrosoftBasicRenderDriverAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.IsMicrosoftBasicRenderDriverAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.IsMicrosoftBasicRenderDriverAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.IsMicrosoftBasicRenderDriverAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.IsMicrosoftBasicRenderDriverAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.IsMicrosoftBasicRenderDriverAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.IsMicrosoftBasicRenderDriverAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.IsMicrosoftBasicRenderDriverAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.IsMicrosoftBasicRenderDriverAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.IsMicrosoftBasicRenderDriverAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.IsMicrosoftBasicRenderDriverAccessor.Set(Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.IsMicrosoftBasicRenderDriverAccessor.Get(Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.EnoughRAMAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.EnoughRAMAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.EnoughRAMAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.EnoughRAMAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.EnoughRAMAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.EnoughRAMAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.EnoughRAMAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.EnoughRAMAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.EnoughRAMAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.EnoughRAMAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.EnoughRAMAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.EnoughRAMAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.EnoughRAMAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.EnoughRAMAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.EnoughRAMAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.EnoughRAMAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.EnoughRAMAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.EnoughRAMAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.EnoughRAMAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.EnoughRAMAccessor.Set(Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.EnoughRAMAccessor.Get(Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.IsDoublePrecisionFloatShaderOpsAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.IsDoublePrecisionFloatShaderOpsAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.IsDoublePrecisionFloatShaderOpsAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.IsDoublePrecisionFloatShaderOpsAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.IsDoublePrecisionFloatShaderOpsAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.IsDoublePrecisionFloatShaderOpsAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.IsDoublePrecisionFloatShaderOpsAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.IsDoublePrecisionFloatShaderOpsAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.IsDoublePrecisionFloatShaderOpsAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.IsDoublePrecisionFloatShaderOpsAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.IsDoublePrecisionFloatShaderOpsAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.IsDoublePrecisionFloatShaderOpsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.IsDoublePrecisionFloatShaderOpsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.IsDoublePrecisionFloatShaderOpsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.IsDoublePrecisionFloatShaderOpsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.IsDoublePrecisionFloatShaderOpsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.IsDoublePrecisionFloatShaderOpsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.IsDoublePrecisionFloatShaderOpsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.IsDoublePrecisionFloatShaderOpsAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.IsDoublePrecisionFloatShaderOpsAccessor.Set(Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.IsDoublePrecisionFloatShaderOpsAccessor.Get(Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.IsDriverUpToDateAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.IsDriverUpToDateAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.IsDriverUpToDateAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.IsDriverUpToDateAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.IsDriverUpToDateAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.IsDriverUpToDateAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.IsDriverUpToDateAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.IsDriverUpToDateAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.IsDriverUpToDateAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.IsDriverUpToDateAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.IsDriverUpToDateAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.IsDriverUpToDateAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.IsDriverUpToDateAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.IsDriverUpToDateAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.IsDriverUpToDateAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.IsDriverUpToDateAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.IsDriverUpToDateAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.IsDriverUpToDateAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.IsDriverUpToDateAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.IsDriverUpToDateAccessor.Set(Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData.TypeInfoHolder.IsDriverUpToDateAccessor.Get(Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Render.AdapterInfo.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Render.AdapterInfo@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Render.AdapterInfo@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Render.AdapterInfo@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Render.AdapterInfo@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Render.AdapterInfo@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Render.AdapterInfo@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Render.AdapterInfo@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Render.AdapterInfo.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Render#AdapterInfo}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.NameAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.NameAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.NameAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.NameAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.NameAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.NameAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.NameAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.NameAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.NameAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.NameAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.NameAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.NameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.NameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.NameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.NameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Object,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.NameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.NameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.NameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Byte@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.NameAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.NameAccessor.Set(Keen.VRage.Core.Render.AdapterInfo@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.NameAccessor.Get(Keen.VRage.Core.Render.AdapterInfo@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DeviceNameAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DeviceNameAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DeviceNameAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DeviceNameAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DeviceNameAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DeviceNameAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DeviceNameAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DeviceNameAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DeviceNameAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DeviceNameAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DeviceNameAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DeviceNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DeviceNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DeviceNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DeviceNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Object,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DeviceNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DeviceNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DeviceNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Byte@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DeviceNameAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DeviceNameAccessor.Set(Keen.VRage.Core.Render.AdapterInfo@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DeviceNameAccessor.Get(Keen.VRage.Core.Render.AdapterInfo@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.SupportedDisplayModesAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.SupportedDisplayModesAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.SupportedDisplayModesAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.SupportedDisplayModesAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.SupportedDisplayModesAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.SupportedDisplayModesAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.SupportedDisplayModesAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.SupportedDisplayModesAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.SupportedDisplayModesAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.SupportedDisplayModesAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.SupportedDisplayModesAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.SupportedDisplayModesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.SupportedDisplayModesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.SupportedDisplayModesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.SupportedDisplayModesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Render#AdapterInfo#DisplayMode[]}#Set(System.Object,Keen.VRage.Core.Render.AdapterInfo.DisplayMode[]@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.SupportedDisplayModesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Render#AdapterInfo#DisplayMode[]}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.SupportedDisplayModesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Render#AdapterInfo#DisplayMode[]}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.SupportedDisplayModesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Render#AdapterInfo#DisplayMode[]}#Set(System.Byte@,Keen.VRage.Core.Render.AdapterInfo.DisplayMode[]@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.SupportedDisplayModesAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.SupportedDisplayModesAccessor.Set(Keen.VRage.Core.Render.AdapterInfo@,Keen.VRage.Core.Render.AdapterInfo.DisplayMode[]@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.SupportedDisplayModesAccessor.Get(Keen.VRage.Core.Render.AdapterInfo@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.OutputNameAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.OutputNameAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.OutputNameAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.OutputNameAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.OutputNameAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.OutputNameAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.OutputNameAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.OutputNameAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.OutputNameAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.OutputNameAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.OutputNameAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.OutputNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.OutputNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.OutputNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.OutputNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Object,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.OutputNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.OutputNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.OutputNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Byte@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.OutputNameAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.OutputNameAccessor.Set(Keen.VRage.Core.Render.AdapterInfo@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.OutputNameAccessor.Get(Keen.VRage.Core.Render.AdapterInfo@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DescriptionAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DescriptionAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DescriptionAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DescriptionAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DescriptionAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DescriptionAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DescriptionAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DescriptionAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DescriptionAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DescriptionAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DescriptionAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DescriptionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DescriptionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DescriptionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DescriptionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Object,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DescriptionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DescriptionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DescriptionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Byte@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DescriptionAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DescriptionAccessor.Set(Keen.VRage.Core.Render.AdapterInfo@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DescriptionAccessor.Get(Keen.VRage.Core.Render.AdapterInfo@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.AdapterLuidAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.AdapterLuidAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.AdapterLuidAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.AdapterLuidAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.AdapterLuidAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.AdapterLuidAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.AdapterLuidAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.AdapterLuidAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.AdapterLuidAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.AdapterLuidAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.AdapterLuidAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.AdapterLuidAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.AdapterLuidAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.AdapterLuidAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.AdapterLuidAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int64}#Set(System.Object,System.Int64@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.AdapterLuidAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int64}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.AdapterLuidAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int64}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.AdapterLuidAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int64}#Set(System.Byte@,System.Int64@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.AdapterLuidAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.AdapterLuidAccessor.Set(Keen.VRage.Core.Render.AdapterInfo@,System.Int64@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.AdapterLuidAccessor.Get(Keen.VRage.Core.Render.AdapterInfo@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.OutputIdAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.OutputIdAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.OutputIdAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.OutputIdAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.OutputIdAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.OutputIdAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.OutputIdAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.OutputIdAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.OutputIdAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.OutputIdAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.OutputIdAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.OutputIdAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.OutputIdAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.OutputIdAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.OutputIdAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Set(System.Object,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.OutputIdAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.OutputIdAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.OutputIdAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Set(System.Byte@,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.OutputIdAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.OutputIdAccessor.Set(Keen.VRage.Core.Render.AdapterInfo@,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.OutputIdAccessor.Get(Keen.VRage.Core.Render.AdapterInfo@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DesktopBoundsAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DesktopBoundsAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DesktopBoundsAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DesktopBoundsAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DesktopBoundsAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DesktopBoundsAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DesktopBoundsAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DesktopBoundsAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DesktopBoundsAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DesktopBoundsAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DesktopBoundsAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DesktopBoundsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DesktopBoundsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DesktopBoundsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DesktopBoundsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#BoundingBox2I}#Set(System.Object,Keen.VRage.Library.Mathematics.BoundingBox2I@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DesktopBoundsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#BoundingBox2I}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DesktopBoundsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#BoundingBox2I}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DesktopBoundsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#BoundingBox2I}#Set(System.Byte@,Keen.VRage.Library.Mathematics.BoundingBox2I@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DesktopBoundsAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DesktopBoundsAccessor.Set(Keen.VRage.Core.Render.AdapterInfo@,Keen.VRage.Library.Mathematics.BoundingBox2I@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DesktopBoundsAccessor.Get(Keen.VRage.Core.Render.AdapterInfo@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DesktopResolutionAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DesktopResolutionAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DesktopResolutionAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DesktopResolutionAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DesktopResolutionAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DesktopResolutionAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DesktopResolutionAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DesktopResolutionAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DesktopResolutionAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DesktopResolutionAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DesktopResolutionAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DesktopResolutionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DesktopResolutionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DesktopResolutionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DesktopResolutionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector2I}#Set(System.Object,Keen.VRage.Library.Mathematics.Vector2I@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DesktopResolutionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector2I}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DesktopResolutionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector2I}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DesktopResolutionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector2I}#Set(System.Byte@,Keen.VRage.Library.Mathematics.Vector2I@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DesktopResolutionAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DesktopResolutionAccessor.Set(Keen.VRage.Core.Render.AdapterInfo@,Keen.VRage.Library.Mathematics.Vector2I@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DesktopResolutionAccessor.Get(Keen.VRage.Core.Render.AdapterInfo@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DesktopRefreshRateAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DesktopRefreshRateAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DesktopRefreshRateAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DesktopRefreshRateAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DesktopRefreshRateAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DesktopRefreshRateAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DesktopRefreshRateAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DesktopRefreshRateAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DesktopRefreshRateAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DesktopRefreshRateAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DesktopRefreshRateAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DesktopRefreshRateAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DesktopRefreshRateAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DesktopRefreshRateAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DesktopRefreshRateAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Render#Rational}#Set(System.Object,Keen.VRage.Core.Render.Rational@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DesktopRefreshRateAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Render#Rational}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DesktopRefreshRateAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Render#Rational}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DesktopRefreshRateAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Render#Rational}#Set(System.Byte@,Keen.VRage.Core.Render.Rational@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DesktopRefreshRateAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DesktopRefreshRateAccessor.Set(Keen.VRage.Core.Render.AdapterInfo@,Keen.VRage.Core.Render.Rational@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DesktopRefreshRateAccessor.Get(Keen.VRage.Core.Render.AdapterInfo@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.IsOutputAttachedAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.IsOutputAttachedAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.IsOutputAttachedAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.IsOutputAttachedAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.IsOutputAttachedAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.IsOutputAttachedAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.IsOutputAttachedAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.IsOutputAttachedAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.IsOutputAttachedAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.IsOutputAttachedAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.IsOutputAttachedAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.IsOutputAttachedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.IsOutputAttachedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.IsOutputAttachedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.IsOutputAttachedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.IsOutputAttachedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.IsOutputAttachedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.IsOutputAttachedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.IsOutputAttachedAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.IsOutputAttachedAccessor.Set(Keen.VRage.Core.Render.AdapterInfo@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.IsOutputAttachedAccessor.Get(Keen.VRage.Core.Render.AdapterInfo@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DedicatedRAMAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DedicatedRAMAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DedicatedRAMAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DedicatedRAMAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DedicatedRAMAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DedicatedRAMAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DedicatedRAMAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DedicatedRAMAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DedicatedRAMAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DedicatedRAMAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DedicatedRAMAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DedicatedRAMAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DedicatedRAMAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DedicatedRAMAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DedicatedRAMAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int64}#Set(System.Object,System.Int64@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DedicatedRAMAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int64}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DedicatedRAMAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int64}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DedicatedRAMAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int64}#Set(System.Byte@,System.Int64@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DedicatedRAMAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DedicatedRAMAccessor.Set(Keen.VRage.Core.Render.AdapterInfo@,System.Int64@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DedicatedRAMAccessor.Get(Keen.VRage.Core.Render.AdapterInfo@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.SharedRAMAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.SharedRAMAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.SharedRAMAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.SharedRAMAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.SharedRAMAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.SharedRAMAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.SharedRAMAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.SharedRAMAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.SharedRAMAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.SharedRAMAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.SharedRAMAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.SharedRAMAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.SharedRAMAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.SharedRAMAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.SharedRAMAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int64}#Set(System.Object,System.Int64@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.SharedRAMAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int64}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.SharedRAMAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int64}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.SharedRAMAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int64}#Set(System.Byte@,System.Int64@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.SharedRAMAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.SharedRAMAccessor.Set(Keen.VRage.Core.Render.AdapterInfo@,System.Int64@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.SharedRAMAccessor.Get(Keen.VRage.Core.Render.AdapterInfo@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.IsSoftwareAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.IsSoftwareAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.IsSoftwareAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.IsSoftwareAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.IsSoftwareAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.IsSoftwareAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.IsSoftwareAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.IsSoftwareAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.IsSoftwareAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.IsSoftwareAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.IsSoftwareAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.IsSoftwareAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.IsSoftwareAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.IsSoftwareAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.IsSoftwareAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.IsSoftwareAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.IsSoftwareAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.IsSoftwareAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.IsSoftwareAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.IsSoftwareAccessor.Set(Keen.VRage.Core.Render.AdapterInfo@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.IsSoftwareAccessor.Get(Keen.VRage.Core.Render.AdapterInfo@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DeviceSupportedAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DeviceSupportedAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DeviceSupportedAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DeviceSupportedAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DeviceSupportedAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DeviceSupportedAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DeviceSupportedAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DeviceSupportedAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DeviceSupportedAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DeviceSupportedAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DeviceSupportedAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DeviceSupportedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DeviceSupportedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DeviceSupportedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DeviceSupportedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DeviceSupportedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DeviceSupportedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DeviceSupportedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DeviceSupportedAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DeviceSupportedAccessor.Set(Keen.VRage.Core.Render.AdapterInfo@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DeviceSupportedAccessor.Get(Keen.VRage.Core.Render.AdapterInfo@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.VendorIdAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.VendorIdAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.VendorIdAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.VendorIdAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.VendorIdAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.VendorIdAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.VendorIdAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.VendorIdAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.VendorIdAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.VendorIdAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.VendorIdAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.VendorIdAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.VendorIdAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.VendorIdAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.VendorIdAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Render#AdapterInfo#VendorIds}#Set(System.Object,Keen.VRage.Core.Render.AdapterInfo.VendorIds@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.VendorIdAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Render#AdapterInfo#VendorIds}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.VendorIdAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Render#AdapterInfo#VendorIds}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.VendorIdAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Render#AdapterInfo#VendorIds}#Set(System.Byte@,Keen.VRage.Core.Render.AdapterInfo.VendorIds@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.VendorIdAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.VendorIdAccessor.Set(Keen.VRage.Core.Render.AdapterInfo@,Keen.VRage.Core.Render.AdapterInfo.VendorIds@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.VendorIdAccessor.Get(Keen.VRage.Core.Render.AdapterInfo@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DeviceIdAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DeviceIdAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DeviceIdAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DeviceIdAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DeviceIdAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DeviceIdAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DeviceIdAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DeviceIdAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DeviceIdAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DeviceIdAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DeviceIdAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DeviceIdAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DeviceIdAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DeviceIdAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DeviceIdAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Set(System.Object,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DeviceIdAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DeviceIdAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DeviceIdAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Set(System.Byte@,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DeviceIdAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DeviceIdAccessor.Set(Keen.VRage.Core.Render.AdapterInfo@,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DeviceIdAccessor.Get(Keen.VRage.Core.Render.AdapterInfo@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DriverVersionAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DriverVersionAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DriverVersionAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DriverVersionAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DriverVersionAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DriverVersionAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DriverVersionAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DriverVersionAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DriverVersionAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DriverVersionAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DriverVersionAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DriverVersionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DriverVersionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DriverVersionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DriverVersionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Object,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DriverVersionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DriverVersionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DriverVersionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Byte@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DriverVersionAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DriverVersionAccessor.Set(Keen.VRage.Core.Render.AdapterInfo@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DriverVersionAccessor.Get(Keen.VRage.Core.Render.AdapterInfo@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DriverUpdateNecessaryAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DriverUpdateNecessaryAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DriverUpdateNecessaryAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DriverUpdateNecessaryAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DriverUpdateNecessaryAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DriverUpdateNecessaryAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DriverUpdateNecessaryAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DriverUpdateNecessaryAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DriverUpdateNecessaryAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DriverUpdateNecessaryAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DriverUpdateNecessaryAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DriverUpdateNecessaryAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DriverUpdateNecessaryAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DriverUpdateNecessaryAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DriverUpdateNecessaryAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DriverUpdateNecessaryAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DriverUpdateNecessaryAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DriverUpdateNecessaryAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DriverUpdateNecessaryAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DriverUpdateNecessaryAccessor.Set(Keen.VRage.Core.Render.AdapterInfo@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DriverUpdateNecessaryAccessor.Get(Keen.VRage.Core.Render.AdapterInfo@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DriverUpdateLinkAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DriverUpdateLinkAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DriverUpdateLinkAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DriverUpdateLinkAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DriverUpdateLinkAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DriverUpdateLinkAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DriverUpdateLinkAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DriverUpdateLinkAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DriverUpdateLinkAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DriverUpdateLinkAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DriverUpdateLinkAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DriverUpdateLinkAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DriverUpdateLinkAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DriverUpdateLinkAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DriverUpdateLinkAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Object,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DriverUpdateLinkAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DriverUpdateLinkAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DriverUpdateLinkAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Byte@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DriverUpdateLinkAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DriverUpdateLinkAccessor.Set(Keen.VRage.Core.Render.AdapterInfo@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.DriverUpdateLinkAccessor.Get(Keen.VRage.Core.Render.AdapterInfo@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.QualityAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.QualityAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.QualityAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.QualityAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.QualityAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.QualityAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.QualityAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.QualityAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.QualityAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.QualityAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.QualityAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.QualityAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.QualityAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.QualityAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.QualityAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Render#RenderPresetEnum}#Set(System.Object,Keen.VRage.Core.Render.RenderPresetEnum@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.QualityAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Render#RenderPresetEnum}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.QualityAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Render#RenderPresetEnum}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.QualityAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Render#RenderPresetEnum}#Set(System.Byte@,Keen.VRage.Core.Render.RenderPresetEnum@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.QualityAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.QualityAccessor.Set(Keen.VRage.Core.Render.AdapterInfo@,Keen.VRage.Core.Render.RenderPresetEnum@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.QualityAccessor.Get(Keen.VRage.Core.Render.AdapterInfo@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.MobileAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.MobileAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.MobileAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.MobileAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.MobileAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.MobileAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.MobileAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.MobileAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.MobileAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.MobileAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.MobileAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.MobileAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.MobileAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.MobileAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.MobileAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.MobileAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.MobileAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.MobileAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.MobileAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.MobileAccessor.Set(Keen.VRage.Core.Render.AdapterInfo@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.MobileAccessor.Get(Keen.VRage.Core.Render.AdapterInfo@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.IsRayTracingSupportedAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.IsRayTracingSupportedAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.IsRayTracingSupportedAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.IsRayTracingSupportedAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.IsRayTracingSupportedAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.IsRayTracingSupportedAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.IsRayTracingSupportedAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.IsRayTracingSupportedAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.IsRayTracingSupportedAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.IsRayTracingSupportedAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.IsRayTracingSupportedAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.IsRayTracingSupportedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.IsRayTracingSupportedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.IsRayTracingSupportedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.IsRayTracingSupportedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.IsRayTracingSupportedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.IsRayTracingSupportedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.IsRayTracingSupportedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.IsRayTracingSupportedAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.IsRayTracingSupportedAccessor.Set(Keen.VRage.Core.Render.AdapterInfo@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.IsRayTracingSupportedAccessor.Get(Keen.VRage.Core.Render.AdapterInfo@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.TeraflopsAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.TeraflopsAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.TeraflopsAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.TeraflopsAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.TeraflopsAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.TeraflopsAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.TeraflopsAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.TeraflopsAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.TeraflopsAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.TeraflopsAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.TeraflopsAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.TeraflopsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.TeraflopsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.TeraflopsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.TeraflopsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Object,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.TeraflopsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.TeraflopsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.TeraflopsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Byte@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.TeraflopsAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.TeraflopsAccessor.Set(Keen.VRage.Core.Render.AdapterInfo@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.TeraflopsAccessor.Get(Keen.VRage.Core.Render.AdapterInfo@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.IsIntegratedAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.IsIntegratedAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.IsIntegratedAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.IsIntegratedAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.IsIntegratedAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.IsIntegratedAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.IsIntegratedAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.IsIntegratedAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.IsIntegratedAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.IsIntegratedAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.IsIntegratedAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.IsIntegratedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.IsIntegratedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.IsIntegratedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.IsIntegratedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.IsIntegratedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.IsIntegratedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.IsIntegratedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.IsIntegratedAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.IsIntegratedAccessor.Set(Keen.VRage.Core.Render.AdapterInfo@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.IsIntegratedAccessor.Get(Keen.VRage.Core.Render.AdapterInfo@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.SupportDetailsAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.SupportDetailsAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.SupportDetailsAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.SupportDetailsAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.SupportDetailsAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.SupportDetailsAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.SupportDetailsAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.SupportDetailsAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.SupportDetailsAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.SupportDetailsAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.SupportDetailsAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.SupportDetailsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.SupportDetailsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.SupportDetailsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.SupportDetailsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Render#AdapterInfo#SupportDetailsData}#Set(System.Object,Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.SupportDetailsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Render#AdapterInfo#SupportDetailsData}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.SupportDetailsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Render#AdapterInfo#SupportDetailsData}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.SupportDetailsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Render#AdapterInfo#SupportDetailsData}#Set(System.Byte@,Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.SupportDetailsAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.SupportDetailsAccessor.Set(Keen.VRage.Core.Render.AdapterInfo@,Keen.VRage.Core.Render.AdapterInfo.SupportDetailsData@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.AdapterInfo.TypeInfoHolder.SupportDetailsAccessor.Get(Keen.VRage.Core.Render.AdapterInfo@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Render.CubemapTextureAsset">
            <summary>
            Asset for cubemap textures
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Render.DebugDrawBuilders">
            <summary>
            Packed local debug draw mesh builders.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Render.DebugDrawBuilders.#ctor(Keen.VRage.Core.Render.MeshBuilder,Keen.VRage.Core.Render.MeshBuilder2D)">
            <summary>
            Creates a new instance of debug draw builders.
            The builder will not be responsible for disposing the provided mesh builders as they are assumed to be owned by the sending system.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Render.DebugDrawBuilders.#ctor(Keen.VRage.Core.Render.IDebugDraw,Keen.VRage.Core.WorldTransform)">
            <summary>
            Creates a new instance of debug draw builders.
            The builder will be responsible for disposing the mesh builders it creates using factory methods.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Render.FontAsset">
            <summary>
            Asset for vector graphics
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Render.GUIAsset">
            <summary>
            An asset that can be used to display a graphic in e.g. UI
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Render.IDebugDraw">
            <summary>
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Render.IDebugDraw.MeshBuilderFactory">
            <summary>
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Render.IDebugDraw.DebugDraw">
            <summary>
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Render.IDebugDraw.DebugDraw2D">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Render.Image.IImage">
            <summary>
            Interface for image loaded via <see cref="T:Keen.VRage.Core.Render.Image.ImageFactory"/> 
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Render.Image.IImage.Size">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.Image.IImage.Stride">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.Image.IImage.BitsPerPixel">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.Image.IImage.Data">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="T:Keen.VRage.Core.Render.Image.IImage`1">
            <summary>
            Generic for any unmanaged format of Data. 
            </summary>
            <typeparam name="TData"></typeparam>
        </member>
        <member name="P:Keen.VRage.Core.Render.Image.IImage`1.Data">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="T:Keen.VRage.Core.Render.Image.Image`1">
            <summary>
            Generic for the image data returned from <see cref="T:Keen.VRage.Core.Render.Image.ImageFactory"/> 
            </summary>
            <typeparam name="TData"></typeparam>
        </member>
        <member name="P:Keen.VRage.Core.Render.Image.Image`1.Size">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.Image.Image`1.Stride">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.Image.Image`1.BitsPerPixel">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.Image.Image`1.Data">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.Image.Image`1.Create``1(Keen.VRage.Library.Filesystem.FileHandle)">
            <summary>
            </summary>
            <typeparam name="TImage"></typeparam>
            <param name="file"></param>
            <returns></returns>
            <autogeneratedoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.Image.Image`1.Create``1(System.IO.Stream)">
            <summary>
            </summary>
            <typeparam name="TImage"></typeparam>
            <param name="stream"></param>
            <returns></returns>
            <autogeneratedoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.Image.Image`1.Create``1(SixLabors.ImageSharp.IImageInfo)">
            <summary>
            </summary>
            <typeparam name="TImage"></typeparam>
            <param name="image"></param>
            <returns></returns>
            <autogeneratedoc />
        </member>
        <member name="T:Keen.VRage.Core.Render.Image.ImageFactory">
            <summary>
            Image loader using ImageSharp library.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Render.Image.ImageFactory.DefaultConfiguration">
            <summary>
            Returns image sharp configuration compatible with ImageSharp 1.x.x necessary for correct function of Image.DangerousTryGetSinglePixelMemory
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Render.Image.ImageFactory.Load(System.IO.Stream,System.Boolean,System.Boolean,System.String)">
            <summary>
            </summary>
            <param name="stream"></param>
            <param name="oneChannel"></param>
            <param name="headerOnly"></param>
            <param name="debugName"></param>
            <returns></returns>
            <autogeneratedoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.Image.ImageFactory.Load(System.IntPtr,System.Int32,System.String)">
            <summary>
            </summary>
            <param name="pSource"></param>
            <param name="size"></param>
            <param name="debugName"></param>
            <returns></returns>
            <autogeneratedoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.Image.ImageFactory.Load(Keen.VRage.Library.Filesystem.FileHandle,System.Boolean)">
            <summary>
            </summary>
            <param name="file"></param>
            <param name="oneChannel"></param>
            <returns></returns>
            <autogeneratedoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.Image.ImageFactory.Save``1(System.IO.Stream,Keen.VRage.Core.Render.Image.ImageFactory.FileFormat,System.ReadOnlySpan{System.Byte},System.Int32,Keen.VRage.Library.Mathematics.Vector2I,System.UInt32)">
            <summary>
            </summary>
            <typeparam name="TPixel"></typeparam>
            <param name="stream"></param>
            <param name="format"></param>
            <param name="data"></param>
            <param name="srcPitch"></param>
            <param name="size"></param>
            <param name="bytesPerPixel"></param>
            <autogeneratedoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.Image.ImageFactory.SaveAsync``1(System.IO.Stream,Keen.VRage.Core.Render.Image.ImageFactory.FileFormat,System.ReadOnlySpan{System.Byte},System.Int32,Keen.VRage.Library.Mathematics.Vector2I,System.UInt32)">
            <summary>
            </summary>
            <typeparam name="TPixel"></typeparam>
            <param name="stream"></param>
            <param name="format"></param>
            <param name="data"></param>
            <param name="srcPitch"></param>
            <param name="size"></param>
            <param name="bytesPerPixel"></param>
            <autogeneratedoc />
        </member>
        <member name="T:Keen.VRage.Core.Render.Image.ImageFactory.FileFormat">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Render.Image.ImageFactory.FileFormat.Png">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Render.Image.ImageFactory.FileFormat.Jpg">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Render.Image.ImageFactory.FileFormat.Bmp">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="T:Keen.VRage.Core.Render.Image.NamespaceDoc">
            <summary>
            ImageSharp frontend for loading and saving non-dds images (jpg, png and bmp are currently supported).
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Render.IMeshBuilderFactory">
            <summary>
            All <see cref="T:Keen.VRage.Core.Render.MeshBuilder"/> and <see cref="T:Keen.VRage.Core.Render.MeshBuilder2D"/> should be created through this factory.
            Client shouldn't specify and manage <see cref="T:Keen.VRage.Core.Render.IMeshConsumer"/> that should be responsibility of the <see cref="T:Keen.VRage.Core.Render.IMeshBuilderFactory"/> 
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Render.IMeshBuilderFactory.CreateMeshBuilder(Keen.VRage.Core.Render.MeshBuilder.Type,System.Int64,System.Int32,System.String)">
            <summary>
            Factory method for <see cref="T:Keen.VRage.Core.Render.MeshBuilder"/>. All <see cref="T:Keen.VRage.Core.Render.MeshBuilder"/> should be created through it
            </summary>
            <param name="type">Type of mesh builder, debug type respects <see cref="P:Keen.VRage.Core.GlobalDebugSettings.EnabledDebugDraw"/></param>
            <param name="parentId">Id of the parent</param>
            <param name="expectedVerticesCount">Will allocate pulled list with expected vertices</param>
            <param name="debugName"></param>
            <returns>New <see cref="T:Keen.VRage.Core.Render.MeshBuilder"/> set up with proper <see cref="T:Keen.VRage.Core.Render.IMeshConsumer"/> and other parameters</returns>
        </member>
        <member name="M:Keen.VRage.Core.Render.IMeshBuilderFactory.CreateMeshBuilder2D(Keen.VRage.Core.Render.MeshBuilder2D.Type,System.Int32,System.String)">
            <summary>
            Factory method for <see cref="T:Keen.VRage.Core.Render.MeshBuilder2D"/>. All <see cref="T:Keen.VRage.Core.Render.MeshBuilder2D"/> should be created through it
            </summary>
            <param name="type">Type of mesh builder, debug type respects <see cref="P:Keen.VRage.Core.GlobalDebugSettings.EnabledDebugDraw"/></param>
            <param name="expectedVerticesCount">Will allocate pulled list with expected vertices</param>
            <param name="debugName"></param>
            <returns>New <see cref="T:Keen.VRage.Core.Render.MeshBuilder2D"/> set up with proper <see cref="T:Keen.VRage.Core.Render.IMeshConsumer"/> and other parameters</returns>
        </member>
        <member name="T:Keen.VRage.Core.Render.IMeshConsumer">
            <summary>
            Submission interface for <see cref="T:Keen.VRage.Core.Render.MeshBuilderData"/>
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Render.IMeshConsumer.CommitBatch(Keen.VRage.Core.Render.MeshBuilderData,Keen.VRage.Library.Collections.PooledList{Keen.VRage.Core.RelativeTransform},Keen.VRage.Core.Render.IMeshConsumer.BatchTypes,System.Int64,Keen.VRage.Core.WorldTransform,System.Int32,System.Object)">
            <summary>
            Submits <see cref="T:Keen.VRage.Core.Render.MeshBuilderData"/> to the implementation(e.g. Render, Server, ect.)
            </summary>
            <param name="meshBuilderData">Data of the submitted mesh. <see cref="T:Keen.VRage.Core.Render.MeshBuilderData"/></param>
            <param name="instances">Instances of the submitted mesh</param>
            <param name="type"><see cref="T:Keen.VRage.Core.Render.IMeshConsumer.BatchTypes"/></param>
            <param name="parentId">Parent of the mesh batch</param>
            <param name="parentTransform">Used if parentId is not passed</param>
            <param name="overwriteBatchId">Use id returned from previous commits for optimisation reasons</param>
            <param name="customData">Custom data that can be interpreted by implementation of <see cref="T:Keen.VRage.Core.Render.IMeshConsumer"/></param>
            <returns>Id of the committed batch. Later can be used in <see cref="M:Keen.VRage.Core.Render.IMeshConsumer.UpdateMeshTransform(System.Int32,Keen.VRage.Core.WorldTransform)"/>, <see cref="M:Keen.VRage.Core.Render.IMeshConsumer.DisposeBatch(System.Int32)"/> and overwriteBatchId for optimisation</returns>
        </member>
        <member name="M:Keen.VRage.Core.Render.IMeshConsumer.UpdateMeshTransform(System.Int32,Keen.VRage.Core.WorldTransform)">
            <summary>
            Will update transform on the batches' root
            </summary>
            <param name="batchId">Id obtained from <see cref="M:Keen.VRage.Core.Render.IMeshConsumer.CommitBatch(Keen.VRage.Core.Render.MeshBuilderData,Keen.VRage.Library.Collections.PooledList{Keen.VRage.Core.RelativeTransform},Keen.VRage.Core.Render.IMeshConsumer.BatchTypes,System.Int64,Keen.VRage.Core.WorldTransform,System.Int32,System.Object)"/></param>
            <param name="worldTransform">Target transform</param>
        </member>
        <member name="M:Keen.VRage.Core.Render.IMeshConsumer.TryDisposeBatch(System.Int32)">
            <summary>
            <see cref="M:Keen.VRage.Core.Render.IMeshConsumer.DisposeBatch(System.Int32)"/>, but does not assert
            </summary>
            <param name="batchId">Id obtained from <see cref="M:Keen.VRage.Core.Render.IMeshConsumer.CommitBatch(Keen.VRage.Core.Render.MeshBuilderData,Keen.VRage.Library.Collections.PooledList{Keen.VRage.Core.RelativeTransform},Keen.VRage.Core.Render.IMeshConsumer.BatchTypes,System.Int64,Keen.VRage.Core.WorldTransform,System.Int32,System.Object)"/></param>
        </member>
        <member name="M:Keen.VRage.Core.Render.IMeshConsumer.DisposeBatch(System.Int32)">
            <summary>
            Will dispose submitted mesh and related data, if the batch does not exist an assertion fails
            </summary>
            <param name="batchId">Id obtained from <see cref="M:Keen.VRage.Core.Render.IMeshConsumer.CommitBatch(Keen.VRage.Core.Render.MeshBuilderData,Keen.VRage.Library.Collections.PooledList{Keen.VRage.Core.RelativeTransform},Keen.VRage.Core.Render.IMeshConsumer.BatchTypes,System.Int64,Keen.VRage.Core.WorldTransform,System.Int32,System.Object)"/></param>
        </member>
        <member name="M:Keen.VRage.Core.Render.IMeshConsumer.DisposeAllBatches">
            <summary>
            Disposes of all batches
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Render.IMeshConsumer.SubmitTexts(Keen.VRage.Library.Collections.PooledList{Keen.VRage.Core.Render.IMeshConsumer.Text},Keen.VRage.Library.Collections.PooledList{Keen.VRage.Core.RelativeTransform},System.Int64,Keen.VRage.Core.WorldTransform,Keen.VRage.Library.Mathematics.Vector3D,System.Object)">
            <summary>
            Will submit texts all text in the texts list
            </summary>
            <param name="texts">Target list</param>
            <param name="instances">Instances of the submitted text</param>
            <param name="parentId">Id to which parent the text. Not used in <see cref="T:Keen.VRage.Core.Render.MeshBuilder2D"/></param>
            <param name="transform">Root transform</param>
            <param name="worldToLocalOffset">Offset vector</param>
            <param name="customData">Custom data that can be interpreted by implementation of <see cref="T:Keen.VRage.Core.Render.IMeshConsumer"/></param>
        </member>
        <member name="T:Keen.VRage.Core.Render.IMeshConsumer.TextAlignmentEnum">
            <summary>
            Alignment of UI text
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Render.IMeshConsumer.TextAlignmentEnum.AlignLeft">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Render.IMeshConsumer.TextAlignmentEnum.AlignRight">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Render.IMeshConsumer.TextAlignmentEnum.AlignCenter">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="T:Keen.VRage.Core.Render.IMeshConsumer.Text">
            <summary>
            Struct that will be used to submit texts
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Render.IMeshConsumer.BatchTypes">
            <summary>
            Batch types
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Render.IMeshConsumer.BatchTypes.Triangle">
            <summary>
            Triangle or Line batch?
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Render.IMeshConsumer.BatchTypes.Depth">
            <summary>
            Depth read or ignore depth?
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Render.IMeshConsumer.BatchTypes.Persistent">
            <summary>
            Persistent?
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Render.IMeshConsumer.BatchTypes.Opaque">
            <summary>
            Opaque?
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Render.IMeshConsumer.FontTypes">
            <summary>
            Font types
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Render.IMeshConsumer.FontTypes.Standard">
            <summary>
            Standard font
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Render.IPlatformRender">
            <summary>
            Platform specific Render interface, used internally in Render. 
            </summary>
        </member>
        <member name="E:Keen.VRage.Core.Render.IPlatformRender.OnResuming">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="E:Keen.VRage.Core.Render.IPlatformRender.OnSuspending">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.IPlatformRender.SuspendRenderContext">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.IPlatformRender.ResumeRenderContext">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.IPlatformRender.GetMonitorDefaultRefreshRate(System.IntPtr)">
            <summary>
            Discovers default refresh rate of the monitor, if used in windowed mode.
            </summary>
            <param name="hMonitor">HMONITOR handle</param>
            <returns>Refresh rate</returns>
        </member>
        <member name="M:Keen.VRage.Core.Render.IPlatformRender.IsDeveloperModeEnabled">
            <summary>
            Direct3D12.SetStablePowerState might crash - https://docs.microsoft.com/en-us/windows/win32/api/d3d12/nf-d3d12-id3d12device-setstablepowerstate
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Render.MeshBatch">
            <summary>
            Batching of vertices with lifetime and render communication support.
            Use <see cref="M:Keen.VRage.Core.Render.MeshBatch.Add(Keen.VRage.Library.Mathematics.Vector3@,Keen.VRage.Library.Mathematics.ColorSRGB@,System.TimeSpan@)"/> to add new vertices and <see cref="M:Keen.VRage.Core.Render.MeshBatch.Commit(System.Boolean)" /> to submit them to render.
            Usually, you want to Dispose the batch after that, but you can also keep it either for transformation updates (
            <see cref="M:Keen.VRage.Core.Render.MeshBatch.UpdateEntityTransform(Keen.VRage.Core.WorldTransform@)" />) or
            updating its contents via Add and Commit (each commit clears the queue, so it is ready for new submission eventually).
            There is also support for instancing via instances that are passed through the constructor, once instance collection is done, call <see cref="M:Keen.VRage.Core.Render.MeshBatch.Commit(System.Boolean)"/>.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Render.MeshBatch.#ctor(Keen.VRage.Core.Render.IMeshConsumer,Keen.VRage.Library.Collections.PooledList{Keen.VRage.Core.RelativeTransform},Keen.VRage.Core.Render.IMeshConsumer.BatchTypes,System.Int64,System.Int32,System.String,System.Object)">
            <summary>
            Initialized new batch
            </summary>
            <param name="meshConsumer"><see cref="T:Keen.VRage.Core.Render.IMeshConsumer"/> to which collected <see cref="T:Keen.VRage.Core.Render.MeshBuilderData"/> will be submitted</param>
            <param name="instances">Instances provided by <see cref="T:Keen.VRage.Core.Render.MeshBuilder"/></param>
            <param name="expectedVerticesCount">Expected amount of vertices pre batch. Used for creating <see cref="T:Keen.VRage.Core.Render.MeshBuilderData"/></param>
            <param name="batchType">Type of the batch</param>
            <param name="parentId">Used to parent batch. Passed to <see cref="T:Keen.VRage.Core.Render.IMeshConsumer"/></param>
            <param name="batchDebugName">Debug name used for naming <see cref="T:Keen.VRage.Core.Render.MeshBuilderData"/> and for creating entities</param>
            <param name="customData">Custom data that will be interpreted by <see cref="T:Keen.VRage.Core.Render.IMeshConsumer"/></param>
        </member>
        <member name="M:Keen.VRage.Core.Render.MeshBatch.Dispose">
            <summary>
            Disposes batch, struct should not be used anymore.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Render.MeshBatch.Flush">
            <summary>
            Removes(if batch is persistent) and disconnects render entities from the batch
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Render.MeshBatch.AddLine(Keen.VRage.Library.Mathematics.Vector3@,Keen.VRage.Library.Mathematics.Vector3@,Keen.VRage.Library.Mathematics.ColorSRGB,System.Nullable{Keen.VRage.Library.Mathematics.ColorSRGB},System.TimeSpan)">
            <summary>
            Adds single line with specified colors.
            </summary>
            <param name="worldPosFrom">Starting position in in local coordinates.</param>
            <param name="worldPosTo">Ending position in in local coordinates.</param>
            <param name="colorFrom">Starting color in sRGB</param>
            <param name="colorTo">Ending color in sRGB</param>
            <param name="timeOut">Duration while primitive will be visible</param>
        </member>
        <member name="M:Keen.VRage.Core.Render.MeshBatch.AddTriangle(Keen.VRage.Library.Mathematics.Vector3@,Keen.VRage.Library.Mathematics.Vector3@,Keen.VRage.Library.Mathematics.Vector3@,Keen.VRage.Library.Mathematics.ColorSRGB,System.TimeSpan)">
            <summary>
            Adds single triangle with specified color.
            </summary>
            <param name="localPos0">Vertex1 in local coordinates.</param>
            <param name="localPos1">Vertex2 in local coordinates.</param>
            <param name="localPos2">Vertex3 in local coordinates.</param>
            <param name="color">Color to fill the triangle in sRGB</param>
            <param name="timeOut">Duration while primitive will be visible</param>
        </member>
        <member name="M:Keen.VRage.Core.Render.MeshBatch.AddTriangle(Keen.VRage.Library.Mathematics.Vector3@,Keen.VRage.Library.Mathematics.ColorSRGB@,Keen.VRage.Library.Mathematics.Vector3@,Keen.VRage.Library.Mathematics.ColorSRGB@,Keen.VRage.Library.Mathematics.Vector3@,Keen.VRage.Library.Mathematics.ColorSRGB@,System.TimeSpan)">
            <summary>
            Adds single triangle, each vertex with its own color.
            </summary>
            <param name="localPos0">Vertex1 in local coordinates.</param>
            <param name="color0">Vertex1 colors.</param>
            <param name="localPos1">Vertex2 in local coordinates.</param>
            <param name="color1">Vertex2 colors.</param>
            <param name="localPos2">Vertex3 in local coordinates.</param>
            <param name="color2">Vertex3 colors.</param>
            <param name="timeOut">Duration while primitive will be visible</param>
        </member>
        <member name="M:Keen.VRage.Core.Render.MeshBatch.UpdateEntityTransform(Keen.VRage.Core.WorldTransform@)">
            <summary>
            Updates batch's transformation.
            </summary>
            <param name="m">World transformation</param>
        </member>
        <member name="M:Keen.VRage.Core.Render.MeshBatch.DisableAABBComputing">
            <summary>
            Sets infinite AABB to the batch and disables batch AABB computing.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Render.MeshBatch.Commit(System.Boolean)">
            <summary>
            Commits all collected vertices (<see cref="M:Keen.VRage.Core.Render.MeshBatch.Add(Keen.VRage.Library.Mathematics.Vector3@,Keen.VRage.Library.Mathematics.ColorSRGB@,System.TimeSpan@)"/>) and instances to render and clears(if clear parameter is true) its
            internal lists
            (next Commit will update batch with only newly collected data).
            If this is the first call to commit, it creates model entity in render (RenderContracts.CreateModelEntity)
            and sets it up.
            </summary>
            <param name="clear">Clear geometry for next commit</param>
        </member>
        <member name="T:Keen.VRage.Core.Render.MeshBuilder">
            <summary>
            Wraps <see cref="T:Keen.VRage.Core.Render.MeshBatch" /> as multiple instances of the batch, collecting different types of data based on render
            requirements:
            <para>* Triangles and Lines batches.</para>
            <para>* Depth or no depth rendered batches.</para>
            <para>
            * Persistent is kept in render as a separate entity for each Committed frame, which is removed when MaxTimeOut runs out.
            All methods have in <see cref="T:Keen.VRage.Core.Render.MeshBuilder"/> have timeout, which controls time to disappear of the primitive. 
            </para>
            <para>
            * Non-persistent batch uses same entity in renderer and overwrites its contents each frame and collects vertices
            with timeout 0.
            </para>
            <para>
            All data are collected in world coordinates and later localized to camera relative coordinates before submission
            to GPU. Note its only for Global Debug Draw, you can define your own localisation of vertices for local batch
            with <see cref="M:Keen.VRage.Core.Render.MeshBuilder.SetPrimitiveOffset(Keen.VRage.Library.Mathematics.Vector3D)"/> and <see cref="M:Keen.VRage.Core.Render.MeshBuilder.SetInstanceOffset(Keen.VRage.Library.Mathematics.Vector3D)"/>
            </para>
            <para>
            Uses
            </para>
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Render.MeshBuilder.#ctor(Keen.VRage.Core.Render.IMeshConsumer,Keen.VRage.Core.Render.MeshBuilder.Type,System.Int64,System.Int32,System.String,System.Object,System.Object)">
            <summary>
            Constructs multiple batches with specified techniques.
            </summary>
            <param name="meshConsumer">Consumer where mesh batches will submit geometry</param>
            <param name="type">Type of mesh builder, debug type respects <see cref="P:Keen.VRage.Core.GlobalDebugSettings.EnabledDebugDraw"/></param>
            <param name="parentId">Id of the parent entity. Will be passed to <see cref="T:Keen.VRage.Core.Render.IMeshConsumer"/></param>
            <param name="expectedVerticesCount">Expected amount of vertices pre batch.</param>
            <param name="debugName">Debug name of the multi batch. Used to generate debug name of the batches: debugName + "_Batch_" + number of the batch </param>
            <param name="customData">Custom data that will be interpreted by <see cref="T:Keen.VRage.Core.Render.IMeshConsumer"/> when submitting batches</param>
            <param name="customTextData">Custom data that can be interpreted by implementation of <see cref="T:Keen.VRage.Core.Render.IMeshConsumer"/> when commiting text</param>
        </member>
        <member name="M:Keen.VRage.Core.Render.MeshBuilder.Dispose">
            <summary>
            Disposes all batches and commits nonpersistent batches geometry. <see cref="M:Keen.VRage.Core.Render.MeshBatch.Dispose"/>
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Render.MeshBuilder.SetPrimitiveOffset(Keen.VRage.Library.Mathematics.Vector3D)">
            <summary>
            Sets offset to convert vertex position from world position to local. Usually for offset position camera world position is used.
            </summary>
            <param name="offset"></param>
        </member>
        <member name="M:Keen.VRage.Core.Render.MeshBuilder.SetInstanceOffset(Keen.VRage.Library.Mathematics.Vector3D)">
            <summary>
            Sets offset to convert instances matrices from world position to local. Usually for offset position camera world matrix is used.
            </summary>
            <param name="offset"></param>
        </member>
        <member name="M:Keen.VRage.Core.Render.MeshBuilder.DisableAABBComputing">
            <summary>
            Sets infinite AABB to the batch and disables batch AABB computing.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Render.MeshBuilder.DisableUpdateSupport">
            <summary>
            Disables <see cref="M:Keen.VRage.Core.Render.MeshBuilder.UpdateEntityTransform(Keen.VRage.Core.WorldTransform@)"/> <see cref="M:Keen.VRage.Core.Render.MeshBuilder.AddInstance(Keen.VRage.Core.WorldTransform@)"/>. Mainly used for global debug draw
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Render.MeshBuilder.UpdateEntityTransform(Keen.VRage.Core.WorldTransform@)">
            <summary>
            Updates all batch's root matrices.
            </summary>
            <param name="t">World transformation</param>
        </member>
        <member name="M:Keen.VRage.Core.Render.MeshBuilder.AddInstance(Keen.VRage.Core.WorldTransform@)">
            <summary>
            Collects instance transformations for all batches. The count of transforms tells count of instances.
            </summary>
            <param name="t">Instance's transformation relative to the batch</param>
        </member>
        <member name="M:Keen.VRage.Core.Render.MeshBuilder.Commit(System.Boolean)">
            <summary>
            Commits all collected batches and texts. <see cref="M:Keen.VRage.Core.Render.MeshBatch.Commit(System.Boolean)" /> for details.
            </summary>
            <param name="clear">Clear mesh render data?</param>
        </member>
        <member name="M:Keen.VRage.Core.Render.MeshBuilder.AddLine(Keen.VRage.Library.Mathematics.Vector3D,Keen.VRage.Library.Mathematics.Vector3D,Keen.VRage.Library.Mathematics.ColorSRGB,System.Boolean,System.TimeSpan)">
            <summary>
            Variant of AddLine without color interpolation.
            </summary>
            <param name="worldPosFrom"></param>
            <param name="worldPosTo"></param>
            <param name="colorFrom"></param>
            <param name="depth"></param>
            <param name="timeout"></param>
        </member>
        <member name="M:Keen.VRage.Core.Render.MeshBuilder.AddLine(Keen.VRage.Library.Mathematics.Vector3D,Keen.VRage.Library.Mathematics.Vector3D,Keen.VRage.Library.Mathematics.ColorSRGB,System.Nullable{Keen.VRage.Library.Mathematics.ColorSRGB},System.Boolean,System.TimeSpan)">
            <summary>
            Adds single line with specified colors to the line batch based on depth and timeout.
            </summary>
            <param name="worldPosFrom">Starting position in in world coordinates.</param>
            <param name="worldPosTo">Ending position in in world coordinates.</param>
            <param name="colorFrom">Starting color in sRGB</param>
            <param name="colorTo">Ending color in sRGB</param>
            <param name="depth">Use depth buffer?</param>
            <param name="timeout">Timeout in seconds, <see cref="T:Keen.VRage.Core.Render.MeshBuilder" /> for details</param>
        </member>
        <member name="M:Keen.VRage.Core.Render.MeshBuilder.AddLine(Keen.VRage.Library.Mathematics.Vector3D,Keen.VRage.Library.Mathematics.Vector3D,System.ReadOnlySpan{Keen.VRage.Core.Render.MeshBuilder.ColorGradientPoint},System.Single,System.Boolean,System.TimeSpan,System.Boolean)">
            <summary>
            Adds single line with specified color gradient to the line batch based on depth and timeout.
            </summary>
            <param name="worldPosFrom">Starting position in world coordinates.</param>
            <param name="worldPosTo">Ending position in world coordinates.</param>
            <param name="colorGradient">Color gradient of the line</param>
            <param name="thickness">Thickness of the line</param>
            <param name="depth">Use depth buffer?</param>
            <param name="timeout">Timeout in seconds, <see cref="T:Keen.VRage.Core.Render.MeshBuilder" /> for details</param>
            <param name="antialiasEdge">Fade out long side of edge towards 0? Only used if thickness != 0</param>
        </member>
        <member name="M:Keen.VRage.Core.Render.MeshBuilder.AddTriangle(Keen.VRage.Library.Mathematics.Vector3D,Keen.VRage.Library.Mathematics.Vector3D,Keen.VRage.Library.Mathematics.Vector3D,Keen.VRage.Library.Mathematics.ColorSRGB,System.Boolean,System.TimeSpan)">
            <summary>
            Adds a single triangle with specified color to the triangle batch based on depth and timeout.
            </summary>
            <param name="worldPos0">Vertex1 in world coordinates.</param>
            <param name="worldPos1">Vertex2 in world coordinates.</param>
            <param name="worldPos2">Vertex3 in world coordinates.</param>
            <param name="color">Color to fill the triangle in sRGB</param>
            <param name="depth">Use depth buffer?</param>
            <param name="timeout">Timeout in seconds, <see cref="T:Keen.VRage.Core.Render.MeshBuilder" /> for details</param>
        </member>
        <member name="M:Keen.VRage.Core.Render.MeshBuilder.AddTriangle(Keen.VRage.Library.Mathematics.Vector3D,Keen.VRage.Library.Mathematics.ColorSRGB,Keen.VRage.Library.Mathematics.Vector3D,Keen.VRage.Library.Mathematics.ColorSRGB,Keen.VRage.Library.Mathematics.Vector3D,Keen.VRage.Library.Mathematics.ColorSRGB,System.Boolean,System.TimeSpan)">
            <summary>
            Adds a single triangle with specified colors to the triangle batch based on depth and timeout.
            </summary>
            <param name="worldPos0">Vertex1 in world coordinates.</param>
            <param name="color0">Color of vertex0</param>
            <param name="worldPos1">Vertex2 in world coordinates.</param>
            <param name="color1">Color of vertex1</param>
            <param name="worldPos2">Vertex3 in world coordinates.</param>
            <param name="color2">Color of vertex2</param>
            <param name="depth">Use depth buffer?</param>
            <param name="timeout">Timeout in seconds, <see cref="T:Keen.VRage.Core.Render.MeshBuilder" /> for details</param>
        </member>
        <member name="M:Keen.VRage.Core.Render.MeshBuilder.AddText(Keen.VRage.Library.Mathematics.Vector3D@,System.String,Keen.VRage.Library.Mathematics.ColorSRGB,System.Single,Keen.VRage.Core.Render.IMeshConsumer.TextAlignmentEnum,System.Boolean,System.Boolean,System.TimeSpan,Keen.VRage.Core.Render.IMeshConsumer.FontTypes)">
            <summary>
            Adds text to the text batch. Send to render with <see cref="M:Keen.VRage.Core.Render.MeshBuilder.Commit(System.Boolean)" />
            (see for parameters reference)
            </summary>
            <param name="worldPos"></param>
            <param name="text"></param>
            <param name="color"></param>
            <param name="scale"></param>
            <param name="align"></param>
            <param name="ignoreBounds"></param>
            <param name="depth"></param>
            <param name="timeout"></param>
            <param name="fontType">Font type to use when rendering the text string</param>
        </member>
        <member name="T:Keen.VRage.Core.Render.MeshBuilder.ColorGradientPoint">
            <summary>
            A color/section pair which mark points on a gradient, section value 0.0f is start and 1.0f is end.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Render.MeshBuilder.Type">
            <summary>
            Type of the mesh builder. <see cref="T:Keen.VRage.Core.Render.MeshBuilder"/>
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Render.MeshBuilder2D">
            <summary>
            Mesh builder for 2D shapes. Internally uses <see cref="T:Keen.VRage.Core.Render.MeshBuilder"/>
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Render.MeshBuilder2D.#ctor(Keen.VRage.Core.Render.IMeshConsumer,Keen.VRage.Core.Render.MeshBuilder2D.Type,System.Int32,System.String,System.Object)">
            <summary>
            Constructs 2D mesh builder.
            </summary>
            <param name="meshConsumer"></param>
            <param name="type">Type of mesh builder, debug type respects <see cref="P:Keen.VRage.Core.GlobalDebugSettings.EnabledDebugDraw"/></param>
            <param name="expectedVerticesCount">Expected amount of vertices pre batch. Used for creating <see cref="T:Keen.VRage.Core.Render.MeshBuilderData"/></param>
            <param name="debugName">Debug name of the mesh builder. Used to generate debug name of the batches: debugName + "_Batch_" + number of the batch </param>
            <param name="customData">Used to provide custom data that can be interpreted by <see cref="T:Keen.VRage.Core.Render.IMeshConsumer"/></param>
        </member>
        <member name="M:Keen.VRage.Core.Render.MeshBuilder2D.Dispose">
            <summary>
            <see cref="M:Keen.VRage.Core.Render.MeshBuilder.Dispose" />
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Render.MeshBuilder2D.AddLine(Keen.VRage.Library.Mathematics.Vector2,Keen.VRage.Library.Mathematics.Vector2,Keen.VRage.Library.Mathematics.ColorSRGB,System.Nullable{Keen.VRage.Library.Mathematics.ColorSRGB},System.TimeSpan)">
            <summary>
            <see cref="M:Keen.VRage.Core.Render.MeshBuilder.AddLine(Keen.VRage.Library.Mathematics.Vector3D,Keen.VRage.Library.Mathematics.Vector3D,Keen.VRage.Library.Mathematics.ColorSRGB,System.Boolean,System.TimeSpan)"/>
            </summary>
            <param name="pointFrom"></param>
            <param name="pointTo"></param>
            <param name="colorFrom"></param>
            <param name="colorTo"></param>
            <param name="timeout"></param>
        </member>
        <member name="M:Keen.VRage.Core.Render.MeshBuilder2D.AddTriangle(Keen.VRage.Library.Mathematics.Vector2,Keen.VRage.Library.Mathematics.Vector2,Keen.VRage.Library.Mathematics.Vector2,Keen.VRage.Library.Mathematics.ColorSRGB,System.TimeSpan)">
            <summary>
            <see cref="M:Keen.VRage.Core.Render.MeshBuilder.AddTriangle(Keen.VRage.Library.Mathematics.Vector3D,Keen.VRage.Library.Mathematics.Vector3D,Keen.VRage.Library.Mathematics.Vector3D,Keen.VRage.Library.Mathematics.ColorSRGB,System.Boolean,System.TimeSpan)"/>
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <param name="v3"></param>
            <param name="cFill"></param>
            <param name="timeout"></param>
        </member>
        <member name="M:Keen.VRage.Core.Render.MeshBuilder2D.AddText(Keen.VRage.Library.Mathematics.Vector2,System.String,Keen.VRage.Library.Mathematics.ColorSRGB,System.Single,System.Boolean,Keen.VRage.Core.Render.IMeshConsumer.TextAlignmentEnum,System.TimeSpan)">
            <summary>
            <see cref="M:Keen.VRage.Core.Render.MeshBuilder.AddText(Keen.VRage.Library.Mathematics.Vector3D@,System.String,Keen.VRage.Library.Mathematics.ColorSRGB,System.Single,Keen.VRage.Core.Render.IMeshConsumer.TextAlignmentEnum,System.Boolean,System.Boolean,System.TimeSpan,Keen.VRage.Core.Render.IMeshConsumer.FontTypes)" />
            </summary>
            <param name="screenCoord"></param>
            <param name="text"></param>
            <param name="color"></param>
            <param name="scale"></param>
            <param name="ignoreBounds"></param>
            <param name="align"></param>
            <param name="timeout"></param>
        </member>
        <member name="M:Keen.VRage.Core.Render.MeshBuilder2D.Commit">
            <summary>
            <see cref="M:Keen.VRage.Core.Render.MeshBuilder.Commit(System.Boolean)" />
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Render.MeshBuilder2D.Type">
            <summary>
            Type of the mesh builder. <see cref="T:Keen.VRage.Core.Render.MeshBuilder2D"/>
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Render.MeshBuilder2DExtensions">
            <summary>
            Extensions for <see cref="T:Keen.VRage.Core.Render.MeshBuilder2D" /> for constructing shapes.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Render.MeshBuilder2DExtensions.AddQuadClockWise(Keen.VRage.Core.Render.MeshBuilder2D,Keen.VRage.Library.Mathematics.Vector2,Keen.VRage.Library.Mathematics.Vector2,Keen.VRage.Library.Mathematics.Vector2,Keen.VRage.Library.Mathematics.Vector2,Keen.VRage.Library.Mathematics.ColorSRGB,System.TimeSpan)">
            <summary>
            Adds triangle quad to the builder. <see cref="M:Keen.VRage.Core.Render.MeshBuilder2D.AddTriangle(Keen.VRage.Library.Mathematics.Vector2,Keen.VRage.Library.Mathematics.Vector2,Keen.VRage.Library.Mathematics.Vector2,Keen.VRage.Library.Mathematics.ColorSRGB,System.TimeSpan)" /> for details on parameters.
            </summary>
            <param name="builder"></param>
            <param name="v0"></param>
            <param name="v1"></param>
            <param name="v2"></param>
            <param name="v3"></param>
            <param name="cFill"></param>
            <param name="timeout"></param>
        </member>
        <member name="M:Keen.VRage.Core.Render.MeshBuilder2DExtensions.AddQuadClockWise(Keen.VRage.Core.Render.MeshBuilder2D,Keen.VRage.Library.Mathematics.Vector2,Keen.VRage.Library.Mathematics.Vector2,Keen.VRage.Library.Mathematics.Vector2,Keen.VRage.Library.Mathematics.Vector2,System.Nullable{Keen.VRage.Library.Mathematics.ColorSRGB},System.Nullable{Keen.VRage.Library.Mathematics.ColorSRGB},System.TimeSpan)">
            <summary>
            Adds triangle and / or line quad to the builder. <see cref="M:Keen.VRage.Core.Render.MeshBuilder2D.AddTriangle(Keen.VRage.Library.Mathematics.Vector2,Keen.VRage.Library.Mathematics.Vector2,Keen.VRage.Library.Mathematics.Vector2,Keen.VRage.Library.Mathematics.ColorSRGB,System.TimeSpan)" /> for details on parameters.
            <see cref="M:Keen.VRage.Core.Render.MeshBuilder2D.AddTriangle(Keen.VRage.Library.Mathematics.Vector2,Keen.VRage.Library.Mathematics.Vector2,Keen.VRage.Library.Mathematics.Vector2,Keen.VRage.Library.Mathematics.ColorSRGB,System.TimeSpan)" /> and <see cref="M:Keen.VRage.Core.Render.MeshBuilder2D.AddLine(Keen.VRage.Library.Mathematics.Vector2,Keen.VRage.Library.Mathematics.Vector2,Keen.VRage.Library.Mathematics.ColorSRGB,System.Nullable{Keen.VRage.Library.Mathematics.ColorSRGB},System.TimeSpan)" /> for details on parameters.
            </summary>
            <param name="builder"></param>
            <param name="c0"></param>
            <param name="c1"></param>
            <param name="c2"></param>
            <param name="c3"></param>
            <param name="cFill"></param>
            <param name="cOutline"></param>
            <param name="timeout"></param>
        </member>
        <member name="M:Keen.VRage.Core.Render.MeshBuilder2DExtensions.AddRectangle(Keen.VRage.Core.Render.MeshBuilder2D,Keen.VRage.Library.Mathematics.BoundingBox2,System.Nullable{Keen.VRage.Library.Mathematics.ColorSRGB},System.Nullable{Keen.VRage.Library.Mathematics.ColorSRGB},System.TimeSpan)">
            <summary>
            Adds rectangle to the triangle and / or line builder.
            </summary>
            <param name="builder"></param>
            <param name="bb"></param>
            <param name="cFill"></param>
            <param name="cOutline"></param>
            <param name="timeout"></param>
        </member>
        <member name="M:Keen.VRage.Core.Render.MeshBuilder2DExtensions.AddRectangle(Keen.VRage.Core.Render.MeshBuilder2D,Keen.VRage.Library.Mathematics.BoundingBox2,Keen.VRage.Core.RelativeTransform,System.Nullable{Keen.VRage.Library.Mathematics.ColorSRGB},System.Nullable{Keen.VRage.Library.Mathematics.ColorSRGB},System.TimeSpan)">
            <summary>
            Adds rectangle to the triangle and / or line builder.
            </summary>
            <param name="builder"></param>
            <param name="bb"></param>
            <param name="transform">Will ignore z coordinate</param>
            <param name="cFill"></param>
            <param name="cOutline"></param>
            <param name="timeout"></param>
        </member>
        <member name="M:Keen.VRage.Core.Render.MeshBuilder2DExtensions.AddCircle(Keen.VRage.Core.Render.MeshBuilder2D,Keen.VRage.Library.Mathematics.Vector2,System.Single,System.Nullable{Keen.VRage.Library.Mathematics.ColorSRGB},System.Nullable{Keen.VRage.Library.Mathematics.ColorSRGB},System.TimeSpan)">
            <summary>
            Adds circle to the triangle and / or line builder.
            </summary>
            <param name="builder"></param>
            <param name="center"></param>
            <param name="radius"></param>
            <param name="cFill"></param>
            <param name="cOutline"></param>
            <param name="timeout"></param>
        </member>
        <member name="T:Keen.VRage.Core.Render.MeshBuilderData">
            <summary>
            Mesh data that is submitted to <see cref="T:Keen.VRage.Core.Render.IMeshConsumer"/>
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Render.MeshBuilderData.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Create mesh data and initialises all necessary lists 
            </summary>
            <param name="debugName"></param>
            <param name="vertexCount">Expected count of vertexCount</param>
            <param name="indexCount">Expected count of indexCount</param>
        </member>
        <member name="T:Keen.VRage.Core.Render.MeshBuilderExtensions">
            <summary>
            Extensions for <see cref="T:Keen.VRage.Core.Render.MeshBuilder" /> for constructing shapes.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Render.MeshBuilderExtensions.AddQuadClockWise(Keen.VRage.Core.Render.MeshBuilder,Keen.VRage.Library.Mathematics.Vector3D@,Keen.VRage.Library.Mathematics.Vector3D@,Keen.VRage.Library.Mathematics.Vector3D@,Keen.VRage.Library.Mathematics.Vector3D@,Keen.VRage.Library.Mathematics.ColorSRGB,System.Boolean,System.TimeSpan)">
            <summary>
            Adds triangle quad to the builder. <see cref="M:Keen.VRage.Core.Render.MeshBuilder.AddTriangle(Keen.VRage.Library.Mathematics.Vector3D,Keen.VRage.Library.Mathematics.Vector3D,Keen.VRage.Library.Mathematics.Vector3D,Keen.VRage.Library.Mathematics.ColorSRGB,System.Boolean,System.TimeSpan)"/> for details on parameters.
            </summary>
            <param name="builder"></param>
            <param name="worldPos0"></param>
            <param name="worldPos1"></param>
            <param name="worldPos2"></param>
            <param name="worldPos3"></param>
            <param name="color"></param>
            <param name="depth"></param>
            <param name="timeout"></param>
        </member>
        <member name="M:Keen.VRage.Core.Render.MeshBuilderExtensions.AddAntialiasedQuadClockWise(Keen.VRage.Core.Render.MeshBuilder,Keen.VRage.Library.Mathematics.Vector3D@,Keen.VRage.Library.Mathematics.Vector3D@,Keen.VRage.Library.Mathematics.Vector3D@,Keen.VRage.Library.Mathematics.Vector3D@,Keen.VRage.Library.Mathematics.ColorSRGB,System.Single,System.Boolean,System.TimeSpan)">
            <summary>
            Adds a triangle quad to the builder. Additional geometry is generated to create an antialiasing effect around the quad.
            <see cref="M:Keen.VRage.Core.Render.MeshBuilder.AddTriangle(Keen.VRage.Library.Mathematics.Vector3D,Keen.VRage.Library.Mathematics.Vector3D,Keen.VRage.Library.Mathematics.Vector3D,Keen.VRage.Library.Mathematics.ColorSRGB,System.Boolean,System.TimeSpan)"/> for details on parameters.
            </summary>
            <param name="builder"></param>
            <param name="worldPos0"></param>
            <param name="worldPos1"></param>
            <param name="worldPos2"></param>
            <param name="worldPos3"></param>
            <param name="color"></param>
            <param name="radius">Radius, is world space, of the antialias region that is added around the quad</param>
            <param name="depth"></param>
            <param name="timeout"></param>
        </member>
        <member name="M:Keen.VRage.Core.Render.MeshBuilderExtensions.AddQuad(Keen.VRage.Core.Render.MeshBuilder,Keen.VRage.Library.Mathematics.Vector3D@,Keen.VRage.Library.Mathematics.Vector3D@,Keen.VRage.Library.Mathematics.Vector3D@,Keen.VRage.Library.Mathematics.Vector3D@,Keen.VRage.Library.Mathematics.ColorSRGB,System.Boolean,System.TimeSpan)">
            <summary>
            Adds line quad to the builder. 
            </summary>
            <param name="builder"></param>
            <param name="worldPos0"></param>
            <param name="worldPos1"></param>
            <param name="worldPos2"></param>
            <param name="worldPos3"></param>
            <param name="cOutline"></param>
            <param name="depth"></param>
            <param name="timeout"></param>
        </member>
        <member name="M:Keen.VRage.Core.Render.MeshBuilderExtensions.AddQuadClockWise(Keen.VRage.Core.Render.MeshBuilder,Keen.VRage.Library.Mathematics.Vector3D@,Keen.VRage.Library.Mathematics.Vector3D@,Keen.VRage.Library.Mathematics.Vector3D@,Keen.VRage.Library.Mathematics.Vector3D@,System.Nullable{Keen.VRage.Library.Mathematics.ColorSRGB},System.Nullable{Keen.VRage.Library.Mathematics.ColorSRGB},System.Boolean,System.TimeSpan)">
            <summary>
            Adds triangle and / or line quad to the builder based on cFill and cOutline parameters.
            <see cref="M:Keen.VRage.Core.Render.MeshBuilder.AddTriangle(Keen.VRage.Library.Mathematics.Vector3D,Keen.VRage.Library.Mathematics.Vector3D,Keen.VRage.Library.Mathematics.Vector3D,Keen.VRage.Library.Mathematics.ColorSRGB,System.Boolean,System.TimeSpan)"/> for details on parameters.
            </summary>
            <param name="builder"></param>
            <param name="worldPos0"></param>
            <param name="worldPos1"></param>
            <param name="worldPos2"></param>
            <param name="worldPos3"></param>
            <param name="cFill"></param>
            <param name="cOutline"></param>
            <param name="depth"></param>
            <param name="timeout"></param>
        </member>
        <member name="M:Keen.VRage.Core.Render.MeshBuilderExtensions.AddQuadClockWise(Keen.VRage.Core.Render.MeshBuilder,Keen.VRage.Library.Mathematics.Vector3D@,Keen.VRage.Library.Mathematics.Vector3D@,Keen.VRage.Library.Mathematics.Vector3D@,Keen.VRage.Library.Mathematics.Vector3D@,System.Nullable{Keen.VRage.Library.Mathematics.ColorSRGB},System.ReadOnlySpan{Keen.VRage.Core.Render.MeshBuilder.ColorGradientPoint},System.Boolean,System.TimeSpan)">
            <summary>
            Adds triangle and / or line quad to the builder based on cFill and cOutline parameters.
            <see cref="M:Keen.VRage.Core.Render.MeshBuilder.AddTriangle(Keen.VRage.Library.Mathematics.Vector3D,Keen.VRage.Library.Mathematics.Vector3D,Keen.VRage.Library.Mathematics.Vector3D,Keen.VRage.Library.Mathematics.ColorSRGB,System.Boolean,System.TimeSpan)"/> for details on parameters.
            </summary>
            <param name="builder"></param>
            <param name="worldPos0"></param>
            <param name="worldPos1"></param>
            <param name="worldPos2"></param>
            <param name="worldPos3"></param>
            <param name="cFill"></param>
            <param name="cOutline"></param>
            <param name="depth"></param>
            <param name="timeout"></param>
        </member>
        <member name="M:Keen.VRage.Core.Render.MeshBuilderExtensions.AddHexahedron(Keen.VRage.Core.Render.MeshBuilder,System.ReadOnlySpan{Keen.VRage.Library.Mathematics.Vector3D}@,System.Nullable{Keen.VRage.Library.Mathematics.ColorSRGB},System.Nullable{Keen.VRage.Library.Mathematics.ColorSRGB},System.Boolean,System.TimeSpan)">
            <summary>
            Adds hexahedron (6 faced convex polyhedron) defined with vertices using triangles and / or lines to the builder based
            on cFill or cOutline parameters.
            </summary>
            <param name="builder">Destination builder</param>
            <param name="vertices">List of hexahedron vertices</param>
            <param name="cFill">Color for filling the hexahedron (null for no filling)</param>
            <param name="cOutline">Color for outline of the hexahedron (null for no outline)</param>
            <param name="depth">Use depth buffer?</param>
            <param name="timeout">Timeout in seconds, <see cref="T:Keen.VRage.Core.Render.MeshBuilder" /> for details</param>
        </member>
        <member name="M:Keen.VRage.Core.Render.MeshBuilderExtensions.AddFrustum(Keen.VRage.Core.Render.MeshBuilder,Keen.VRage.Library.Mathematics.CullingFrustumD@,System.Nullable{Keen.VRage.Library.Mathematics.ColorSRGB},System.Nullable{Keen.VRage.Library.Mathematics.ColorSRGB},System.Boolean,System.TimeSpan)">
            <summary>
            Adds frustum to the builder. Returns false if the frustum is infinite and can't be added.
            </summary>
            <param name="builder">Destination builder</param>
            <param name="frustum">Frustum in world coordinates</param>
            <param name="cFill">Color for filling the hexahedron (null for no filling)</param>
            <param name="cOutline">Color for outline of the hexahedron (null for no outline)</param>
            <param name="depth">Use depth buffer?</param>
            <param name="timeout">Timeout in seconds, <see cref="T:Keen.VRage.Core.Render.MeshBuilder" /> for details</param>
        </member>
        <member name="M:Keen.VRage.Core.Render.MeshBuilderExtensions.AddAABB(Keen.VRage.Core.Render.MeshBuilder,Keen.VRage.Core.WorldTransform@,System.Nullable{Keen.VRage.Library.Mathematics.BoundingBoxD},System.Nullable{Keen.VRage.Library.Mathematics.ColorSRGB},System.ReadOnlySpan{Keen.VRage.Core.Render.MeshBuilder.ColorGradientPoint},System.Single,System.Boolean,System.TimeSpan)">
            <summary>
            Adds aabb to the builder. This method is a more advanced version of the AddAABB that only accepts a single color for its outline
            </summary>
            <param name="builder">Destination builder</param>
            <param name="transform">Translation of the aabb</param>
            <param name="aabb">Used for position and scale of the AABB</param>
            <param name="cFill">Color for filling the aabb (null for no filling)</param>
            <param name="cOutline">Color gradient for outline of the aabb (null/empty for no outline)</param>
            <param name="outlineThickness">Thickness of the line in meters. When not zero, an oriented quad is used instead of a line. Use zero when performance is strict</param>
            <param name="depth">Use depth buffer?</param>
            <param name="timeout">Timeout in seconds, <see cref="T:Keen.VRage.Core.Render.MeshBuilder" /> for details</param>
        </member>
        <member name="M:Keen.VRage.Core.Render.MeshBuilderExtensions.AddAABB(Keen.VRage.Core.Render.MeshBuilder,Keen.VRage.Core.WorldTransform@,System.Nullable{Keen.VRage.Library.Mathematics.BoundingBoxD},System.Nullable{Keen.VRage.Library.Mathematics.ColorSRGB},System.Nullable{Keen.VRage.Library.Mathematics.ColorSRGB},System.Single,System.Boolean,System.TimeSpan)">
            <summary>
            Adds aabb to the builder.
            </summary>
            <param name="builder">Destination builder</param>
            <param name="aabb">Used for position and scale of the AABB</param>
            <param name="transform">Translation of the aabb</param>
            <param name="cFill">Color for filling the aabb (null for no filling)</param>
            <param name="cOutline">Color for outline of the aabb (null for no outline)</param>
            <param name="outlineThickness">Thickness of the line in meters. When not zero, an oriented quad is used instead of a line. Use zero when performance is strict</param>
            <param name="depth">Use depth buffer?</param>
            <param name="timeout">Timeout in seconds, <see cref="T:Keen.VRage.Core.Render.MeshBuilder" /> for details</param>
        </member>
        <member name="M:Keen.VRage.Core.Render.MeshBuilderExtensions.AddBB(Keen.VRage.Core.Render.MeshBuilder,Keen.VRage.Core.WorldTransform,Keen.VRage.Library.Mathematics.OrientedBoundingBoxD,System.Nullable{Keen.VRage.Library.Mathematics.ColorSRGB},System.Nullable{Keen.VRage.Library.Mathematics.ColorSRGB},System.Boolean,System.TimeSpan)">
            <summary>
            Add <see cref="T:Keen.VRage.Library.Mathematics.OrientedBoundingBox"/> to the builder.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Render.MeshBuilderExtensions.AddCylinder(Keen.VRage.Core.Render.MeshBuilder,Keen.VRage.Core.WorldTransform@,System.Double,System.Double,System.Nullable{Keen.VRage.Library.Mathematics.ColorSRGB},System.Nullable{Keen.VRage.Library.Mathematics.ColorSRGB},System.Boolean,System.TimeSpan,System.Boolean)">
            <summary>
            Adds cylinder to the builder.
            </summary>
            <param name="builder">Destination builder</param>
            <param name="transform">Position and rotation of the mesh</param>
            <param name="radius">Cylinder radius</param>
            <param name="height">Cylinder height</param>
            <param name="cFill">Fill color. If not null the mesh would be drawn with triangles</param>
            <param name="cOutline">Outline color. If not null the mesh would be drawn with lines</param>
            <param name="depth">Use depth buffer?</param>
            <param name="timeout">Timeout in seconds, <see cref="T:Keen.VRage.Core.Render.MeshBuilder" /> for details</param>
            <param name="fillTopBottom"></param>
        </member>
        <member name="M:Keen.VRage.Core.Render.MeshBuilderExtensions.AddCone(Keen.VRage.Core.Render.MeshBuilder,Keen.VRage.Library.Mathematics.Vector3D@,Keen.VRage.Library.Mathematics.Vector3D,Keen.VRage.Library.Mathematics.Vector3D,System.Nullable{Keen.VRage.Library.Mathematics.ColorSRGB},System.Nullable{Keen.VRage.Library.Mathematics.ColorSRGB},System.Boolean,System.TimeSpan)">
            <summary>
            Adds cone to the builder.
            </summary>
            <param name="builder">Destination builder</param>
            <param name="position">Position of the cone, more specifically center of the base of the cone.</param>
            <param name="directionVector">Up direction of the cone.</param>
            <param name="baseVector">Right direction of the cone. Used to set radius</param>
            <param name="cFill">Fill color. If not null the mesh would be drawn with triangles</param>
            <param name="cOutline">Outline color. If not null the mesh would be drawn with lines</param>
            <param name="depth">Use depth buffer?</param>
            <param name="timeout">Timeout in seconds, <see cref="T:Keen.VRage.Core.Render.MeshBuilder" /> for details</param>
        </member>
        <member name="M:Keen.VRage.Core.Render.MeshBuilderExtensions.AddSphere(Keen.VRage.Core.Render.MeshBuilder,Keen.VRage.Core.WorldTransform@,System.Double,System.Nullable{Keen.VRage.Library.Mathematics.ColorSRGB},System.Nullable{Keen.VRage.Library.Mathematics.ColorSRGB},System.Boolean,System.TimeSpan)">
            <summary>
            Adds sphere to the builder.
            </summary>
            <param name="builder">Destination builder</param>
            <param name="transform">Position and rotation of the mesh</param>
            <param name="radius">Sphere radius</param>
            <param name="cFill">Fill color. If not null the mesh would be drawn with triangles</param>
            <param name="cOutline">Outline color. If not null the mesh would be drawn with lines</param>
            <param name="depth">Use depth buffer?</param>
            <param name="timeout">Timeout in seconds, <see cref="T:Keen.VRage.Core.Render.MeshBuilder" /> for details</param>
        </member>
        <member name="M:Keen.VRage.Core.Render.MeshBuilderExtensions.AddHemisphere(Keen.VRage.Core.Render.MeshBuilder,Keen.VRage.Core.WorldTransform@,System.Double,System.Nullable{Keen.VRage.Library.Mathematics.ColorSRGB},System.Nullable{Keen.VRage.Library.Mathematics.ColorSRGB},System.Boolean,System.TimeSpan)">
            <summary>
            Adds hemisphere to the builder.
            </summary>
            <param name="builder">Destination builder</param>
            <param name="transform">Position and rotation of the mesh</param>
            <param name="radius">Hemisphere radius</param>
            <param name="cFill">Fill color. If not null the mesh would be drawn with triangles</param>
            <param name="cOutline">Outline color. If not null the mesh would be drawn with lines</param>
            <param name="depth">Use depth buffer?</param>
            <param name="timeout">Timeout in seconds, <see cref="T:Keen.VRage.Core.Render.MeshBuilder" /> for details</param>
        </member>
        <member name="M:Keen.VRage.Core.Render.MeshBuilderExtensions.AddSphereRing(Keen.VRage.Core.Render.MeshBuilder,Keen.VRage.Library.Mathematics.BoundingSphereD@,Keen.VRage.Library.Mathematics.ColorSRGB@,Keen.VRage.Core.WorldTransform@,System.Boolean,System.TimeSpan,System.Single)">
            <summary>
            Adds sphere ring to the builder.
            </summary>
            <param name="builder">Destination builder</param>
            <param name="sphere">Used to determine position and radius of the ring</param>
            <param name="color">Color of the ring</param>
            <param name="onb">Rotation and position</param>
            <param name="depth">Use depth buffer?</param>
            <param name="arc">Angle that will be drawn. Measured in radians. Default value 2*PI</param>
            <param name="timeout">Timeout in seconds, <see cref="T:Keen.VRage.Core.Render.MeshBuilder" /> for details</param>
        </member>
        <member name="M:Keen.VRage.Core.Render.MeshBuilderExtensions.AddHemisphereRing(Keen.VRage.Core.Render.MeshBuilder,Keen.VRage.Library.Mathematics.BoundingSphereD@,Keen.VRage.Library.Mathematics.ColorSRGB@,Keen.VRage.Core.WorldTransform@,Keen.VRage.Library.Mathematics.Vector3D,System.Boolean,System.TimeSpan,System.Single)">
            <summary>
            Adds part sphere ring that is on the positive side of the plane to the builder.
            </summary>
            <param name="builder">Destination builder</param>
            <param name="sphere">Used to determine position and radius of the ring</param>
            <param name="color">Color of the ring</param>
            <param name="onb">Rotation and position</param>
            <param name="cutPlaneNormal">Normal of the plane in the center of the sphere. Will cut verities that are on the negative side of the plane</param>
            <param name="depth">Use depth buffer?</param>
            <param name="arc">Angle that will be drawn. Measured in radians. Default value 2*PI</param>
            <param name="timeout">Timeout in seconds, <see cref="T:Keen.VRage.Core.Render.MeshBuilder" /> for details</param>
        </member>
        <member name="M:Keen.VRage.Core.Render.MeshBuilderExtensions.AddCircle(Keen.VRage.Core.Render.MeshBuilder,Keen.VRage.Core.WorldTransform@,System.Double,System.Nullable{Keen.VRage.Library.Mathematics.ColorSRGB},System.Nullable{Keen.VRage.Library.Mathematics.ColorSRGB},System.Boolean,System.TimeSpan)">
            <summary>
            Adds circle to the builder.
            </summary>
            <param name="builder">Destination builder</param>
            <param name="transform">Position and rotation of the mesh</param>
            <param name="radius">Radius of the circle</param>
            <param name="cFill">Fill color. If not null the mesh would be drawn with triangles</param>
            <param name="cOutline">Outline color. If not null the mesh would be drawn with lines</param>
            <param name="depth">Use depth buffer?</param>
            <param name="timeout">Timeout in seconds, <see cref="T:Keen.VRage.Core.Render.MeshBuilder" /> for details</param>
        </member>
        <member name="M:Keen.VRage.Core.Render.MeshBuilderExtensions.AddCircleArc(Keen.VRage.Core.Render.MeshBuilder,Keen.VRage.Core.WorldTransform@,System.Double,System.Nullable{Keen.VRage.Library.Mathematics.ColorSRGB},System.Nullable{Keen.VRage.Library.Mathematics.ColorSRGB},System.Boolean,System.TimeSpan,System.Double,System.Boolean)">
            <summary>
            Adds circle arc to the builder. Less efficient than <see cref="M:Keen.VRage.Core.Render.MeshBuilderExtensions.AddCircle(Keen.VRage.Core.Render.MeshBuilder,Keen.VRage.Core.WorldTransform@,System.Double,System.Nullable{Keen.VRage.Library.Mathematics.ColorSRGB},System.Nullable{Keen.VRage.Library.Mathematics.ColorSRGB},System.Boolean,System.TimeSpan)" /> but allows to draw only part of the circle.
            </summary>
            <param name="builder">Destination builder</param>
            <param name="transform">Position and rotation of the mesh</param>
            <param name="radius">Radius of the circle</param>
            <param name="cFill">Fill color. If not null the mesh would be drawn with triangles</param>
            <param name="cOutline">Outline color. If not null the mesh would be drawn with lines</param>
            <param name="depth">Use depth buffer?</param>
            <param name="timeout">Timeout in seconds, <see cref="T:Keen.VRage.Core.Render.MeshBuilder" /> for details</param>
            <param name="arc">Arc angel that should be drawn. Measured in radians</param>
            <param name="clockwise">Determines if arc will in the clockwise direction or not</param>
        </member>
        <member name="M:Keen.VRage.Core.Render.MeshBuilderExtensions.AddCapsule(Keen.VRage.Core.Render.MeshBuilder,Keen.VRage.Core.WorldTransform@,System.Double,System.Double,System.Nullable{Keen.VRage.Library.Mathematics.ColorSRGB},System.Nullable{Keen.VRage.Library.Mathematics.ColorSRGB},System.Boolean,System.TimeSpan)">
            <summary>
            Adds capsule to the builder.
            </summary>
            <param name="builder">Destination builder</param>
            <param name="transform">Position and rotation of the mesh</param>
            <param name="radius">Capsule radius</param>
            <param name="height">Capsule height</param>
            <param name="cFill">Fill color. If not null the mesh would be drawn with triangles</param>
            <param name="cOutline">Outline color. If not null the mesh would be drawn with lines</param>
            <param name="depth">Use depth buffer?</param>
            <param name="timeout">Timeout in seconds, <see cref="T:Keen.VRage.Core.Render.MeshBuilder" /> for details</param>
        </member>
        <member name="T:Keen.VRage.Core.Render.MeshBuilderStream2Layout">
            <summary>
            Struct to pack <see cref="T:Keen.VRage.Library.Mathematics.ColorSRGB"/> and timeout. Bit equivalent of Keen.VRage.Render.Data.VertexFormat.VertexFormatColor0TimeOutPacked
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Render.TimeVarying1DKey`1">
            <summary>
            Linearly interpolated float between 4 key values
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Render.TimeVarying1DKey`1.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DKey`1.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DKey`1.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Render.TimeVarying1DKey{`0}@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DKey`1.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DKey`1.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Render.TimeVarying1DKey{`0}@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DKey`1.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DKey`1.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Render.TimeVarying1DKey{`0}@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DKey`1.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DKey`1.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DKey`1.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DKey`1.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DKey`1.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Render.TimeVarying1DKey{`0}@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DKey`1.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DKey`1.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Render.TimeVarying1DKey{`0}@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DKey`1.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DKey`1.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Render.TimeVarying1DKey{`0}@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DKey`1.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DKey`1.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Render.TimeVarying1DKey{`0}@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DKey`1.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Render.TimeVarying1DKey`1.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.TimeVarying1DKey`1.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DKey`1.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.TimeVarying1DKey`1.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Render#TimeVarying1DKey{T}}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DKey`1.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Render.TimeVarying1DKey`1.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Render.TimeVarying1DKey`1.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Render.TimeVarying1DKey`1.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Render.TimeVarying1DKey`1.TypeInfoHolder.ValueAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.TimeVarying1DKey`1.TypeInfoHolder.ValueAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.TimeVarying1DKey`1.TypeInfoHolder.ValueAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.TimeVarying1DKey`1.TypeInfoHolder.ValueAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.TimeVarying1DKey`1.TypeInfoHolder.ValueAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.TimeVarying1DKey`1.TypeInfoHolder.ValueAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.TimeVarying1DKey`1.TypeInfoHolder.ValueAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.TimeVarying1DKey`1.TypeInfoHolder.ValueAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.TimeVarying1DKey`1.TypeInfoHolder.ValueAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DKey`1.TypeInfoHolder.ValueAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DKey`1.TypeInfoHolder.ValueAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DKey`1.TypeInfoHolder.ValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DKey`1.TypeInfoHolder.ValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DKey`1.TypeInfoHolder.ValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DKey`1.TypeInfoHolder.ValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{T}#Set(System.Object,`0@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DKey`1.TypeInfoHolder.ValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{T}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DKey`1.TypeInfoHolder.ValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{T}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DKey`1.TypeInfoHolder.ValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{T}#Set(System.Byte@,`0@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DKey`1.TypeInfoHolder.ValueAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DKey`1.TypeInfoHolder.ValueAccessor.Set(Keen.VRage.Core.Render.TimeVarying1DKey{`0}@,`0@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DKey`1.TypeInfoHolder.ValueAccessor.Get(Keen.VRage.Core.Render.TimeVarying1DKey{`0}@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.TimeVarying1DKey`1.TypeInfoHolder.KeyAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.TimeVarying1DKey`1.TypeInfoHolder.KeyAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.TimeVarying1DKey`1.TypeInfoHolder.KeyAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.TimeVarying1DKey`1.TypeInfoHolder.KeyAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.TimeVarying1DKey`1.TypeInfoHolder.KeyAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.TimeVarying1DKey`1.TypeInfoHolder.KeyAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.TimeVarying1DKey`1.TypeInfoHolder.KeyAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.TimeVarying1DKey`1.TypeInfoHolder.KeyAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.TimeVarying1DKey`1.TypeInfoHolder.KeyAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DKey`1.TypeInfoHolder.KeyAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DKey`1.TypeInfoHolder.KeyAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DKey`1.TypeInfoHolder.KeyAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DKey`1.TypeInfoHolder.KeyAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DKey`1.TypeInfoHolder.KeyAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DKey`1.TypeInfoHolder.KeyAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Object,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DKey`1.TypeInfoHolder.KeyAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DKey`1.TypeInfoHolder.KeyAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DKey`1.TypeInfoHolder.KeyAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Byte@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DKey`1.TypeInfoHolder.KeyAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DKey`1.TypeInfoHolder.KeyAccessor.Set(Keen.VRage.Core.Render.TimeVarying1DKey{`0}@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DKey`1.TypeInfoHolder.KeyAccessor.Get(Keen.VRage.Core.Render.TimeVarying1DKey{`0}@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Render.TimeVarying1D`1">
            <summary>
            Linearly interpolated float between 4 key values
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Render.TimeVarying1D`1.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1D`1.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1D`1.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Render.TimeVarying1D{`0}@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1D`1.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1D`1.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Render.TimeVarying1D{`0}@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1D`1.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1D`1.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Render.TimeVarying1D{`0}@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1D`1.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1D`1.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1D`1.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1D`1.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1D`1.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Render.TimeVarying1D{`0}@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1D`1.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1D`1.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Render.TimeVarying1D{`0}@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1D`1.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1D`1.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Render.TimeVarying1D{`0}@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1D`1.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1D`1.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Render.TimeVarying1D{`0}@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1D`1.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Render.TimeVarying1D`1.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.TimeVarying1D`1.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1D`1.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.TimeVarying1D`1.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Render#TimeVarying1D{T}}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1D`1.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Render.TimeVarying1D`1.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Render.TimeVarying1D`1.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Render.TimeVarying1D`1.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Render.TimeVarying1D`1.TypeInfoHolder.KeyFramesAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.TimeVarying1D`1.TypeInfoHolder.KeyFramesAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.TimeVarying1D`1.TypeInfoHolder.KeyFramesAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.TimeVarying1D`1.TypeInfoHolder.KeyFramesAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.TimeVarying1D`1.TypeInfoHolder.KeyFramesAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.TimeVarying1D`1.TypeInfoHolder.KeyFramesAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.TimeVarying1D`1.TypeInfoHolder.KeyFramesAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.TimeVarying1D`1.TypeInfoHolder.KeyFramesAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.TimeVarying1D`1.TypeInfoHolder.KeyFramesAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1D`1.TypeInfoHolder.KeyFramesAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1D`1.TypeInfoHolder.KeyFramesAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1D`1.TypeInfoHolder.KeyFramesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1D`1.TypeInfoHolder.KeyFramesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1D`1.TypeInfoHolder.KeyFramesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1D`1.TypeInfoHolder.KeyFramesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Collections#ImmutableMergeableList{Keen#VRage#Core#Render#TimeVarying1DKey{T}}}#Set(System.Object,Keen.VRage.Library.Collections.ImmutableMergeableList{Keen.VRage.Core.Render.TimeVarying1DKey{`0}}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1D`1.TypeInfoHolder.KeyFramesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Collections#ImmutableMergeableList{Keen#VRage#Core#Render#TimeVarying1DKey{T}}}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1D`1.TypeInfoHolder.KeyFramesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Collections#ImmutableMergeableList{Keen#VRage#Core#Render#TimeVarying1DKey{T}}}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1D`1.TypeInfoHolder.KeyFramesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Collections#ImmutableMergeableList{Keen#VRage#Core#Render#TimeVarying1DKey{T}}}#Set(System.Byte@,Keen.VRage.Library.Collections.ImmutableMergeableList{Keen.VRage.Core.Render.TimeVarying1DKey{`0}}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1D`1.TypeInfoHolder.KeyFramesAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1D`1.TypeInfoHolder.KeyFramesAccessor.Set(Keen.VRage.Core.Render.TimeVarying1D{`0}@,Keen.VRage.Library.Collections.ImmutableMergeableList{Keen.VRage.Core.Render.TimeVarying1DKey{`0}}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1D`1.TypeInfoHolder.KeyFramesAccessor.Get(Keen.VRage.Core.Render.TimeVarying1D{`0}@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Render.TimeVarying1DMaximum8`1">
            <summary>
            Linearly interpolated float between 4 key values
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Render.TimeVarying1DMaximum8`1.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DMaximum8`1.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DMaximum8`1.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Render.TimeVarying1DMaximum8{`0}@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DMaximum8`1.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DMaximum8`1.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Render.TimeVarying1DMaximum8{`0}@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DMaximum8`1.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DMaximum8`1.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Render.TimeVarying1DMaximum8{`0}@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DMaximum8`1.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DMaximum8`1.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DMaximum8`1.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DMaximum8`1.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DMaximum8`1.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Render.TimeVarying1DMaximum8{`0}@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DMaximum8`1.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DMaximum8`1.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Render.TimeVarying1DMaximum8{`0}@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DMaximum8`1.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DMaximum8`1.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Render.TimeVarying1DMaximum8{`0}@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DMaximum8`1.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DMaximum8`1.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Render.TimeVarying1DMaximum8{`0}@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DMaximum8`1.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Render.TimeVarying1DMaximum8`1.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.TimeVarying1DMaximum8`1.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DMaximum8`1.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.TimeVarying1DMaximum8`1.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Render#TimeVarying1DMaximum8{T}}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DMaximum8`1.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Render.TimeVarying1DMaximum8`1.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Render.TimeVarying1DMaximum8`1.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Render.TimeVarying1DMaximum8`1.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Render.TimeVarying1DMaximum8`1.TypeInfoHolder.KeyFramesAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.TimeVarying1DMaximum8`1.TypeInfoHolder.KeyFramesAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.TimeVarying1DMaximum8`1.TypeInfoHolder.KeyFramesAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.TimeVarying1DMaximum8`1.TypeInfoHolder.KeyFramesAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.TimeVarying1DMaximum8`1.TypeInfoHolder.KeyFramesAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.TimeVarying1DMaximum8`1.TypeInfoHolder.KeyFramesAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.TimeVarying1DMaximum8`1.TypeInfoHolder.KeyFramesAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.TimeVarying1DMaximum8`1.TypeInfoHolder.KeyFramesAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.TimeVarying1DMaximum8`1.TypeInfoHolder.KeyFramesAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DMaximum8`1.TypeInfoHolder.KeyFramesAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DMaximum8`1.TypeInfoHolder.KeyFramesAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DMaximum8`1.TypeInfoHolder.KeyFramesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DMaximum8`1.TypeInfoHolder.KeyFramesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DMaximum8`1.TypeInfoHolder.KeyFramesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DMaximum8`1.TypeInfoHolder.KeyFramesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Collections#ImmutableMergeableList{Keen#VRage#Core#Render#TimeVarying1DKey{T}}}#Set(System.Object,Keen.VRage.Library.Collections.ImmutableMergeableList{Keen.VRage.Core.Render.TimeVarying1DKey{`0}}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DMaximum8`1.TypeInfoHolder.KeyFramesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Collections#ImmutableMergeableList{Keen#VRage#Core#Render#TimeVarying1DKey{T}}}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DMaximum8`1.TypeInfoHolder.KeyFramesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Collections#ImmutableMergeableList{Keen#VRage#Core#Render#TimeVarying1DKey{T}}}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DMaximum8`1.TypeInfoHolder.KeyFramesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Collections#ImmutableMergeableList{Keen#VRage#Core#Render#TimeVarying1DKey{T}}}#Set(System.Byte@,Keen.VRage.Library.Collections.ImmutableMergeableList{Keen.VRage.Core.Render.TimeVarying1DKey{`0}}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DMaximum8`1.TypeInfoHolder.KeyFramesAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DMaximum8`1.TypeInfoHolder.KeyFramesAccessor.Set(Keen.VRage.Core.Render.TimeVarying1DMaximum8{`0}@,Keen.VRage.Library.Collections.ImmutableMergeableList{Keen.VRage.Core.Render.TimeVarying1DKey{`0}}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DMaximum8`1.TypeInfoHolder.KeyFramesAccessor.Get(Keen.VRage.Core.Render.TimeVarying1DMaximum8{`0}@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Render.TimeVarying1DFixed4`1">
            <summary>
            Linearly interpolated float between 4 key values
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Render.TimeVarying1DFixed4`1.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DFixed4`1.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DFixed4`1.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Render.TimeVarying1DFixed4{`0}@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DFixed4`1.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DFixed4`1.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Render.TimeVarying1DFixed4{`0}@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DFixed4`1.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DFixed4`1.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Render.TimeVarying1DFixed4{`0}@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DFixed4`1.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DFixed4`1.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DFixed4`1.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DFixed4`1.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DFixed4`1.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Render.TimeVarying1DFixed4{`0}@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DFixed4`1.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DFixed4`1.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Render.TimeVarying1DFixed4{`0}@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DFixed4`1.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DFixed4`1.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Render.TimeVarying1DFixed4{`0}@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DFixed4`1.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DFixed4`1.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Render.TimeVarying1DFixed4{`0}@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DFixed4`1.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Render.TimeVarying1DFixed4`1.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.TimeVarying1DFixed4`1.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DFixed4`1.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.TimeVarying1DFixed4`1.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Render#TimeVarying1DFixed4{T}}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DFixed4`1.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Render.TimeVarying1DFixed4`1.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Render.TimeVarying1DFixed4`1.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Render.TimeVarying1DFixed4`1.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Render.TimeVarying1DFixed4`1.TypeInfoHolder.KeyFramesAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.TimeVarying1DFixed4`1.TypeInfoHolder.KeyFramesAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.TimeVarying1DFixed4`1.TypeInfoHolder.KeyFramesAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.TimeVarying1DFixed4`1.TypeInfoHolder.KeyFramesAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.TimeVarying1DFixed4`1.TypeInfoHolder.KeyFramesAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.TimeVarying1DFixed4`1.TypeInfoHolder.KeyFramesAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.TimeVarying1DFixed4`1.TypeInfoHolder.KeyFramesAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.TimeVarying1DFixed4`1.TypeInfoHolder.KeyFramesAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.TimeVarying1DFixed4`1.TypeInfoHolder.KeyFramesAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DFixed4`1.TypeInfoHolder.KeyFramesAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DFixed4`1.TypeInfoHolder.KeyFramesAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DFixed4`1.TypeInfoHolder.KeyFramesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DFixed4`1.TypeInfoHolder.KeyFramesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DFixed4`1.TypeInfoHolder.KeyFramesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DFixed4`1.TypeInfoHolder.KeyFramesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Collections#ImmutableMergeableList{Keen#VRage#Core#Render#TimeVarying1DKey{T}}}#Set(System.Object,Keen.VRage.Library.Collections.ImmutableMergeableList{Keen.VRage.Core.Render.TimeVarying1DKey{`0}}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DFixed4`1.TypeInfoHolder.KeyFramesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Collections#ImmutableMergeableList{Keen#VRage#Core#Render#TimeVarying1DKey{T}}}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DFixed4`1.TypeInfoHolder.KeyFramesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Collections#ImmutableMergeableList{Keen#VRage#Core#Render#TimeVarying1DKey{T}}}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DFixed4`1.TypeInfoHolder.KeyFramesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Collections#ImmutableMergeableList{Keen#VRage#Core#Render#TimeVarying1DKey{T}}}#Set(System.Byte@,Keen.VRage.Library.Collections.ImmutableMergeableList{Keen.VRage.Core.Render.TimeVarying1DKey{`0}}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DFixed4`1.TypeInfoHolder.KeyFramesAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DFixed4`1.TypeInfoHolder.KeyFramesAccessor.Set(Keen.VRage.Core.Render.TimeVarying1DFixed4{`0}@,Keen.VRage.Library.Collections.ImmutableMergeableList{Keen.VRage.Core.Render.TimeVarying1DKey{`0}}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying1DFixed4`1.TypeInfoHolder.KeyFramesAccessor.Get(Keen.VRage.Core.Render.TimeVarying1DFixed4{`0}@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Render.TimeVarying2DKey`1">
            <summary>
            Linearly interpolated float between 4 key values
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Render.TimeVarying2DKey`1.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying2DKey`1.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying2DKey`1.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Render.TimeVarying2DKey{`0}@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying2DKey`1.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying2DKey`1.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Render.TimeVarying2DKey{`0}@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying2DKey`1.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying2DKey`1.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Render.TimeVarying2DKey{`0}@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying2DKey`1.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying2DKey`1.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying2DKey`1.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying2DKey`1.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying2DKey`1.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Render.TimeVarying2DKey{`0}@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying2DKey`1.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying2DKey`1.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Render.TimeVarying2DKey{`0}@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying2DKey`1.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying2DKey`1.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Render.TimeVarying2DKey{`0}@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying2DKey`1.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying2DKey`1.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Render.TimeVarying2DKey{`0}@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying2DKey`1.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Render.TimeVarying2DKey`1.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.TimeVarying2DKey`1.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying2DKey`1.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.TimeVarying2DKey`1.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Render#TimeVarying2DKey{T}}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying2DKey`1.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Render.TimeVarying2DKey`1.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Render.TimeVarying2DKey`1.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Render.TimeVarying2DKey`1.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Render.TimeVarying2DKey`1.TypeInfoHolder.ValueAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.TimeVarying2DKey`1.TypeInfoHolder.ValueAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.TimeVarying2DKey`1.TypeInfoHolder.ValueAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.TimeVarying2DKey`1.TypeInfoHolder.ValueAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.TimeVarying2DKey`1.TypeInfoHolder.ValueAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.TimeVarying2DKey`1.TypeInfoHolder.ValueAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.TimeVarying2DKey`1.TypeInfoHolder.ValueAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.TimeVarying2DKey`1.TypeInfoHolder.ValueAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.TimeVarying2DKey`1.TypeInfoHolder.ValueAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying2DKey`1.TypeInfoHolder.ValueAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying2DKey`1.TypeInfoHolder.ValueAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying2DKey`1.TypeInfoHolder.ValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying2DKey`1.TypeInfoHolder.ValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying2DKey`1.TypeInfoHolder.ValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying2DKey`1.TypeInfoHolder.ValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Render#TimeVarying1DFixed4{T}}#Set(System.Object,Keen.VRage.Core.Render.TimeVarying1DFixed4{`0}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying2DKey`1.TypeInfoHolder.ValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Render#TimeVarying1DFixed4{T}}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying2DKey`1.TypeInfoHolder.ValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Render#TimeVarying1DFixed4{T}}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying2DKey`1.TypeInfoHolder.ValueAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Render#TimeVarying1DFixed4{T}}#Set(System.Byte@,Keen.VRage.Core.Render.TimeVarying1DFixed4{`0}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying2DKey`1.TypeInfoHolder.ValueAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying2DKey`1.TypeInfoHolder.ValueAccessor.Set(Keen.VRage.Core.Render.TimeVarying2DKey{`0}@,Keen.VRage.Core.Render.TimeVarying1DFixed4{`0}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying2DKey`1.TypeInfoHolder.ValueAccessor.Get(Keen.VRage.Core.Render.TimeVarying2DKey{`0}@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.TimeVarying2DKey`1.TypeInfoHolder.KeyAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.TimeVarying2DKey`1.TypeInfoHolder.KeyAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.TimeVarying2DKey`1.TypeInfoHolder.KeyAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.TimeVarying2DKey`1.TypeInfoHolder.KeyAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.TimeVarying2DKey`1.TypeInfoHolder.KeyAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.TimeVarying2DKey`1.TypeInfoHolder.KeyAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.TimeVarying2DKey`1.TypeInfoHolder.KeyAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.TimeVarying2DKey`1.TypeInfoHolder.KeyAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.TimeVarying2DKey`1.TypeInfoHolder.KeyAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying2DKey`1.TypeInfoHolder.KeyAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying2DKey`1.TypeInfoHolder.KeyAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying2DKey`1.TypeInfoHolder.KeyAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying2DKey`1.TypeInfoHolder.KeyAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying2DKey`1.TypeInfoHolder.KeyAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying2DKey`1.TypeInfoHolder.KeyAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Object,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying2DKey`1.TypeInfoHolder.KeyAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying2DKey`1.TypeInfoHolder.KeyAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying2DKey`1.TypeInfoHolder.KeyAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Byte@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying2DKey`1.TypeInfoHolder.KeyAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying2DKey`1.TypeInfoHolder.KeyAccessor.Set(Keen.VRage.Core.Render.TimeVarying2DKey{`0}@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying2DKey`1.TypeInfoHolder.KeyAccessor.Get(Keen.VRage.Core.Render.TimeVarying2DKey{`0}@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Render.TimeVarying2D`1">
            <summary>
            Linearly interpolated float between 4 key values
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Render.TimeVarying2D`1.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying2D`1.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying2D`1.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Render.TimeVarying2D{`0}@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying2D`1.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying2D`1.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Render.TimeVarying2D{`0}@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying2D`1.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying2D`1.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Render.TimeVarying2D{`0}@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying2D`1.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying2D`1.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying2D`1.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying2D`1.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying2D`1.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Render.TimeVarying2D{`0}@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying2D`1.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying2D`1.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Render.TimeVarying2D{`0}@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying2D`1.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying2D`1.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Render.TimeVarying2D{`0}@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying2D`1.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying2D`1.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Render.TimeVarying2D{`0}@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying2D`1.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Render.TimeVarying2D`1.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.TimeVarying2D`1.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying2D`1.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.TimeVarying2D`1.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Render#TimeVarying2D{T}}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying2D`1.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Render.TimeVarying2D`1.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Render.TimeVarying2D`1.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Render.TimeVarying2D`1.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Render.TimeVarying2D`1.TypeInfoHolder.KeyFramesAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.TimeVarying2D`1.TypeInfoHolder.KeyFramesAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.TimeVarying2D`1.TypeInfoHolder.KeyFramesAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.TimeVarying2D`1.TypeInfoHolder.KeyFramesAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.TimeVarying2D`1.TypeInfoHolder.KeyFramesAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.TimeVarying2D`1.TypeInfoHolder.KeyFramesAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.TimeVarying2D`1.TypeInfoHolder.KeyFramesAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.TimeVarying2D`1.TypeInfoHolder.KeyFramesAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.TimeVarying2D`1.TypeInfoHolder.KeyFramesAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying2D`1.TypeInfoHolder.KeyFramesAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying2D`1.TypeInfoHolder.KeyFramesAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying2D`1.TypeInfoHolder.KeyFramesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying2D`1.TypeInfoHolder.KeyFramesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying2D`1.TypeInfoHolder.KeyFramesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying2D`1.TypeInfoHolder.KeyFramesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Collections#ImmutableMergeableList{Keen#VRage#Core#Render#TimeVarying2DKey{T}}}#Set(System.Object,Keen.VRage.Library.Collections.ImmutableMergeableList{Keen.VRage.Core.Render.TimeVarying2DKey{`0}}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying2D`1.TypeInfoHolder.KeyFramesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Collections#ImmutableMergeableList{Keen#VRage#Core#Render#TimeVarying2DKey{T}}}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying2D`1.TypeInfoHolder.KeyFramesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Collections#ImmutableMergeableList{Keen#VRage#Core#Render#TimeVarying2DKey{T}}}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying2D`1.TypeInfoHolder.KeyFramesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Collections#ImmutableMergeableList{Keen#VRage#Core#Render#TimeVarying2DKey{T}}}#Set(System.Byte@,Keen.VRage.Library.Collections.ImmutableMergeableList{Keen.VRage.Core.Render.TimeVarying2DKey{`0}}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying2D`1.TypeInfoHolder.KeyFramesAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying2D`1.TypeInfoHolder.KeyFramesAccessor.Set(Keen.VRage.Core.Render.TimeVarying2D{`0}@,Keen.VRage.Library.Collections.ImmutableMergeableList{Keen.VRage.Core.Render.TimeVarying2DKey{`0}}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.TimeVarying2D`1.TypeInfoHolder.KeyFramesAccessor.Get(Keen.VRage.Core.Render.TimeVarying2D{`0}@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Render.PngAsset">
            <summary>
            Asset for .png images
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Render.Rational">
            <summary>
            Rational number, used to keep render display mode frequencies
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Render.Rational.Zero">
            <summary>
            Zero rational number
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Render.Rational.Numerator">
            <summary>
            Numerator part of rational number
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Render.Rational.Denominator">
            <summary>
            Denominator part of rational number
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Render.Rational.#ctor(System.Int32,System.Int32)">
            <summary>
            </summary>
            <param name="numerator"></param>
            <param name="denominator"></param>
        </member>
        <member name="M:Keen.VRage.Core.Render.Rational.Equals(Keen.VRage.Core.Render.Rational)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.Rational.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.Rational.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.Rational.op_Equality(Keen.VRage.Core.Render.Rational,Keen.VRage.Core.Render.Rational)">
            <summary>
            Compares two rational numbers
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Keen.VRage.Core.Render.Rational.op_Inequality(Keen.VRage.Core.Render.Rational,Keen.VRage.Core.Render.Rational)">
            <summary>
            Compares two rational numbers
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Keen.VRage.Core.Render.Rational.ToFloat">
            <summary>
            Converts rational number to floating point number
            </summary>
            <returns></returns>
        </member>
        <member name="M:Keen.VRage.Core.Render.Rational.CompareTo(Keen.VRage.Core.Render.Rational)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Render.Rational.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.Rational.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.Rational.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Render.Rational@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.Rational.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.Rational.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Render.Rational@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.Rational.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.Rational.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Render.Rational@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.Rational.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.Rational.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.Rational.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.Rational.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.Rational.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Render.Rational@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.Rational.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.Rational.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Render.Rational@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.Rational.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.Rational.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.Rational.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Render.Rational@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.Rational.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Render.Rational.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.Rational.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.Rational.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.Rational.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Render#Rational}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.Rational.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Render.Rational.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Render.Rational.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Render.Rational.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Render.Rational.TypeInfoHolder.NumeratorAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.Rational.TypeInfoHolder.NumeratorAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.Rational.TypeInfoHolder.NumeratorAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.Rational.TypeInfoHolder.NumeratorAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.Rational.TypeInfoHolder.NumeratorAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.Rational.TypeInfoHolder.NumeratorAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.Rational.TypeInfoHolder.NumeratorAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.Rational.TypeInfoHolder.NumeratorAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.Rational.TypeInfoHolder.NumeratorAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.Rational.TypeInfoHolder.NumeratorAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.Rational.TypeInfoHolder.NumeratorAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.Rational.TypeInfoHolder.NumeratorAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.Rational.TypeInfoHolder.NumeratorAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.Rational.TypeInfoHolder.NumeratorAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.Rational.TypeInfoHolder.NumeratorAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Set(System.Object,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.Rational.TypeInfoHolder.NumeratorAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.Rational.TypeInfoHolder.NumeratorAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.Rational.TypeInfoHolder.NumeratorAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Set(System.Byte@,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.Rational.TypeInfoHolder.NumeratorAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.Rational.TypeInfoHolder.NumeratorAccessor.Set(Keen.VRage.Core.Render.Rational@,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.Rational.TypeInfoHolder.NumeratorAccessor.Get(Keen.VRage.Core.Render.Rational@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.Rational.TypeInfoHolder.DenominatorAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.Rational.TypeInfoHolder.DenominatorAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.Rational.TypeInfoHolder.DenominatorAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.Rational.TypeInfoHolder.DenominatorAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.Rational.TypeInfoHolder.DenominatorAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.Rational.TypeInfoHolder.DenominatorAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.Rational.TypeInfoHolder.DenominatorAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.Rational.TypeInfoHolder.DenominatorAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.Rational.TypeInfoHolder.DenominatorAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.Rational.TypeInfoHolder.DenominatorAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.Rational.TypeInfoHolder.DenominatorAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.Rational.TypeInfoHolder.DenominatorAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.Rational.TypeInfoHolder.DenominatorAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.Rational.TypeInfoHolder.DenominatorAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.Rational.TypeInfoHolder.DenominatorAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Set(System.Object,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.Rational.TypeInfoHolder.DenominatorAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.Rational.TypeInfoHolder.DenominatorAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.Rational.TypeInfoHolder.DenominatorAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Set(System.Byte@,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.Rational.TypeInfoHolder.DenominatorAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.Rational.TypeInfoHolder.DenominatorAccessor.Set(Keen.VRage.Core.Render.Rational@,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.Rational.TypeInfoHolder.DenominatorAccessor.Get(Keen.VRage.Core.Render.Rational@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Render.RenderDisplaySettings">
            <summary>
            Render display settings affecting the resolution, vsync and windowed state.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Render.RenderDisplaySettings.AdapterName">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Render.RenderDisplaySettings.FullscreenMode">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Render.RenderDisplaySettings.Resolution">
            <summary>
            Backbuffer resolution.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Render.RenderDisplaySettings.EnableStretching">
            <summary>
            Enable stretching of backbuffer.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Render.RenderDisplaySettings.RefreshRate">
            <summary>
            VSync refresh rate. Used only in Fullscreen.
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Render.RenderDisplaySettings.VSync">
            <summary>
            VSync mode.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Render.RenderDisplaySettings.TopMost">
            <summary>
            Force window as top most.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Render.RenderDisplaySettings.SettingsMandatory">
            <summary>
            non mandatory settings will let render find correct settings if the CreateDevice with these settings fails
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Render.RenderDisplaySettings.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Render.RenderDisplaySettings@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Render.RenderDisplaySettings@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Render.RenderDisplaySettings@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Render.RenderDisplaySettings@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Render.RenderDisplaySettings@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Render.RenderDisplaySettings@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Render.RenderDisplaySettings@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Render.RenderDisplaySettings.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.RenderDisplaySettings.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.RenderDisplaySettings.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Render#RenderDisplaySettings}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.AdapterNameAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.AdapterNameAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.AdapterNameAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.AdapterNameAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.AdapterNameAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.AdapterNameAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.AdapterNameAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.AdapterNameAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.AdapterNameAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.AdapterNameAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.AdapterNameAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.AdapterNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.AdapterNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.AdapterNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.AdapterNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Object,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.AdapterNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.AdapterNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.AdapterNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Byte@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.AdapterNameAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.AdapterNameAccessor.Set(Keen.VRage.Core.Render.RenderDisplaySettings@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.AdapterNameAccessor.Get(Keen.VRage.Core.Render.RenderDisplaySettings@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.FullscreenModeAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.FullscreenModeAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.FullscreenModeAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.FullscreenModeAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.FullscreenModeAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.FullscreenModeAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.FullscreenModeAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.FullscreenModeAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.FullscreenModeAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.FullscreenModeAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.FullscreenModeAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.FullscreenModeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.FullscreenModeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.FullscreenModeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.FullscreenModeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.FullscreenModeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.FullscreenModeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.FullscreenModeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.FullscreenModeAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.FullscreenModeAccessor.Set(Keen.VRage.Core.Render.RenderDisplaySettings@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.FullscreenModeAccessor.Get(Keen.VRage.Core.Render.RenderDisplaySettings@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.ResolutionAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.ResolutionAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.ResolutionAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.ResolutionAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.ResolutionAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.ResolutionAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.ResolutionAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.ResolutionAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.ResolutionAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.ResolutionAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.ResolutionAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.ResolutionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.ResolutionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.ResolutionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.ResolutionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector2I}#Set(System.Object,Keen.VRage.Library.Mathematics.Vector2I@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.ResolutionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector2I}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.ResolutionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector2I}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.ResolutionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector2I}#Set(System.Byte@,Keen.VRage.Library.Mathematics.Vector2I@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.ResolutionAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.ResolutionAccessor.Set(Keen.VRage.Core.Render.RenderDisplaySettings@,Keen.VRage.Library.Mathematics.Vector2I@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.ResolutionAccessor.Get(Keen.VRage.Core.Render.RenderDisplaySettings@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.EnableStretchingAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.EnableStretchingAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.EnableStretchingAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.EnableStretchingAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.EnableStretchingAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.EnableStretchingAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.EnableStretchingAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.EnableStretchingAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.EnableStretchingAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.EnableStretchingAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.EnableStretchingAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.EnableStretchingAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.EnableStretchingAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.EnableStretchingAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.EnableStretchingAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.EnableStretchingAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.EnableStretchingAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.EnableStretchingAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.EnableStretchingAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.EnableStretchingAccessor.Set(Keen.VRage.Core.Render.RenderDisplaySettings@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.EnableStretchingAccessor.Get(Keen.VRage.Core.Render.RenderDisplaySettings@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.RefreshRateAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.RefreshRateAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.RefreshRateAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.RefreshRateAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.RefreshRateAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.RefreshRateAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.RefreshRateAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.RefreshRateAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.RefreshRateAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.RefreshRateAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.RefreshRateAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.RefreshRateAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.RefreshRateAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.RefreshRateAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.RefreshRateAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Render#Rational}#Set(System.Object,Keen.VRage.Core.Render.Rational@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.RefreshRateAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Render#Rational}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.RefreshRateAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Render#Rational}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.RefreshRateAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Render#Rational}#Set(System.Byte@,Keen.VRage.Core.Render.Rational@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.RefreshRateAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.RefreshRateAccessor.Set(Keen.VRage.Core.Render.RenderDisplaySettings@,Keen.VRage.Core.Render.Rational@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.RefreshRateAccessor.Get(Keen.VRage.Core.Render.RenderDisplaySettings@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.VSyncAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.VSyncAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.VSyncAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.VSyncAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.VSyncAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.VSyncAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.VSyncAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.VSyncAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.VSyncAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.VSyncAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.VSyncAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.VSyncAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.VSyncAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.VSyncAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.VSyncAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Render#VSyncMode}#Set(System.Object,Keen.VRage.Core.Render.VSyncMode@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.VSyncAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Render#VSyncMode}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.VSyncAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Render#VSyncMode}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.VSyncAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Render#VSyncMode}#Set(System.Byte@,Keen.VRage.Core.Render.VSyncMode@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.VSyncAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.VSyncAccessor.Set(Keen.VRage.Core.Render.RenderDisplaySettings@,Keen.VRage.Core.Render.VSyncMode@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.VSyncAccessor.Get(Keen.VRage.Core.Render.RenderDisplaySettings@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.TopMostAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.TopMostAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.TopMostAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.TopMostAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.TopMostAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.TopMostAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.TopMostAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.TopMostAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.TopMostAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.TopMostAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.TopMostAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.TopMostAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.TopMostAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.TopMostAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.TopMostAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.TopMostAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.TopMostAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.TopMostAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.TopMostAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.TopMostAccessor.Set(Keen.VRage.Core.Render.RenderDisplaySettings@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.TopMostAccessor.Get(Keen.VRage.Core.Render.RenderDisplaySettings@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.SettingsMandatoryAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.SettingsMandatoryAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.SettingsMandatoryAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.SettingsMandatoryAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.SettingsMandatoryAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.SettingsMandatoryAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.SettingsMandatoryAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.SettingsMandatoryAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.SettingsMandatoryAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.SettingsMandatoryAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.SettingsMandatoryAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.SettingsMandatoryAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.SettingsMandatoryAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.SettingsMandatoryAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.SettingsMandatoryAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.SettingsMandatoryAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.SettingsMandatoryAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.SettingsMandatoryAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.SettingsMandatoryAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.SettingsMandatoryAccessor.Set(Keen.VRage.Core.Render.RenderDisplaySettings@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderDisplaySettings.TypeInfoHolder.SettingsMandatoryAccessor.Get(Keen.VRage.Core.Render.RenderDisplaySettings@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Render.RenderDisplayStrategy">
            <summary>
            Specify the strategy to use for setting up defaults in <see cref="T:Keen.VRage.Core.Render.RenderDisplaySettings"/>
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Render.RenderFrequencyStat">
            <summary>
            Custom stat0 representing frames per second and target vsync frequency.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Render.RenderFrequencyStat.FPS">
            <summary>
            Current frames per second
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Render.RenderFrequencyStat.Frequency">
            <summary>
            Current frequency in Hz
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Render.RenderFrequencyStat.RefreshType">
            <summary>
            Refresh rate type
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Render.RenderGPUStat">
            <summary>
            Custom stat0 representing an operations load factor and absolute time in Render. The render load time is connected to VSync and
            it is indicated if VSync is disabled.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Render.RenderGPUStat.Time">
            <summary>
            The current operation time in seconds.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Render.RenderGPUStat.Load">
            <summary>
            The current load factor.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Render.RenderGPUStat.Precision">
            <summary>
            The current load factor.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderGPUStat.#ctor(System.Single,System.Single,Keen.VRage.Core.Render.VSyncMode,System.Boolean,System.Boolean)">
            <summary>
            Create a load stat instance. 
            </summary>
            <param name="time"></param>
            <param name="load"></param>
            <param name="vsyncMode"></param>
            <param name="isDeveloperModeEnabled"></param>
            <param name="isSetStablePowerState"></param>
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderGPUStat.Add(Keen.VRage.Core.Render.RenderGPUStat)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderGPUStat.Subtract(Keen.VRage.Core.Render.RenderGPUStat)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderGPUStat.Divide(System.Single)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Render.RenderPresetEnum">
            <summary>
            Render preset types.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Render.RenderPresetEnum.Low">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Render.RenderPresetEnum.Normal">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Render.RenderPresetEnum.High">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Render.RenderPresetEnum.Custom">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Render.RenderPresetEnum.XboxX">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Render.RenderPresetEnum.Xbox">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Render.RenderPresetEnum.XboxSeriesX">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Render.RenderPresetEnum.XboxSeriesS">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Keen.VRage.Core.Render.RenderPresetEnum.Count">
            <summary>
            </summary>
            <autogeneratedoc />
        </member>
        <member name="T:Keen.VRage.Core.Render.RenderThreadStat">
            <summary>
            Custom stat0 representing an operations load factor and absolute time in Render. The render load time is connected to VSync and
            it is indicated if VSync is disabled.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Render.RenderThreadStat.Time">
            <summary>
            The current operation time in seconds.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Render.RenderThreadStat.Load">
            <summary>
            The current load factor.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderThreadStat.#ctor(System.Single,System.Single)">
            <summary>
            Create a load stat instance. 
            </summary>
            <param name="time"></param>
            <param name="load"></param>
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderThreadStat.Add(Keen.VRage.Core.Render.RenderThreadStat)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderThreadStat.Subtract(Keen.VRage.Core.Render.RenderThreadStat)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Render.RenderThreadStat.Divide(System.Single)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Render.SVGAssetType">
            <summary>
            Asset type for .svg
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Render.TextureAsset">
            <summary>
            Asset for textures
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Render.DDSAssetType">
            <summary>
            DDS asset type
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Render.PNGAssetType">
            <summary>
            PNG asset type
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Render.JPGAssetType">
            <summary>
            JPG asset type
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Render.BPMAssetType">
            <summary>
            BPM asset type
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Render.TGAAssetType">
            <summary>
            TGA asset type
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Render.TIFAssetType">
            <summary>
            TIF asset type
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Render.SLUGAssetType">
            <summary>
            SLUG asset type
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Render.XMLAssetType">
            <summary>
            XML asset type
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Render.TextureExtensions">
            <summary>
            To be used instead of copy pasting texture extensions(for example in <see cref="T:Keen.VRage.Library.Utils.ResourceHandle`1"/>)
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Render.TextureExtensions.COMPOSITE_TEXTURE">
            <summary>
            Texture extension of the composite texture. This file format is Editor's asset internal format.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Render.TextureExtensions.CUBEMAP_TEXTURE">
            <summary>
            Texture extension of the cubemap texture. This file format is Editor's asset internal format.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Render.TextureExtensions.DDS">
            <summary>
            Texture extension of the dds texture.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Render.TextureExtensions.PNG">
            <summary>
            Texture extension of the png texture.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Render.TextureExtensions.JPG">
            <summary>
            Texture extension of the jpg texture.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Render.TextureExtensions.BPM">
            <summary>
            Texture extension of the bmp texture.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Render.TextureExtensions.TIF">
            <summary>
            Texture extension of the tif texture.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Render.TextureExtensions.TTF">
            <summary>
            Texture extension of the tff texture.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Render.TextureExtensions.TGA">
            <summary>
            Texture extension of the tga texture.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Render.TextureExtensions.SVG">
            <summary>
            Texture extension of the svg texture.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Render.TextureExtensions.SLUG">
            <summary>
            Texture extension of the slug texture.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Render.TextureExtensions.XML">
            <summary>
            Texture extension of the xml files.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Render.VectorAsset">
            <summary>
            Asset for vector graphics
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Render.VSyncMode">
            <summary>
            VSync mode.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Scripting.IScript">
            <summary>
            The interface that defines the entry point for the in-game scripts (programmable blocks)
            This will be added to the scripts class so we can use it.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Scripting.IScript.Init(Keen.VRage.DCS.Components.Entity)">
            <summary>
            The init function of the script that will be called at startup (first time it's scheduled)
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:Keen.VRage.Core.Scripting.IScript.Update">
            <summary>
            The update function that will be called every time the script is scheduled
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Scripting.ScriptExecutionStats">
            <summary>
            Stats from an ingame script. This will be returned with each execution.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Scripting.ScriptingAssemblyAttribute">
            <summary>
            Indicates that the annotated assembly is runtime-compiled scripting assembly (either for PB, Game or Editor mods)
            </summary>
            <remarks>
            Intended for scripting compiler use only
            </remarks>
        </member>
        <member name="T:Keen.VRage.Core.Scripting.ScriptInterruptedException">
            <summary>
            The exception that will be thrown by the SyntaxContext when thresholds are exceeded.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Scripting.ScriptInterruptedReason">
            <summary>
            The termination reason for a Script
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Services.CloudSync">
            <summary>
            Cloud Synchronization Services
            Used by <see cref="T:Keen.VRage.Core.Services.Extensions.CloudSyncExtensions"/>
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Services.Data.CloudSyncStatus">
            <summary>
            An enumeration representing a cloud synchronization status for a given object.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Services.Data.GameServiceAchievement">
            <summary>
            A struct representing a achievement in the game service
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.GameServiceAchievement.Id">
            <summary>
            Guid of the achievement in the game service
            <remarks>This should be the same for the same achievement across services.</remarks>
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.GameServiceAchievement.#ctor(System.Guid)">
            <summary>
            Creates a new instance of the GameServiceAchievement struct.
            </summary>
            <param name="id">"global" GUID of the achievement (related to the game)</param>
        </member>
        <member name="T:Keen.VRage.Core.Services.Data.GameServiceGroup">
            <summary>
            A struct representing a user group in the game service (for example Steam Clans)
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.GameServiceGroup.Id">
            <summary>
            Guid of a user group in the <see cref="T:Keen.VRage.Core.Services.IGameService"/>
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.GameServiceGroup.#ctor(System.Guid)">
            <summary>
            Creates a new instance of the GameServiceGroup struct.
            </summary>
            <param name="id">GUID of the user group (related to the <see cref="T:Keen.VRage.Core.Services.IGameService"/>)</param>
        </member>
        <member name="T:Keen.VRage.Core.Services.Data.GameServiceNames">
            <summary>
            List of Game Service names
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Services.Data.GameServiceNames.ServiceSteam">
            <summary>Name of the Steam UGC Service</summary>
        </member>
        <member name="F:Keen.VRage.Core.Services.Data.GameServiceNames.ServiceModIo">
            <summary>Name of Mod.IO UGC Service</summary>
        </member>
        <member name="F:Keen.VRage.Core.Services.Data.GameServiceNames.ServiceEos">
            <summary>Name of the Epic Online Services UGC Service</summary>
        </member>
        <member name="T:Keen.VRage.Core.Services.Data.GameServiceUser">
            <summary>
            A struct representing a user in the game service
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.GameServiceUser.Id">
            <summary>
            Guid of a user in the <see cref="T:Keen.VRage.Core.Services.IGameService"/>
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.GameServiceUser.#ctor">
            <summary>
            Creates a new instance of GameServiceUser with a Invalid Guid (all zeroes)
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.GameServiceUser.#ctor(System.Guid)">
            <summary>
            Creates a new instance of the GameServiceUser struct.
            </summary>
            <param name="id">GUID of the user (related to the <see cref="T:Keen.VRage.Core.Services.IGameService"/>)</param>
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.GameServiceUser.ToString">
            <summary>
            Returns a string representation of this game service user
            </summary>
            <returns>String representation of this service user</returns>
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.GameServiceUser.Equals(Keen.VRage.Core.Services.Data.GameServiceUser)">
            <summary>
            Compares if the handle refers to the same resource
            </summary>
            <param name="other">Other resource to compare with this one</param>
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.GameServiceUser.Equals(System.Object)">
            <summary>
            Checks if the specified object is a UgcHandle and compares if the handle refers to the same resource
            </summary>
            <param name="obj">Other object to compare with this one</param>
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.GameServiceUser.GetHashCode">
            <summary>
            Returns a hashcode for this handle
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Services.Data.GameServiceUserSerializer">
            <summary/>
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.GameServiceUserSerializer.Convert(Keen.VRage.Library.Serialization.SerializationContext,Keen.VRage.Core.Services.Data.GameServiceUser@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.GameServiceUserSerializer.Convert(Keen.VRage.Library.Serialization.SerializationContext,System.String@,Keen.VRage.Core.Services.Data.GameServiceUser@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Services.Data.ICloudSyncContainer">
            <summary>
            A interface to tag a container as synced with cloud.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Services.Data.IUGCContainer">
            <summary>
            A interface to tag a container as a UGC Container
            <br/>This allows usage of the <see cref="T:Keen.VRage.Core.Services.Extensions.UGCServiceExtensions"/> extensions.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Services.Data.Lobby">
            <summary>
            An GUID representing a Lobby on <see cref="T:Keen.VRage.Core.Services.ILobbyService"/>
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.Lobby.Id">
            <summary>
            Guid of a Lobby in the <see cref="T:Keen.VRage.Core.Services.ILobbyService"/>
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.Lobby.#ctor(System.Guid)">
            <summary>
            Creates a new instance of the UgcItemId struct.
            </summary>
            <param name="id">GUID of the UGC Item (related to the <see cref="T:Keen.VRage.Core.Services.ILobbyService"/>)</param>
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.Lobby.ToString">
            <summary>
            Returns a string representation of this lobby
            </summary>
            <returns>String representation of this lobby</returns>
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.Lobby.Equals(Keen.VRage.Core.Services.Data.Lobby)">
            <summary>
            Compares if the handle refers to the same resource
            </summary>
            <param name="other">Other resource to compare with this one</param>
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.Lobby.Equals(System.Object)">
            <summary>
            Checks if the specified object is a UgcHandle and compares if the handle refers to the same resource
            </summary>
            <param name="obj">Other object to compare with this one</param>
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.Lobby.GetHashCode">
            <summary>
            Returns a hashcode for this handle
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Services.Data.Lobby.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.Lobby.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.Lobby.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Services.Data.Lobby@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.Lobby.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.Lobby.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Services.Data.Lobby@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.Lobby.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.Lobby.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Services.Data.Lobby@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.Lobby.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.Lobby.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.Lobby.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.Lobby.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.Lobby.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Services.Data.Lobby@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.Lobby.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.Lobby.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Services.Data.Lobby@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.Lobby.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.Lobby.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Services.Data.Lobby@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.Lobby.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.Lobby.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Services.Data.Lobby@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.Lobby.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Services.Data.Lobby.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.Lobby.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.Lobby.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.Lobby.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Services#Data#Lobby}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.Lobby.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Services.Data.Lobby.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Services.Data.Lobby.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Services.Data.Lobby.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.Lobby.TypeInfoHolder.IdAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.Lobby.TypeInfoHolder.IdAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.Lobby.TypeInfoHolder.IdAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.Lobby.TypeInfoHolder.IdAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.Lobby.TypeInfoHolder.IdAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.Lobby.TypeInfoHolder.IdAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.Lobby.TypeInfoHolder.IdAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.Lobby.TypeInfoHolder.IdAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.Lobby.TypeInfoHolder.IdAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.Lobby.TypeInfoHolder.IdAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.Lobby.TypeInfoHolder.IdAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.Lobby.TypeInfoHolder.IdAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.Lobby.TypeInfoHolder.IdAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.Lobby.TypeInfoHolder.IdAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.Lobby.TypeInfoHolder.IdAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Guid}#Set(System.Object,System.Guid@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.Lobby.TypeInfoHolder.IdAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Guid}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.Lobby.TypeInfoHolder.IdAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Guid}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.Lobby.TypeInfoHolder.IdAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Guid}#Set(System.Byte@,System.Guid@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.Lobby.TypeInfoHolder.IdAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.Lobby.TypeInfoHolder.IdAccessor.Set(Keen.VRage.Core.Services.Data.Lobby@,System.Guid@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.Lobby.TypeInfoHolder.IdAccessor.Get(Keen.VRage.Core.Services.Data.Lobby@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Services.Data.LobbyType">
            <summary>
            Type of the lobby instance
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Services.Data.LobbyType.Private">
            <summary>
            Only way to join the lobby is to invite to someone else
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Services.Data.LobbyType.FriendsOnly">
            <summary>
            Shows for friends or invitees, but not in lobby list
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Services.Data.LobbyType.Public">
            <summary>
            Visible for friends and in lobby list
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Services.Data.LobbyType.Invisible">
             <summary>
            Returned by search, but not visible to other friends
             </summary>
        </member>
        <member name="T:Keen.VRage.Core.Services.Data.LobbyStatusCode">
            <summary>
            Status code for a lobby operation
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Services.Data.LobbyStatusCode.DoesntExist">
            <summary>
            Lobby doesn't exist (probably closed)
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Services.Data.LobbyStatusCode.NotAllowed">
            <summary>
            You don't have the permissions needed to join the chat
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Services.Data.LobbyStatusCode.Full">
            <summary>
            Lobby has reached its maximum size
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Services.Data.LobbyStatusCode.Error">
            <summary>
            Unexpected Error
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Services.Data.LobbyStatusCode.Banned">
            <summary>
            You are banned from this lobby and may not join
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Services.Data.LobbyStatusCode.FriendsOnly">
            <summary>
            The specified lobby is only for friends of the host
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Services.Data.LobbyStatusCode.NoUser">
            <summary>
            No user is logged in
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Services.Data.LobbyInformation">
            <summary>
            Lobby extended information
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.LobbyInformation.ID">
            <summary>
            ID of the Lobby
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.LobbyInformation.Owner">
            <summary>
            Service user that owns the lobby
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.LobbyInformation.Type">
            <summary>
            Type of the lobby
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.LobbyInformation.AvailableSlots">
            <summary>
            Number of currently available member slots
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.LobbyInformation.MaxSlots">
            <summary>
            Maximum number of members slots
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.LobbyInformation.ServiceName">
            <summary>
            Name of the Lobby Service
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.LobbyInformation.Members">
            <summary>
            List of the Lobby members
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Services.Data.LobbyInformation.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Services.Data.LobbyInformation@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Services.Data.LobbyInformation@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Services.Data.LobbyInformation@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Services.Data.LobbyInformation@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Services.Data.LobbyInformation@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Services.Data.LobbyInformation@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Services.Data.LobbyInformation@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Services.Data.LobbyInformation.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.LobbyInformation.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.LobbyInformation.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Services#Data#LobbyInformation}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.IDAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.IDAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.IDAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.IDAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.IDAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.IDAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.IDAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.IDAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.IDAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.IDAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.IDAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.IDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.IDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.IDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.IDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Services#Data#Lobby}#Set(System.Object,Keen.VRage.Core.Services.Data.Lobby@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.IDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Services#Data#Lobby}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.IDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Services#Data#Lobby}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.IDAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Services#Data#Lobby}#Set(System.Byte@,Keen.VRage.Core.Services.Data.Lobby@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.IDAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.IDAccessor.Set(Keen.VRage.Core.Services.Data.LobbyInformation@,Keen.VRage.Core.Services.Data.Lobby@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.IDAccessor.Get(Keen.VRage.Core.Services.Data.LobbyInformation@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.OwnerAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.OwnerAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.OwnerAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.OwnerAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.OwnerAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.OwnerAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.OwnerAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.OwnerAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.OwnerAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.OwnerAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.OwnerAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.OwnerAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.OwnerAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.OwnerAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.OwnerAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Services#Data#GameServiceUser}#Set(System.Object,Keen.VRage.Core.Services.Data.GameServiceUser@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.OwnerAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Services#Data#GameServiceUser}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.OwnerAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Services#Data#GameServiceUser}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.OwnerAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Services#Data#GameServiceUser}#Set(System.Byte@,Keen.VRage.Core.Services.Data.GameServiceUser@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.OwnerAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.OwnerAccessor.Set(Keen.VRage.Core.Services.Data.LobbyInformation@,Keen.VRage.Core.Services.Data.GameServiceUser@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.OwnerAccessor.Get(Keen.VRage.Core.Services.Data.LobbyInformation@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.TypeAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.TypeAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.TypeAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.TypeAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.TypeAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.TypeAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.TypeAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.TypeAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.TypeAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.TypeAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.TypeAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.TypeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.TypeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.TypeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.TypeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Services#Data#LobbyType}#Set(System.Object,Keen.VRage.Core.Services.Data.LobbyType@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.TypeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Services#Data#LobbyType}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.TypeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Services#Data#LobbyType}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.TypeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Services#Data#LobbyType}#Set(System.Byte@,Keen.VRage.Core.Services.Data.LobbyType@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.TypeAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.TypeAccessor.Set(Keen.VRage.Core.Services.Data.LobbyInformation@,Keen.VRage.Core.Services.Data.LobbyType@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.TypeAccessor.Get(Keen.VRage.Core.Services.Data.LobbyInformation@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.AvailableSlotsAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.AvailableSlotsAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.AvailableSlotsAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.AvailableSlotsAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.AvailableSlotsAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.AvailableSlotsAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.AvailableSlotsAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.AvailableSlotsAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.AvailableSlotsAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.AvailableSlotsAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.AvailableSlotsAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.AvailableSlotsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.AvailableSlotsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.AvailableSlotsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.AvailableSlotsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#UInt32}#Set(System.Object,System.UInt32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.AvailableSlotsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#UInt32}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.AvailableSlotsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#UInt32}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.AvailableSlotsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#UInt32}#Set(System.Byte@,System.UInt32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.AvailableSlotsAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.AvailableSlotsAccessor.Set(Keen.VRage.Core.Services.Data.LobbyInformation@,System.UInt32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.AvailableSlotsAccessor.Get(Keen.VRage.Core.Services.Data.LobbyInformation@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.MaxSlotsAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.MaxSlotsAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.MaxSlotsAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.MaxSlotsAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.MaxSlotsAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.MaxSlotsAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.MaxSlotsAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.MaxSlotsAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.MaxSlotsAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.MaxSlotsAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.MaxSlotsAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.MaxSlotsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.MaxSlotsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.MaxSlotsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.MaxSlotsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#UInt32}#Set(System.Object,System.UInt32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.MaxSlotsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#UInt32}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.MaxSlotsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#UInt32}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.MaxSlotsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#UInt32}#Set(System.Byte@,System.UInt32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.MaxSlotsAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.MaxSlotsAccessor.Set(Keen.VRage.Core.Services.Data.LobbyInformation@,System.UInt32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.MaxSlotsAccessor.Get(Keen.VRage.Core.Services.Data.LobbyInformation@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.ServiceNameAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.ServiceNameAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.ServiceNameAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.ServiceNameAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.ServiceNameAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.ServiceNameAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.ServiceNameAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.ServiceNameAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.ServiceNameAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.ServiceNameAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.ServiceNameAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.ServiceNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.ServiceNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.ServiceNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.ServiceNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Object,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.ServiceNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.ServiceNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.ServiceNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Byte@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.ServiceNameAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.ServiceNameAccessor.Set(Keen.VRage.Core.Services.Data.LobbyInformation@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.ServiceNameAccessor.Get(Keen.VRage.Core.Services.Data.LobbyInformation@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.MembersAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.MembersAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.MembersAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.MembersAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.MembersAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.MembersAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.MembersAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.MembersAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.MembersAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.MembersAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.MembersAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.MembersAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.MembersAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.MembersAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.MembersAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Immutable#ImmutableArray{Keen#VRage#Core#Services#Data#GameServiceUser}}#Set(System.Object,System.Collections.Immutable.ImmutableArray{Keen.VRage.Core.Services.Data.GameServiceUser}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.MembersAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Immutable#ImmutableArray{Keen#VRage#Core#Services#Data#GameServiceUser}}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.MembersAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Immutable#ImmutableArray{Keen#VRage#Core#Services#Data#GameServiceUser}}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.MembersAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Immutable#ImmutableArray{Keen#VRage#Core#Services#Data#GameServiceUser}}#Set(System.Byte@,System.Collections.Immutable.ImmutableArray{Keen.VRage.Core.Services.Data.GameServiceUser}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.MembersAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.MembersAccessor.Set(Keen.VRage.Core.Services.Data.LobbyInformation@,System.Collections.Immutable.ImmutableArray{Keen.VRage.Core.Services.Data.GameServiceUser}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.LobbyInformation.TypeInfoHolder.MembersAccessor.Get(Keen.VRage.Core.Services.Data.LobbyInformation@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Services.Data.PacketReliability">
            <summary>
            Enum representing the reliability of a packet to be sent.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Services.Data.UGCContainerInfo">
            <summary>
            A struct representing information of a UGC Container
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Services.Data.UGCContainerInfo.Id">
            <summary>
            ID of the UGC Container
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Services.Data.UGCContainerInfo.IsLocal">
            <summary>
            True if the UGC Container is currently in the local machine
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Services.Data.UGCContainerInfo.Status">
            <summary>
            Current status of the UGC Container
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Services.Data.UGCContainerInfo.IsOwnedByUser">
            <summary>
            If the UGC Container is owned by the current user
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCContainerInfo.#ctor">
            <summary>
            Creates a new UGC Container Info that is local, empty guid.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Services.Data.UGCContainerInfo.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCContainerInfo.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCContainerInfo.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Services.Data.UGCContainerInfo@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCContainerInfo.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCContainerInfo.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Services.Data.UGCContainerInfo@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCContainerInfo.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCContainerInfo.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Services.Data.UGCContainerInfo@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCContainerInfo.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCContainerInfo.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCContainerInfo.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCContainerInfo.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCContainerInfo.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Services.Data.UGCContainerInfo@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCContainerInfo.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCContainerInfo.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Services.Data.UGCContainerInfo@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCContainerInfo.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCContainerInfo.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCContainerInfo.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Services.Data.UGCContainerInfo@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCContainerInfo.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Services.Data.UGCContainerInfo.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCContainerInfo.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCContainerInfo.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCContainerInfo.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Services#Data#UGCContainerInfo}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCContainerInfo.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Services.Data.UGCContainerInfo.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Services.Data.UGCContainerInfo.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Services.Data.UGCContainerInfo.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCContainerInfo.TypeInfoHolder.IdAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCContainerInfo.TypeInfoHolder.IdAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCContainerInfo.TypeInfoHolder.IdAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCContainerInfo.TypeInfoHolder.IdAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCContainerInfo.TypeInfoHolder.IdAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCContainerInfo.TypeInfoHolder.IdAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCContainerInfo.TypeInfoHolder.IdAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCContainerInfo.TypeInfoHolder.IdAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCContainerInfo.TypeInfoHolder.IdAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCContainerInfo.TypeInfoHolder.IdAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCContainerInfo.TypeInfoHolder.IdAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCContainerInfo.TypeInfoHolder.IdAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCContainerInfo.TypeInfoHolder.IdAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCContainerInfo.TypeInfoHolder.IdAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCContainerInfo.TypeInfoHolder.IdAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Services#Data#UGCItemId}#Set(System.Object,Keen.VRage.Core.Services.Data.UGCItemId@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCContainerInfo.TypeInfoHolder.IdAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Services#Data#UGCItemId}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCContainerInfo.TypeInfoHolder.IdAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Services#Data#UGCItemId}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCContainerInfo.TypeInfoHolder.IdAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Services#Data#UGCItemId}#Set(System.Byte@,Keen.VRage.Core.Services.Data.UGCItemId@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCContainerInfo.TypeInfoHolder.IdAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCContainerInfo.TypeInfoHolder.IdAccessor.Set(Keen.VRage.Core.Services.Data.UGCContainerInfo@,Keen.VRage.Core.Services.Data.UGCItemId@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCContainerInfo.TypeInfoHolder.IdAccessor.Get(Keen.VRage.Core.Services.Data.UGCContainerInfo@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCContainerInfo.TypeInfoHolder.IsLocalAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCContainerInfo.TypeInfoHolder.IsLocalAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCContainerInfo.TypeInfoHolder.IsLocalAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCContainerInfo.TypeInfoHolder.IsLocalAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCContainerInfo.TypeInfoHolder.IsLocalAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCContainerInfo.TypeInfoHolder.IsLocalAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCContainerInfo.TypeInfoHolder.IsLocalAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCContainerInfo.TypeInfoHolder.IsLocalAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCContainerInfo.TypeInfoHolder.IsLocalAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCContainerInfo.TypeInfoHolder.IsLocalAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCContainerInfo.TypeInfoHolder.IsLocalAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCContainerInfo.TypeInfoHolder.IsLocalAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCContainerInfo.TypeInfoHolder.IsLocalAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCContainerInfo.TypeInfoHolder.IsLocalAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCContainerInfo.TypeInfoHolder.IsLocalAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCContainerInfo.TypeInfoHolder.IsLocalAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCContainerInfo.TypeInfoHolder.IsLocalAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCContainerInfo.TypeInfoHolder.IsLocalAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCContainerInfo.TypeInfoHolder.IsLocalAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCContainerInfo.TypeInfoHolder.IsLocalAccessor.Set(Keen.VRage.Core.Services.Data.UGCContainerInfo@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCContainerInfo.TypeInfoHolder.IsLocalAccessor.Get(Keen.VRage.Core.Services.Data.UGCContainerInfo@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCContainerInfo.TypeInfoHolder.StatusAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCContainerInfo.TypeInfoHolder.StatusAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCContainerInfo.TypeInfoHolder.StatusAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCContainerInfo.TypeInfoHolder.StatusAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCContainerInfo.TypeInfoHolder.StatusAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCContainerInfo.TypeInfoHolder.StatusAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCContainerInfo.TypeInfoHolder.StatusAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCContainerInfo.TypeInfoHolder.StatusAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCContainerInfo.TypeInfoHolder.StatusAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCContainerInfo.TypeInfoHolder.StatusAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCContainerInfo.TypeInfoHolder.StatusAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCContainerInfo.TypeInfoHolder.StatusAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCContainerInfo.TypeInfoHolder.StatusAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCContainerInfo.TypeInfoHolder.StatusAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCContainerInfo.TypeInfoHolder.StatusAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Services#Data#UGCStatus}#Set(System.Object,Keen.VRage.Core.Services.Data.UGCStatus@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCContainerInfo.TypeInfoHolder.StatusAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Services#Data#UGCStatus}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCContainerInfo.TypeInfoHolder.StatusAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Services#Data#UGCStatus}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCContainerInfo.TypeInfoHolder.StatusAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Services#Data#UGCStatus}#Set(System.Byte@,Keen.VRage.Core.Services.Data.UGCStatus@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCContainerInfo.TypeInfoHolder.StatusAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCContainerInfo.TypeInfoHolder.StatusAccessor.Set(Keen.VRage.Core.Services.Data.UGCContainerInfo@,Keen.VRage.Core.Services.Data.UGCStatus@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCContainerInfo.TypeInfoHolder.StatusAccessor.Get(Keen.VRage.Core.Services.Data.UGCContainerInfo@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCContainerInfo.TypeInfoHolder.IsOwnedByUserAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCContainerInfo.TypeInfoHolder.IsOwnedByUserAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCContainerInfo.TypeInfoHolder.IsOwnedByUserAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCContainerInfo.TypeInfoHolder.IsOwnedByUserAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCContainerInfo.TypeInfoHolder.IsOwnedByUserAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCContainerInfo.TypeInfoHolder.IsOwnedByUserAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCContainerInfo.TypeInfoHolder.IsOwnedByUserAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCContainerInfo.TypeInfoHolder.IsOwnedByUserAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCContainerInfo.TypeInfoHolder.IsOwnedByUserAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCContainerInfo.TypeInfoHolder.IsOwnedByUserAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCContainerInfo.TypeInfoHolder.IsOwnedByUserAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCContainerInfo.TypeInfoHolder.IsOwnedByUserAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCContainerInfo.TypeInfoHolder.IsOwnedByUserAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCContainerInfo.TypeInfoHolder.IsOwnedByUserAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCContainerInfo.TypeInfoHolder.IsOwnedByUserAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCContainerInfo.TypeInfoHolder.IsOwnedByUserAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCContainerInfo.TypeInfoHolder.IsOwnedByUserAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCContainerInfo.TypeInfoHolder.IsOwnedByUserAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCContainerInfo.TypeInfoHolder.IsOwnedByUserAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCContainerInfo.TypeInfoHolder.IsOwnedByUserAccessor.Set(Keen.VRage.Core.Services.Data.UGCContainerInfo@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCContainerInfo.TypeInfoHolder.IsOwnedByUserAccessor.Get(Keen.VRage.Core.Services.Data.UGCContainerInfo@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Services.Data.UGCStatus">
            <summary>
            A enum representing the status of a UGC Container
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Services.Data.UGCDescription">
            <summary>
            A struct representing a User Generated Content Description
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Services.Data.UGCDescription.Title">
            <summary>
            Title of the UGC Data
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Services.Data.UGCDescription.Description">
            <summary>
            Description for the UGC Data
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Services.Data.UGCDescription.Visiblity">
            <summary>
            Visibility of the UGC Item
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Services.Data.UGCDescription.Tags">
            <summary>
            Tags for searching the UGC Data
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Services.Data.UGCDescription.PreviewFilePath">
            <summary>
            Name of the preview image file (relative to container root)
            Mandatory for Mod.IO
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Services.Data.UGCDescription.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCDescription.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCDescription.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Services.Data.UGCDescription@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCDescription.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCDescription.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Services.Data.UGCDescription@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCDescription.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCDescription.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Services.Data.UGCDescription@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCDescription.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCDescription.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCDescription.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCDescription.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCDescription.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Services.Data.UGCDescription@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCDescription.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCDescription.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Services.Data.UGCDescription@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCDescription.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCDescription.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Services.Data.UGCDescription@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCDescription.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCDescription.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Services.Data.UGCDescription@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCDescription.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Services.Data.UGCDescription.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCDescription.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCDescription.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCDescription.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Services#Data#UGCDescription}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCDescription.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.TitleAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.TitleAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.TitleAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.TitleAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.TitleAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.TitleAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.TitleAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.TitleAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.TitleAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.TitleAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.TitleAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.TitleAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.TitleAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.TitleAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.TitleAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Object,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.TitleAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.TitleAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.TitleAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Byte@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.TitleAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.TitleAccessor.Set(Keen.VRage.Core.Services.Data.UGCDescription@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.TitleAccessor.Get(Keen.VRage.Core.Services.Data.UGCDescription@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.DescriptionAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.DescriptionAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.DescriptionAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.DescriptionAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.DescriptionAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.DescriptionAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.DescriptionAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.DescriptionAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.DescriptionAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.DescriptionAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.DescriptionAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.DescriptionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.DescriptionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.DescriptionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.DescriptionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Object,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.DescriptionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.DescriptionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.DescriptionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Byte@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.DescriptionAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.DescriptionAccessor.Set(Keen.VRage.Core.Services.Data.UGCDescription@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.DescriptionAccessor.Get(Keen.VRage.Core.Services.Data.UGCDescription@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.VisiblityAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.VisiblityAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.VisiblityAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.VisiblityAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.VisiblityAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.VisiblityAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.VisiblityAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.VisiblityAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.VisiblityAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.VisiblityAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.VisiblityAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.VisiblityAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.VisiblityAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.VisiblityAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.VisiblityAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Services#Data#UGCVisiblity}#Set(System.Object,Keen.VRage.Core.Services.Data.UGCVisiblity@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.VisiblityAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Services#Data#UGCVisiblity}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.VisiblityAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Services#Data#UGCVisiblity}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.VisiblityAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Services#Data#UGCVisiblity}#Set(System.Byte@,Keen.VRage.Core.Services.Data.UGCVisiblity@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.VisiblityAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.VisiblityAccessor.Set(Keen.VRage.Core.Services.Data.UGCDescription@,Keen.VRage.Core.Services.Data.UGCVisiblity@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.VisiblityAccessor.Get(Keen.VRage.Core.Services.Data.UGCDescription@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.TagsAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.TagsAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.TagsAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.TagsAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.TagsAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.TagsAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.TagsAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.TagsAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.TagsAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.TagsAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.TagsAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.TagsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.TagsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.TagsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.TagsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String[]}#Set(System.Object,System.String[]@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.TagsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String[]}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.TagsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String[]}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.TagsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String[]}#Set(System.Byte@,System.String[]@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.TagsAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.TagsAccessor.Set(Keen.VRage.Core.Services.Data.UGCDescription@,System.String[]@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.TagsAccessor.Get(Keen.VRage.Core.Services.Data.UGCDescription@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.PreviewFilePathAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.PreviewFilePathAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.PreviewFilePathAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.PreviewFilePathAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.PreviewFilePathAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.PreviewFilePathAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.PreviewFilePathAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.PreviewFilePathAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.PreviewFilePathAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.PreviewFilePathAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.PreviewFilePathAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.PreviewFilePathAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.PreviewFilePathAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.PreviewFilePathAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.PreviewFilePathAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Object,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.PreviewFilePathAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.PreviewFilePathAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.PreviewFilePathAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Byte@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.PreviewFilePathAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.PreviewFilePathAccessor.Set(Keen.VRage.Core.Services.Data.UGCDescription@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCDescription.TypeInfoHolder.PreviewFilePathAccessor.Get(Keen.VRage.Core.Services.Data.UGCDescription@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Services.Data.UGCVisiblity">
            <summary>
            Visibility of the UGC Item
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Services.Data.UGCHandle">
            <summary>
            A handle given by the <see cref="T:Keen.VRage.Core.Services.IUGCService"/> 
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCHandle.ServiceName">
            <summary>
            Returns the service name that issued this handle
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCHandle.Id">
            <summary>
            Returns the ID of the handle
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCHandle.#ctor(System.String,System.String)">
            <summary>
            Creates a new UGC Handle with the specified service name and ID
            </summary>
            <param name="serviceName">Name of the service that is issuing this handle</param>
            <param name="id">ID of the Handle</param>
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCHandle.Equals(Keen.VRage.Core.Services.Data.UGCHandle)">
            <summary>
            Compares if the handle refers to the same resource
            </summary>
            <param name="other">Other resource to compare with this one</param>
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCHandle.Equals(System.Object)">
            <summary>
            Checks if the specified object is a UgcHandle and compares if the handle refers to the same resource
            </summary>
            <param name="obj">Other object to compare with this one</param>
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCHandle.GetHashCode">
            <summary>
            Returns a hashcode for this handle
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCHandle.SaveToFileSystem(Keen.VRage.Library.Filesystem.IFileSystem,System.String)">
            <summary>
            Saves the specified handle to the filesystem
            </summary>
            <param name="fs">file system to save the handle</param>
            <param name="path">path to save the handle</param>
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCHandle.LoadFromFileSystem(Keen.VRage.Library.Filesystem.IFileReader,System.String)">
            <summary>
            Loads a handle from the filesystem
            </summary>
            <throws><see cref="T:System.IO.FileNotFoundException"/></throws>
            <param name="fs">file system to load from</param>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="T:Keen.VRage.Core.Services.Data.UGCHandle.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCHandle.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCHandle.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Services.Data.UGCHandle@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCHandle.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCHandle.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Services.Data.UGCHandle@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCHandle.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCHandle.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Services.Data.UGCHandle@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCHandle.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCHandle.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCHandle.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCHandle.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCHandle.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Services.Data.UGCHandle@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCHandle.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCHandle.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Services.Data.UGCHandle@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCHandle.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCHandle.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Services.Data.UGCHandle@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCHandle.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCHandle.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Services.Data.UGCHandle@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCHandle.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Services.Data.UGCHandle.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCHandle.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCHandle.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCHandle.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Services#Data#UGCHandle}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCHandle.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Services.Data.UGCHandle.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Services.Data.UGCHandle.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Services.Data.UGCHandle.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCHandle.TypeInfoHolder.ServiceNameAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCHandle.TypeInfoHolder.ServiceNameAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCHandle.TypeInfoHolder.ServiceNameAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCHandle.TypeInfoHolder.ServiceNameAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCHandle.TypeInfoHolder.ServiceNameAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCHandle.TypeInfoHolder.ServiceNameAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCHandle.TypeInfoHolder.ServiceNameAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCHandle.TypeInfoHolder.ServiceNameAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCHandle.TypeInfoHolder.ServiceNameAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCHandle.TypeInfoHolder.ServiceNameAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCHandle.TypeInfoHolder.ServiceNameAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCHandle.TypeInfoHolder.ServiceNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCHandle.TypeInfoHolder.ServiceNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCHandle.TypeInfoHolder.ServiceNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCHandle.TypeInfoHolder.ServiceNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Object,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCHandle.TypeInfoHolder.ServiceNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCHandle.TypeInfoHolder.ServiceNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCHandle.TypeInfoHolder.ServiceNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Byte@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCHandle.TypeInfoHolder.ServiceNameAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCHandle.TypeInfoHolder.ServiceNameAccessor.Set(Keen.VRage.Core.Services.Data.UGCHandle@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCHandle.TypeInfoHolder.ServiceNameAccessor.Get(Keen.VRage.Core.Services.Data.UGCHandle@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCHandle.TypeInfoHolder.IdAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCHandle.TypeInfoHolder.IdAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCHandle.TypeInfoHolder.IdAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCHandle.TypeInfoHolder.IdAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCHandle.TypeInfoHolder.IdAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCHandle.TypeInfoHolder.IdAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCHandle.TypeInfoHolder.IdAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCHandle.TypeInfoHolder.IdAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCHandle.TypeInfoHolder.IdAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCHandle.TypeInfoHolder.IdAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCHandle.TypeInfoHolder.IdAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCHandle.TypeInfoHolder.IdAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCHandle.TypeInfoHolder.IdAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCHandle.TypeInfoHolder.IdAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCHandle.TypeInfoHolder.IdAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Object,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCHandle.TypeInfoHolder.IdAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCHandle.TypeInfoHolder.IdAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCHandle.TypeInfoHolder.IdAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Byte@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCHandle.TypeInfoHolder.IdAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCHandle.TypeInfoHolder.IdAccessor.Set(Keen.VRage.Core.Services.Data.UGCHandle@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCHandle.TypeInfoHolder.IdAccessor.Get(Keen.VRage.Core.Services.Data.UGCHandle@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Services.Data.UGCItemId">
            <summary>
            An GUID representing a UGC Item on <see cref="T:Keen.VRage.Core.Services.IUGCService"/>
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Services.Data.UGCItemId.Empty">
            <summary>
            And empty UGCItemId that represents no UGC Item.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCItemId.Id">
            <summary>
            Guid of a UGC Item in the <see cref="T:Keen.VRage.Core.Services.IUGCService"/>
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCItemId.#ctor(System.Guid)">
            <summary>
            Creates a new instance of the UgcItemId struct.
            </summary>
            <param name="id">GUID of the UGC Item (related to the <see cref="T:Keen.VRage.Core.Services.IUGCService"/>)</param>
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCItemId.ToString">
            <summary>
            Returns a string representation of the UGC Item Id.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Keen.VRage.Core.Services.Data.UGCItemId.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCItemId.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCItemId.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Services.Data.UGCItemId@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCItemId.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCItemId.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Services.Data.UGCItemId@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCItemId.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCItemId.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Services.Data.UGCItemId@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCItemId.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCItemId.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCItemId.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCItemId.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCItemId.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Services.Data.UGCItemId@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCItemId.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCItemId.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Services.Data.UGCItemId@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCItemId.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCItemId.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Services.Data.UGCItemId@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCItemId.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCItemId.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Services.Data.UGCItemId@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCItemId.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Services.Data.UGCItemId.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCItemId.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCItemId.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCItemId.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Services#Data#UGCItemId}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCItemId.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Services.Data.UGCItemId.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Services.Data.UGCItemId.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Services.Data.UGCItemId.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCItemId.TypeInfoHolder.IdAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCItemId.TypeInfoHolder.IdAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCItemId.TypeInfoHolder.IdAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCItemId.TypeInfoHolder.IdAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCItemId.TypeInfoHolder.IdAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCItemId.TypeInfoHolder.IdAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCItemId.TypeInfoHolder.IdAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCItemId.TypeInfoHolder.IdAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Data.UGCItemId.TypeInfoHolder.IdAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCItemId.TypeInfoHolder.IdAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCItemId.TypeInfoHolder.IdAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCItemId.TypeInfoHolder.IdAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCItemId.TypeInfoHolder.IdAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCItemId.TypeInfoHolder.IdAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCItemId.TypeInfoHolder.IdAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Guid}#Set(System.Object,System.Guid@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCItemId.TypeInfoHolder.IdAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Guid}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCItemId.TypeInfoHolder.IdAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Guid}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCItemId.TypeInfoHolder.IdAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Guid}#Set(System.Byte@,System.Guid@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCItemId.TypeInfoHolder.IdAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCItemId.TypeInfoHolder.IdAccessor.Set(Keen.VRage.Core.Services.Data.UGCItemId@,System.Guid@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Data.UGCItemId.TypeInfoHolder.IdAccessor.Get(Keen.VRage.Core.Services.Data.UGCItemId@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Services.Extensions.CloudSyncExtensions">
            <summary>
            Extensions for objects that uses Cloud Sync functionality
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Services.Extensions.CloudSyncExtensions.EnsureCloudSynchronizedAsync``1(Keen.VRage.Library.Filesystem.StorageManagers.Container{``0})">
            <summary>
            Waits for the specified object to be fully synced with the active cloud sync service.
            <remarks>Returns immediately if the container is not marked to be synced</remarks>
            <seealso cref="M:Keen.VRage.Core.Services.Extensions.CloudSyncExtensions.SetCloudSync``1(Keen.VRage.Library.Filesystem.StorageManagers.Container{``0},System.Boolean)"/>
            </summary>
            <param name="container">Container to wait for sync</param>
        </member>
        <member name="M:Keen.VRage.Core.Services.Extensions.CloudSyncExtensions.GetCloudSyncStatus``1(Keen.VRage.Library.Filesystem.StorageManagers.Container{``0})">
            <summary>
            Returns the current state of the container in the cloud.
            </summary>
            <param name="container">Container to check the current status</param>
        </member>
        <member name="M:Keen.VRage.Core.Services.Extensions.CloudSyncExtensions.SetCloudSync``1(Keen.VRage.Library.Filesystem.StorageManagers.Container{``0},System.Boolean)">
            <summary>
            Sets the current container to be synced with the active cloud sync service.
            </summary>
            <param name="container">Container to change the sync flag</param>
            <param name="enabled">True if the object should be synchronized with cloud service</param>
        </member>
        <member name="T:Keen.VRage.Core.Services.Extensions.UGCServiceExtensions">
            <summary>
            Extensions for objects that uses UGC functionality
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Services.Extensions.UGCServiceExtensions.InitializeUGCCache">
            <summary>
            Registers and Initializes all UGC Cache related functionality.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Services.Extensions.UGCServiceExtensions.UploadToUGCAsync``1(Keen.VRage.Library.Filesystem.StorageManagers.Container{``0},Keen.VRage.Core.Services.IUGCService,Keen.VRage.Core.Services.Data.UGCDescription)">
            <summary>
            Uploads a container to the specified UGC Service.
            </summary>
            <param name="container">The container containing data to upload</param>
            <param name="service">Target service to upload to</param>
            <param name="description">Description of this UGC Data</param>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Keen.VRage.Core.Services.Extensions.UGCServiceExtensions.UploadToUGCAsync``1(Keen.VRage.Library.Filesystem.StorageManagers.Container{``0},Keen.VRage.Library.Utils.StringId,Keen.VRage.Core.Services.Data.UGCDescription)">
            <summary>
            Uploads a container to the specified UGC Service.
            </summary>
            <param name="container">The container containing data to upload</param>
            <param name="serviceName">Target service to upload to</param>
            <param name="description">Description of this UGC Data</param>
            <typeparam name="T"></typeparam>
            <exception cref="T:System.InvalidOperationException">Thrown when the specified service is not found</exception>
        </member>
        <member name="M:Keen.VRage.Core.Services.Extensions.UGCServiceExtensions.GetUGCInfo``1(Keen.VRage.Library.Filesystem.StorageManagers.Container{``0},Keen.VRage.Core.Services.IUGCService)">
            <summary>
            Gets the UGC Container Info for the specified container and service, if it exists.
            </summary>
            <param name="container">UGC Container to get info from</param>
            <param name="service">UGC Service that the info belongs to</param>
            <returns>A <see cref="T:Keen.VRage.Core.Services.Data.UGCContainerInfo"/> if the specified container came from or has been uploaded in the specified service</returns>
        </member>
        <member name="M:Keen.VRage.Core.Services.Extensions.UGCServiceExtensions.RefreshUGCCache``1(Keen.VRage.Library.Filesystem.StorageManagers.Container{``0},Keen.VRage.Core.Services.IUGCService)">
            <summary>
            Refreshes the UGC Cache for the specified container.
            </summary>
            <param name="container">Container to refresh the local cache data</param>
            <param name="service">Service that the container has been emitted from</param>
        </member>
        <member name="M:Keen.VRage.Core.Services.Extensions.UGCServiceExtensions.GetUGCHandle``1(Keen.VRage.Library.Filesystem.StorageManagers.Container{``0})">
            <summary>
            Returns the UGC Handle for the specified container
            </summary>
            <throws><see cref="T:System.IO.FileNotFoundException"/></throws>
            <param name="container">UGC Container to get the handle</param>
            <returns>UGC Handle for the specified Container</returns>
        </member>
        <member name="T:Keen.VRage.Core.Services.Extensions.UGCCacheMeta.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Extensions.UGCCacheMeta.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Extensions.UGCCacheMeta.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Services.Extensions.UGCCacheMeta@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Extensions.UGCCacheMeta.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Extensions.UGCCacheMeta.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Services.Extensions.UGCCacheMeta@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Extensions.UGCCacheMeta.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Extensions.UGCCacheMeta.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Services.Extensions.UGCCacheMeta@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Extensions.UGCCacheMeta.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Extensions.UGCCacheMeta.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Extensions.UGCCacheMeta.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Extensions.UGCCacheMeta.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Extensions.UGCCacheMeta.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Services.Extensions.UGCCacheMeta@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Extensions.UGCCacheMeta.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Extensions.UGCCacheMeta.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Services.Extensions.UGCCacheMeta@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Extensions.UGCCacheMeta.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Extensions.UGCCacheMeta.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Extensions.UGCCacheMeta.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Services.Extensions.UGCCacheMeta@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Extensions.UGCCacheMeta.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Services.Extensions.UGCCacheMeta.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Extensions.UGCCacheMeta.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Extensions.UGCCacheMeta.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.Extensions.UGCCacheMeta.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Services#Extensions#UGCCacheMeta}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.Extensions.UGCCacheMeta.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Services.Extensions.UGCCacheMeta.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Services.Extensions.UGCCacheMeta.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Services.Extensions.UGCCacheMeta.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="T:Keen.VRage.Core.Services.IAchievementsService">
             <summary>
             A interface representing a service for interacting with Achievement Related Information
            
             <remarks>
             All methods that receive a <see cref="T:Keen.VRage.Core.Services.Data.GameServiceAchievement"/> can throw ArgumentException if the GUID
             previously registered in the game service. This is an edge-case and should not happen in normal circumstances.
             </remarks>
             </summary>
        </member>
        <member name="M:Keen.VRage.Core.Services.IAchievementsService.IsUnlocked(Keen.VRage.Core.Services.Data.GameServiceAchievement)">
            <summary>
            Whether the achievement is unlocked
            </summary>
            <throws><see cref="T:System.ArgumentException"/> if the achievement GUID was not registered on that game service</throws>
            <param name="achievement">Achievement to set the stat value</param>
        </member>
        <member name="M:Keen.VRage.Core.Services.IAchievementsService.SetStatValue(Keen.VRage.Core.Services.Data.GameServiceAchievement,System.Int32)">
            <summary>
            Sets the stat value for the achievement. This sets the integer value of the achievement.
            
            <seealso cref="M:Keen.VRage.Core.Services.IAchievementsService.SetStatValue(Keen.VRage.Core.Services.Data.GameServiceAchievement,System.Single)"/>
            </summary>
            <throws><see cref="T:System.ArgumentException"/> if the achievement GUID was not registered on that game service</throws>
            <param name="achievement">Achievement to set the stat value</param>
            <param name="value">Int value to set</param>
        </member>
        <member name="M:Keen.VRage.Core.Services.IAchievementsService.SetStatValue(Keen.VRage.Core.Services.Data.GameServiceAchievement,System.Single)">
            <summary>
            Sets the stat value for the achievement. This sets the float value of the achievement.
            
            <seealso cref="M:Keen.VRage.Core.Services.IAchievementsService.SetStatValue(Keen.VRage.Core.Services.Data.GameServiceAchievement,System.Int32)"/>
            </summary>
            <throws><see cref="T:System.ArgumentException"/> if the achievement GUID was not registered on that game service</throws>
            <param name="achievement">Achievement to set the stat value</param>
            <param name="value">Float value to set</param>
        </member>
        <member name="M:Keen.VRage.Core.Services.IAchievementsService.GetIntStat(Keen.VRage.Core.Services.Data.GameServiceAchievement)">
            <summary>
            Stat value for the achievement interpreted as an integer
            </summary>
            <throws><see cref="T:System.ArgumentException"/> if the achievement GUID was not registered on that game service</throws>
            <param name="achievement">Achievement to set the stat value</param>
            <returns>The int value of the tracked statistic</returns>
        </member>
        <member name="M:Keen.VRage.Core.Services.IAchievementsService.GetFloatStat(Keen.VRage.Core.Services.Data.GameServiceAchievement)">
            <summary>
            Stat value for the achievement interpreted as a float
            </summary>
            <throws><see cref="T:System.ArgumentException"/> if the achievement GUID was not registered on that game service</throws>
            <param name="achievement">Achievement to set the stat value</param>
            <returns>The float value of the tracked statistic</returns>
        </member>
        <member name="M:Keen.VRage.Core.Services.IAchievementsService.Unlock(Keen.VRage.Core.Services.Data.GameServiceAchievement)">
            <summary>
            Grants the achievement for the user by unlocking it.
            
            <remarks>This does not set the stat value to max value</remarks>
            </summary>
            <throws><see cref="T:System.ArgumentException"/> if the achievement GUID was not registered on that game service</throws>
            <param name="achievement">Achievement to set the stat value</param>
        </member>
        <member name="M:Keen.VRage.Core.Services.IAchievementsService.IndicateProgress(Keen.VRage.Core.Services.Data.GameServiceAchievement,System.UInt32)">
            <summary>
            Shows progress for the achievement for the user.
            Usually called after setting the stat value.
            </summary>
            <throws><see cref="T:System.ArgumentException"/> if the achievement GUID was not registered on that game service</throws>
            <param name="achievement">Achievement to set the stat value</param>
            <param name="value">Value of the progress</param>
        </member>
        <member name="M:Keen.VRage.Core.Services.IAchievementsService.ResetAllStats(System.Boolean)">
            <summary>
            Clears up all the statistics stored in the service.
            </summary>
            <param name="achievementsToo">if true, clears up all stat fields inside achievements.</param>
        </member>
        <member name="T:Keen.VRage.Core.Services.IDlcService">
            <summary>
                A interface representing a service for interacting with DLC related information
                Related to <see cref="T:Keen.VRage.Core.Services.IGameService" />
            </summary>
        </member>
        <member name="E:Keen.VRage.Core.Services.IDlcService.OnDlcInstalled">
            <summary>
                An event fired when a DLC finished installing and it's ready to use
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Services.IDlcService.OpenDlcInShop(System.Guid)">
            <summary>
                Opens the DLC in the game service's store using default game service overlay
            </summary>
            <throws>ArgumentException if the GUID was not previously registered in service</throws>
            <param name="dlcId">true if DLC is supported by the game service</param>
        </member>
        <member name="M:Keen.VRage.Core.Services.IDlcService.GetDlc">
            <summary>
                Retrieves registered DLC list from the game service
            </summary>
            <returns>An IEnumerable of DlcData</returns>
        </member>
        <member name="M:Keen.VRage.Core.Services.IDlcService.IsDlcSupported(System.Guid)">
            <summary>
                Checks if given DLC is supported by the game service
            </summary>
            <param name="dlcId">DLC id as the same value in DlcData.Id</param>
            <throws>ArgumentException if the GUID was not previously registered in service</throws>
            <returns>true if DLC is supported by the game service</returns>
        </member>
        <member name="M:Keen.VRage.Core.Services.IDlcService.IsDlcInstalled(System.Guid)">
            <summary>
                Checks if given DLC is installed
            </summary>
            <param name="dlcId">DLC id as the same value in DlcData.Id</param>
            <throws>ArgumentException if the GUID was not previously registered in service</throws>
            <returns>true if DLC is currently installed</returns>
        </member>
        <member name="T:Keen.VRage.Core.Services.IGameService">
             <summary>
                 Interface representing basic access to a game service (Steam, EOS, Mod.io, Xbox Live, etc.)
            
                 Any application and DLCs mapping should be done in the game service implementation instantiation.
                 <seealso cref="T:Keen.VRage.Core.Services.IDlcService" />
                 <seealso cref="T:Keen.VRage.Core.Services.IAchievementsService" />
                 <seealso cref="T:Keen.VRage.Core.Services.ISocialInteractionService" />
                 <seealso cref="T:Keen.VRage.Core.Services.IAchievementsService" />
                 <seealso cref="T:Keen.VRage.Core.Services.IOverlayService" />
             </summary>
        </member>
        <member name="P:Keen.VRage.Core.Services.IGameService.IsActive">
            <summary>
                Whether the game service is currently active
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Services.IGameService.IsOnline">
            <summary>
                Is the game service currently online and the user connected
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Services.IGameService.OwnsGame">
            <summary>
                Whether the user owns the game in this game service
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Services.IGameService.IsConsoleCompatible">
            <summary>
            If the specified service is console compatible
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Services.IGameService.User">
            <summary>
                The current logged in user
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Services.IGameService.LegacySpaceEngineersUserId">
            <summary>
                The legacy user id used on Space Engineers
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Services.IGameService.ServiceName">
            <summary>
                Returns the name of the service (Steam, EOS, Mod.io, Xbox Live, etc.)
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Services.IGameService.IsAppInstalled(System.Guid)">
            <summary>
                Checks if the specified application is currently installed in user machine.
                appId parameter is service type dependent
            </summary>
            <param name="appId">id of the application</param>
            <throws>ArgumentException if the GUID was not previously registered in service</throws>
            <returns>true if the application is currently installed, false otherwise</returns>
        </member>
        <member name="M:Keen.VRage.Core.Services.IGameService.IsProductOwned(System.Guid,System.Nullable{System.DateTime}@)">
            <summary>
                Checks it the user owns the specified product
            </summary>
            <throws>ArgumentException if the GUID was not previously registered in service</throws>
            <param name="productId">id of the product</param>
            <param name="purchaseTime">output datetime when the purchase of the product happened</param>
            <returns>true if the user owns the specific product</returns>
        </member>
        <member name="M:Keen.VRage.Core.Services.IGameService.RequestApplicationTicket(System.String)">
            <summary>
            Requests an Application Ticket from the game service.
            </summary>
            <param name="url">URL from the requester service</param>
            <returns>A application ticket to the requester service</returns>
        </member>
        <member name="T:Keen.VRage.Core.Services.IInviteService">
            <summary>
            A service that provides access to the invite system.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Services.IInviteService.OpenInviteOverlay">
            <summary>
            Opens the platform Invite Overlay
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Services.ILobbyService">
            <summary>
            A service that provides access to the lobby system.
            </summary>
        </member>
        <member name="E:Keen.VRage.Core.Services.ILobbyService.OnLobbyMemberJoined">
            <summary>
            Event triggered when a user joins the lobby we are in
            <remarks>Called on NetworkJob thread</remarks>
            </summary>
        </member>
        <member name="E:Keen.VRage.Core.Services.ILobbyService.OnLobbyMemberLeave">
            <summary>
            Event triggered when a user leaves the lobby we are in
            <remarks>Called on NetworkJob thread</remarks>
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Services.ILobbyService.CreateLobby(Keen.VRage.Core.Services.Data.LobbyType,System.UInt32,System.Collections.Immutable.ImmutableDictionary{System.String,System.String})">
            <summary>
            Creates a new lobby with the current user
            <remarks>The created lobby should be destroyed with <see cref="M:Keen.VRage.Core.Services.ILobbyService.DestroyLobby(Keen.VRage.Core.Services.Data.Lobby)"/> after use.</remarks>
            </summary>
            <param name="type">Type of the lobby to create</param>
            <param name="maxPlayers">Maximum players that can join in</param>
            <param name="parameters">Lobby parameter tags</param>
            <returns>A lobby handle if success, error in status code otherwise</returns>
        </member>
        <member name="M:Keen.VRage.Core.Services.ILobbyService.RefreshLobbyList">
            <summary>
            Refreshes the lobby list so it can be read by <see cref="M:Keen.VRage.Core.Services.ILobbyService.GetLobbies"/> 
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Services.ILobbyService.CurrentLobby">
            <summary>
            Returns the current lobby user is in.
            </summary>
            <returns>The current lobby user is in or null if it isn't in any</returns>
        </member>
        <member name="M:Keen.VRage.Core.Services.ILobbyService.GetLobbies">
            <summary>
            Returns a list of lobbies that are currently available and cached by the service
            <remarks>Call <see cref="M:Keen.VRage.Core.Services.ILobbyService.RefreshLobbyList"/> first to have an up to date list.</remarks>
            </summary>
            <returns>List of lobbies</returns>
        </member>
        <member name="M:Keen.VRage.Core.Services.ILobbyService.GetLobbyInformation(Keen.VRage.Core.Services.Data.Lobby)">
            <summary>
            Returns the lobby information for a given lobby handle
            </summary>
            <param name="lobby">Lobby to fetch information from</param>
            <returns>Information about the lobby</returns>
        </member>
        <member name="M:Keen.VRage.Core.Services.ILobbyService.JoinLobby(Keen.VRage.Core.Services.Data.Lobby)">
            <summary>
            Joins the specified lobby
            <remarks>To leave the lobby use the <see cref="M:Keen.VRage.Core.Services.ILobbyService.LeaveLobby(Keen.VRage.Core.Services.Data.Lobby)"/></remarks>
            </summary>
            <param name="lobby">Lobby to join</param>
            <returns><see cref="F:Keen.VRage.Core.Services.Data.LobbyStatusCode.Success"/> if lobby has been joined.</returns>
        </member>
        <member name="M:Keen.VRage.Core.Services.ILobbyService.DestroyLobby(Keen.VRage.Core.Services.Data.Lobby)">
             <summary>
             Destroys a previously created lobby by <see cref="M:Keen.VRage.Core.Services.ILobbyService.CreateLobby(Keen.VRage.Core.Services.Data.LobbyType,System.UInt32,System.Collections.Immutable.ImmutableDictionary{System.String,System.String})"/>
            
             <remarks>This invalidates the <see cref="T:Keen.VRage.Core.Services.Data.Lobby"/> handle, and any subsequent calls with that
             handle will return <see cref="F:Keen.VRage.Core.Services.Data.LobbyStatusCode.DoesntExist"/></remarks> 
             </summary>
             <param name="lobby">Lobby to destroy</param>
             <returns><see cref="F:Keen.VRage.Core.Services.Data.LobbyStatusCode.Success"/> if lobby has been joined.</returns>
        </member>
        <member name="M:Keen.VRage.Core.Services.ILobbyService.LeaveLobby(Keen.VRage.Core.Services.Data.Lobby)">
            <summary>
            Leaves a joined lobby by <see cref="M:Keen.VRage.Core.Services.ILobbyService.JoinLobby(Keen.VRage.Core.Services.Data.Lobby)"/>
            </summary>
            <param name="lobby">Lobby to leave</param>
            <returns><see cref="F:Keen.VRage.Core.Services.Data.LobbyStatusCode.Success"/> if lobby has been joined.</returns>
        </member>
        <member name="T:Keen.VRage.Core.Services.OverlayNotificationPosition">
            <summary>
                Enum representing which corner of the screen the a <see cref="T:Keen.VRage.Core.Services.IOverlayService"/> notification should appear in.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Services.IOverlayService">
            <summary>
                A interface representing game overlay manipulation services
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Services.IOverlayService.IsOverlayEnabled">
            <summary>
                Whether the game service overlay is enabled
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Services.IOverlayService.IsOverlayBrowserAvailable">
            <summary>
                Whether the game service overlay browser is available
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Services.IOverlayService.OpenOverlayUrl(System.String)">
            <summary>
                Open the browser overlay with the specified URL
            </summary>
            <param name="url">URL To open in browser overlay</param>
        </member>
        <member name="M:Keen.VRage.Core.Services.IOverlayService.OpenInventoryItemInShop(System.Int32)">
            <summary>
                Open the overlay directly in the item description specified by the itemId
            </summary>
            <param name="itemId">Id of the item to show in overlay</param>
        </member>
        <member name="M:Keen.VRage.Core.Services.IOverlayService.OpenOverlayUser(Keen.VRage.Core.Services.Data.GameServiceUser)">
            <summary>
                Open the overlay directly in a user page
            </summary>
            <param name="user">Id of the user to open</param>
        </member>
        <member name="M:Keen.VRage.Core.Services.IOverlayService.SetNotificationPosition(Keen.VRage.Core.Services.OverlayNotificationPosition)">
            <summary>
                Set in which corner the overlay notifications should appear
            </summary>
            <param name="overlayNotificationPosition"></param>
        </member>
        <member name="T:Keen.VRage.Core.Services.IPeerToPeerService">
            <summary>
            A service that provides access to the P2P system.
            </summary>
        </member>
        <member name="E:Keen.VRage.Core.Services.IPeerToPeerService.ConnectionFailed">
            <summary>
            Event triggered when a connection attempt has failed.
            <remarks>Called on NetworkJob thread</remarks>
            </summary>
        </member>
        <member name="E:Keen.VRage.Core.Services.IPeerToPeerService.ConnectionAcceptFailed">
            <summary>
            Event triggered when a connection acceptance attempt has failed.
            <remarks>Called on NetworkJob thread</remarks>
            </summary>
        </member>
        <member name="E:Keen.VRage.Core.Services.IPeerToPeerService.ConnectionAccepted">
            <summary>
            Event triggered when a connection has been successfully accepted
            <remarks>Called on NetworkJob thread</remarks>
            </summary>
        </member>
        <member name="E:Keen.VRage.Core.Services.IPeerToPeerService.ConnectionClosed">
            <summary>
            Event triggered when a connection was closed
            <remarks>Called on NetworkJob thread</remarks>
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Services.IPeerToPeerService.CloseConnection(Keen.VRage.Core.Services.Data.GameServiceUser)">
             <summary>
             Closes a connection to a remote user.
            
             <remarks>Does nothing if we are not connected to that user or it does not exists.</remarks>
             </summary>
             <param name="user">Remote user that we have a connection</param>
        </member>
        <member name="M:Keen.VRage.Core.Services.IPeerToPeerService.AcceptConnection(Keen.VRage.Core.Services.Data.GameServiceUser)">
            <summary>
            Attempts to accept a connection with the specified user.
            </summary>
            <param name="user">Remote user we want to accept the connection</param>
            <returns>false if the connection, user does no exists or if it fails to accept. True otherwise</returns>
        </member>
        <member name="M:Keen.VRage.Core.Services.IPeerToPeerService.ReadPacket(System.Byte,System.Byte[],System.UInt32@,Keen.VRage.Core.Services.Data.GameServiceUser@)">
            <summary>
            Reads a packet from the specified channel, if any.
            <remarks>If buffer length is less than next packet size, it won't be read and this will return false<br/>
            Check <see cref="M:Keen.VRage.Core.Services.IPeerToPeerService.IsPacketAvailable(System.Byte,System.UInt32@)"/> to see how many bytes the next packet has.
            </remarks>
            </summary>
            <param name="channel">Channel we want to read a packet from</param>
            <param name="buffer">Buffer to write packet data</param>
            <param name="dataSize">Number of bytes written to buffer</param>
            <param name="remoteUser">Remote user that sent the packet</param>
            <returns>true if a packet has been successfully read</returns>
        </member>
        <member name="M:Keen.VRage.Core.Services.IPeerToPeerService.SendPacket(Keen.VRage.Core.Services.Data.GameServiceUser,System.Byte[],System.Byte,Keen.VRage.Core.Services.Data.PacketReliability)">
            <summary>
            Sends a packet for a specific user in a specific channel
            <remarks>If the specified user is not in the current lobby, it will return false.</remarks>
            </summary>
            <param name="user">Target user to send a message</param>
            <param name="data">Data to send</param>
            <param name="channel">Channel to send (defaults to 0)</param>
            <param name="reliability">Reliability of the packet (defaults to Reliable Ordered)</param>
            <returns>true if the packet has been queued for send</returns>
        </member>
        <member name="M:Keen.VRage.Core.Services.IPeerToPeerService.BroadcastPacket(System.Byte[],System.Byte,Keen.VRage.Core.Services.Data.PacketReliability)">
            <summary>
            Sends a packet to everyone in the same lobby.
            <remarks>Returns false if the user is not currently in any lobby.
            It will run <see cref="M:Keen.VRage.Core.Services.IPeerToPeerService.SendPacket(Keen.VRage.Core.Services.Data.GameServiceUser,System.Byte[],System.Byte,Keen.VRage.Core.Services.Data.PacketReliability)"/> for every member of the lobby,
            but will only return true if all of them has been successfully queued.</remarks>
            </summary>
            <param name="data">Data to send</param>
            <param name="channel">Channel to send (defaults to 0)</param>
            <param name="reliability">Reliability of the packet (defaults to Reliable Ordered)</param>
            <returns>true if the packet has been queued for send to all lobby users</returns>
        </member>
        <member name="M:Keen.VRage.Core.Services.IPeerToPeerService.IsPacketAvailable(System.Byte,System.UInt32@)">
            <summary>
            Verifies if there is a packet in the specified channel buffer and it's size
            </summary>
            <param name="channel">Channel to check packets</param>
            <param name="msgSize">Size of the next packet in buffer</param>
            <returns></returns>
        </member>
        <member name="M:Keen.VRage.Core.Services.IPeerToPeerService.MaxPacketSize">
            <summary>
            Maximum allowed packet size in this P2P Interface
            </summary>
            <returns>Maximum number of bytes this interface can send</returns>
        </member>
        <member name="T:Keen.VRage.Core.Services.IServiceAuthenticationService">
            <summary>
            Represents an interface to authenticate this service with another <see cref="T:Keen.VRage.Core.Services.IGameService"/> service.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Services.IServiceAuthenticationService.AuthenticateWithService(Keen.VRage.Core.Services.IGameService)">
             <summary>
             Authenticates this service using the following <see cref="T:Keen.VRage.Core.Services.IGameService"/> ticket.
            
             <para>Used for example for authentication of Mod.IO Service (this) with Steam/Xbox Gaming/PSN Service (<see cref="T:Keen.VRage.Core.Services.IGameService"/>)</para>
             </summary>
             <param name="service">Instance of the service to get the authentication ticket from</param>
             <throws><see cref="T:System.ArgumentException"/> if the <see cref="T:Keen.VRage.Core.Services.IGameService"/> is not supported to authenticate this service</throws>
             <returns>true if the authentication has been done</returns>
        </member>
        <member name="T:Keen.VRage.Core.Services.ISocialInteractionService">
            <summary>
                A interface representing a service for interacting with Social Related Information and Interaction.
                Related to <see cref="T:Keen.VRage.Core.Services.IGameService" />
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Services.ISocialInteractionService.GetDisplayName(Keen.VRage.Core.Services.Data.GameServiceUser)">
            <summary>
                Gets the display name of the user based on the user id
            </summary>
            <param name="user">User to get the display name </param>
            <throws>ArgumentException if the GUID is not found</throws>
            <returns>Display name of the user, if there is any</returns>
        </member>
        <member name="M:Keen.VRage.Core.Services.ISocialInteractionService.IsFriend(Keen.VRage.Core.Services.Data.GameServiceUser)">
            <summary>
                Checks if specified user is a friend of the current user
            </summary>
            <param name="user">Id of the user in Game Service</param>
            <returns>true if the specified user is in current user logged user friend list</returns>
        </member>
        <member name="M:Keen.VRage.Core.Services.ISocialInteractionService.GetGroupName(Keen.VRage.Core.Services.Data.GameServiceGroup)">
            <summary>
                Gets the name of the group specified by id
            </summary>
            <throws>ArgumentException if the GUID is not found</throws>
            <param name="groupId">Id of the group in Game Service</param>
            <returns>Name of the group, if there is any</returns>
        </member>
        <member name="M:Keen.VRage.Core.Services.ISocialInteractionService.IsUserInGroup(Keen.VRage.Core.Services.Data.GameServiceGroup)">
            <summary>
                Checks if the current user is in the specified group
            </summary>
            <param name="groupId">Id of the group in Game Service</param>
            <returns>true if the current user is in the specified group</returns>
        </member>
        <member name="M:Keen.VRage.Core.Services.ISocialInteractionService.GetFriends">
            <summary>
                Gets the list of friends of the current user
            </summary>
            <returns>All users in current user friend list</returns>
        </member>
        <member name="T:Keen.VRage.Core.Services.IUGCArbiterService">
            <summary>
            An interface representing access to many User Generated Content Service (Steam, Mod.IO, etc.)
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Services.IUGCArbiterService.Services">
            <summary>
            List of available UGC Services
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Services.IUGCArbiterService.TryGetServiceByName(Keen.VRage.Library.Utils.StringId)">
            <summary>
            Returns a specific UGC Service by name
            </summary>
            <param name="name">name of the service returned in <see cref="P:Keen.VRage.Core.Services.IUGCArbiterService.Services"/> property or <see cref="T:Keen.VRage.Core.Services.Data.GameServiceNames"/></param>
            <see cref="T:Keen.VRage.Core.Services.Data.GameServiceNames"/>
            <returns>A UGC Service instance, if available</returns>
        </member>
        <member name="M:Keen.VRage.Core.Services.IUGCArbiterService.RefreshUGCContent">
            <summary>
            Refreshes all subscribed UGC contents in all available services and register Containers for each one of them.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Services.IUGCArbiterServiceInternal">
            <summary>
            Internal UGC Arbiter Service interface for adding UGC services
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Services.IUGCArbiterServiceInternal.AddService(Keen.VRage.Core.Services.IUGCService)">
            <summary>
            Adds a UGC Service to service list
            </summary>
            <param name="service"></param>
        </member>
        <member name="T:Keen.VRage.Core.Services.IUGCService">
            <summary>
            An interface representing access to a User Generated Content Service (Steam, Mod.IO, etc.)
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Services.IUGCService.ServiceName">
            <summary>
            Returns the name of the service (Steam, EOS, Mod.io, Xbox Live, etc.)
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Services.IUGCService.ServiceMetadataFileName">
            <summary>
            Returns the filename for the UGC Service related metadata.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Services.IUGCService.UploadUGCDataAsync``1(Keen.VRage.Library.Filesystem.StorageManagers.Container{``0},System.String,Keen.VRage.Core.Services.Data.UGCDescription)">
            <summary>
            Uploads UGC data packed on the stream
            </summary>
            <param name="container">Underlying container</param>
            <param name="typeName">Name of the container type</param>
            <param name="description">Description for the UGC Data</param>
        </member>
        <member name="M:Keen.VRage.Core.Services.IUGCService.GetUGCDataAsync(Keen.VRage.Core.Services.Data.UGCHandle,Keen.VRage.Library.Filesystem.IFileSystem)">
            <summary>
            Gets all files for the specified UGC Content and saves them to the specified filesystem.
            <remarks>Overwrites all existing files with the upstream version. Does not erase files that does not exists in upstream.</remarks>
            </summary>
            <param name="handle">UGC Content Handle</param>
            <param name="cacheFs">FileSystem instance to fill with UGC Data</param>
        </member>
        <member name="M:Keen.VRage.Core.Services.IUGCService.RefreshUGCContent">
            <summary>
            Refreshes all subscribed UGC contents in this service and register Containers for each one of them.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Services.IUGCService.GatherPreviews``1(System.Collections.Generic.IEnumerable{Keen.VRage.Library.Filesystem.StorageManagers.Container{``0}})">
            <summary>
            Fetches the preview images for the specified containers
            </summary>
            <param name="containers">List of the containers</param>
            <returns>Async </returns>
        </member>
        <member name="M:Keen.VRage.Core.Services.IUGCService.GetContainerInfo``1(Keen.VRage.Library.Filesystem.StorageManagers.Container{``0})">
            <summary>
            Retrieves the UGC Container Info for the specified container.
            </summary>
            <param name="container"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Keen.VRage.Core.Services.IUGCService.UnSubscribeUGCContent``1(Keen.VRage.Library.Filesystem.StorageManagers.Container{``0})">
            <summary>
            Unsubscribes from the specified UGC Content on this service
            <para>No-op for containers that are not uploaded</para> 
            </summary>
            <param name="container"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Keen.VRage.Core.Services.IUGCService.DeleteUGCDataAsync``1(Keen.VRage.Library.Filesystem.StorageManagers.Container{``0})">
            <summary>
            Deletes the UGC Data from the service.
            <para>User should check if is owner of the content before calling this method</para>
            </summary>
            <param name="container"></param>
            <exception cref="T:System.InvalidOperationException">Throws InvalidOperationException if the user is not owner of the content</exception>
            <returns></returns>
        </member>
        <member name="T:Keen.VRage.Core.Services.UGCFileSystem">
            <summary>
            A UGC Data Filesystem interface for UGC Services
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Services.UGCFileSystem.IsReadOnly">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.UGCFileSystem.IsLocallyCached">
            <summary>
            True if the UGC is locally cached (a.k.a. already downloaded)
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Services.UGCFileSystem.#ctor(Keen.VRage.Core.Services.IUGCService,Keen.VRage.Core.Services.Data.UGCHandle)">
            <summary>
            Creates a new proxy-filesystem for the specified UGC Content
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Services.UGCFileSystem.Dispose">
            <summary>
            Disposes this filesystem by removing it's instance from the internal cache.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Services.UGCFileSystem.GetFileSystemAsync(Keen.VRage.Core.Services.IUGCService,Keen.VRage.Core.Services.Data.UGCHandle)">
            <summary>
            Creates or Gets a UGC FileSystem instance for the specified UGC Content
            </summary>
            <param name="service">Service that has the handle</param>
            <param name="handle">Handle to the content</param>
        </member>
        <member name="M:Keen.VRage.Core.Services.UGCFileSystem.FileExists(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.UGCFileSystem.DirectoryExists(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.UGCFileSystem.EnumerateFiles(System.String,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.UGCFileSystem.EnumerateDirectories(System.String,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.UGCFileSystem.GetInfo(System.String,Keen.VRage.Library.Filesystem.PathType)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.UGCFileSystem.OpenRead(System.String,System.IO.FileShare,Keen.VRage.Library.Filesystem.AdvancedFileOptions)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.UGCFileSystem.TryOpenReadSafeHandle(System.String,Microsoft.Win32.SafeHandles.SafeFileHandle@,System.IO.FileShare,Keen.VRage.Library.Filesystem.AdvancedFileOptions)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.UGCFileSystem.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,Keen.VRage.Library.Filesystem.AdvancedFileOptions)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.UGCFileSystem.CreateDirectory(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.UGCFileSystem.CopyFile(System.String,System.String,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.UGCFileSystem.MoveFile(System.String,System.String,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.UGCFileSystem.MoveDirectory(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.UGCFileSystem.DeleteFile(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.UGCFileSystem.DeleteDirectory(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.UGCFileSystem.SetAttributes(System.String,Keen.VRage.Library.Filesystem.PathType,Keen.VRage.Library.Filesystem.FileSystemEntryFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.UGCFileSystem.CreateContainerMetadata``1(Keen.VRage.Library.Filesystem.StorageManagers.ContainerId,``0)">
            <summary>
            Creates the internal metadata for using this filesystem in a container
            </summary>
            <param name="containerId">Identifier of the container</param>
            <param name="metadata">Container Metadata</param>
        </member>
        <member name="M:Keen.VRage.Core.Services.UGCFileSystem.RefreshUGCCache">
            <summary>
            Refreshes the local cache of the UGC FileSystem. Needs to be called at least once to be able to use UGC Content
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Services.UGCFileSystem.SaveHandleToContainer``1(Keen.VRage.Library.Filesystem.StorageManagers.Container{``0},Keen.VRage.Core.Services.Data.UGCHandle)">
            <summary>
            Stores the specified UGC Handle inside the container so it can be identified later
            </summary>
            <param name="container"></param>
            <param name="handle"></param>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Keen.VRage.Core.Services.UGCFileSystem.InitializeUgcCache">
            <summary>
            Registers the UGC Cache container type in the Temp Storage Manager.
            Called by <see cref="T:Keen.VRage.Core.Services.Extensions.UGCServiceExtensions"/>
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Services.UGCFsCacheMeta.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.UGCFsCacheMeta.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.UGCFsCacheMeta.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Services.UGCFsCacheMeta@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.UGCFsCacheMeta.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.UGCFsCacheMeta.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Services.UGCFsCacheMeta@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.UGCFsCacheMeta.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.UGCFsCacheMeta.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Services.UGCFsCacheMeta@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.UGCFsCacheMeta.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.UGCFsCacheMeta.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.UGCFsCacheMeta.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.UGCFsCacheMeta.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.UGCFsCacheMeta.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Services.UGCFsCacheMeta@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.UGCFsCacheMeta.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.UGCFsCacheMeta.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Services.UGCFsCacheMeta@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.UGCFsCacheMeta.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.UGCFsCacheMeta.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.UGCFsCacheMeta.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Services.UGCFsCacheMeta@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.UGCFsCacheMeta.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Services.UGCFsCacheMeta.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.UGCFsCacheMeta.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.UGCFsCacheMeta.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Services.UGCFsCacheMeta.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Services#UGCFsCacheMeta}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Services.UGCFsCacheMeta.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Services.UGCFsCacheMeta.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Services.UGCFsCacheMeta.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Services.UGCFsCacheMeta.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="T:Keen.VRage.Core.StreamingResources.IResourceLoader`1">
            <summary>
            Service used to load a resource type.
            </summary>
            <typeparam name="TKey">Type of the resource key.</typeparam>
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.IResourceLoader`1.GetResourceDescription(`0)">
            <summary>
            Read the description for a streamed resource.
            </summary>
            <remarks>This method is only called when the resource is first introduced into the system. First time it is assigned a priority.</remarks>
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.IResourceLoader`1.RequestResourceState(System.ReadOnlySpan{System.ValueTuple{`0,Keen.VRage.Core.StreamingResources.ResourceState}})">
            <summary>
            Begin loading <paramref name="stateChanges"/>. The resources should complete over time and be reported by
            <see cref="M:Keen.VRage.Core.StreamingResources.IResourceLoader`1.GetLatestResourceStates(Keen.VRage.Library.Memory.BufferReference{System.ValueTuple{`0,Keen.VRage.Core.StreamingResources.ResourceState}})"/> once loaded.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.IResourceLoader`1.GetLatestResourceStates(Keen.VRage.Library.Memory.BufferReference{System.ValueTuple{`0,Keen.VRage.Core.StreamingResources.ResourceState}})">
            <summary>
            Extract the current list of pending resources that finished loading.
            </summary>
            <remarks>This should clean the internal buffer of completed loads.</remarks>
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.IResourceLoader`1.GetResourceTask(`0)">
            <summary>
            Get a task that's completed once the requested <paramref name="resource"/> finishes the current active or requested state transition. 
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.StreamingResources.ISimpleResourceLoader`1">
            <summary>
            Description of the loader for simple streamed resources.
            </summary> 
            <typeparam name="TKey">Type of the resource key.</typeparam>
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.ISimpleResourceLoader`1.GetResourceDescription(`0)">
            <summary>
            Read the description for a streamed resource.
            </summary>
            <remarks>This method is only called when the resource is first introduced into the system. First time it is assigned a priority.</remarks>
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.ISimpleResourceLoader`1.LoadResourceAsync(`0)">
            <summary>
            Load a resource.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.ISimpleResourceLoader`1.UnloadResourceAsync(`0)">
            <summary>
            Unload a loaded resource.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.StreamingResources.IStreamingResourceDemandCollector">
            <summary>
            Collector of subsystem specific resource demands.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.StreamingResources.ITieredResourceLoader`1">
            <summary>
            Interface describing a loader for resources that have multiple tiers at different quality settings.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.ITieredResourceLoader`1.GetResourceDescription(`0)">
            <summary>
            Read the description for a tiered streamed resource.
            </summary>
            <remarks>This method may be called up <c>n</c> times per resource, where <c>n</c> is the number of resource tiers.</remarks>
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.ITieredResourceLoader`1.CalculateTierPriority(`0,System.Single,System.Int32,System.Int32)">
            <summary>
            Calculate the priority for a particular tier of a tired resource given the base priority.
            </summary>
            <remarks>
            <para>However this method may be implemented it must assign strictly higher priorities to lower resource tiers.</para>
            <para>The default implementation just multiplies the priority by <c>(1 + tierIndex)</c>.</para>
            </remarks>
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.ITieredResourceLoader`1.RequestResourceTiers(System.ReadOnlySpan{System.ValueTuple{`0,System.Int32}})">
            <summary>
            Request that the provided resources be up/downgraded to the requested tiers.
            </summary>
            <remarks>
            <para>Once a tier is requested the resource manager will assume all memory required for that tier and previous is taken up. The manager
            will make new requests to adjust the tier in the mean time but it will only adjust the budget once a resource tier is confirmed.</para>
            <para>When a tier is confirmed via <see cref="M:Keen.VRage.Core.StreamingResources.ITieredResourceLoader`1.GetLatestResourceTiers(Keen.VRage.Library.Memory.BufferReference{System.ValueTuple{`0,System.Int32}})"/> the manager will assume that the only memory taken up by the resource
            is the memory for the current loaded tier plus any memory required to transition it from the last reported tier to the last <em>requested</em>
            tier.</para>
            <para>For example if requests come in for tier 1, 0, 5, 2. Then the loader confirms tier 0 was loaded. We assume that now the resource is
            loading up to tier <em>2</em>; the request for tier 5 is effectively ignored.</para>
            <para>A request for <c>tier count</c> means the resource should be completely unloaded.</para>
            </remarks>
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.ITieredResourceLoader`1.GetLatestResourceTiers(Keen.VRage.Library.Memory.BufferReference{System.ValueTuple{`0,System.Int32}})">
            <summary>
            Extract the current list of completed resource tier changes.
            </summary>
            <remarks>
            <para>The read values should represent the current valid state of resources for which a tier change was previously requested. Even if the net
            tier since the last valid state is the same (e.g.: the max requested tier went up and the back down to the same value) the current state
            should still be reported so that the resource manager can be aware of which transitions were completed.</para>
            <para>
            For each resource the manager assumes that the only transition that can be in place is the transition from the last requested
            resource tier to the one being reported.
            </para>
            </remarks>
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.ITieredResourceLoader`1.GetResourceTask(`0)">
            <summary>
            Get a task that's completed once the requested <paramref name="resource"/> finishes the current active or requested state transition. 
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.StreamingResources.MemoryPool">
            <summary>
            Predefined memory pool identifiers.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.StreamingResources.MemoryPool.MainMemory">
            <summary>
            Memory Pool identifier for the system's main memory. Commonly referred to simply as RAM.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.StreamingResources.MemoryPool.GraphicsMemory">
            <summary>
            Memory Pool identifier for the graphics card memory.  Commonly referred to simply as VRAM.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.StreamingResources.MemoryPool.MemoryPools">
            <summary>
            Known memory pools.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.StreamingResources.MemoryPoolId">
            <summary>
            Identifier for a memory pool.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.StreamingResources.MemoryPoolSize">
            <summary>
            Indicates a load or available size of the memory pools.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.MemoryPoolSize.IsAnyGreaterThan(Keen.VRage.Core.StreamingResources.MemoryPoolSize)">
            <summary>
            Whether the size of any memory pool is greater than the same pool in <paramref name="other"/>.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.MemoryPoolSize.IsAllGreaterThanOrEqual(Keen.VRage.Core.StreamingResources.MemoryPoolSize)">
            <summary>
            Whether the size of any memory pool is greater than the same pool in <paramref name="other"/>.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.MemoryPoolSize.ReadInterlocked">
            <summary>
            Read this <see cref="T:Keen.VRage.Core.StreamingResources.MemoryPoolSize"/> with atomic operations.
            </summary>
            <remarks>The entire read is not atomic, but this at least ensures some cache consistency when reading the values, such as telling the compiler
            it cannot assume they are not modified externally.</remarks>
            <returns></returns>
        </member>
        <member name="T:Keen.VRage.Core.StreamingResources.MemoryPoolSize.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.MemoryPoolSize.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.MemoryPoolSize.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.StreamingResources.MemoryPoolSize@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.MemoryPoolSize.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.MemoryPoolSize.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.StreamingResources.MemoryPoolSize@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.MemoryPoolSize.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.MemoryPoolSize.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.StreamingResources.MemoryPoolSize@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.MemoryPoolSize.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.MemoryPoolSize.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.MemoryPoolSize.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.MemoryPoolSize.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.MemoryPoolSize.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.StreamingResources.MemoryPoolSize@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.MemoryPoolSize.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.MemoryPoolSize.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.StreamingResources.MemoryPoolSize@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.MemoryPoolSize.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.MemoryPoolSize.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.MemoryPoolSize.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.StreamingResources.MemoryPoolSize@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.MemoryPoolSize.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.StreamingResources.MemoryPoolSize.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.MemoryPoolSize.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.MemoryPoolSize.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.MemoryPoolSize.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#StreamingResources#MemoryPoolSize}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.MemoryPoolSize.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.StreamingResources.MemoryPoolSize.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.StreamingResources.MemoryPoolSize.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.StreamingResources.MemoryPoolSize.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.MemoryPoolSize.TypeInfoHolder.MainMemoryAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.MemoryPoolSize.TypeInfoHolder.MainMemoryAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.MemoryPoolSize.TypeInfoHolder.MainMemoryAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.MemoryPoolSize.TypeInfoHolder.MainMemoryAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.MemoryPoolSize.TypeInfoHolder.MainMemoryAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.MemoryPoolSize.TypeInfoHolder.MainMemoryAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.MemoryPoolSize.TypeInfoHolder.MainMemoryAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.MemoryPoolSize.TypeInfoHolder.MainMemoryAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.MemoryPoolSize.TypeInfoHolder.MainMemoryAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.MemoryPoolSize.TypeInfoHolder.MainMemoryAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.MemoryPoolSize.TypeInfoHolder.MainMemoryAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.MemoryPoolSize.TypeInfoHolder.MainMemoryAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.MemoryPoolSize.TypeInfoHolder.MainMemoryAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.MemoryPoolSize.TypeInfoHolder.MainMemoryAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.MemoryPoolSize.TypeInfoHolder.MainMemoryAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int64}#Set(System.Object,System.Int64@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.MemoryPoolSize.TypeInfoHolder.MainMemoryAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int64}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.MemoryPoolSize.TypeInfoHolder.MainMemoryAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int64}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.MemoryPoolSize.TypeInfoHolder.MainMemoryAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int64}#Set(System.Byte@,System.Int64@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.MemoryPoolSize.TypeInfoHolder.MainMemoryAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.MemoryPoolSize.TypeInfoHolder.MainMemoryAccessor.Set(Keen.VRage.Core.StreamingResources.MemoryPoolSize@,System.Int64@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.MemoryPoolSize.TypeInfoHolder.MainMemoryAccessor.Get(Keen.VRage.Core.StreamingResources.MemoryPoolSize@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.MemoryPoolSize.TypeInfoHolder.GraphicsMemoryAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.MemoryPoolSize.TypeInfoHolder.GraphicsMemoryAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.MemoryPoolSize.TypeInfoHolder.GraphicsMemoryAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.MemoryPoolSize.TypeInfoHolder.GraphicsMemoryAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.MemoryPoolSize.TypeInfoHolder.GraphicsMemoryAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.MemoryPoolSize.TypeInfoHolder.GraphicsMemoryAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.MemoryPoolSize.TypeInfoHolder.GraphicsMemoryAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.MemoryPoolSize.TypeInfoHolder.GraphicsMemoryAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.MemoryPoolSize.TypeInfoHolder.GraphicsMemoryAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.MemoryPoolSize.TypeInfoHolder.GraphicsMemoryAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.MemoryPoolSize.TypeInfoHolder.GraphicsMemoryAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.MemoryPoolSize.TypeInfoHolder.GraphicsMemoryAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.MemoryPoolSize.TypeInfoHolder.GraphicsMemoryAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.MemoryPoolSize.TypeInfoHolder.GraphicsMemoryAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.MemoryPoolSize.TypeInfoHolder.GraphicsMemoryAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int64}#Set(System.Object,System.Int64@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.MemoryPoolSize.TypeInfoHolder.GraphicsMemoryAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int64}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.MemoryPoolSize.TypeInfoHolder.GraphicsMemoryAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int64}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.MemoryPoolSize.TypeInfoHolder.GraphicsMemoryAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int64}#Set(System.Byte@,System.Int64@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.MemoryPoolSize.TypeInfoHolder.GraphicsMemoryAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.MemoryPoolSize.TypeInfoHolder.GraphicsMemoryAccessor.Set(Keen.VRage.Core.StreamingResources.MemoryPoolSize@,System.Int64@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.MemoryPoolSize.TypeInfoHolder.GraphicsMemoryAccessor.Get(Keen.VRage.Core.StreamingResources.MemoryPoolSize@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.StreamingResources.ResourceDescription">
            <summary>
            Resource description.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.StreamingResources.ResourceDescription.Name">
            <summary>
            Name of the resource.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.StreamingResources.ResourceDescription.Memory">
            <summary>
            Memory consumed by the resource. 
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.StreamingResources.ResourceEntry.IsPinned">
            <summary> Whether this entry is pinned. </summary>
            <remarks> Pinned entries stay on top of the load queue via having +∞ effective priority. That value is forbidden for regular entries.</remarks>
        </member>
        <member name="F:Keen.VRage.Core.StreamingResources.ResourceEntry.WasInvalidated">
            <summary> Whether this entry is marked for invalidation. </summary>
            <remarks> Invalidated entries are unloaded immediately and are removed once the unload is confirmed.</remarks>
        </member>
        <member name="T:Keen.VRage.Core.StreamingResources.ResourceEntryList">
            <summary>
            Special free list for resource entries.
            </summary>
            <remarks>
            <para>This free list is specially coded such that the subsystem update loop does not need to lock.</para>
            <para>Allocations take a lock to modify the free list or increment the used length. The data is never resized by <see cref="M:Keen.VRage.Core.StreamingResources.ResourceEntryList.Allocate(System.Object)"/>,
            we instead resize in <see cref="M:Keen.VRage.Core.StreamingResources.ResourceEntryList.Reconcile(System.Object)"/>.</para>
            </remarks>
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.ResourceEntryList.UsedLength">
            <summary>
            Length of the internal buffer occupied by a mix of free and empty nodes, data past this length is all free.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.ResourceEntryList.Count">
            <summary>
            Total number of allocated positions.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.ResourceEntryList.FreeCount">
            <summary>
            Number of free positions in the used section of the free list.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.ResourceEntryList.Capacity">
            <summary>
            Maximum capacity of the current allocated list.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.ResourceEntryList.#ctor">
            <summary>
            Create a new free list.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.ResourceEntryList.Item(Keen.VRage.Core.StreamingResources.ResourceIndex)">
            <summary>
            Access an element in the free list by index.
            </summary>
            <param name="index">The accessed index.</param>
            <remarks>The returned reference is only valid as long as no new allocations are performed on the list.</remarks>
            <returns>A reference to the list element at the given index.</returns>
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.ResourceEntryList.Allocate(System.Object)">
            <summary>
            Allocate an index to the resource.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.ResourceEntryList.Free(Keen.VRage.Core.StreamingResources.ResourceIndex,System.Object)">
            <summary>
            Free a position in the list.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.ResourceEntryList.Clear">
            <summary>
            Free all elements in the free list.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.ResourceEntryList.AsSpan">
            <summary>
            Get a reference to the backing storage of this free list.
            </summary>
            <remarks>
            <para>
            Allocating new elements may reallocate the backing storage of the free list. As a result the returned span should
            only be considered valid while no allocations are performed.
            </para>
            <para>The range may contain unallocated elements.</para>
            </remarks>
            <returns>A span that provides access to the current allocated range of the free list.</returns>
        </member>
        <member name="T:Keen.VRage.Core.StreamingResources.ResourceIndex">
            <summary>
            Unique identifier for a resource registered with the <see cref="T:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent"/>.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.ResourceIndex.DebugInfo">
            <summary>
            Debug only member that can be used to inspect the resource state.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.StreamingResources.ResourceIndex.PriorityComparer">
            <summary>
            Comparer that can be used to sort resource indices by priority.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.StreamingResources.ResourceMemory">
            <summary>
            Memory a resource takes on a single memory pool.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.StreamingResources.ResourceMemory.Entry">
            <summary>
            Memory used on one memory pool.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.StreamingResources.ResourceMemory.Entry.ActiveMemory">
            <summary>
            Memory required by the resource once it is loaded.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.StreamingResources.ResourceMemory.Entry.StagingMemory">
            <summary>
            Additional memory required by the resource while it loads.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.StreamingResources.ResourceState">
            <summary>
            Basic state of a resource. 
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.StreamingResources.ResourceSubsystemAttribute">
            <summary>
            Attribute used to identify resource subsystems.
            </summary>
            <remarks>This attribute should be used to mark implementations of <see cref="T:Keen.VRage.Core.StreamingResources.IStreamingResourceDemandCollector"/>. In case there may be
            multiple demand collector implementations for the same subsystem a static class should be created instead to hold the attribute.</remarks>
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.ResourceSubsystemAttribute.Name">
            <summary>
            Name of the subsystem.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.ResourceSubsystemAttribute.DefaultMemory">
            <summary>
            Default minimum memory for the system (can be zero).
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.ResourceSubsystemAttribute.#ctor(System.String)">
            <summary>
            Register a subsystem with given name.
            </summary>
            <param name="name">The name of the subsystem. This name will be used to identify the subsystem in code, debug menus and the <see cref="T:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration"/>. It may contain spaces.</param>
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.ResourceSubsystemAttribute.#ctor(System.String,System.Int64,System.Int64)">
            <summary>
            Register a subsystem with given name and default memory requirements.
            </summary>
            <param name="name">The name of the subsystem. This name will be used to identify the subsystem in code, debug menus and the <see cref="T:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration"/>. It may contain spaces.</param>
            <param name="minimumMainMemory">Default minimum main memory.</param>
            <param name="minimumGraphicsMemory">Default minimum graphics memory.</param>
        </member>
        <member name="T:Keen.VRage.Core.StreamingResources.TieredResourceSubsystemAttribute">
            <summary>
            Attribute used to identify a <em>tiered</em> resource subsystem.
            </summary>
            <remarks>Usage is the same as <see cref="T:Keen.VRage.Core.StreamingResources.ResourceSubsystemAttribute"/>. Tiered subsystems must be used with a
            <see cref="T:Keen.VRage.Core.StreamingResources.ITieredResourceLoader`1"/> and a <see cref="T:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent.TieredConnection`1"/></remarks>
        </member>
        <member name="T:Keen.VRage.Core.StreamingResources.ResourceSubsystemIndexer">
            <summary>
            Index of all <see cref="T:Keen.VRage.Core.StreamingResources.ResourceSubsystemAttribute"/>s.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.StreamingResources.ResourceSubsystemIndexer.DeclaredSubsystemInfo">
            <summary>
            Information about a resource subsystem declared in code.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.StreamingResources.SimpleResourceLoaderAdapter`1">
            <summary>
            Adapter that allows <see cref="T:Keen.VRage.Core.StreamingResources.ISimpleResourceLoader`1"/> implementations to be used in the <see cref="T:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent"/>.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.StreamingResources.StreamingMemoryStats">
            <summary>
            Memory states for a Resource Subsystem or for the entire Streaming Resource System. 
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory">
            <summary>
            Memory usage for a single memory pool.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory.TypeInfoHolder.BudgetAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory.TypeInfoHolder.BudgetAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory.TypeInfoHolder.BudgetAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory.TypeInfoHolder.BudgetAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory.TypeInfoHolder.BudgetAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory.TypeInfoHolder.BudgetAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory.TypeInfoHolder.BudgetAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory.TypeInfoHolder.BudgetAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory.TypeInfoHolder.BudgetAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory.TypeInfoHolder.BudgetAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory.TypeInfoHolder.BudgetAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory.TypeInfoHolder.BudgetAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory.TypeInfoHolder.BudgetAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory.TypeInfoHolder.BudgetAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory.TypeInfoHolder.BudgetAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Object,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory.TypeInfoHolder.BudgetAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory.TypeInfoHolder.BudgetAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory.TypeInfoHolder.BudgetAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Byte@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory.TypeInfoHolder.BudgetAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory.TypeInfoHolder.BudgetAccessor.Set(Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory.TypeInfoHolder.BudgetAccessor.Get(Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory.TypeInfoHolder.UsedAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory.TypeInfoHolder.UsedAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory.TypeInfoHolder.UsedAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory.TypeInfoHolder.UsedAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory.TypeInfoHolder.UsedAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory.TypeInfoHolder.UsedAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory.TypeInfoHolder.UsedAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory.TypeInfoHolder.UsedAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory.TypeInfoHolder.UsedAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory.TypeInfoHolder.UsedAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory.TypeInfoHolder.UsedAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory.TypeInfoHolder.UsedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory.TypeInfoHolder.UsedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory.TypeInfoHolder.UsedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory.TypeInfoHolder.UsedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Object,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory.TypeInfoHolder.UsedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory.TypeInfoHolder.UsedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory.TypeInfoHolder.UsedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Byte@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory.TypeInfoHolder.UsedAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory.TypeInfoHolder.UsedAccessor.Set(Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory.TypeInfoHolder.UsedAccessor.Get(Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory.TypeInfoHolder.PressureAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory.TypeInfoHolder.PressureAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory.TypeInfoHolder.PressureAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory.TypeInfoHolder.PressureAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory.TypeInfoHolder.PressureAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory.TypeInfoHolder.PressureAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory.TypeInfoHolder.PressureAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory.TypeInfoHolder.PressureAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory.TypeInfoHolder.PressureAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory.TypeInfoHolder.PressureAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory.TypeInfoHolder.PressureAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory.TypeInfoHolder.PressureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory.TypeInfoHolder.PressureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory.TypeInfoHolder.PressureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory.TypeInfoHolder.PressureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Object,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory.TypeInfoHolder.PressureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory.TypeInfoHolder.PressureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory.TypeInfoHolder.PressureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Byte@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory.TypeInfoHolder.PressureAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory.TypeInfoHolder.PressureAccessor.Set(Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory.TypeInfoHolder.PressureAccessor.Get(Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory.TypeInfoHolder.PinnedAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory.TypeInfoHolder.PinnedAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory.TypeInfoHolder.PinnedAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory.TypeInfoHolder.PinnedAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory.TypeInfoHolder.PinnedAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory.TypeInfoHolder.PinnedAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory.TypeInfoHolder.PinnedAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory.TypeInfoHolder.PinnedAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory.TypeInfoHolder.PinnedAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory.TypeInfoHolder.PinnedAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory.TypeInfoHolder.PinnedAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory.TypeInfoHolder.PinnedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory.TypeInfoHolder.PinnedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory.TypeInfoHolder.PinnedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory.TypeInfoHolder.PinnedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Object,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory.TypeInfoHolder.PinnedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory.TypeInfoHolder.PinnedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory.TypeInfoHolder.PinnedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Byte@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory.TypeInfoHolder.PinnedAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory.TypeInfoHolder.PinnedAccessor.Set(Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory.TypeInfoHolder.PinnedAccessor.Get(Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.TypeInfoHolder.MainAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.TypeInfoHolder.MainAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.TypeInfoHolder.MainAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.TypeInfoHolder.MainAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.TypeInfoHolder.MainAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.TypeInfoHolder.MainAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.TypeInfoHolder.MainAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.TypeInfoHolder.MainAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.TypeInfoHolder.MainAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.TypeInfoHolder.MainAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.TypeInfoHolder.MainAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.TypeInfoHolder.MainAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.TypeInfoHolder.MainAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.TypeInfoHolder.MainAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.TypeInfoHolder.MainAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#StreamingResources#StreamingMemoryStats#Memory}#Set(System.Object,Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.TypeInfoHolder.MainAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#StreamingResources#StreamingMemoryStats#Memory}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.TypeInfoHolder.MainAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#StreamingResources#StreamingMemoryStats#Memory}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.TypeInfoHolder.MainAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#StreamingResources#StreamingMemoryStats#Memory}#Set(System.Byte@,Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.TypeInfoHolder.MainAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.TypeInfoHolder.MainAccessor.Set(Keen.VRage.Core.StreamingResources.StreamingMemoryStats@,Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.TypeInfoHolder.MainAccessor.Get(Keen.VRage.Core.StreamingResources.StreamingMemoryStats@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.TypeInfoHolder.GraphicsAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.TypeInfoHolder.GraphicsAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.TypeInfoHolder.GraphicsAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.TypeInfoHolder.GraphicsAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.TypeInfoHolder.GraphicsAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.TypeInfoHolder.GraphicsAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.TypeInfoHolder.GraphicsAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.TypeInfoHolder.GraphicsAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.TypeInfoHolder.GraphicsAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.TypeInfoHolder.GraphicsAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.TypeInfoHolder.GraphicsAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.TypeInfoHolder.GraphicsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.TypeInfoHolder.GraphicsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.TypeInfoHolder.GraphicsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.TypeInfoHolder.GraphicsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#StreamingResources#StreamingMemoryStats#Memory}#Set(System.Object,Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.TypeInfoHolder.GraphicsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#StreamingResources#StreamingMemoryStats#Memory}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.TypeInfoHolder.GraphicsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#StreamingResources#StreamingMemoryStats#Memory}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.TypeInfoHolder.GraphicsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#StreamingResources#StreamingMemoryStats#Memory}#Set(System.Byte@,Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.TypeInfoHolder.GraphicsAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.TypeInfoHolder.GraphicsAccessor.Set(Keen.VRage.Core.StreamingResources.StreamingMemoryStats@,Keen.VRage.Core.StreamingResources.StreamingMemoryStats.Memory@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingMemoryStats.TypeInfoHolder.GraphicsAccessor.Get(Keen.VRage.Core.StreamingResources.StreamingMemoryStats@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponentObjectBuilder">
            <summary>
            Object builder for <see cref="T:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent"/>.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponentObjectBuilder.MemoryPoolBudgets">
            <summary>
            Names of the memory pools the Streaming Resource Manager will use. 
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponentObjectBuilder.AllowOverBudgetPinning">
            <summary>
            Whether the resource manager should allow pinned resources to exceed the manager's budget.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponentObjectBuilder.AllowBlocking">
            <summary>
            Whether the resource manager should allow blocking on pinned resources.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent">
            <summary>
            Manager for streamable resources.
            </summary>
            <remarks>
            The streaming resource manager defines which resources should load in resource <em>subsytems</em>. Each subsystem is assigned a budget
            and is attached to a <see cref="T:Keen.VRage.Core.StreamingResources.IStreamingResourceDemandCollector"/> instance. The resource collector interfaces with type specific systems and
            relays the resource demands to the main resource manager which then decides which resources should be loaded based on their priority.
            </remarks>
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent.DebugGetActiveSubsystem">
            <summary> Get the current updating subsystem. </summary>
            <remarks>This is only used for debugging and is only set when the debugger is attached.</remarks>
        </member>
        <member name="T:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent.ResourceInfo">
            <summary>
            Information about a registered resource.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent.PriorityEntry">
            <summary>
            This struct has two uses: The entry that's used to sort resources and the buffer of changed priorities.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent.PriorityEntry.Priority">
             <summary> Priority for the resource. </summary>
             <remarks>
            <para>When used in resource priority queues the value is the actual user assigned priority or <c>float.Infinity</c> in case of pinned
             resources.</para>
             <para>When used in the priority update list the following values are used:
             <list type="table">
             <item> <term>Positive Number</term> <description>Assign the that number as the priority for the resource.</description> </item>
             <item> <term>Positive Infinity</term> <description>Pin the resource.</description> </item>
             <item> <term>Negative Infinity</term> <description>Unpin the resource.</description> </item>
             </list>
             </para>
             </remarks>
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent.PriorityEntry.CreateInvalidating(Keen.VRage.Core.StreamingResources.ResourceIndex)">
            <summary>
            Create a <see cref="T:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent.PriorityEntry"/> that marks a resource for invalidation (will be unloaded ASAP).
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent._onMemoryPoolShrunk">
            <summary> Task that completes once memory pools are adjusted. </summary>
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent.ProcessMemoryChanges">
            <summary>
            Adjust the total memory if that was requested externally.
            </summary>
            <returns>Whether the memory pool demands an update (oversubscribed or has changed budget).</returns>
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent.GetMemoryPool(Keen.VRage.Core.StreamingResources.MemoryPoolId)">
            <summary>
            Get a handle to the memory pool with identifier <paramref name="id"/>.
            </summary>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">When no memory pool with the given identifier was registered.</exception>
        </member>
        <member name="T:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent.MemoryPoolHandle">
            <summary>
            Handle used to interact with a MemoryPool.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent.MemoryPoolHandle.AvailableForStreaming">
            <summary>
            How much memory in this memory pool is reserved for streaming.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent.MemoryPoolHandle.Allocated">
            <summary>
            How much memory the streaming resource manager is utilizing on this memory pool.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent.MemoryPoolHandle.Pinned">
            <summary>
            How much memory the streaming resource manager has pinned on this memory pool.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent.MemoryPoolHandle.Pressure">
            <summary>
            The sum of how much memory each subsystem would like to have allocated given their demands. This can be substantially more than
            <see cref="P:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent.MemoryPoolHandle.AvailableForStreaming"/>.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent.MemoryPoolHandle.AdjustTotalBudgetAsync(System.Int64)">
            <summary>
            Adjust how much memory the <see cref="T:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent"/> can allocate from this memory pool. 
            </summary>
            <remarks>If the new value is less the the current <see cref="P:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent.MemoryPoolHandle.AvailableForStreaming"/> the resource manager may take a few update cycles
            to release enough allocated resources to fit within the new limit.</remarks>
            <returns>A task that is completed once the resource manager fits within the new <paramref name="availableMemoryForStreaming"/> value.</returns>
        </member>
        <member name="T:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent.MemoryPoolState">
            <summary>
            Internal memory state of the resource manager or a subsystem.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent.MemoryPoolState.Budget">
            <summary>
            Total memory that can be used on this pool.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent.MemoryPoolState.UsedMemory">
            <summary>
            Memory used by subsystems.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent.MemoryPoolState.Pressure">
            <summary>
            Total memory subsystems would like to allocate based on their demands.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent.MemoryPoolState.Pinned">
            <summary>
            Total memory subsystems have pinned.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent.MemoryPoolState.GetBudget">
            <summary>
            Get the budget on each memory pool.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent.MemoryPoolState.SetBudget(Keen.VRage.Core.StreamingResources.MemoryPoolSize)">
            <summary>
            Set the budget on each memory pool to the provided values.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent.MemoryPoolState.GetUsedMemory">
            <summary>
            Get the budget on each memory pool.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent.MemoryPoolState.CanFit``1(Keen.VRage.Core.StreamingResources.ResourceMemory@)">
            <summary>
            Whether a resource can fit the current memory available in each pool.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent.MemoryPoolState.CanFit(Keen.VRage.Core.StreamingResources.MemoryPoolSize@)">
            <summary>
            Whether a resource can fit the current memory available in each pool.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent.MemoryPoolState.Commit``1(Keen.VRage.Core.StreamingResources.ResourceMemory@)">
            <summary>
            Commit a resource's memory to the pool.
            </summary>
            <typeparam name="TFieldSelector">Selector for the Resource memory that will be committed.</typeparam>
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent.MemoryPoolState.Commit(Keen.VRage.Core.StreamingResources.MemoryPoolSize@)">
            <summary>
            Commit a resource's memory to the pool.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent.MemoryPoolState.UnCommit``1(Keen.VRage.Core.StreamingResources.ResourceMemory@)">
            <summary>
            Uncommit a resource's memory to the pool.
            </summary>
            <typeparam name="TFieldSelector">Selector for the Resource memory that will be uncommitted.</typeparam>
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent.ActivateSubsystem``1(System.String,Keen.VRage.Core.StreamingResources.IResourceLoader{``0})">
            <summary>
            Activate a subsystem that was registered via a <see cref="T:Keen.VRage.Core.StreamingResources.ResourceSubsystemAttribute"/>.
            </summary>
            <remarks>This method binds the subsystem to a resource loader, and allows a <see cref="T:Keen.VRage.Core.StreamingResources.IStreamingResourceDemandCollector"/> to <see cref="M:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent.Connect``1(System.String,Keen.VRage.Core.StreamingResources.IStreamingResourceDemandCollector)"/> to it later.</remarks>
            <param name="subsystemName">Name of the subsystem to activate.</param>
            <param name="loader">Resource loader that will be associated with the subsystem until it the <see cref="T:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent"/> is destroyed.</param>
            <typeparam name="TKey">Type of the resource key.</typeparam>
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent.Connect``1(System.String,Keen.VRage.Core.StreamingResources.IStreamingResourceDemandCollector)">
            <summary>
            Connect this resource manager to a resource demand collector.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent.Connection`1">
            <summary>
             Access helper to allow the <see cref="T:Keen.VRage.Core.StreamingResources.IStreamingResourceDemandCollector"/> to connect to a resource manager.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent.Connection`1.EnableCaching">
            <summary>
            Whether zero priority resources are cached in the system if there enough budget.
            </summary>
            <remarks>This value should only be assigned false for debugging purposes.</remarks>
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent.Connection`1.CurrentBudget">
            <summary>
            Current budget available for the system.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent.Connection`1.WaitForPinnedResource(`0)">
            <summary>
            Block the calling thread until the resource is loaded.
            </summary>
            <remarks>
            <para>This method is not safe to call concurrently with <see cref="M:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent.Connection`1.Update"/>.</para>
            <para>This method will perform any required actions to expedite the loading of the resource.
            That includes calling <see cref="M:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent.Connection`1.Update"/> and blocking on pending resource transitions.</para>
            <para>In order to support this method properly the <see cref="T:Keen.VRage.Core.StreamingResources.IResourceLoader`1"/> must implement
            <see cref="M:Keen.VRage.Core.StreamingResources.IResourceLoader`1.GetResourceTask(`0)"/> in a way that it can be completed during this call, otherwise it may deadlock.</para>
            </remarks>
            <exception cref="T:System.InvalidOperationException">If the resource was not loaded and blocking has been disable in the <see cref="T:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponentObjectBuilder"/>.</exception>
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent.Connection`1.Invalidate(`0,System.Boolean)">
            <summary>
            Notify the data for a loaded resource is invalid. 
            </summary>
            <remarks>
            <para>If the resource is loaded it will be unloaded.</para>
            <para>If the resource is still requested it will be requested to load again,
            with the expectation that this next time the new resource data will be loaded.</para>
            <para>If the resource is invalidated because it no longer exists then the priority should be set to zero, you can do that automatically
            by setting <paramref name="removed"/> to <c>true</c>.</para>
            </remarks>
        </member>
        <member name="F:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent.SimpleSubsystem`1._resourceRequestedState">
            <summary>
            Pending requested resource state for invalidated resources.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent.GetActiveSubsystems">
            <summary>
            Get the subsystems that have active connections and or loaded resources.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent.ISubsystem">
            <summary>
            Read-only view of a resource subsystem.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent.ISubsystem.Name">
            <summary>
            Code name of the subsystem.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent.ISubsystem.MemoryStats">
            <summary>
            Subsystem memory stats.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent.ISubsystem.LastCalculatedBudget">
            <summary>
            Last budget calculated by the manager for this system.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent.ISubsystem.ReadActiveResourcesAsync">
            <summary>
            Read active resources on the subsystem.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent.ISubsystem.GetDebugResourceInfo(Keen.VRage.Core.StreamingResources.ResourceIndex)">
            <summary>
            Retrieve debug information about a known resource.
            </summary>
            <remarks>
            <para>
            This method will never throw an exception for a loaded resource. However there is no synchronization of the read data, so it may be
            stale or in the worst case, when registered resources are invalidated, refer to a completely different resource.
            </para>
            </remarks>
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent.Subsystem.EnableResourceCaching">
            <summary>
            Whether zero priority resources are cached in the system if there enough budget.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent.Subsystem.GetDebugResourceInfo(Keen.VRage.Core.StreamingResources.ResourceIndex)">
            <summary>
            Retrieve debug information about a known resource.
            </summary>
            <remarks>
            <para>
            This method will never throw an exception for a loaded resource. However there is no synchronization of the read data, so it may be
            stale or in the worst case, when registered resources are invalidated, refer to a completely different resource.
            </para>
            </remarks>
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent.Subsystem.ReadActiveResourcesAsync">
            <summary>
            Enumerate all resources that are either requested by users or cached by the resource manager.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent.Subsystem.FeedResourceRequests">
            <summary>
            Prepare a list of active resources if requested.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent.Subsystem`1._resourceIndices">
            <summary>Maps resource keys to index and priority change index.</summary>
            <remarks>Access to this member must be synchronized.</remarks>
        </member>
        <member name="F:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent.Subsystem`1._resourceChangeMap">
            <summary>Maps resource keys to index and priority change index.</summary>
            <remarks>Access to this member must be synchronized.</remarks>
        </member>
        <member name="F:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent.Subsystem`1._pendingPriorityChanges">
            <summary> List of pending resource priority changes. </summary>
            <remarks>Access to this member must be synchronized.</remarks>
        </member>
        <member name="F:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent.Subsystem`1._pendingAdditions">
            <summary>List of newly discovered resources.</summary>
            <remarks>Access to this member must be synchronized.</remarks>
        </member>
        <member name="F:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent.Subsystem`1._resourceKeys">
            <summary>1:1 Mapping of <see cref="T:Keen.VRage.Core.StreamingResources.ResourceIndex"/> to resource keys.</summary>
        </member>
        <member name="F:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent.Subsystem`1._resourcesByPriority">
            <summary> List of resources ordered by priority. </summary>
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent.Subsystem`1.GetDebugResourceInfo(`0)">
            <summary>
            Retrieve debug information about a known resource.
            </summary>
            <remarks>
            <para>
            This method will never throw an exception for a loaded resource. However there is no synchronization of the read data, so it may be
            stale or in the worst case, when registered resources are invalidated, refer to a completely different resource.
            </para>
            </remarks>
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent.Subsystem`1.FinishNewRegistrations">
            <summary>
            Finalize the registration of new resources by adding their priorities to the list.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent.Subsystem`1.ProcessCompletedResourceTransitions">
            <summary>
            Processes the queue of pending resource transitions and adjusts resource state accordingly.
            </summary>
            <returns>A boolean value indicating whether any memory was freed in the process. If memory was freed then we have to update the resource
            states again.</returns>
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent.Subsystem`1.CheckResourceMemory">
            Debug method used to check that the used memory is reported correctly.
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent.ActivateSubsystem``1(System.String,Keen.VRage.Core.StreamingResources.ITieredResourceLoader{``0})">
            <summary>
            Activate a subsystem that was registered via a <see cref="T:Keen.VRage.Core.StreamingResources.ResourceSubsystemAttribute"/>.
            </summary>
            <remarks>This method binds the subsystem to a resource loader, and allows a <see cref="T:Keen.VRage.Core.StreamingResources.IStreamingResourceDemandCollector"/> to <see cref="M:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent.Connect``1(System.String,Keen.VRage.Core.StreamingResources.IStreamingResourceDemandCollector)"/> to it later.</remarks>
            <param name="subsystemName">Name of the subsystem to activate.</param>
            <param name="loader">Resource loader that will be associated with the subsystem until it the <see cref="T:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent"/> is destroyed.</param>
            <typeparam name="TKey">Type of the resource key.</typeparam>
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent.ConnectTiered``1(System.String,Keen.VRage.Core.StreamingResources.IStreamingResourceDemandCollector)">
            <summary>
            Connect this resource manager to a resource demand collector.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent.TieredConnection`1">
            <summary>
             Access helper to allow the <see cref="T:Keen.VRage.Core.StreamingResources.IStreamingResourceDemandCollector"/> to connect to a resource manager.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent.TieredConnection`1.EnableCaching">
            <summary>
            Whether zero priority resources are cached in the system if there enough budget.
            </summary>
            <remarks>This value should only be assigned false for debugging purposes.</remarks>
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent.TieredConnection`1.CurrentBudget">
            <summary>
            Current budget available for the system.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent.TieredConnection`1.SetPriority(`0,System.Int32,System.Single)">
            <summary>
            Assign the priority of a resource.
            </summary>
            <param name="resource">The resource to set the priority for.</param>
            <param name="bestTier">The highest quality tier that is needed by this resource. Use <see cref="F:System.Int32.MaxValue"/> to indicate the resource is not needed at all.</param>
            <param name="priority">The base priority of the resource.</param>
            <remarks>Due to resource caching the resource may remain loaded at a higher tier than requested while there is low memory pressure.</remarks>
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent.TieredConnection`1.SetPinned(`0,System.Int32)">
            <summary>
            Pin the resource to a particular tier.
            </summary>
            <remarks>
            <para>Pinned resources are always loaded, no matter their priority.</para>
            <para>Due to resource caching the resource may remain loaded at a higher tier than requested while there is low memory pressure.</para>
            </remarks>
            <param name="resource">The resource to pin.</param>
            /// <param name="pinnedTier">The resource tier required to be pinned. Use <see cref="F:System.Int32.MaxValue"/> to indicate the resource should be unpinned.</param>
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent.TieredConnection`1.WaitForPinnedResource(`0)">
            <summary>
            Block the calling thread until the resource is loaded.
            </summary>
            <remarks>
            <para>This method is not safe to call concurrently with <see cref="M:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent.TieredConnection`1.Update"/>.</para>
            <para>This method will perform any required actions to expedite the loading of the resource.
            That includes calling <see cref="M:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent.TieredConnection`1.Update"/> and blocking on pending resource transitions.</para>
            <para>In order to support this method properly the <see cref="T:Keen.VRage.Core.StreamingResources.IResourceLoader`1"/> must implement
            <see cref="M:Keen.VRage.Core.StreamingResources.IResourceLoader`1.GetResourceTask(`0)"/> in a way that it can be completed during this call, otherwise it may deadlock.</para>
            </remarks>
            <exception cref="T:System.InvalidOperationException">If the resource was not loaded and blocking has been disable in the <see cref="T:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponentObjectBuilder"/>.</exception>
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent.TieredConnection`1.Invalidate(`0,System.Boolean)">
            <summary>
            Notify the data for a loaded resource is invalid. 
            </summary>
            <remarks>
            <para>If the resource is loaded it will be unloaded.</para>
            <para>If the resource is still requested it will be requested to load again,
            with the expectation that this next time the new resource data will be loaded.</para>
            <para>If the resource is invalidated because it no longer exists then the priority should be set to zero, you can do that automatically
            by setting <paramref name="removed"/> to <c>true</c>.</para>
            </remarks>
        </member>
        <member name="F:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent.TieredSubsystem`1._loadedTiers">
            <summary> Information about tiers requested by the resource manager. </summary>
        </member>
        <member name="F:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent.TieredSubsystem`1._requestedTiers">
            <summary> Information about tiers requested by the user. </summary>
            <remarks>Access to this member must be synchronized.</remarks>
        </member>
        <member name="F:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent.TieredSubsystem`1.TierLoadInfo.RequestedThisFrame">
            <summary>Indicator used to mark visited resources in `RequestResourceState`.</summary>
            <remarks>Set to false after every request cycle.</remarks>
        </member>
        <member name="F:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent.TieredSubsystem`1.TierLoadInfo.MinRequestedTier">
            <summary> Lowest index (highest quality) tier requested. </summary>
        </member>
        <member name="F:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent.TieredSubsystem`1.TierLoadInfo.MaxRequestedTier">
            <summary> Highest index (lowes quality) tier requested. </summary>
        </member>
        <member name="F:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent.TieredSubsystem`1.TierLoadInfo.LastRequestedTier">
            <summary>Last tier requested by the manager.</summary>
        </member>
        <member name="F:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent.TieredSubsystem`1.TierLoadInfo.LastReportedTier">
            <summary>Last tier requested by the manager.</summary>
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent.TieredSubsystem`1.TierLoadInfo.HasPendingTransition">
            <summary> Whether any state transition is pending for the resource. </summary>
        </member>
        <member name="T:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration">
            <summary>
            Configuration that provides the minimum budgets and weights for the <see cref="T:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent"/>.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.Subsystems">
            <summary>
            Complete map of resource subsystems to their memory definitions.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.MainMemoryBudget">
            <summary>
            Default budget for main system memory.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.DefaultMemoryPoolBudget">
            <summary>
            Base memory budget parameters for a memory pool.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.DefaultMemoryPoolBudget.MinimumBudget">
            <summary>
            Minimum memory budget.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.DefaultMemoryPoolBudget.ExtraSystemMemoryRatio">
            <summary>
            Additional budget as ratio of total memory.
            </summary>
            <remarks>Final memory budget = <c>MinimumBudget + SystemMemory ⨯ ExtraSystemMemoryRatio</c></remarks>
        </member>
        <member name="T:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.DefaultMemoryPoolBudget.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.DefaultMemoryPoolBudget.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.DefaultMemoryPoolBudget.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.DefaultMemoryPoolBudget@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.DefaultMemoryPoolBudget.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.DefaultMemoryPoolBudget.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.DefaultMemoryPoolBudget@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.DefaultMemoryPoolBudget.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.DefaultMemoryPoolBudget.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.DefaultMemoryPoolBudget@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.DefaultMemoryPoolBudget.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.DefaultMemoryPoolBudget.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.DefaultMemoryPoolBudget.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.DefaultMemoryPoolBudget.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.DefaultMemoryPoolBudget.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.DefaultMemoryPoolBudget@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.DefaultMemoryPoolBudget.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.DefaultMemoryPoolBudget.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.DefaultMemoryPoolBudget@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.DefaultMemoryPoolBudget.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.DefaultMemoryPoolBudget.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.DefaultMemoryPoolBudget.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.DefaultMemoryPoolBudget@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.DefaultMemoryPoolBudget.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.DefaultMemoryPoolBudget.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.DefaultMemoryPoolBudget.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.DefaultMemoryPoolBudget.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.DefaultMemoryPoolBudget.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#StreamingResources#StreamingResourceSystemConfiguration#DefaultMemoryPoolBudget}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.DefaultMemoryPoolBudget.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.DefaultMemoryPoolBudget.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.DefaultMemoryPoolBudget.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.DefaultMemoryPoolBudget.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.DefaultMemoryPoolBudget.TypeInfoHolder.MinimumBudgetAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.DefaultMemoryPoolBudget.TypeInfoHolder.MinimumBudgetAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.DefaultMemoryPoolBudget.TypeInfoHolder.MinimumBudgetAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.DefaultMemoryPoolBudget.TypeInfoHolder.MinimumBudgetAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.DefaultMemoryPoolBudget.TypeInfoHolder.MinimumBudgetAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.DefaultMemoryPoolBudget.TypeInfoHolder.MinimumBudgetAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.DefaultMemoryPoolBudget.TypeInfoHolder.MinimumBudgetAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.DefaultMemoryPoolBudget.TypeInfoHolder.MinimumBudgetAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.DefaultMemoryPoolBudget.TypeInfoHolder.MinimumBudgetAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.DefaultMemoryPoolBudget.TypeInfoHolder.MinimumBudgetAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.DefaultMemoryPoolBudget.TypeInfoHolder.MinimumBudgetAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.DefaultMemoryPoolBudget.TypeInfoHolder.MinimumBudgetAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.DefaultMemoryPoolBudget.TypeInfoHolder.MinimumBudgetAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.DefaultMemoryPoolBudget.TypeInfoHolder.MinimumBudgetAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.DefaultMemoryPoolBudget.TypeInfoHolder.MinimumBudgetAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int64}#Set(System.Object,System.Int64@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.DefaultMemoryPoolBudget.TypeInfoHolder.MinimumBudgetAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int64}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.DefaultMemoryPoolBudget.TypeInfoHolder.MinimumBudgetAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int64}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.DefaultMemoryPoolBudget.TypeInfoHolder.MinimumBudgetAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int64}#Set(System.Byte@,System.Int64@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.DefaultMemoryPoolBudget.TypeInfoHolder.MinimumBudgetAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.DefaultMemoryPoolBudget.TypeInfoHolder.MinimumBudgetAccessor.Set(Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.DefaultMemoryPoolBudget@,System.Int64@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.DefaultMemoryPoolBudget.TypeInfoHolder.MinimumBudgetAccessor.Get(Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.DefaultMemoryPoolBudget@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.DefaultMemoryPoolBudget.TypeInfoHolder.ExtraSystemMemoryRatioAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.DefaultMemoryPoolBudget.TypeInfoHolder.ExtraSystemMemoryRatioAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.DefaultMemoryPoolBudget.TypeInfoHolder.ExtraSystemMemoryRatioAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.DefaultMemoryPoolBudget.TypeInfoHolder.ExtraSystemMemoryRatioAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.DefaultMemoryPoolBudget.TypeInfoHolder.ExtraSystemMemoryRatioAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.DefaultMemoryPoolBudget.TypeInfoHolder.ExtraSystemMemoryRatioAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.DefaultMemoryPoolBudget.TypeInfoHolder.ExtraSystemMemoryRatioAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.DefaultMemoryPoolBudget.TypeInfoHolder.ExtraSystemMemoryRatioAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.DefaultMemoryPoolBudget.TypeInfoHolder.ExtraSystemMemoryRatioAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.DefaultMemoryPoolBudget.TypeInfoHolder.ExtraSystemMemoryRatioAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.DefaultMemoryPoolBudget.TypeInfoHolder.ExtraSystemMemoryRatioAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.DefaultMemoryPoolBudget.TypeInfoHolder.ExtraSystemMemoryRatioAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.DefaultMemoryPoolBudget.TypeInfoHolder.ExtraSystemMemoryRatioAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.DefaultMemoryPoolBudget.TypeInfoHolder.ExtraSystemMemoryRatioAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.DefaultMemoryPoolBudget.TypeInfoHolder.ExtraSystemMemoryRatioAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Object,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.DefaultMemoryPoolBudget.TypeInfoHolder.ExtraSystemMemoryRatioAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.DefaultMemoryPoolBudget.TypeInfoHolder.ExtraSystemMemoryRatioAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.DefaultMemoryPoolBudget.TypeInfoHolder.ExtraSystemMemoryRatioAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Byte@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.DefaultMemoryPoolBudget.TypeInfoHolder.ExtraSystemMemoryRatioAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.DefaultMemoryPoolBudget.TypeInfoHolder.ExtraSystemMemoryRatioAccessor.Set(Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.DefaultMemoryPoolBudget@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.DefaultMemoryPoolBudget.TypeInfoHolder.ExtraSystemMemoryRatioAccessor.Get(Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.DefaultMemoryPoolBudget@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer{Keen#VRage#Core#StreamingResources#StreamingResourceSystemConfiguration}#NameSerializer">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#NameSerializer">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#NameType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer{Keen#VRage#Core#StreamingResources#StreamingResourceSystemConfiguration}#ShouldSerializeAsName(Keen.VRage.Library.Serialization.SerializationContext,Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#ShouldSerializeAsName(Keen.VRage.Library.Serialization.SerializationContext,System.Object@)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#StreamingResources#StreamingResourceSystemConfiguration}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.TypeInfoHolder.SubsystemsAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.TypeInfoHolder.SubsystemsAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.TypeInfoHolder.SubsystemsAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.TypeInfoHolder.SubsystemsAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.TypeInfoHolder.SubsystemsAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.TypeInfoHolder.SubsystemsAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.TypeInfoHolder.SubsystemsAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.TypeInfoHolder.SubsystemsAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.TypeInfoHolder.SubsystemsAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.TypeInfoHolder.SubsystemsAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.TypeInfoHolder.SubsystemsAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.TypeInfoHolder.SubsystemsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.TypeInfoHolder.SubsystemsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.TypeInfoHolder.SubsystemsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.TypeInfoHolder.SubsystemsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Collections#Readers#DictionaryReader{System#String,Keen#VRage#Core#StreamingResources#SubsystemBudgetParameters}}#Set(System.Object,Keen.VRage.Library.Collections.Readers.DictionaryReader{System.String,Keen.VRage.Core.StreamingResources.SubsystemBudgetParameters}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.TypeInfoHolder.SubsystemsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Collections#Readers#DictionaryReader{System#String,Keen#VRage#Core#StreamingResources#SubsystemBudgetParameters}}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.TypeInfoHolder.SubsystemsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Collections#Readers#DictionaryReader{System#String,Keen#VRage#Core#StreamingResources#SubsystemBudgetParameters}}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.TypeInfoHolder.SubsystemsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Collections#Readers#DictionaryReader{System#String,Keen#VRage#Core#StreamingResources#SubsystemBudgetParameters}}#Set(System.Byte@,Keen.VRage.Library.Collections.Readers.DictionaryReader{System.String,Keen.VRage.Core.StreamingResources.SubsystemBudgetParameters}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.TypeInfoHolder.SubsystemsAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.TypeInfoHolder.SubsystemsAccessor.Set(Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration@,Keen.VRage.Library.Collections.Readers.DictionaryReader{System.String,Keen.VRage.Core.StreamingResources.SubsystemBudgetParameters}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.TypeInfoHolder.SubsystemsAccessor.Get(Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.TypeInfoHolder.MainMemoryBudgetAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.TypeInfoHolder.MainMemoryBudgetAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.TypeInfoHolder.MainMemoryBudgetAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.TypeInfoHolder.MainMemoryBudgetAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.TypeInfoHolder.MainMemoryBudgetAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.TypeInfoHolder.MainMemoryBudgetAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.TypeInfoHolder.MainMemoryBudgetAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.TypeInfoHolder.MainMemoryBudgetAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.TypeInfoHolder.MainMemoryBudgetAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.TypeInfoHolder.MainMemoryBudgetAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.TypeInfoHolder.MainMemoryBudgetAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.TypeInfoHolder.MainMemoryBudgetAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.TypeInfoHolder.MainMemoryBudgetAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.TypeInfoHolder.MainMemoryBudgetAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.TypeInfoHolder.MainMemoryBudgetAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#StreamingResources#StreamingResourceSystemConfiguration#DefaultMemoryPoolBudget?}#Set(System.Object,System.Nullable{Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.DefaultMemoryPoolBudget}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.TypeInfoHolder.MainMemoryBudgetAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#StreamingResources#StreamingResourceSystemConfiguration#DefaultMemoryPoolBudget?}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.TypeInfoHolder.MainMemoryBudgetAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#StreamingResources#StreamingResourceSystemConfiguration#DefaultMemoryPoolBudget?}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.TypeInfoHolder.MainMemoryBudgetAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#StreamingResources#StreamingResourceSystemConfiguration#DefaultMemoryPoolBudget?}#Set(System.Byte@,System.Nullable{Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.DefaultMemoryPoolBudget}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.TypeInfoHolder.MainMemoryBudgetAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.TypeInfoHolder.MainMemoryBudgetAccessor.Set(Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration@,System.Nullable{Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.DefaultMemoryPoolBudget}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.TypeInfoHolder.MainMemoryBudgetAccessor.Get(Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfigurationObjectBuilder">
            <inheritdoc cref="T:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration"/>
        </member>
        <member name="F:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfigurationObjectBuilder.Subsystems">
            <summary>
            Complete map of resource subsystems to their memory definitions.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfigurationObjectBuilder.MainMemoryBudget">
            <summary>
            Default budget for main system memory.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfigurationObjectBuilder.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfigurationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfigurationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfigurationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfigurationObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfigurationObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfigurationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfigurationObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfigurationObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfigurationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfigurationObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfigurationObjectBuilder.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfigurationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfigurationObjectBuilder.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfigurationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfigurationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfigurationObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfigurationObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfigurationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfigurationObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfigurationObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfigurationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfigurationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfigurationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfigurationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfigurationObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfigurationObjectBuilder.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfigurationObjectBuilder.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfigurationObjectBuilder.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfigurationObjectBuilder.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#StreamingResources#StreamingResourceSystemConfigurationObjectBuilder}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfigurationObjectBuilder.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfigurationObjectBuilder.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfigurationObjectBuilder.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfigurationObjectBuilder.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfigurationObjectBuilder.TypeInfoHolder.SubsystemsAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfigurationObjectBuilder.TypeInfoHolder.SubsystemsAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfigurationObjectBuilder.TypeInfoHolder.SubsystemsAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfigurationObjectBuilder.TypeInfoHolder.SubsystemsAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfigurationObjectBuilder.TypeInfoHolder.SubsystemsAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfigurationObjectBuilder.TypeInfoHolder.SubsystemsAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfigurationObjectBuilder.TypeInfoHolder.SubsystemsAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfigurationObjectBuilder.TypeInfoHolder.SubsystemsAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfigurationObjectBuilder.TypeInfoHolder.SubsystemsAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfigurationObjectBuilder.TypeInfoHolder.SubsystemsAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfigurationObjectBuilder.TypeInfoHolder.SubsystemsAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfigurationObjectBuilder.TypeInfoHolder.SubsystemsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfigurationObjectBuilder.TypeInfoHolder.SubsystemsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfigurationObjectBuilder.TypeInfoHolder.SubsystemsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfigurationObjectBuilder.TypeInfoHolder.SubsystemsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#Dictionary{System#String,Keen#VRage#Core#StreamingResources#SubsystemBudgetParameters}}#Set(System.Object,System.Collections.Generic.Dictionary{System.String,Keen.VRage.Core.StreamingResources.SubsystemBudgetParameters}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfigurationObjectBuilder.TypeInfoHolder.SubsystemsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#Dictionary{System#String,Keen#VRage#Core#StreamingResources#SubsystemBudgetParameters}}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfigurationObjectBuilder.TypeInfoHolder.SubsystemsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#Dictionary{System#String,Keen#VRage#Core#StreamingResources#SubsystemBudgetParameters}}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfigurationObjectBuilder.TypeInfoHolder.SubsystemsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#Dictionary{System#String,Keen#VRage#Core#StreamingResources#SubsystemBudgetParameters}}#Set(System.Byte@,System.Collections.Generic.Dictionary{System.String,Keen.VRage.Core.StreamingResources.SubsystemBudgetParameters}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfigurationObjectBuilder.TypeInfoHolder.SubsystemsAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfigurationObjectBuilder.TypeInfoHolder.SubsystemsAccessor.Set(Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfigurationObjectBuilder@,System.Collections.Generic.Dictionary{System.String,Keen.VRage.Core.StreamingResources.SubsystemBudgetParameters}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfigurationObjectBuilder.TypeInfoHolder.SubsystemsAccessor.Get(Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfigurationObjectBuilder@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfigurationObjectBuilder.TypeInfoHolder.MainMemoryBudgetAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfigurationObjectBuilder.TypeInfoHolder.MainMemoryBudgetAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfigurationObjectBuilder.TypeInfoHolder.MainMemoryBudgetAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfigurationObjectBuilder.TypeInfoHolder.MainMemoryBudgetAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfigurationObjectBuilder.TypeInfoHolder.MainMemoryBudgetAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfigurationObjectBuilder.TypeInfoHolder.MainMemoryBudgetAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfigurationObjectBuilder.TypeInfoHolder.MainMemoryBudgetAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfigurationObjectBuilder.TypeInfoHolder.MainMemoryBudgetAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfigurationObjectBuilder.TypeInfoHolder.MainMemoryBudgetAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfigurationObjectBuilder.TypeInfoHolder.MainMemoryBudgetAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfigurationObjectBuilder.TypeInfoHolder.MainMemoryBudgetAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfigurationObjectBuilder.TypeInfoHolder.MainMemoryBudgetAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfigurationObjectBuilder.TypeInfoHolder.MainMemoryBudgetAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfigurationObjectBuilder.TypeInfoHolder.MainMemoryBudgetAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfigurationObjectBuilder.TypeInfoHolder.MainMemoryBudgetAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#StreamingResources#StreamingResourceSystemConfiguration#DefaultMemoryPoolBudget?}#Set(System.Object,System.Nullable{Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.DefaultMemoryPoolBudget}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfigurationObjectBuilder.TypeInfoHolder.MainMemoryBudgetAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#StreamingResources#StreamingResourceSystemConfiguration#DefaultMemoryPoolBudget?}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfigurationObjectBuilder.TypeInfoHolder.MainMemoryBudgetAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#StreamingResources#StreamingResourceSystemConfiguration#DefaultMemoryPoolBudget?}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfigurationObjectBuilder.TypeInfoHolder.MainMemoryBudgetAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#StreamingResources#StreamingResourceSystemConfiguration#DefaultMemoryPoolBudget?}#Set(System.Byte@,System.Nullable{Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.DefaultMemoryPoolBudget}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfigurationObjectBuilder.TypeInfoHolder.MainMemoryBudgetAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfigurationObjectBuilder.TypeInfoHolder.MainMemoryBudgetAccessor.Set(Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfigurationObjectBuilder@,System.Nullable{Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfiguration.DefaultMemoryPoolBudget}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfigurationObjectBuilder.TypeInfoHolder.MainMemoryBudgetAccessor.Get(Keen.VRage.Core.StreamingResources.StreamingResourceSystemConfigurationObjectBuilder@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.StreamingResources.SubsystemBudgetParameters">
            <summary>
            Represents the memory needs of a Subsystem. 
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.StreamingResources.SubsystemBudgetParameters.MinimumBudget">
            <summary>
            Minimum budget per memory pool in bytes.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.StreamingResources.SubsystemBudgetParameters.ExcessBudgetWeight">
            <summary>
            Excess budget weight per memory pool. Excess memory is distributed to subsystems ina proportion equal to this value vs the sum of other
            subsystem weights.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.StreamingResources.SubsystemBudgetParameters.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.SubsystemBudgetParameters.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.SubsystemBudgetParameters.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.StreamingResources.SubsystemBudgetParameters@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.SubsystemBudgetParameters.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.SubsystemBudgetParameters.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.StreamingResources.SubsystemBudgetParameters@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.SubsystemBudgetParameters.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.SubsystemBudgetParameters.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.StreamingResources.SubsystemBudgetParameters@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.SubsystemBudgetParameters.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.SubsystemBudgetParameters.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.SubsystemBudgetParameters.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.SubsystemBudgetParameters.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.SubsystemBudgetParameters.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.StreamingResources.SubsystemBudgetParameters@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.SubsystemBudgetParameters.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.SubsystemBudgetParameters.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.StreamingResources.SubsystemBudgetParameters@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.SubsystemBudgetParameters.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.SubsystemBudgetParameters.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.SubsystemBudgetParameters.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.StreamingResources.SubsystemBudgetParameters@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.SubsystemBudgetParameters.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.StreamingResources.SubsystemBudgetParameters.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.SubsystemBudgetParameters.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.SubsystemBudgetParameters.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.SubsystemBudgetParameters.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#StreamingResources#SubsystemBudgetParameters}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.SubsystemBudgetParameters.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.StreamingResources.SubsystemBudgetParameters.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.StreamingResources.SubsystemBudgetParameters.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.StreamingResources.SubsystemBudgetParameters.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.SubsystemBudgetParameters.TypeInfoHolder.MinimumBudgetAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.SubsystemBudgetParameters.TypeInfoHolder.MinimumBudgetAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.SubsystemBudgetParameters.TypeInfoHolder.MinimumBudgetAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.SubsystemBudgetParameters.TypeInfoHolder.MinimumBudgetAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.SubsystemBudgetParameters.TypeInfoHolder.MinimumBudgetAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.SubsystemBudgetParameters.TypeInfoHolder.MinimumBudgetAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.SubsystemBudgetParameters.TypeInfoHolder.MinimumBudgetAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.SubsystemBudgetParameters.TypeInfoHolder.MinimumBudgetAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.SubsystemBudgetParameters.TypeInfoHolder.MinimumBudgetAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.SubsystemBudgetParameters.TypeInfoHolder.MinimumBudgetAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.SubsystemBudgetParameters.TypeInfoHolder.MinimumBudgetAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.SubsystemBudgetParameters.TypeInfoHolder.MinimumBudgetAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.SubsystemBudgetParameters.TypeInfoHolder.MinimumBudgetAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.SubsystemBudgetParameters.TypeInfoHolder.MinimumBudgetAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.SubsystemBudgetParameters.TypeInfoHolder.MinimumBudgetAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#StreamingResources#MemoryPoolSize}#Set(System.Object,Keen.VRage.Core.StreamingResources.MemoryPoolSize@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.SubsystemBudgetParameters.TypeInfoHolder.MinimumBudgetAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#StreamingResources#MemoryPoolSize}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.SubsystemBudgetParameters.TypeInfoHolder.MinimumBudgetAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#StreamingResources#MemoryPoolSize}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.SubsystemBudgetParameters.TypeInfoHolder.MinimumBudgetAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#StreamingResources#MemoryPoolSize}#Set(System.Byte@,Keen.VRage.Core.StreamingResources.MemoryPoolSize@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.SubsystemBudgetParameters.TypeInfoHolder.MinimumBudgetAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.SubsystemBudgetParameters.TypeInfoHolder.MinimumBudgetAccessor.Set(Keen.VRage.Core.StreamingResources.SubsystemBudgetParameters@,Keen.VRage.Core.StreamingResources.MemoryPoolSize@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.SubsystemBudgetParameters.TypeInfoHolder.MinimumBudgetAccessor.Get(Keen.VRage.Core.StreamingResources.SubsystemBudgetParameters@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.SubsystemBudgetParameters.TypeInfoHolder.ExcessBudgetWeightAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.SubsystemBudgetParameters.TypeInfoHolder.ExcessBudgetWeightAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.SubsystemBudgetParameters.TypeInfoHolder.ExcessBudgetWeightAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.SubsystemBudgetParameters.TypeInfoHolder.ExcessBudgetWeightAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.SubsystemBudgetParameters.TypeInfoHolder.ExcessBudgetWeightAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.SubsystemBudgetParameters.TypeInfoHolder.ExcessBudgetWeightAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.SubsystemBudgetParameters.TypeInfoHolder.ExcessBudgetWeightAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.SubsystemBudgetParameters.TypeInfoHolder.ExcessBudgetWeightAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.StreamingResources.SubsystemBudgetParameters.TypeInfoHolder.ExcessBudgetWeightAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.SubsystemBudgetParameters.TypeInfoHolder.ExcessBudgetWeightAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.SubsystemBudgetParameters.TypeInfoHolder.ExcessBudgetWeightAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.SubsystemBudgetParameters.TypeInfoHolder.ExcessBudgetWeightAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.SubsystemBudgetParameters.TypeInfoHolder.ExcessBudgetWeightAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.SubsystemBudgetParameters.TypeInfoHolder.ExcessBudgetWeightAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.SubsystemBudgetParameters.TypeInfoHolder.ExcessBudgetWeightAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#StreamingResources#MemoryPoolSize}#Set(System.Object,Keen.VRage.Core.StreamingResources.MemoryPoolSize@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.SubsystemBudgetParameters.TypeInfoHolder.ExcessBudgetWeightAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#StreamingResources#MemoryPoolSize}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.SubsystemBudgetParameters.TypeInfoHolder.ExcessBudgetWeightAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#StreamingResources#MemoryPoolSize}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.SubsystemBudgetParameters.TypeInfoHolder.ExcessBudgetWeightAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#StreamingResources#MemoryPoolSize}#Set(System.Byte@,Keen.VRage.Core.StreamingResources.MemoryPoolSize@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.SubsystemBudgetParameters.TypeInfoHolder.ExcessBudgetWeightAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.SubsystemBudgetParameters.TypeInfoHolder.ExcessBudgetWeightAccessor.Set(Keen.VRage.Core.StreamingResources.SubsystemBudgetParameters@,Keen.VRage.Core.StreamingResources.MemoryPoolSize@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.SubsystemBudgetParameters.TypeInfoHolder.ExcessBudgetWeightAccessor.Get(Keen.VRage.Core.StreamingResources.SubsystemBudgetParameters@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.StreamingResources.SubsystemStats">
            <summary>
            Stats for a <see cref="T:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent.ISubsystem"/>.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.StreamingResources.SubsystemStats.LoadUnload">
            <summary>
            Stats over loaded and unloaded resources.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.StreamingResources.SystemResourceState">
            <summary>
            Description of the state of a resource from the <see cref="T:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent"/> point of view.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.StreamingResources.SystemResourceState.IsRequested">
            <summary>
            Whether users have assigned a non-zero priority for this resource.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.StreamingResources.SystemResourceState.IsStale">
            <summary>
            Whether the state of the resource has been requested to change more than once since <see cref="F:Keen.VRage.Core.StreamingResources.SystemResourceState.LastConfirmedState"/> for the resource was
            observed. 
            </summary>
            <remarks>Since the manager does not wait for confirmation of the last request before requesting a new resource state we cannot know for sure
            which state the loader is currently transitioning into when the state is stale.</remarks>
        </member>
        <member name="F:Keen.VRage.Core.StreamingResources.SystemResourceState.LastRequestedState">
            <summary>
            Last state requested by the <see cref="T:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent"/>.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.StreamingResources.SystemResourceState.LastConfirmedState">
            <summary>
            Last state confirmed by the <see cref="T:Keen.VRage.Core.StreamingResources.IResourceLoader`1"/>.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.StreamingResources.SystemResourceState.IsInStableState(Keen.VRage.Core.StreamingResources.ResourceState)">
            <summary>
            Whether the resource is currently in <paramref name="state"/> and does not have any pending transitions. 
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.StreamingResources.TieredResourceDescription">
            <summary>
            Description for a tiered resource.
            </summary>
            <remarks>
            <para>A tiered resource is a resource that has multiple versions with increasing memory cost and visual fidelity.</para>
            <para>Tiers are numbered in the same fashion as mip-maps, where the lowest index tier represents the highest visual fidelity and most
            memory intensive resource.</para>
            <para>Examples: streamable textures (mip-mapping) and models (lodding).</para>
            </remarks>
        </member>
        <member name="F:Keen.VRage.Core.StreamingResources.TieredResourceDescription.Name">
            <summary>
            Name of the resource.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.StreamingResources.TieredResourceDescription.TierMemory">
            <summary>
            Memory required by each resource tier.
            </summary>
            <remarks>
            <para>Resource tier #0 should be the largest and each tier after that should be a smaller and less detailed representation of the same resource.</para>
            <para>The maximum number of tiers per resource is 256.</para>
            </remarks>
        </member>
        <member name="T:Keen.VRage.Core.Systems.ServiceEntitySerializer">
            <summary>
            Extends <see cref="T:Keen.VRage.DCS.Builders.EntitySerializer"/>'s functionality allowing to use <see cref="T:Keen.VRage.DCS.Annotations.ServiceAttribute"/> in components
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Systems.Sun.SunSettings">
            <summary>
            
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Systems.Sun.SunSettings.Azimuth">
            <summary>
            The azimuth, or angle around the Y vector, of the sun direction in degrees (in world space)
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Systems.Sun.SunSettings.Elevation">
            <summary>
            The elevation, or angle towards the positive or negative Y vector, of the sun direction in degrees (in world space)
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Systems.Sun.SunSettings.Roll">
            <summary>
            Rolls the shadowmap camera without changing the light direction in degrees - good for checking for issues with aliasing that are specific to certain
            orientations.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Systems.Sun.SunSettings.Normal">
            <summary>
            Normal of the current rotation
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Systems.Sun.SunSettings.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Systems.Sun.SunSettings.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Systems.Sun.SunSettings.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Systems.Sun.SunSettings@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Systems.Sun.SunSettings.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Systems.Sun.SunSettings.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Systems.Sun.SunSettings@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Systems.Sun.SunSettings.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Systems.Sun.SunSettings.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Systems.Sun.SunSettings@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Systems.Sun.SunSettings.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Systems.Sun.SunSettings.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Systems.Sun.SunSettings.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Systems.Sun.SunSettings.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Systems.Sun.SunSettings.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Systems.Sun.SunSettings@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Systems.Sun.SunSettings.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Systems.Sun.SunSettings.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Systems.Sun.SunSettings@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Systems.Sun.SunSettings.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Systems.Sun.SunSettings.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Systems.Sun.SunSettings.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Systems.Sun.SunSettings@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Systems.Sun.SunSettings.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Systems.Sun.SunSettings.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Systems.Sun.SunSettings.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Systems.Sun.SunSettings.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Systems.Sun.SunSettings.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Systems#Sun#SunSettings}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Systems.Sun.SunSettings.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Systems.Sun.SunSettings.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Systems.Sun.SunSettings.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Systems.Sun.SunSettings.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Systems.Sun.SunSettings.TypeInfoHolder.AzimuthAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Systems.Sun.SunSettings.TypeInfoHolder.AzimuthAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Systems.Sun.SunSettings.TypeInfoHolder.AzimuthAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Systems.Sun.SunSettings.TypeInfoHolder.AzimuthAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Systems.Sun.SunSettings.TypeInfoHolder.AzimuthAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Systems.Sun.SunSettings.TypeInfoHolder.AzimuthAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Systems.Sun.SunSettings.TypeInfoHolder.AzimuthAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Systems.Sun.SunSettings.TypeInfoHolder.AzimuthAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Systems.Sun.SunSettings.TypeInfoHolder.AzimuthAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Systems.Sun.SunSettings.TypeInfoHolder.AzimuthAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Systems.Sun.SunSettings.TypeInfoHolder.AzimuthAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Systems.Sun.SunSettings.TypeInfoHolder.AzimuthAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Systems.Sun.SunSettings.TypeInfoHolder.AzimuthAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Systems.Sun.SunSettings.TypeInfoHolder.AzimuthAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Systems.Sun.SunSettings.TypeInfoHolder.AzimuthAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Object,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Systems.Sun.SunSettings.TypeInfoHolder.AzimuthAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Systems.Sun.SunSettings.TypeInfoHolder.AzimuthAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Systems.Sun.SunSettings.TypeInfoHolder.AzimuthAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Byte@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Systems.Sun.SunSettings.TypeInfoHolder.AzimuthAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Systems.Sun.SunSettings.TypeInfoHolder.AzimuthAccessor.Set(Keen.VRage.Core.Systems.Sun.SunSettings@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Systems.Sun.SunSettings.TypeInfoHolder.AzimuthAccessor.Get(Keen.VRage.Core.Systems.Sun.SunSettings@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Systems.Sun.SunSettings.TypeInfoHolder.ElevationAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Systems.Sun.SunSettings.TypeInfoHolder.ElevationAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Systems.Sun.SunSettings.TypeInfoHolder.ElevationAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Systems.Sun.SunSettings.TypeInfoHolder.ElevationAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Systems.Sun.SunSettings.TypeInfoHolder.ElevationAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Systems.Sun.SunSettings.TypeInfoHolder.ElevationAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Systems.Sun.SunSettings.TypeInfoHolder.ElevationAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Systems.Sun.SunSettings.TypeInfoHolder.ElevationAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Systems.Sun.SunSettings.TypeInfoHolder.ElevationAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Systems.Sun.SunSettings.TypeInfoHolder.ElevationAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Systems.Sun.SunSettings.TypeInfoHolder.ElevationAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Systems.Sun.SunSettings.TypeInfoHolder.ElevationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Systems.Sun.SunSettings.TypeInfoHolder.ElevationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Systems.Sun.SunSettings.TypeInfoHolder.ElevationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Systems.Sun.SunSettings.TypeInfoHolder.ElevationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Object,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Systems.Sun.SunSettings.TypeInfoHolder.ElevationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Systems.Sun.SunSettings.TypeInfoHolder.ElevationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Systems.Sun.SunSettings.TypeInfoHolder.ElevationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Byte@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Systems.Sun.SunSettings.TypeInfoHolder.ElevationAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Systems.Sun.SunSettings.TypeInfoHolder.ElevationAccessor.Set(Keen.VRage.Core.Systems.Sun.SunSettings@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Systems.Sun.SunSettings.TypeInfoHolder.ElevationAccessor.Get(Keen.VRage.Core.Systems.Sun.SunSettings@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Systems.Sun.SunSettings.TypeInfoHolder.RollAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Systems.Sun.SunSettings.TypeInfoHolder.RollAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Systems.Sun.SunSettings.TypeInfoHolder.RollAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Systems.Sun.SunSettings.TypeInfoHolder.RollAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Systems.Sun.SunSettings.TypeInfoHolder.RollAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Systems.Sun.SunSettings.TypeInfoHolder.RollAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Systems.Sun.SunSettings.TypeInfoHolder.RollAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Systems.Sun.SunSettings.TypeInfoHolder.RollAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Systems.Sun.SunSettings.TypeInfoHolder.RollAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Systems.Sun.SunSettings.TypeInfoHolder.RollAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Systems.Sun.SunSettings.TypeInfoHolder.RollAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Systems.Sun.SunSettings.TypeInfoHolder.RollAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Systems.Sun.SunSettings.TypeInfoHolder.RollAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Systems.Sun.SunSettings.TypeInfoHolder.RollAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Systems.Sun.SunSettings.TypeInfoHolder.RollAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Object,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Systems.Sun.SunSettings.TypeInfoHolder.RollAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Systems.Sun.SunSettings.TypeInfoHolder.RollAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Systems.Sun.SunSettings.TypeInfoHolder.RollAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Byte@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Systems.Sun.SunSettings.TypeInfoHolder.RollAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Systems.Sun.SunSettings.TypeInfoHolder.RollAccessor.Set(Keen.VRage.Core.Systems.Sun.SunSettings@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Systems.Sun.SunSettings.TypeInfoHolder.RollAccessor.Get(Keen.VRage.Core.Systems.Sun.SunSettings@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Systems.Sun.SunSettings.TypeInfoHolder.NormalAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Systems.Sun.SunSettings.TypeInfoHolder.NormalAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Systems.Sun.SunSettings.TypeInfoHolder.NormalAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Systems.Sun.SunSettings.TypeInfoHolder.NormalAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Systems.Sun.SunSettings.TypeInfoHolder.NormalAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Systems.Sun.SunSettings.TypeInfoHolder.NormalAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Systems.Sun.SunSettings.TypeInfoHolder.NormalAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Systems.Sun.SunSettings.TypeInfoHolder.NormalAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Systems.Sun.SunSettings.TypeInfoHolder.NormalAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Systems.Sun.SunSettings.TypeInfoHolder.NormalAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Systems.Sun.SunSettings.TypeInfoHolder.NormalAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Systems.Sun.SunSettings.TypeInfoHolder.NormalAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Systems.Sun.SunSettings.TypeInfoHolder.NormalAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Systems.Sun.SunSettings.TypeInfoHolder.NormalAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Systems.Sun.SunSettings.TypeInfoHolder.NormalAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3}#Set(System.Object,Keen.VRage.Library.Mathematics.Vector3@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Systems.Sun.SunSettings.TypeInfoHolder.NormalAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Systems.Sun.SunSettings.TypeInfoHolder.NormalAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Systems.Sun.SunSettings.TypeInfoHolder.NormalAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3}#Set(System.Byte@,Keen.VRage.Library.Mathematics.Vector3@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Systems.Sun.SunSettings.TypeInfoHolder.NormalAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Systems.Sun.SunSettings.TypeInfoHolder.NormalAccessor.Set(Keen.VRage.Core.Systems.Sun.SunSettings@,Keen.VRage.Library.Mathematics.Vector3@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Systems.Sun.SunSettings.TypeInfoHolder.NormalAccessor.Get(Keen.VRage.Core.Systems.Sun.SunSettings@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Systems.RenderSubmissionBegin">
            <summary>
            Render submission starts after this sync point
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Systems.AnyTime">
            <summary>
            Scheduled Jobs are free to run any time during the frame
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Systems.OnAfterSimulation">
            <summary>
            Execute after all simulation steps have completed
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Systems.OnDataReplication">
            <summary>
            Latest point at which Data need to be ready for replication collection.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Systems.OnDataReplication.ClientToServer">
            <summary>
            Jobs in this JG are automatically scheduled only in Client Scenes
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Systems.OnDataReplication.ServerToClient">
            <summary>
            Jobs in this JG are automatically scheduled only in Server Scenes
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Utils.AssemblyLoader">
            <summary>
            Utility class to load assemblies.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Utils.AssemblyLoader.Locate(System.String,System.Collections.Generic.IEnumerable{Keen.VRage.Core.Utils.AssemblySearchPath},System.Boolean)">
            <summary>
            Locate the assembly from paths.
            </summary>
            <param name="name">Name of the assembly.</param>
            <param name="unformattedPaths">Unformatted path to the assembly. Can be relative or absolute to <see cref="P:Keen.VRage.Core.Utils.IAssemblySearchStrategy.RelativeToFolder"/>.</param>
            <param name="optional">Can this be ignored.</param>
            <returns>This</returns>
            <remarks>Do not report loading issues until <see cref="M:Keen.VRage.Core.Utils.AssemblyLoader.Load(System.Collections.Generic.IEnumerable{Keen.VRage.Core.Utils.AssemblyLoader.IErrors}@,Microsoft.Extensions.Logging.ILogger)"/> is called.</remarks>
        </member>
        <member name="M:Keen.VRage.Core.Utils.AssemblyLoader.Load(System.Collections.Generic.IEnumerable{Keen.VRage.Core.Utils.AssemblyLoader.IErrors}@,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Try to load all assemblies added to this loader.
            </summary>
            <param name="errors">Not null if not all assemblies could be loaded.</param>
            <param name="logger"></param>
            <returns>True if all required assemblies were loaded.</returns>
        </member>
        <member name="M:Keen.VRage.Core.Utils.AssemblyLoader.ListAssemblies(System.Collections.Generic.IEnumerable{System.Reflection.Assembly}@,System.Collections.Generic.IEnumerable{Keen.VRage.Core.Utils.AssemblyLoader.IErrors}@,Microsoft.Extensions.Logging.ILogger)">
            <inheritdoc cref="M:Keen.VRage.Core.Utils.AssemblyLoader.Load(System.Collections.Generic.IEnumerable{Keen.VRage.Core.Utils.AssemblyLoader.IErrors}@,Microsoft.Extensions.Logging.ILogger)"/>
        </member>
        <member name="M:Keen.VRage.Core.Utils.AssemblyLoader.Locate(System.String,System.Collections.Generic.IEnumerable{Keen.VRage.Core.Utils.AssemblySearchPath},Keen.VRage.Core.Utils.IAssemblySearchStrategy,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Locate all files of the assembly <paramref name="name"/> and select the best one according to <paramref name="strategy"/>.
            </summary>
            <param name="name"></param>
            <param name="unformattedPaths"></param>
            <param name="strategy"></param>
            <param name="logger"></param>
            <returns>The path to the assembly file or null of not found or not allowed.</returns>
        </member>
        <member name="M:Keen.VRage.Core.Utils.AssemblyLoader.GetAssemblyName(System.String)">
            <remarks>Replace ".exe" by ".dll".</remarks>
            <inheritdoc cref="M:System.Reflection.AssemblyName.GetAssemblyName(System.String)"/>
        </member>
        <member name="M:Keen.VRage.Core.Utils.AssemblyLoader.FormatPossiblePathsToFind(System.String,System.Collections.Generic.IEnumerable{Keen.VRage.Core.Utils.AssemblySearchPath},Keen.VRage.Core.Utils.IAssemblySearchStrategy)">
            <summary>
            List all path that could contains the <paramref name="targetAssembly"/> file.
            </summary>
            <param name="targetAssembly"></param>
            <param name="possibleUnformattedAssemblyPaths"></param>
            <param name="strategy"></param>
            <returns></returns>
        </member>
        <member name="T:Keen.VRage.Core.Utils.AssemblyLoader.IErrors">
            <summary>
            Error when loading or searching an assembly.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Utils.AssemblyLoader.IErrors.AssemblyName">
            <summary>
            Name of the searched assembly.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Utils.AssemblyLoader.AssemblyNotValidError">
            <summary>
            Error when the assembly was found but denied by strategy.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Utils.AssemblyLoader.AssemblyNotFoundError">
            <summary>
            Error when the assembly was not found in given paths.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Utils.AssemblyLoader.AssemblyLoadError">
            <summary>
            Error when assembly file was found but could not be loaded.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Utils.AssemblySearchPath">
            <summary>
            Search path to find an assembly.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Utils.AssemblySearchPath.Path">
            <summary>
            May be absolute, relative, may target the assembly itself or the folder that contains it.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Utils.AssemblySearchPath.Origin">
            <inheritdoc cref="T:Keen.VRage.Core.Utils.AssemblySearchPathOrigin"/>
        </member>
        <member name="T:Keen.VRage.Core.Utils.AssemblySearchPathOrigin">
            <summary>
            Where the assembly path comes from.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Utils.AssemblySearchPathOrigin.Unknown">
            <summary>
            No information was provided. 
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Utils.AssemblySearchPathOrigin.Project">
            <summary>
            Path provided by projects.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Utils.AssemblySearchPathOrigin.External">
            <summary>
            Path provided by external applications.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Utils.AssemblyTestedPath">
            <summary>
            Full path that was tested to find an assembly.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Utils.AssemblyTestedPath.FilePath">
            <summary>
            May be absolute or relative.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Utils.AssemblyTestedPath.Origin">
            <inheritdoc cref="T:Keen.VRage.Core.Utils.AssemblySearchPathOrigin"/>
        </member>
        <member name="T:Keen.VRage.Core.Utils.ContentFileExtensions">
            <summary>
            File extensions for Content resource files used by VRage
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Utils.IAssemblySearchStrategy">
            <summary>
            Strategy to select an assembly file.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Utils.IAssemblySearchStrategy.BuildConfiguration">
            <summary>
            If not null replace '{BuildConfiguration}' tag in search paths.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Utils.IAssemblySearchStrategy.RelativeToFolder">
            <summary>
            If not null search assemblies relative to this folder.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Utils.IAssemblySearchStrategy.SelectAssembly(Keen.VRage.Library.Collections.PooledList{Keen.VRage.Core.Utils.LocatedAssemblyFile})">
            <summary>
            Loop over all available files for an assembly and select the one to load.
            </summary>
            <param name="files">Editable list of assembly files.</param>
            <returns>The path to the assembly file.</returns>
        </member>
        <member name="T:Keen.VRage.Core.Utils.LocatedAssemblyFile">
            <summary>
            An assembly file about to be selected.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Utils.LocatedAssemblyFile.SearchPath">
            <summary>
            Path used to find the assembly.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Utils.LocatedAssemblyFile.Path">
            <summary>
            Path to the assembly.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Utils.AssemblySearchStrategyBase">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Utils.MostRecentAssemblySearchStrategy">
            <summary>
            Select assembly by chosing the highest version.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Utils.UseExecutingAssemblyVersionSearchStrategy">
            <summary>
            Select assembly with version equals to version from <see cref="M:System.Reflection.Assembly.GetExecutingAssembly"/>
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Utils.PrioritizeOriginAssemblySearchStrategy">
            <summary>
            Select files that match target <see cref="T:Keen.VRage.Core.Utils.AssemblySearchPathOrigin"/>.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Utils.PrioritizeOriginAssemblySearchStrategy.InnerStrategy">
            <summary>
            What strategy to use after prioritizing origins.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Utils.PrioritizeOriginAssemblySearchStrategy.PriorityOrigin">
            <summary>
            What origin should be selected.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Utils.PrioritizeOriginAssemblySearchStrategy.EnableFallback">
            <summary>
            Do this strategy allows other <see cref="T:Keen.VRage.Core.Utils.AssemblySearchPathOrigin"/> if no files match <see cref="P:Keen.VRage.Core.Utils.PrioritizeOriginAssemblySearchStrategy.PriorityOrigin"/>.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Utils.ImageMetadata">
            <summary>
            General image metadata. Used for all image formats. Supports dds,png,bpm,tga image formats. Supports mips.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Utils.ImageMetadata.IsValid">
            <summary>
            if true data is collected correctly and fully. if false, data is not collected or during collection error occurred.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Utils.ImageMetadata.Dimensions">
            <summary>
            Dimensions of the image(highest mip)
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Utils.ImageMetadata.FileMips">
            <summary>
            Mip info for all mips stored in the original file
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Utils.ImageMetadata.MetadataPNG">
            <summary>
            Image format information
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Utils.ImageMetadata.MetadataDDS">
            <summary>
            Image format information
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.MipLevels">
            <summary>
            Get mip levels stored in the file.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.#ctor">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Utils.ImageMetadata.PngMetadata">
            <summary>
            PNG metadata
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Utils.ImageMetadata.PngMetadata.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.PngMetadata.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.PngMetadata.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Utils.ImageMetadata.PngMetadata@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.PngMetadata.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.PngMetadata.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Utils.ImageMetadata.PngMetadata@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.PngMetadata.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.PngMetadata.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Utils.ImageMetadata.PngMetadata@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.PngMetadata.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.PngMetadata.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.PngMetadata.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.PngMetadata.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.PngMetadata.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Utils.ImageMetadata.PngMetadata@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.PngMetadata.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.PngMetadata.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Utils.ImageMetadata.PngMetadata@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.PngMetadata.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.PngMetadata.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.PngMetadata.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Utils.ImageMetadata.PngMetadata@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.PngMetadata.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Utils.ImageMetadata.PngMetadata.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.PngMetadata.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.PngMetadata.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.PngMetadata.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Utils#ImageMetadata#PngMetadata}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.PngMetadata.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Utils.ImageMetadata.PngMetadata.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Utils.ImageMetadata.PngMetadata.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Utils.ImageMetadata.PngMetadata.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.PngMetadata.TypeInfoHolder.ColorTypeAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.PngMetadata.TypeInfoHolder.ColorTypeAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.PngMetadata.TypeInfoHolder.ColorTypeAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.PngMetadata.TypeInfoHolder.ColorTypeAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.PngMetadata.TypeInfoHolder.ColorTypeAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.PngMetadata.TypeInfoHolder.ColorTypeAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.PngMetadata.TypeInfoHolder.ColorTypeAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.PngMetadata.TypeInfoHolder.ColorTypeAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.PngMetadata.TypeInfoHolder.ColorTypeAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.PngMetadata.TypeInfoHolder.ColorTypeAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.PngMetadata.TypeInfoHolder.ColorTypeAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.PngMetadata.TypeInfoHolder.ColorTypeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.PngMetadata.TypeInfoHolder.ColorTypeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.PngMetadata.TypeInfoHolder.ColorTypeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.PngMetadata.TypeInfoHolder.ColorTypeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{SixLabors#ImageSharp#Formats#Png#PngColorType}#Set(System.Object,SixLabors.ImageSharp.Formats.Png.PngColorType@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.PngMetadata.TypeInfoHolder.ColorTypeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{SixLabors#ImageSharp#Formats#Png#PngColorType}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.PngMetadata.TypeInfoHolder.ColorTypeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{SixLabors#ImageSharp#Formats#Png#PngColorType}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.PngMetadata.TypeInfoHolder.ColorTypeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{SixLabors#ImageSharp#Formats#Png#PngColorType}#Set(System.Byte@,SixLabors.ImageSharp.Formats.Png.PngColorType@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.PngMetadata.TypeInfoHolder.ColorTypeAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.PngMetadata.TypeInfoHolder.ColorTypeAccessor.Set(Keen.VRage.Core.Utils.ImageMetadata.PngMetadata@,SixLabors.ImageSharp.Formats.Png.PngColorType@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.PngMetadata.TypeInfoHolder.ColorTypeAccessor.Get(Keen.VRage.Core.Utils.ImageMetadata.PngMetadata@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.PngMetadata.TypeInfoHolder.BitsPerChannelAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.PngMetadata.TypeInfoHolder.BitsPerChannelAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.PngMetadata.TypeInfoHolder.BitsPerChannelAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.PngMetadata.TypeInfoHolder.BitsPerChannelAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.PngMetadata.TypeInfoHolder.BitsPerChannelAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.PngMetadata.TypeInfoHolder.BitsPerChannelAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.PngMetadata.TypeInfoHolder.BitsPerChannelAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.PngMetadata.TypeInfoHolder.BitsPerChannelAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.PngMetadata.TypeInfoHolder.BitsPerChannelAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.PngMetadata.TypeInfoHolder.BitsPerChannelAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.PngMetadata.TypeInfoHolder.BitsPerChannelAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.PngMetadata.TypeInfoHolder.BitsPerChannelAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.PngMetadata.TypeInfoHolder.BitsPerChannelAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.PngMetadata.TypeInfoHolder.BitsPerChannelAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.PngMetadata.TypeInfoHolder.BitsPerChannelAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{SixLabors#ImageSharp#Formats#Png#PngBitDepth}#Set(System.Object,SixLabors.ImageSharp.Formats.Png.PngBitDepth@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.PngMetadata.TypeInfoHolder.BitsPerChannelAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{SixLabors#ImageSharp#Formats#Png#PngBitDepth}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.PngMetadata.TypeInfoHolder.BitsPerChannelAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{SixLabors#ImageSharp#Formats#Png#PngBitDepth}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.PngMetadata.TypeInfoHolder.BitsPerChannelAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{SixLabors#ImageSharp#Formats#Png#PngBitDepth}#Set(System.Byte@,SixLabors.ImageSharp.Formats.Png.PngBitDepth@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.PngMetadata.TypeInfoHolder.BitsPerChannelAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.PngMetadata.TypeInfoHolder.BitsPerChannelAccessor.Set(Keen.VRage.Core.Utils.ImageMetadata.PngMetadata@,SixLabors.ImageSharp.Formats.Png.PngBitDepth@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.PngMetadata.TypeInfoHolder.BitsPerChannelAccessor.Get(Keen.VRage.Core.Utils.ImageMetadata.PngMetadata@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata">
            <summary>
            DDS metadata
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.DxFormat">
            <summary>
            DXGI format
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.ArraySize">
            <summary>
            Array size
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.Depth">
            <summary>
            Texture depth
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.MipLevels">
            <summary>
            Total number of mip maps
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.CachedMips">
            <summary>
            Info about mip maps that are 32 and lower
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.CachedImageData">
            <summary>
            Cache data of all mips that are 32 and lower
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Utils#ImageMetadata#DdsMetadata}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.DxFormatAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.DxFormatAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.DxFormatAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.DxFormatAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.DxFormatAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.DxFormatAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.DxFormatAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.DxFormatAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.DxFormatAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.DxFormatAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.DxFormatAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.DxFormatAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.DxFormatAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.DxFormatAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.DxFormatAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Set(System.Object,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.DxFormatAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.DxFormatAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.DxFormatAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Set(System.Byte@,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.DxFormatAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.DxFormatAccessor.Set(Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata@,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.DxFormatAccessor.Get(Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.ArraySizeAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.ArraySizeAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.ArraySizeAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.ArraySizeAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.ArraySizeAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.ArraySizeAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.ArraySizeAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.ArraySizeAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.ArraySizeAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.ArraySizeAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.ArraySizeAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.ArraySizeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.ArraySizeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.ArraySizeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.ArraySizeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Set(System.Object,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.ArraySizeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.ArraySizeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.ArraySizeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Set(System.Byte@,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.ArraySizeAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.ArraySizeAccessor.Set(Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata@,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.ArraySizeAccessor.Get(Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.DepthAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.DepthAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.DepthAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.DepthAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.DepthAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.DepthAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.DepthAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.DepthAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.DepthAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.DepthAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.DepthAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.DepthAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.DepthAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.DepthAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.DepthAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Set(System.Object,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.DepthAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.DepthAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.DepthAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Set(System.Byte@,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.DepthAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.DepthAccessor.Set(Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata@,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.DepthAccessor.Get(Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.MipLevelsAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.MipLevelsAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.MipLevelsAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.MipLevelsAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.MipLevelsAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.MipLevelsAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.MipLevelsAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.MipLevelsAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.MipLevelsAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.MipLevelsAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.MipLevelsAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.MipLevelsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.MipLevelsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.MipLevelsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.MipLevelsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Set(System.Object,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.MipLevelsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.MipLevelsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.MipLevelsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Set(System.Byte@,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.MipLevelsAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.MipLevelsAccessor.Set(Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata@,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.MipLevelsAccessor.Get(Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.CachedMipsAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.CachedMipsAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.CachedMipsAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.CachedMipsAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.CachedMipsAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.CachedMipsAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.CachedMipsAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.CachedMipsAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.CachedMipsAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.CachedMipsAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.CachedMipsAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.CachedMipsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.CachedMipsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.CachedMipsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.CachedMipsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Immutable#ImmutableArray{Keen#VRage#Core#Utils#ImageMetadata#CachedMip}}#Set(System.Object,System.Collections.Immutable.ImmutableArray{Keen.VRage.Core.Utils.ImageMetadata.CachedMip}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.CachedMipsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Immutable#ImmutableArray{Keen#VRage#Core#Utils#ImageMetadata#CachedMip}}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.CachedMipsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Immutable#ImmutableArray{Keen#VRage#Core#Utils#ImageMetadata#CachedMip}}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.CachedMipsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Immutable#ImmutableArray{Keen#VRage#Core#Utils#ImageMetadata#CachedMip}}#Set(System.Byte@,System.Collections.Immutable.ImmutableArray{Keen.VRage.Core.Utils.ImageMetadata.CachedMip}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.CachedMipsAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.CachedMipsAccessor.Set(Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata@,System.Collections.Immutable.ImmutableArray{Keen.VRage.Core.Utils.ImageMetadata.CachedMip}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.CachedMipsAccessor.Get(Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.CachedImageDataAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.CachedImageDataAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.CachedImageDataAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.CachedImageDataAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.CachedImageDataAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.CachedImageDataAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.CachedImageDataAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.CachedImageDataAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.CachedImageDataAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.CachedImageDataAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.CachedImageDataAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.CachedImageDataAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.CachedImageDataAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.CachedImageDataAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.CachedImageDataAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Immutable#ImmutableArray{System#Byte}}#Set(System.Object,System.Collections.Immutable.ImmutableArray{System.Byte}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.CachedImageDataAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Immutable#ImmutableArray{System#Byte}}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.CachedImageDataAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Immutable#ImmutableArray{System#Byte}}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.CachedImageDataAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Immutable#ImmutableArray{System#Byte}}#Set(System.Byte@,System.Collections.Immutable.ImmutableArray{System.Byte}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.CachedImageDataAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.CachedImageDataAccessor.Set(Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata@,System.Collections.Immutable.ImmutableArray{System.Byte}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata.TypeInfoHolder.CachedImageDataAccessor.Get(Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Utils.ImageMetadata.FileMip">
            <summary>
            Single mip slice description.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Utils.ImageMetadata.FileMip.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.FileMip.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.FileMip.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Utils.ImageMetadata.FileMip@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.FileMip.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.FileMip.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Utils.ImageMetadata.FileMip@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.FileMip.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.FileMip.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Utils.ImageMetadata.FileMip@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.FileMip.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.FileMip.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.FileMip.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.FileMip.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.FileMip.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Utils.ImageMetadata.FileMip@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.FileMip.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.FileMip.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Utils.ImageMetadata.FileMip@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.FileMip.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.FileMip.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.FileMip.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Utils.ImageMetadata.FileMip@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.FileMip.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Utils.ImageMetadata.FileMip.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.FileMip.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.FileMip.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.FileMip.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Utils#ImageMetadata#FileMip}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.FileMip.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Utils.ImageMetadata.FileMip.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Utils.ImageMetadata.FileMip.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Utils.ImageMetadata.FileMip.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.FileMip.TypeInfoHolder.ResolutionAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.FileMip.TypeInfoHolder.ResolutionAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.FileMip.TypeInfoHolder.ResolutionAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.FileMip.TypeInfoHolder.ResolutionAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.FileMip.TypeInfoHolder.ResolutionAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.FileMip.TypeInfoHolder.ResolutionAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.FileMip.TypeInfoHolder.ResolutionAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.FileMip.TypeInfoHolder.ResolutionAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.FileMip.TypeInfoHolder.ResolutionAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.FileMip.TypeInfoHolder.ResolutionAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.FileMip.TypeInfoHolder.ResolutionAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.FileMip.TypeInfoHolder.ResolutionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.FileMip.TypeInfoHolder.ResolutionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.FileMip.TypeInfoHolder.ResolutionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.FileMip.TypeInfoHolder.ResolutionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector2I}#Set(System.Object,Keen.VRage.Library.Mathematics.Vector2I@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.FileMip.TypeInfoHolder.ResolutionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector2I}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.FileMip.TypeInfoHolder.ResolutionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector2I}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.FileMip.TypeInfoHolder.ResolutionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector2I}#Set(System.Byte@,Keen.VRage.Library.Mathematics.Vector2I@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.FileMip.TypeInfoHolder.ResolutionAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.FileMip.TypeInfoHolder.ResolutionAccessor.Set(Keen.VRage.Core.Utils.ImageMetadata.FileMip@,Keen.VRage.Library.Mathematics.Vector2I@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.FileMip.TypeInfoHolder.ResolutionAccessor.Get(Keen.VRage.Core.Utils.ImageMetadata.FileMip@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.FileMip.TypeInfoHolder.DepthAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.FileMip.TypeInfoHolder.DepthAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.FileMip.TypeInfoHolder.DepthAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.FileMip.TypeInfoHolder.DepthAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.FileMip.TypeInfoHolder.DepthAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.FileMip.TypeInfoHolder.DepthAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.FileMip.TypeInfoHolder.DepthAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.FileMip.TypeInfoHolder.DepthAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.FileMip.TypeInfoHolder.DepthAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.FileMip.TypeInfoHolder.DepthAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.FileMip.TypeInfoHolder.DepthAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.FileMip.TypeInfoHolder.DepthAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.FileMip.TypeInfoHolder.DepthAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.FileMip.TypeInfoHolder.DepthAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.FileMip.TypeInfoHolder.DepthAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Set(System.Object,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.FileMip.TypeInfoHolder.DepthAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.FileMip.TypeInfoHolder.DepthAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.FileMip.TypeInfoHolder.DepthAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Set(System.Byte@,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.FileMip.TypeInfoHolder.DepthAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.FileMip.TypeInfoHolder.DepthAccessor.Set(Keen.VRage.Core.Utils.ImageMetadata.FileMip@,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.FileMip.TypeInfoHolder.DepthAccessor.Get(Keen.VRage.Core.Utils.ImageMetadata.FileMip@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Utils.ImageMetadata.CachedMip">
            <summary>
            Single mip slice description.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Utils.ImageMetadata.CachedMip@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Utils.ImageMetadata.CachedMip@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Utils.ImageMetadata.CachedMip@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Utils.ImageMetadata.CachedMip@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Utils.ImageMetadata.CachedMip@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Utils.ImageMetadata.CachedMip@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Utils#ImageMetadata#CachedMip}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.CachedImageDataOffsetAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.CachedImageDataOffsetAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.CachedImageDataOffsetAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.CachedImageDataOffsetAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.CachedImageDataOffsetAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.CachedImageDataOffsetAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.CachedImageDataOffsetAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.CachedImageDataOffsetAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.CachedImageDataOffsetAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.CachedImageDataOffsetAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.CachedImageDataOffsetAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.CachedImageDataOffsetAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.CachedImageDataOffsetAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.CachedImageDataOffsetAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.CachedImageDataOffsetAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Set(System.Object,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.CachedImageDataOffsetAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.CachedImageDataOffsetAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.CachedImageDataOffsetAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Set(System.Byte@,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.CachedImageDataOffsetAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.CachedImageDataOffsetAccessor.Set(Keen.VRage.Core.Utils.ImageMetadata.CachedMip@,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.CachedImageDataOffsetAccessor.Get(Keen.VRage.Core.Utils.ImageMetadata.CachedMip@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.ResolutionAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.ResolutionAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.ResolutionAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.ResolutionAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.ResolutionAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.ResolutionAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.ResolutionAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.ResolutionAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.ResolutionAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.ResolutionAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.ResolutionAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.ResolutionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.ResolutionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.ResolutionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.ResolutionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector2I}#Set(System.Object,Keen.VRage.Library.Mathematics.Vector2I@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.ResolutionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector2I}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.ResolutionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector2I}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.ResolutionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector2I}#Set(System.Byte@,Keen.VRage.Library.Mathematics.Vector2I@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.ResolutionAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.ResolutionAccessor.Set(Keen.VRage.Core.Utils.ImageMetadata.CachedMip@,Keen.VRage.Library.Mathematics.Vector2I@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.ResolutionAccessor.Get(Keen.VRage.Core.Utils.ImageMetadata.CachedMip@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.DepthAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.DepthAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.DepthAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.DepthAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.DepthAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.DepthAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.DepthAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.DepthAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.DepthAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.DepthAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.DepthAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.DepthAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.DepthAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.DepthAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.DepthAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Set(System.Object,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.DepthAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.DepthAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.DepthAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Set(System.Byte@,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.DepthAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.DepthAccessor.Set(Keen.VRage.Core.Utils.ImageMetadata.CachedMip@,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.DepthAccessor.Get(Keen.VRage.Core.Utils.ImageMetadata.CachedMip@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.RowPitchAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.RowPitchAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.RowPitchAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.RowPitchAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.RowPitchAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.RowPitchAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.RowPitchAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.RowPitchAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.RowPitchAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.RowPitchAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.RowPitchAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.RowPitchAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.RowPitchAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.RowPitchAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.RowPitchAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Set(System.Object,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.RowPitchAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.RowPitchAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.RowPitchAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Set(System.Byte@,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.RowPitchAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.RowPitchAccessor.Set(Keen.VRage.Core.Utils.ImageMetadata.CachedMip@,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.RowPitchAccessor.Get(Keen.VRage.Core.Utils.ImageMetadata.CachedMip@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.FacePitchAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.FacePitchAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.FacePitchAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.FacePitchAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.FacePitchAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.FacePitchAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.FacePitchAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.FacePitchAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.FacePitchAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.FacePitchAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.FacePitchAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.FacePitchAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.FacePitchAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.FacePitchAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.FacePitchAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Set(System.Object,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.FacePitchAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.FacePitchAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.FacePitchAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Set(System.Byte@,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.FacePitchAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.FacePitchAccessor.Set(Keen.VRage.Core.Utils.ImageMetadata.CachedMip@,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.CachedMip.TypeInfoHolder.FacePitchAccessor.Get(Keen.VRage.Core.Utils.ImageMetadata.CachedMip@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Utils.ImageMetadata.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Utils.ImageMetadata@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Utils.ImageMetadata@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Utils.ImageMetadata@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Utils.ImageMetadata@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Utils.ImageMetadata@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Utils.ImageMetadata@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Utils.ImageMetadata@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Utils.ImageMetadata.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Utils#ImageMetadata}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.IsValidAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.IsValidAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.IsValidAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.IsValidAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.IsValidAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.IsValidAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.IsValidAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.IsValidAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.IsValidAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.IsValidAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.IsValidAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.IsValidAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.IsValidAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.IsValidAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.IsValidAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.IsValidAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.IsValidAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.IsValidAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.IsValidAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.IsValidAccessor.Set(Keen.VRage.Core.Utils.ImageMetadata@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.IsValidAccessor.Get(Keen.VRage.Core.Utils.ImageMetadata@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.DimensionsAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.DimensionsAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.DimensionsAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.DimensionsAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.DimensionsAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.DimensionsAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.DimensionsAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.DimensionsAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.DimensionsAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.DimensionsAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.DimensionsAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.DimensionsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.DimensionsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.DimensionsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.DimensionsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector2I}#Set(System.Object,Keen.VRage.Library.Mathematics.Vector2I@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.DimensionsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector2I}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.DimensionsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector2I}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.DimensionsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector2I}#Set(System.Byte@,Keen.VRage.Library.Mathematics.Vector2I@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.DimensionsAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.DimensionsAccessor.Set(Keen.VRage.Core.Utils.ImageMetadata@,Keen.VRage.Library.Mathematics.Vector2I@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.DimensionsAccessor.Get(Keen.VRage.Core.Utils.ImageMetadata@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.FileMipsAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.FileMipsAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.FileMipsAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.FileMipsAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.FileMipsAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.FileMipsAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.FileMipsAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.FileMipsAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.FileMipsAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.FileMipsAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.FileMipsAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.FileMipsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.FileMipsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.FileMipsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.FileMipsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Immutable#ImmutableArray{Keen#VRage#Core#Utils#ImageMetadata#FileMip}}#Set(System.Object,System.Collections.Immutable.ImmutableArray{Keen.VRage.Core.Utils.ImageMetadata.FileMip}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.FileMipsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Immutable#ImmutableArray{Keen#VRage#Core#Utils#ImageMetadata#FileMip}}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.FileMipsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Immutable#ImmutableArray{Keen#VRage#Core#Utils#ImageMetadata#FileMip}}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.FileMipsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Immutable#ImmutableArray{Keen#VRage#Core#Utils#ImageMetadata#FileMip}}#Set(System.Byte@,System.Collections.Immutable.ImmutableArray{Keen.VRage.Core.Utils.ImageMetadata.FileMip}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.FileMipsAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.FileMipsAccessor.Set(Keen.VRage.Core.Utils.ImageMetadata@,System.Collections.Immutable.ImmutableArray{Keen.VRage.Core.Utils.ImageMetadata.FileMip}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.FileMipsAccessor.Get(Keen.VRage.Core.Utils.ImageMetadata@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.MetadataPNGAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.MetadataPNGAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.MetadataPNGAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.MetadataPNGAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.MetadataPNGAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.MetadataPNGAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.MetadataPNGAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.MetadataPNGAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.MetadataPNGAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.MetadataPNGAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.MetadataPNGAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.MetadataPNGAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.MetadataPNGAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.MetadataPNGAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.MetadataPNGAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Utils#ImageMetadata#PngMetadata?}#Set(System.Object,System.Nullable{Keen.VRage.Core.Utils.ImageMetadata.PngMetadata}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.MetadataPNGAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Utils#ImageMetadata#PngMetadata?}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.MetadataPNGAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Utils#ImageMetadata#PngMetadata?}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.MetadataPNGAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Utils#ImageMetadata#PngMetadata?}#Set(System.Byte@,System.Nullable{Keen.VRage.Core.Utils.ImageMetadata.PngMetadata}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.MetadataPNGAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.MetadataPNGAccessor.Set(Keen.VRage.Core.Utils.ImageMetadata@,System.Nullable{Keen.VRage.Core.Utils.ImageMetadata.PngMetadata}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.MetadataPNGAccessor.Get(Keen.VRage.Core.Utils.ImageMetadata@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.MetadataDDSAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.MetadataDDSAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.MetadataDDSAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.MetadataDDSAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.MetadataDDSAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.MetadataDDSAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.MetadataDDSAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.MetadataDDSAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.MetadataDDSAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.MetadataDDSAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.MetadataDDSAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.MetadataDDSAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.MetadataDDSAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.MetadataDDSAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.MetadataDDSAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Utils#ImageMetadata#DdsMetadata?}#Set(System.Object,System.Nullable{Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.MetadataDDSAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Utils#ImageMetadata#DdsMetadata?}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.MetadataDDSAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Utils#ImageMetadata#DdsMetadata?}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.MetadataDDSAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Utils#ImageMetadata#DdsMetadata?}#Set(System.Byte@,System.Nullable{Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.MetadataDDSAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.MetadataDDSAccessor.Set(Keen.VRage.Core.Utils.ImageMetadata@,System.Nullable{Keen.VRage.Core.Utils.ImageMetadata.DdsMetadata}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.MetadataDDSAccessor.Get(Keen.VRage.Core.Utils.ImageMetadata@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.MipLevelsAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.MipLevelsAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.MipLevelsAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.MipLevelsAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.MipLevelsAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.MipLevelsAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.MipLevelsAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.MipLevelsAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.MipLevelsAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.MipLevelsAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.MipLevelsAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.MipLevelsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.MipLevelsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.MipLevelsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.MipLevelsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Set(System.Object,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.MipLevelsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.MipLevelsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.MipLevelsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Set(System.Byte@,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.MipLevelsAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.MipLevelsAccessor.Set(Keen.VRage.Core.Utils.ImageMetadata@,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ImageMetadata.TypeInfoHolder.MipLevelsAccessor.Get(Keen.VRage.Core.Utils.ImageMetadata@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Utils.IVRageStatsRecorder">
            <summary>
            Service that records engine stats.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.Utils.IVRageStatsRecorder.IsRecording">
            <summary>
            Is the recorder recording.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Utils.IVRageStatsRecorder.Record">
            <summary>
            Request the recorder to record the current stats.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Utils.PCUMeasurementTestMetadata">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Utils.PCUMeasurementTestMetadata.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.PCUMeasurementTestMetadata.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.PCUMeasurementTestMetadata.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Utils.PCUMeasurementTestMetadata@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.PCUMeasurementTestMetadata.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.PCUMeasurementTestMetadata.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Utils.PCUMeasurementTestMetadata@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.PCUMeasurementTestMetadata.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.PCUMeasurementTestMetadata.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Utils.PCUMeasurementTestMetadata@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.PCUMeasurementTestMetadata.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.PCUMeasurementTestMetadata.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.PCUMeasurementTestMetadata.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.PCUMeasurementTestMetadata.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.PCUMeasurementTestMetadata.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Utils.PCUMeasurementTestMetadata@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.PCUMeasurementTestMetadata.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.PCUMeasurementTestMetadata.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Utils.PCUMeasurementTestMetadata@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.PCUMeasurementTestMetadata.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.PCUMeasurementTestMetadata.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.PCUMeasurementTestMetadata.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Utils.PCUMeasurementTestMetadata@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.PCUMeasurementTestMetadata.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Utils.PCUMeasurementTestMetadata.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.PCUMeasurementTestMetadata.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.PCUMeasurementTestMetadata.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.PCUMeasurementTestMetadata.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Utils#PCUMeasurementTestMetadata}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.PCUMeasurementTestMetadata.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Utils.PCUMeasurementTestMetadata.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Utils.PCUMeasurementTestMetadata.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Utils.PCUMeasurementTestMetadata.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="T:Keen.VRage.Core.Utils.PngHeader">
            <summary>
            Header information of a PNG file.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Utils.PngHeader.#ctor(System.UInt32,System.UInt32,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            Header information of a PNG file.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Utils.PngUtils">
            <summary>
            Utilities for working with PNG files
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Utils.PngUtils.TryGetColorProfile(System.IO.Stream,System.Byte[]@)">
            <summary>
            Attempts to read color profile data from PNG.
            </summary>
            <param name="pngStream"></param>
            <param name="colorProfileData">Profile data if present.</param>
            <returns>Whether the PNG file inspection was successful. <see lang="false"/> indicates file is corrupted and could not be read.</returns>
        </member>
        <member name="M:Keen.VRage.Core.Utils.PngUtils.TrySeekHeader(System.IO.Stream,System.UInt32,System.UInt32@)">
            <summary>
            Assumes the stream is currently at start of the first chunk after the PNG magic.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Utils.PngUtils.ReadSpan(System.IO.Stream,System.Span{System.Byte})">
            <returns>Whether the span was filled. false when less data than the span length was read</returns>
        </member>
        <member name="T:Keen.VRage.Core.Utils.RawStatsMetadata">
            <summary>
            MetaData struct for the Temp container for logs.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Utils.RawStatsMetadata.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.RawStatsMetadata.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.RawStatsMetadata.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Utils.RawStatsMetadata@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.RawStatsMetadata.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.RawStatsMetadata.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Utils.RawStatsMetadata@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.RawStatsMetadata.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.RawStatsMetadata.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Utils.RawStatsMetadata@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.RawStatsMetadata.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.RawStatsMetadata.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.RawStatsMetadata.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.RawStatsMetadata.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.RawStatsMetadata.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Utils.RawStatsMetadata@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.RawStatsMetadata.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.RawStatsMetadata.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Utils.RawStatsMetadata@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.RawStatsMetadata.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.RawStatsMetadata.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.RawStatsMetadata.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Utils.RawStatsMetadata@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.RawStatsMetadata.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Utils.RawStatsMetadata.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.RawStatsMetadata.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.RawStatsMetadata.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.RawStatsMetadata.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Utils#RawStatsMetadata}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.RawStatsMetadata.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Utils.RawStatsMetadata.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Utils.RawStatsMetadata.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Utils.RawStatsMetadata.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="T:Keen.VRage.Core.Utils.RuntimeUtils">
            <summary>
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.Utils.RuntimeUtils.GetBuildConfiguration">
            <summary>
            Get the current configuration
            </summary>
            <returns></returns>
        </member>
        <member name="T:Keen.VRage.Core.Utils.BuildConfiguration">
            <summary>
            What configuration was the code built with.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Utils.ScreenshotMetadata">
            <summary>
            MetaData struct for the Temp container for screenshots.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Utils.ScreenshotMetadata.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ScreenshotMetadata.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ScreenshotMetadata.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.Utils.ScreenshotMetadata@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ScreenshotMetadata.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ScreenshotMetadata.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Utils.ScreenshotMetadata@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ScreenshotMetadata.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ScreenshotMetadata.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.Utils.ScreenshotMetadata@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ScreenshotMetadata.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ScreenshotMetadata.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ScreenshotMetadata.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ScreenshotMetadata.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ScreenshotMetadata.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.Utils.ScreenshotMetadata@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ScreenshotMetadata.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ScreenshotMetadata.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.Utils.ScreenshotMetadata@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ScreenshotMetadata.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ScreenshotMetadata.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ScreenshotMetadata.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.Utils.ScreenshotMetadata@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ScreenshotMetadata.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Utils.ScreenshotMetadata.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ScreenshotMetadata.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ScreenshotMetadata.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.Utils.ScreenshotMetadata.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#Utils#ScreenshotMetadata}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.Utils.ScreenshotMetadata.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Utils.ScreenshotMetadata.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.Utils.ScreenshotMetadata.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.Utils.ScreenshotMetadata.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="T:Keen.VRage.Core.Voxels.PlanetBitmapAsset">
            <summary>
            Asset for planet bitmap.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Voxels.PlanetCubemapAsset">
            <summary>
            Asset for planet cubemap.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Voxels.SBMAssetType">
            <summary>
            Asset type for <see cref="F:Keen.VRage.Core.Utils.ContentFileExtensions.PLANET_BITMAP"/>
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Voxels.SCMAssetType">
            <summary>
            Asset type for <see cref="F:Keen.VRage.Core.Utils.ContentFileExtensions.PLANET_CUBEMAP"/>
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Voxels.VoxelStorageAsset">
            <summary>
            Asset for voxel storage
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.Voxels.VX2AssetType">
            <summary>
            Asset type for <see cref="F:Keen.VRage.Core.Utils.ContentFileExtensions.VOXEL"/>
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.VRageAssetsHelper">
            <summary>
            Helper class for accessing built-in VRage assets.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.VRageAssetsHelper.BasePath">
            <summary>
            Base path for the VRage engine source or built-in assets distribution.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.VRageAssetsHelper.#ctor(System.String)">
            <summary>
            Create a new helper for VRage assets.
            </summary>
            <param name="basePath"></param>
        </member>
        <member name="M:Keen.VRage.Core.VRageAssetsHelper.GetAssets">
            <summary>
            Get the Target and source directories of all built-in assets. 
            </summary>
            <remarks>
            This can be used to compile a final content folder for an application that does not rely on having the built-in
            assets in a separate location.
            </remarks>
        </member>
        <member name="T:Keen.VRage.Core.VRageCore">
            <summary>
            Base class for all VRage applications.
            </summary>
        </member>
        <member name="E:Keen.VRage.Core.VRageCore.OnApplicationReady">
            <summary>
            Event called when the application is ready to present. This is helpful to know when we should hide the splash screen
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.VRageCore.ApplicationName">
            <summary>
            Identifier of the application, without spaces. Used for file and folder names (i.e. logs, user data folder etc.)
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.VRageCore.Engine">
            <summary>
            The Engine entity containing <see cref="T:Keen.VRage.Core.EngineComponents.EngineComponent"/>s.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.VRageCore.UpdateQueue">
            <summary>
            Update Thread's <see cref="T:Keen.VRage.Library.Threading.ContinuationQueue"/>.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.VRageCore.PlatformFactory">
            <summary>
            An instance of <see cref="T:Keen.VRage.Core.IPlatformFactory"/> that created <see cref="P:Keen.VRage.Core.VRageCore.PlatformCore"/>.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.VRageCore.PlatformCore">
            <summary>
            An instance of <see cref="T:Keen.VRage.Core.VRagePlatformCore"/> for core systems.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.VRageCore.ApplicationLoop">
            <summary>
            The time loop of the current application.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.VRageCore.Lifetime">
            <summary>
            Object containing references to the global lifetimes tied to the engine.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.VRageCore.GlobalDebugSettings">
            <summary>
            Global settings that will be visible on the debug screen 
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.VRageCore.AppDataPath">
            <summary>
            The path to user app data.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.VRageCore.SingleInstance">
            <summary>
            Whether only a single running instance of this app is allowed at the time
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.VRageCore.Id">
            <summary>
            Instance Guid used for analytics
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.VRageLifetime">
            <summary>
            Container for the static lifetime objects for the entire engine.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.VRageLifetime.Engine">
            <summary>
            Global engine lifetime, usually the same as the life of the application.
            </summary>
        </member>
        <member name="P:Keen.VRage.Core.VRageLifetime.RenderSession">
            <summary>
            Lifetime of the current rendering session.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.VRageStats">
            <summary>
            Default stats used by VRage.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.VRageStats.Performance">
            <summary>
            Root performance stat.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.VRageStats.RenderSceneStats">
            <summary>
            Root performance stat.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.VRageStats.RenderMainTargetDrawStats">
            <summary>
            Root performance stat.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.VRageStats.RenderOffscreenTargetDrawStats">
            <summary>
            Root performance stat.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.VRageStats.RenderLocalLightsTargetDrawStats">
            <summary>
            Root performance stat.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.VRageStats.RenderEnvProbesTargetDrawStats">
            <summary>
            Root performance stat.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.VRageStats.RenderMemory">
            <summary>
            Root performance stat.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.VRageStats.Memory">
            <summary>
            Root memory utilization stat.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.VRageStats.ResourceStreaming">
            <summary>
            Root stat for the Resource Streaming System.
            </summary>
            <seealso cref="T:Keen.VRage.Core.StreamingResources.StreamingResourceManagerEngineComponent"/>
        </member>
        <member name="F:Keen.VRage.Core.VRageStats.ProcessMemory">
            <summary>
            Total process memory.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.VRageStats.GC">
            <summary>
            Total GC memory.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.VRageStats.GCTotal">
            <summary>
            Total heap memory used by GC objects.
            </summary>
            <remarks>Generally uses <see cref="M:System.GC.GetTotalMemory(System.Boolean)"/><c>(false)</c> which does not include memory that is allocated but not used by
            any active managed object.</remarks>
        </member>
        <member name="F:Keen.VRage.Core.VRageStats.GCCommittedTotal">
            <summary>
            Total process memory used by the garbage collector heaps.
            </summary>
            <remarks>This includes memory wasted by heap fragmentation, padding, or any internal form of pooling employed by the runtime.</remarks>
        </member>
        <member name="F:Keen.VRage.Core.VRageStats.GCTotalAllocated">
            <summary>
            Total GC allocated memory.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.VRageStats.GCTotalPauseDuration">
            <summary>
            Total GC pause duration.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.VRageStats.NativeAllocators">
            <summary>
            Native Memory Allocators
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.VRageStats.HeapAllocatorMemory">
            <summary>
            Memory used by the <see cref="T:Keen.VRage.Library.Memory.HeapAllocator"/>.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.VRageStats.BumpAllocatorMemory">
            <summary>
            Memory used by the <see cref="T:Keen.VRage.Library.Memory.BumpAllocator"/>.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.VRageStats.MainThread">
            <summary>
            Main thread performance key.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.VRageStats.Input">
            <summary>
            Input update frame time.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.VRageStats.Draw">
            <summary>
            Render update frame time.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.VRageStats.Platform">
            <summary>
            Render update frame time.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.VRageStats.MainThreadTotal">
            <summary>
            Main thread load and utilization.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.VRageStats.RenderThread">
            <summary>
            Render thread load and utilization.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.VRageStats.RenderThreadTotal">
            <summary>
            Render thread load and utilization.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.VRageStats.GPUTime">
            <summary>
            GPU load and utilization parent.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.VRageStats.GPUFrameAverageValue">
            <summary>
            Average GPU frame time.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.VRageStats.GPUFrameCurrentValue">
            <summary>
            Current GPU frame time.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.VRageStats.GPUWorkAverageValue">
            <summary>
            Average GPU work time and utilization.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.VRageStats.GPUWorkCurrentValue">
            <summary>
            Current GPU work time and utilization.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.VRageStats.RenderFrequency">
            <summary>
            FPS and vsync frequency
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.VRageStats.RenderFrequencyValue">
            <summary>
            GPU load and utilization.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.VRageStats.WorkerPool">
            <summary>
            Worker threads load and utilization.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.VRageStats.WorkerPoolLoad">
            <summary>
            Worker threads load and utilization.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.VRageStats.WorkerPoolCount">
            <summary>
            Worker threads load and utilization.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.VRageStats.UpdateStats">
            <summary>
            Update memory stats.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.WorldTransform">
            <summary>
            World transform of an object
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.WorldTransform.Identity">
            <summary>
            Transform that does not move or rotate any point in local space when transformed to world space.
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.WorldTransform.Position">
            <summary>
            Position component
            </summary>
        </member>
        <member name="F:Keen.VRage.Core.WorldTransform.Orientation">
            <summary>
            Orientation component
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.WorldTransform.op_Implicit(Keen.VRage.Core.RelativeTransform)~Keen.VRage.Core.WorldTransform">
            <summary>
            Creates WorldTransform from RelativeTransform components
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.WorldTransform.op_Multiply(Keen.VRage.Core.RelativeTransform,Keen.VRage.Core.WorldTransform)">
            <summary>
            Transforms RelativeTransform by a WorldTransform 
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.WorldTransform.op_Multiply(Keen.VRage.Core.WorldTransform,Keen.VRage.Core.WorldTransform)">
            <summary>
            Transforms WorldTransform by another WorldTransform
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.WorldTransform.ToString">
            <summary>
            Retrieves a string representation of the current object.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.WorldTransform.System#IEquatable{Keen#VRage#Core#WorldTransform}#Equals(Keen.VRage.Core.WorldTransform)">
            <summary>
            Determines whether the specified Object is equal to the WorldTransform.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.WorldTransform.Equals(Keen.VRage.Core.WorldTransform@)">
            <summary>
            Determines whether the specified Object is equal to the WorldTransform.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.WorldTransform.Equals(System.Object)">
            <summary>
            Returns a value that indicates whether the current instance is equal to a specified object.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.WorldTransform.GetHashCode">
            <summary>
            Gets the hash code of this object.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.WorldTransform.Lerp(Keen.VRage.Core.WorldTransform@,Keen.VRage.Core.WorldTransform@,System.Single)">
            <summary>
            Linearly interpolates between the corresponding values of two transforms.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.WorldTransform.Slerp(Keen.VRage.Core.WorldTransform@,Keen.VRage.Core.WorldTransform@,System.Single)">
            <summary>
            Interpolates between the corresponding values of two transforms, 
            using spherical linear interpolation for orientation a linear interpolation for position.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.WorldTransform.Transform(Keen.VRage.Library.Mathematics.Vector3D@,Keen.VRage.Core.WorldTransform@)">
            <summary>
            Transforms position vector by a WorldTransform
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.WorldTransform.Transform(Keen.VRage.Library.Mathematics.BoundingBoxD@,Keen.VRage.Core.WorldTransform@)">
            <summary>
            Transforms a bounding box by a WorldTransform.
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.WorldTransform.TransformDirection(Keen.VRage.Library.Mathematics.Vector3,Keen.VRage.Core.WorldTransform)">
            <summary>
            Transform direction vector (normal) by a WorldTransform orientation
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.WorldTransform.TransformDirection(Keen.VRage.Library.Mathematics.Vector3D,Keen.VRage.Core.WorldTransform)">
            <summary>
            Transform direction vector (normal) by a WorldTransform orientation
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.WorldTransform.TransformInv(Keen.VRage.Library.Mathematics.Vector3D,Keen.VRage.Core.WorldTransform)">
            <summary>
            Transforms position vector of a WorldTransform in inverse order
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.WorldTransform.GetRelativeTransform(Keen.VRage.Core.WorldTransform,Keen.VRage.Core.WorldTransform)">
            <summary>
            Transforms the transform into the space of parentTransform. For WT A(transform) and B(parentTransform), return WT C such that B * C = A
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.WorldTransform.TransformDirectionInv(Keen.VRage.Library.Mathematics.Vector3,Keen.VRage.Core.WorldTransform)">
            <summary>
            Transform direction vector (normal) by a WorldTransform orientation's inverse
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.WorldTransform.TransformDirectionInv(Keen.VRage.Library.Mathematics.Vector3D,Keen.VRage.Core.WorldTransform)">
            <summary>
            Transform direction vector (normal) by a WorldTransform orientation's inverse
            </summary>
        </member>
        <member name="M:Keen.VRage.Core.WorldTransform.IsValid">
            <summary>
            Determines whether each transform component is valid
            </summary>
            <returns></returns>
            <autogeneratedoc />
        </member>
        <member name="M:Keen.VRage.Core.WorldTransform.AssertIsValid">
            <summary>
            Performs assert on transform validity
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.WorldTransform.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.WorldTransform.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.WorldTransform.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.WorldTransform@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.WorldTransform.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.WorldTransform.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.WorldTransform@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.WorldTransform.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.WorldTransform.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.WorldTransform@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.WorldTransform.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.WorldTransform.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.WorldTransform.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.WorldTransform.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.WorldTransform.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.WorldTransform@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.WorldTransform.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.WorldTransform.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.WorldTransform@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.WorldTransform.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.WorldTransform.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.WorldTransform.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.WorldTransform@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.WorldTransform.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.WorldTransform.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.WorldTransform.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.WorldTransform.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.WorldTransform.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#WorldTransform}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.WorldTransform.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.WorldTransform.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.WorldTransform.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.WorldTransform.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.WorldTransform.TypeInfoHolder.PositionAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.WorldTransform.TypeInfoHolder.PositionAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.WorldTransform.TypeInfoHolder.PositionAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.WorldTransform.TypeInfoHolder.PositionAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.WorldTransform.TypeInfoHolder.PositionAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.WorldTransform.TypeInfoHolder.PositionAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.WorldTransform.TypeInfoHolder.PositionAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.WorldTransform.TypeInfoHolder.PositionAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.WorldTransform.TypeInfoHolder.PositionAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.WorldTransform.TypeInfoHolder.PositionAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.WorldTransform.TypeInfoHolder.PositionAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.WorldTransform.TypeInfoHolder.PositionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.WorldTransform.TypeInfoHolder.PositionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.WorldTransform.TypeInfoHolder.PositionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.WorldTransform.TypeInfoHolder.PositionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3D}#Set(System.Object,Keen.VRage.Library.Mathematics.Vector3D@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.WorldTransform.TypeInfoHolder.PositionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3D}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.WorldTransform.TypeInfoHolder.PositionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3D}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.WorldTransform.TypeInfoHolder.PositionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3D}#Set(System.Byte@,Keen.VRage.Library.Mathematics.Vector3D@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.WorldTransform.TypeInfoHolder.PositionAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.WorldTransform.TypeInfoHolder.PositionAccessor.Set(Keen.VRage.Core.WorldTransform@,Keen.VRage.Library.Mathematics.Vector3D@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.WorldTransform.TypeInfoHolder.PositionAccessor.Get(Keen.VRage.Core.WorldTransform@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.WorldTransform.TypeInfoHolder.OrientationAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.WorldTransform.TypeInfoHolder.OrientationAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.WorldTransform.TypeInfoHolder.OrientationAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.WorldTransform.TypeInfoHolder.OrientationAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.WorldTransform.TypeInfoHolder.OrientationAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.WorldTransform.TypeInfoHolder.OrientationAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.WorldTransform.TypeInfoHolder.OrientationAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.WorldTransform.TypeInfoHolder.OrientationAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.WorldTransform.TypeInfoHolder.OrientationAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.WorldTransform.TypeInfoHolder.OrientationAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.WorldTransform.TypeInfoHolder.OrientationAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.WorldTransform.TypeInfoHolder.OrientationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.WorldTransform.TypeInfoHolder.OrientationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.WorldTransform.TypeInfoHolder.OrientationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.WorldTransform.TypeInfoHolder.OrientationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Quaternion}#Set(System.Object,Keen.VRage.Library.Mathematics.Quaternion@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.WorldTransform.TypeInfoHolder.OrientationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Quaternion}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.WorldTransform.TypeInfoHolder.OrientationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Quaternion}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.WorldTransform.TypeInfoHolder.OrientationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Quaternion}#Set(System.Byte@,Keen.VRage.Library.Mathematics.Quaternion@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.WorldTransform.TypeInfoHolder.OrientationAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.WorldTransform.TypeInfoHolder.OrientationAccessor.Set(Keen.VRage.Core.WorldTransform@,Keen.VRage.Library.Mathematics.Quaternion@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.WorldTransform.TypeInfoHolder.OrientationAccessor.Get(Keen.VRage.Core.WorldTransform@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.WorldTransformWithEulerHint">
            <summary>
            Extra wrapper around <see cref="T:Keen.VRage.Core.WorldTransform"/> to provide support
            for euler hint to editor. 
            This data structure should only be used for serialization.
            </summary>
        </member>
        <member name="T:Keen.VRage.Core.WorldTransformWithEulerHint.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.WorldTransformWithEulerHint.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.WorldTransformWithEulerHint.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Core.WorldTransformWithEulerHint@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.WorldTransformWithEulerHint.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.WorldTransformWithEulerHint.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.WorldTransformWithEulerHint@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.WorldTransformWithEulerHint.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.WorldTransformWithEulerHint.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Core.WorldTransformWithEulerHint@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.WorldTransformWithEulerHint.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.WorldTransformWithEulerHint.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.WorldTransformWithEulerHint.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.WorldTransformWithEulerHint.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.WorldTransformWithEulerHint.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Core.WorldTransformWithEulerHint@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.WorldTransformWithEulerHint.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.WorldTransformWithEulerHint.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Core.WorldTransformWithEulerHint@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.WorldTransformWithEulerHint.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.WorldTransformWithEulerHint.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.WorldTransformWithEulerHint.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Core.WorldTransformWithEulerHint@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.WorldTransformWithEulerHint.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.WorldTransformWithEulerHint.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.WorldTransformWithEulerHint.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.WorldTransformWithEulerHint.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.WorldTransformWithEulerHint.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Core#WorldTransformWithEulerHint}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.WorldTransformWithEulerHint.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.WorldTransformWithEulerHint.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Core.WorldTransformWithEulerHint.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Core.WorldTransformWithEulerHint.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Core.WorldTransformWithEulerHint.TypeInfoHolder.TransformAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.WorldTransformWithEulerHint.TypeInfoHolder.TransformAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.WorldTransformWithEulerHint.TypeInfoHolder.TransformAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.WorldTransformWithEulerHint.TypeInfoHolder.TransformAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.WorldTransformWithEulerHint.TypeInfoHolder.TransformAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.WorldTransformWithEulerHint.TypeInfoHolder.TransformAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.WorldTransformWithEulerHint.TypeInfoHolder.TransformAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.WorldTransformWithEulerHint.TypeInfoHolder.TransformAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.WorldTransformWithEulerHint.TypeInfoHolder.TransformAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.WorldTransformWithEulerHint.TypeInfoHolder.TransformAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.WorldTransformWithEulerHint.TypeInfoHolder.TransformAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.WorldTransformWithEulerHint.TypeInfoHolder.TransformAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.WorldTransformWithEulerHint.TypeInfoHolder.TransformAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.WorldTransformWithEulerHint.TypeInfoHolder.TransformAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.WorldTransformWithEulerHint.TypeInfoHolder.TransformAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#WorldTransform}#Set(System.Object,Keen.VRage.Core.WorldTransform@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.WorldTransformWithEulerHint.TypeInfoHolder.TransformAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#WorldTransform}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.WorldTransformWithEulerHint.TypeInfoHolder.TransformAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#WorldTransform}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.WorldTransformWithEulerHint.TypeInfoHolder.TransformAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#WorldTransform}#Set(System.Byte@,Keen.VRage.Core.WorldTransform@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.WorldTransformWithEulerHint.TypeInfoHolder.TransformAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.WorldTransformWithEulerHint.TypeInfoHolder.TransformAccessor.Set(Keen.VRage.Core.WorldTransformWithEulerHint@,Keen.VRage.Core.WorldTransform@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.WorldTransformWithEulerHint.TypeInfoHolder.TransformAccessor.Get(Keen.VRage.Core.WorldTransformWithEulerHint@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.WorldTransformWithEulerHint.TypeInfoHolder.EulerHintAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.WorldTransformWithEulerHint.TypeInfoHolder.EulerHintAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.WorldTransformWithEulerHint.TypeInfoHolder.EulerHintAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.WorldTransformWithEulerHint.TypeInfoHolder.EulerHintAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.WorldTransformWithEulerHint.TypeInfoHolder.EulerHintAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.WorldTransformWithEulerHint.TypeInfoHolder.EulerHintAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.WorldTransformWithEulerHint.TypeInfoHolder.EulerHintAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.WorldTransformWithEulerHint.TypeInfoHolder.EulerHintAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Core.WorldTransformWithEulerHint.TypeInfoHolder.EulerHintAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.WorldTransformWithEulerHint.TypeInfoHolder.EulerHintAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.WorldTransformWithEulerHint.TypeInfoHolder.EulerHintAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.WorldTransformWithEulerHint.TypeInfoHolder.EulerHintAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.WorldTransformWithEulerHint.TypeInfoHolder.EulerHintAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.WorldTransformWithEulerHint.TypeInfoHolder.EulerHintAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.WorldTransformWithEulerHint.TypeInfoHolder.EulerHintAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3}#Set(System.Object,Keen.VRage.Library.Mathematics.Vector3@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.WorldTransformWithEulerHint.TypeInfoHolder.EulerHintAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.WorldTransformWithEulerHint.TypeInfoHolder.EulerHintAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.WorldTransformWithEulerHint.TypeInfoHolder.EulerHintAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3}#Set(System.Byte@,Keen.VRage.Library.Mathematics.Vector3@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.WorldTransformWithEulerHint.TypeInfoHolder.EulerHintAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.WorldTransformWithEulerHint.TypeInfoHolder.EulerHintAccessor.Set(Keen.VRage.Core.WorldTransformWithEulerHint@,Keen.VRage.Library.Mathematics.Vector3@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Core.WorldTransformWithEulerHint.TypeInfoHolder.EulerHintAccessor.Get(Keen.VRage.Core.WorldTransformWithEulerHint@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Core.Localization.EngineTexts">
            <summary> In-code repository of all keys needed for engine localizable texts. </summary>
        </member>
        <member name="F:Keen.VRage.Core.Localization.EngineTexts.ApplicationCrashed">
            <summary> Application has crashed! </summary>
        </member>
        <member name="F:Keen.VRage.Core.Localization.EngineTexts.CannotCreateQueryHeap">
            <summary> Can't create new query heap </summary>
        </member>
        <member name="F:Keen.VRage.Core.Localization.EngineTexts.CouldNotObtainAdapter">
            <summary> Could not obtain adapter {AdapterName} </summary>
        </member>
        <member name="F:Keen.VRage.Core.Localization.EngineTexts.CouldNotObtainIDXGIAdapter4">
            <summary> Could not obtain interface IDXGIAdapter4 from adapter {AdapterName} </summary>
        </member>
        <member name="F:Keen.VRage.Core.Localization.EngineTexts.DotNetRuntimeMissing">
            <summary> .Net Desktop Runtime is missing. Please reinstall the game. </summary>
        </member>
        <member name="F:Keen.VRage.Core.Localization.EngineTexts.InvalidRenderSetupFormat">
            <summary> Invalid render setup format passed. </summary>
        </member>
        <member name="F:Keen.VRage.Core.Localization.EngineTexts.NoSupportedDevice">
            <summary> No supported GPU found. Please see minimum requirements, try installing latest graphics driver or update Windows. Thank you for your understanding. </summary>
        </member>
        <member name="F:Keen.VRage.Core.Localization.EngineTexts.OrMid">
            <summary>  or  </summary>
        </member>
        <member name="F:Keen.VRage.Core.Localization.EngineTexts.PleaseApplyUpdates">
            <summary> Please apply windows updates and update to latest graphics drivers. </summary>
        </member>
        <member name="F:Keen.VRage.Core.Localization.EngineTexts.UnableToInitializeDX12">
            <summary> Unable to initialize DirectX12 renderer. Please apply windows updates and update to latest graphics drivers. </summary>
        </member>
        <member name="F:Keen.VRage.Core.Localization.EngineTexts.UnableToInitializeGame">
            <summary> Unable to initialize the game. Please see minimum requirements, try installing latest graphics and audio drivers or update Windows. Thank you for your understanding. </summary>
        </member>
        <member name="F:Keen.VRage.Core.Localization.EngineTexts.WeApologize">
            <summary> We apologize for inconvenience. See the log for details. </summary>
        </member>
        <member name="F:Keen.VRage.Core.Localization.EngineTexts.DebugLayerEnableError">
            <summary> Failed to enable debug layer. Please ensure "Graphics Tools" feature is enabled in Windows "Manage optional feature" settings page </summary>
        </member>
        <member name="F:Keen.VRage.Core.Localization.EngineTexts.InvalidArguments">
            <summary> Invalid arguments </summary>
        </member>
        <member name="F:Keen.VRage.Core.Localization.EngineTexts.IncorrectPluginPath">
            <summary> Incorrect path in -plugins. See the log for details. </summary>
        </member>
        <member name="F:Keen.VRage.Core.Localization.EngineTexts.IncorrectAutoTestName">
            <summary> Incorrect test name : {TestName}. See the log for details. </summary>
        </member>
        <member name="F:Keen.VRage.Core.Localization.EngineTexts.NotEnoughVideoMemory">
            <summary> Unable to initialize the game. The graphics card doesn't have enough video memory. </summary>
        </member>
        <member name="F:Keen.VRage.Core.Localization.EngineTexts.Information">
            <summary> Information </summary>
        </member>
        <member name="F:Keen.VRage.Core.Localization.EngineTexts.GPUNotSupported">
            <summary> GPU not supported </summary>
        </member>
        <member name="T:System.Runtime.CompilerServices.AsyncVoidMethodBuilder">
            <summary>
            Method builder for AsyncVoid methods.
            </summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.AsyncVoidMethodBuilder.Create">
            <summary>
            Create the method builder.
            </summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.AsyncVoidMethodBuilder.Start``1(``0@)">
            <summary>
            Start the state machine.
            </summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.AsyncVoidMethodBuilder.SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine)">
            <summary>
            Set the boxed state machine, unused.
            </summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.AsyncVoidMethodBuilder.SetException(System.Exception)">
            <summary>
            Notify about an exception while executing the state machine.
            </summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.AsyncVoidMethodBuilder.SetResult">
            <summary>
            Signal that the state machine has completed.
            </summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.AsyncVoidMethodBuilder.AwaitOnCompleted``2(``0@,``1@)">
            <summary>
            Await on another task.
            </summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.AsyncVoidMethodBuilder.AwaitUnsafeOnCompleted``2(``0@,``1@)">
            <summary>
            Await on another task.
            </summary>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.PrefixRegex_0">
            <summary>Custom <see cref="T:System.Text.RegularExpressions.Regex"/>-derived type for the PrefixRegex method.</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Generated.PrefixRegex_0.Instance">
            <summary>Cached, thread-safe singleton instance.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.PrefixRegex_0.#ctor">
            <summary>Initializes the instance.</summary>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.PrefixRegex_0.RunnerFactory">
            <summary>Provides a factory for creating <see cref="T:System.Text.RegularExpressions.RegexRunner"/> instances to be used by methods on <see cref="T:System.Text.RegularExpressions.Regex"/>.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.PrefixRegex_0.RunnerFactory.CreateInstance">
            <summary>Creates an instance of a <see cref="T:System.Text.RegularExpressions.RegexRunner"/> used by methods on <see cref="T:System.Text.RegularExpressions.Regex"/>.</summary>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.PrefixRegex_0.RunnerFactory.Runner">
            <summary>Provides the runner that contains the custom logic implementing the specified regular expression.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.PrefixRegex_0.RunnerFactory.Runner.Scan(System.ReadOnlySpan{System.Char})">
            <summary>Scan the <paramref name="inputSpan"/> starting from base.runtextstart for the next match.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.PrefixRegex_0.RunnerFactory.Runner.TryFindNextPossibleStartingPosition(System.ReadOnlySpan{System.Char})">
            <summary>Search <paramref name="inputSpan"/> starting from base.runtextpos for the next location a match could possibly start.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
            <returns>true if a possible match was found; false if no more matches are possible.</returns>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.PrefixRegex_0.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})">
            <summary>Determine whether <paramref name="inputSpan"/> at base.runtextpos is a match for the regular expression.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.Utilities">
            <summary>Helper methods used by generated <see cref="T:System.Text.RegularExpressions.Regex"/>-derived implementations.</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Generated.Utilities.s_defaultTimeout">
            <summary>Default timeout value set in <see cref="T:System.AppContext"/>, or <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout"/> if none was set.</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Generated.Utilities.s_hasTimeout">
            <summary>Whether <see cref="F:System.Text.RegularExpressions.Generated.Utilities.s_defaultTimeout"/> is non-infinite.</summary>
        </member>
    </members>
</doc>
