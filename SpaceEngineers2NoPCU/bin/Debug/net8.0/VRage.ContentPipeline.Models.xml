<?xml version="1.0"?>
<doc>
    <assembly>
        <name>VRage.ContentPipeline.Models</name>
    </assembly>
    <members>
        <member name="T:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData">
            <summary>
            Data of animation asset.
            </summary>
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.AssetInformation">
            <summary>
            Data about animation clip source asset.
            </summary>
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.SkipProcessingMissingBones">
            <summary>
            Temporary switch to allow export of both Maya and 3ds Max exported animations
            </summary>
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.Events">
            <summary>
            Events defined for this animation clip.
            </summary>
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.ReferencePose">
            <summary>
            Selects the source of reference pose used when the animation is used in additive mode.
            The difference between the reference pose and the animation keyframes is applied in animations state machine.
            </summary>
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.ReferencePoseSource">
            <summary>
            Specifies external animation clip when selected <see cref="P:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.ReferencePose"/> supports it
            </summary>
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#ContentPipeline#Models#Animations#AnimationsAssetData}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.AssetInformationAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.AssetInformationAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.AssetInformationAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.AssetInformationAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.AssetInformationAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.AssetInformationAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.AssetInformationAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.AssetInformationAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.AssetInformationAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.AssetInformationAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.AssetInformationAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.AssetInformationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.AssetInformationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.AssetInformationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.AssetInformationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Models#Animations#AnimationClipsAssetInformation}#Set(System.Object,Keen.VRage.ContentPipeline.Models.Animations.AnimationClipsAssetInformation@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.AssetInformationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Models#Animations#AnimationClipsAssetInformation}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.AssetInformationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Models#Animations#AnimationClipsAssetInformation}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.AssetInformationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Models#Animations#AnimationClipsAssetInformation}#Set(System.Byte@,Keen.VRage.ContentPipeline.Models.Animations.AnimationClipsAssetInformation@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.AssetInformationAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.AssetInformationAccessor.Set(Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData@,Keen.VRage.ContentPipeline.Models.Animations.AnimationClipsAssetInformation@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.AssetInformationAccessor.Get(Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.SkipProcessingMissingBonesAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.SkipProcessingMissingBonesAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.SkipProcessingMissingBonesAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.SkipProcessingMissingBonesAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.SkipProcessingMissingBonesAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.SkipProcessingMissingBonesAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.SkipProcessingMissingBonesAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.SkipProcessingMissingBonesAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.SkipProcessingMissingBonesAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.SkipProcessingMissingBonesAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.SkipProcessingMissingBonesAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.SkipProcessingMissingBonesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.SkipProcessingMissingBonesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.SkipProcessingMissingBonesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.SkipProcessingMissingBonesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.SkipProcessingMissingBonesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.SkipProcessingMissingBonesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.SkipProcessingMissingBonesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.SkipProcessingMissingBonesAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.SkipProcessingMissingBonesAccessor.Set(Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.SkipProcessingMissingBonesAccessor.Get(Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.EventsAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.EventsAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.EventsAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.EventsAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.EventsAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.EventsAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.EventsAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.EventsAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.EventsAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.EventsAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.EventsAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.EventsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.EventsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.EventsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.EventsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{Keen#VRage#Core#Model#AnimationEvent}}#Set(System.Object,System.Collections.Generic.List{Keen.VRage.Core.Model.AnimationEvent}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.EventsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{Keen#VRage#Core#Model#AnimationEvent}}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.EventsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{Keen#VRage#Core#Model#AnimationEvent}}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.EventsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{Keen#VRage#Core#Model#AnimationEvent}}#Set(System.Byte@,System.Collections.Generic.List{Keen.VRage.Core.Model.AnimationEvent}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.EventsAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.EventsAccessor.Set(Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData@,System.Collections.Generic.List{Keen.VRage.Core.Model.AnimationEvent}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.EventsAccessor.Get(Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder._referencePoseAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder._referencePoseAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder._referencePoseAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder._referencePoseAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder._referencePoseAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder._referencePoseAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder._referencePoseAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder._referencePoseAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder._referencePoseAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder._referencePoseAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder._referencePoseAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder._referencePoseAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder._referencePoseAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder._referencePoseAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder._referencePoseAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Models#Animations#ReferencePose}#Set(System.Object,Keen.VRage.ContentPipeline.Models.Animations.ReferencePose@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder._referencePoseAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Models#Animations#ReferencePose}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder._referencePoseAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Models#Animations#ReferencePose}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder._referencePoseAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Models#Animations#ReferencePose}#Set(System.Byte@,Keen.VRage.ContentPipeline.Models.Animations.ReferencePose@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder._referencePoseAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder._referencePoseAccessor.Set(Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData@,Keen.VRage.ContentPipeline.Models.Animations.ReferencePose@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder._referencePoseAccessor.Get(Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.ReferencePoseAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.ReferencePoseAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.ReferencePoseAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.ReferencePoseAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.ReferencePoseAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.ReferencePoseAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.ReferencePoseAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.ReferencePoseAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.ReferencePoseAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.ReferencePoseAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.ReferencePoseAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.ReferencePoseAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.ReferencePoseAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.ReferencePoseAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.ReferencePoseAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Models#Animations#ReferencePose}#Set(System.Object,Keen.VRage.ContentPipeline.Models.Animations.ReferencePose@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.ReferencePoseAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Models#Animations#ReferencePose}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.ReferencePoseAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Models#Animations#ReferencePose}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.ReferencePoseAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Models#Animations#ReferencePose}#Set(System.Byte@,Keen.VRage.ContentPipeline.Models.Animations.ReferencePose@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.ReferencePoseAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.ReferencePoseAccessor.Set(Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData@,Keen.VRage.ContentPipeline.Models.Animations.ReferencePose@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.ReferencePoseAccessor.Get(Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.ReferencePoseSourceAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.ReferencePoseSourceAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.ReferencePoseSourceAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.ReferencePoseSourceAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.ReferencePoseSourceAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.ReferencePoseSourceAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.ReferencePoseSourceAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.ReferencePoseSourceAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.ReferencePoseSourceAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.ReferencePoseSourceAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.ReferencePoseSourceAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.ReferencePoseSourceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.ReferencePoseSourceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.ReferencePoseSourceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.ReferencePoseSourceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#EditorResourceHandle{Keen#VRage#ContentPipeline#ModelsBase#FBXAsset}?}#Set(System.Object,System.Nullable{Keen.VRage.ContentPipeline.EditorResourceHandle{Keen.VRage.ContentPipeline.ModelsBase.FBXAsset}}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.ReferencePoseSourceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#EditorResourceHandle{Keen#VRage#ContentPipeline#ModelsBase#FBXAsset}?}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.ReferencePoseSourceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#EditorResourceHandle{Keen#VRage#ContentPipeline#ModelsBase#FBXAsset}?}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.ReferencePoseSourceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#EditorResourceHandle{Keen#VRage#ContentPipeline#ModelsBase#FBXAsset}?}#Set(System.Byte@,System.Nullable{Keen.VRage.ContentPipeline.EditorResourceHandle{Keen.VRage.ContentPipeline.ModelsBase.FBXAsset}}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.ReferencePoseSourceAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.ReferencePoseSourceAccessor.Set(Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData@,System.Nullable{Keen.VRage.ContentPipeline.EditorResourceHandle{Keen.VRage.ContentPipeline.ModelsBase.FBXAsset}}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.ReferencePoseSourceAccessor.Get(Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.ShowReferencePoseSourceAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.ShowReferencePoseSourceAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.ShowReferencePoseSourceAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.ShowReferencePoseSourceAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.ShowReferencePoseSourceAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.ShowReferencePoseSourceAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.ShowReferencePoseSourceAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.ShowReferencePoseSourceAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.ShowReferencePoseSourceAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.ShowReferencePoseSourceAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.ShowReferencePoseSourceAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.ShowReferencePoseSourceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.ShowReferencePoseSourceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.ShowReferencePoseSourceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.ShowReferencePoseSourceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.ShowReferencePoseSourceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.ShowReferencePoseSourceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.ShowReferencePoseSourceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.ShowReferencePoseSourceAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.ShowReferencePoseSourceAccessor.Set(Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData.TypeInfoHolder.ShowReferencePoseSourceAccessor.Get(Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetData@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Models.Animations.AnimationClipsAssetInformation">
            <summary>
            Data about animation clip source asset.
            </summary>
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.Animations.AnimationClipsAssetInformation.AssetReference">
            <summary>
            Source asset file from which the animation clip is loaded and processed.
            </summary>
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Models.Animations.AnimationClipsAssetInformation.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationClipsAssetInformation.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationClipsAssetInformation.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.ContentPipeline.Models.Animations.AnimationClipsAssetInformation@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationClipsAssetInformation.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationClipsAssetInformation.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.ContentPipeline.Models.Animations.AnimationClipsAssetInformation@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationClipsAssetInformation.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationClipsAssetInformation.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.ContentPipeline.Models.Animations.AnimationClipsAssetInformation@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationClipsAssetInformation.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationClipsAssetInformation.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationClipsAssetInformation.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationClipsAssetInformation.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationClipsAssetInformation.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.ContentPipeline.Models.Animations.AnimationClipsAssetInformation@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationClipsAssetInformation.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationClipsAssetInformation.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.ContentPipeline.Models.Animations.AnimationClipsAssetInformation@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationClipsAssetInformation.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationClipsAssetInformation.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.ContentPipeline.Models.Animations.AnimationClipsAssetInformation@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationClipsAssetInformation.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationClipsAssetInformation.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.ContentPipeline.Models.Animations.AnimationClipsAssetInformation@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationClipsAssetInformation.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.ContentPipeline.Models.Animations.AnimationClipsAssetInformation.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.Animations.AnimationClipsAssetInformation.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationClipsAssetInformation.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.Animations.AnimationClipsAssetInformation.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#ContentPipeline#Models#Animations#AnimationClipsAssetInformation}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationClipsAssetInformation.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Models.Animations.AnimationClipsAssetInformation.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.ContentPipeline.Models.Animations.AnimationClipsAssetInformation.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.ContentPipeline.Models.Animations.AnimationClipsAssetInformation.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.Animations.AnimationClipsAssetInformation.TypeInfoHolder.AssetReferenceAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.Animations.AnimationClipsAssetInformation.TypeInfoHolder.AssetReferenceAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.Animations.AnimationClipsAssetInformation.TypeInfoHolder.AssetReferenceAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.Animations.AnimationClipsAssetInformation.TypeInfoHolder.AssetReferenceAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.Animations.AnimationClipsAssetInformation.TypeInfoHolder.AssetReferenceAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.Animations.AnimationClipsAssetInformation.TypeInfoHolder.AssetReferenceAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.Animations.AnimationClipsAssetInformation.TypeInfoHolder.AssetReferenceAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.Animations.AnimationClipsAssetInformation.TypeInfoHolder.AssetReferenceAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.Animations.AnimationClipsAssetInformation.TypeInfoHolder.AssetReferenceAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationClipsAssetInformation.TypeInfoHolder.AssetReferenceAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationClipsAssetInformation.TypeInfoHolder.AssetReferenceAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationClipsAssetInformation.TypeInfoHolder.AssetReferenceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationClipsAssetInformation.TypeInfoHolder.AssetReferenceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationClipsAssetInformation.TypeInfoHolder.AssetReferenceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationClipsAssetInformation.TypeInfoHolder.AssetReferenceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#EditorResourceHandle{Keen#VRage#ContentPipeline#ModelsBase#FBXAsset}}#Set(System.Object,Keen.VRage.ContentPipeline.EditorResourceHandle{Keen.VRage.ContentPipeline.ModelsBase.FBXAsset}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationClipsAssetInformation.TypeInfoHolder.AssetReferenceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#EditorResourceHandle{Keen#VRage#ContentPipeline#ModelsBase#FBXAsset}}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationClipsAssetInformation.TypeInfoHolder.AssetReferenceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#EditorResourceHandle{Keen#VRage#ContentPipeline#ModelsBase#FBXAsset}}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationClipsAssetInformation.TypeInfoHolder.AssetReferenceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#EditorResourceHandle{Keen#VRage#ContentPipeline#ModelsBase#FBXAsset}}#Set(System.Byte@,Keen.VRage.ContentPipeline.EditorResourceHandle{Keen.VRage.ContentPipeline.ModelsBase.FBXAsset}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationClipsAssetInformation.TypeInfoHolder.AssetReferenceAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationClipsAssetInformation.TypeInfoHolder.AssetReferenceAccessor.Set(Keen.VRage.ContentPipeline.Models.Animations.AnimationClipsAssetInformation@,Keen.VRage.ContentPipeline.EditorResourceHandle{Keen.VRage.ContentPipeline.ModelsBase.FBXAsset}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Animations.AnimationClipsAssetInformation.TypeInfoHolder.AssetReferenceAccessor.Get(Keen.VRage.ContentPipeline.Models.Animations.AnimationClipsAssetInformation@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Models.Animations.AnimationsAssetProcessor">
            <summary>
            
            </summary>
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Models.Animations.Editor.AnimationAssetType">
            <summary>
            Asset type for animation assets
            </summary>
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Models.Animations.Editor.AnimationsAssetGeneratorProvider">
            <summary>
            Generator for <see cref="T:Keen.VRage.ContentPipeline.Models.Animations.Editor.AnimationAssetType"/> assets from <see cref="T:Keen.VRage.ContentPipeline.ModelsBase.FBXAsset"/>
            </summary>
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Models.Animations.Editor.AnimationsAssetInterface">
            <summary>
            
            </summary>
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Models.Animations.ReferencePose">
            <summary>
            Type of source for reference pose.
            </summary>
        </member>
        <member name="F:Keen.VRage.ContentPipeline.Models.Animations.ReferencePose.FirstKeyframe">
            <summary>
            Takes first keyframe from this animation clip.
            </summary>
        </member>
        <member name="F:Keen.VRage.ContentPipeline.Models.Animations.ReferencePose.ModelSkeleton">
            <summary>
            Takes pose from model skeleton the animation is playing on.
            </summary>
        </member>
        <member name="F:Keen.VRage.ContentPipeline.Models.Animations.ReferencePose.ExternalFirstKeyframe">
            <summary>
            Takes first keyframe from external animation clip.
            </summary>
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Models.ColliderAsset">
            <summary>
            Represents resource asset from which a colliders can be collected
            </summary>
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Models.GltfColliderAssetType">
            <summary>
            Blender collider file "gltf"
            </summary>
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Models.Editor.AnimationsAssetCustomInfoProvider">
            <summary>
            Provides simple information about animation asset, like bones that carry keyframes, duration of clios, etc.
            </summary>
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Models.Editor.ModelAssetGeneratorProvider">
            <summary>
            Generator provider for model assets
            </summary>
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Models.Editor.ModelAssetInterface">
            <summary>
            
            </summary>
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Models.Editor.ModelAssetValidation">
            <summary>
            Validation used for <see cref="T:Keen.VRage.ContentPipeline.Models.ModelAssetData"/> assets
            </summary>
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Models.ModelAssetData">
            <summary>
            </summary>
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetData.SuggestedModelSize">
            <summary>
            Suggested size of the model. Can be specified if actual size computed from vertices is different and causes model limit validation issues.
            </summary>
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Models.ModelAssetData.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetData.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetData.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.ContentPipeline.Models.ModelAssetData@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetData.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetData.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.ContentPipeline.Models.ModelAssetData@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetData.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetData.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.ContentPipeline.Models.ModelAssetData@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetData.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetData.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetData.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetData.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetData.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.ContentPipeline.Models.ModelAssetData@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetData.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetData.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.ContentPipeline.Models.ModelAssetData@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetData.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetData.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.ContentPipeline.Models.ModelAssetData@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetData.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetData.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.ContentPipeline.Models.ModelAssetData@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetData.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.ContentPipeline.Models.ModelAssetData.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetData.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetData.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetData.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#ContentPipeline#Models#ModelAssetData}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetData.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.MaterialAssignmentsAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.MaterialAssignmentsAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.MaterialAssignmentsAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.MaterialAssignmentsAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.MaterialAssignmentsAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.MaterialAssignmentsAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.MaterialAssignmentsAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.MaterialAssignmentsAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.MaterialAssignmentsAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.MaterialAssignmentsAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.MaterialAssignmentsAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.MaterialAssignmentsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.MaterialAssignmentsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.MaterialAssignmentsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.MaterialAssignmentsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{Keen#VRage#ContentPipeline#Models#MaterialAssignment}}#Set(System.Object,System.Collections.Generic.List{Keen.VRage.ContentPipeline.Models.MaterialAssignment}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.MaterialAssignmentsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{Keen#VRage#ContentPipeline#Models#MaterialAssignment}}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.MaterialAssignmentsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{Keen#VRage#ContentPipeline#Models#MaterialAssignment}}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.MaterialAssignmentsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{Keen#VRage#ContentPipeline#Models#MaterialAssignment}}#Set(System.Byte@,System.Collections.Generic.List{Keen.VRage.ContentPipeline.Models.MaterialAssignment}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.MaterialAssignmentsAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.MaterialAssignmentsAccessor.Set(Keen.VRage.ContentPipeline.Models.ModelAssetData@,System.Collections.Generic.List{Keen.VRage.ContentPipeline.Models.MaterialAssignment}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.MaterialAssignmentsAccessor.Get(Keen.VRage.ContentPipeline.Models.ModelAssetData@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.MaterialStateOverridesAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.MaterialStateOverridesAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.MaterialStateOverridesAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.MaterialStateOverridesAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.MaterialStateOverridesAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.MaterialStateOverridesAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.MaterialStateOverridesAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.MaterialStateOverridesAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.MaterialStateOverridesAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.MaterialStateOverridesAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.MaterialStateOverridesAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.MaterialStateOverridesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.MaterialStateOverridesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.MaterialStateOverridesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.MaterialStateOverridesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{Keen#VRage#ContentPipeline#Models#MaterialStateOverride}}#Set(System.Object,System.Collections.Generic.List{Keen.VRage.ContentPipeline.Models.MaterialStateOverride}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.MaterialStateOverridesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{Keen#VRage#ContentPipeline#Models#MaterialStateOverride}}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.MaterialStateOverridesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{Keen#VRage#ContentPipeline#Models#MaterialStateOverride}}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.MaterialStateOverridesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{Keen#VRage#ContentPipeline#Models#MaterialStateOverride}}#Set(System.Byte@,System.Collections.Generic.List{Keen.VRage.ContentPipeline.Models.MaterialStateOverride}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.MaterialStateOverridesAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.MaterialStateOverridesAccessor.Set(Keen.VRage.ContentPipeline.Models.ModelAssetData@,System.Collections.Generic.List{Keen.VRage.ContentPipeline.Models.MaterialStateOverride}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.MaterialStateOverridesAccessor.Get(Keen.VRage.ContentPipeline.Models.ModelAssetData@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.GeometryAssetsAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.GeometryAssetsAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.GeometryAssetsAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.GeometryAssetsAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.GeometryAssetsAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.GeometryAssetsAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.GeometryAssetsAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.GeometryAssetsAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.GeometryAssetsAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.GeometryAssetsAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.GeometryAssetsAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.GeometryAssetsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.GeometryAssetsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.GeometryAssetsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.GeometryAssetsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{Keen#VRage#ContentPipeline#Models#ModelAssetInformation}}#Set(System.Object,System.Collections.Generic.List{Keen.VRage.ContentPipeline.Models.ModelAssetInformation}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.GeometryAssetsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{Keen#VRage#ContentPipeline#Models#ModelAssetInformation}}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.GeometryAssetsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{Keen#VRage#ContentPipeline#Models#ModelAssetInformation}}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.GeometryAssetsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{Keen#VRage#ContentPipeline#Models#ModelAssetInformation}}#Set(System.Byte@,System.Collections.Generic.List{Keen.VRage.ContentPipeline.Models.ModelAssetInformation}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.GeometryAssetsAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.GeometryAssetsAccessor.Set(Keen.VRage.ContentPipeline.Models.ModelAssetData@,System.Collections.Generic.List{Keen.VRage.ContentPipeline.Models.ModelAssetInformation}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.GeometryAssetsAccessor.Get(Keen.VRage.ContentPipeline.Models.ModelAssetData@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.SuggestedModelSizeAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.SuggestedModelSizeAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.SuggestedModelSizeAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.SuggestedModelSizeAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.SuggestedModelSizeAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.SuggestedModelSizeAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.SuggestedModelSizeAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.SuggestedModelSizeAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.SuggestedModelSizeAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.SuggestedModelSizeAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.SuggestedModelSizeAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.SuggestedModelSizeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.SuggestedModelSizeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.SuggestedModelSizeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.SuggestedModelSizeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3?}#Set(System.Object,System.Nullable{Keen.VRage.Library.Mathematics.Vector3}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.SuggestedModelSizeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3?}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.SuggestedModelSizeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3?}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.SuggestedModelSizeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3?}#Set(System.Byte@,System.Nullable{Keen.VRage.Library.Mathematics.Vector3}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.SuggestedModelSizeAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.SuggestedModelSizeAccessor.Set(Keen.VRage.ContentPipeline.Models.ModelAssetData@,System.Nullable{Keen.VRage.Library.Mathematics.Vector3}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.SuggestedModelSizeAccessor.Get(Keen.VRage.ContentPipeline.Models.ModelAssetData@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.CollisionShapesAssetAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.CollisionShapesAssetAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.CollisionShapesAssetAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.CollisionShapesAssetAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.CollisionShapesAssetAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.CollisionShapesAssetAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.CollisionShapesAssetAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.CollisionShapesAssetAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.CollisionShapesAssetAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.CollisionShapesAssetAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.CollisionShapesAssetAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.CollisionShapesAssetAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.CollisionShapesAssetAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.CollisionShapesAssetAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.CollisionShapesAssetAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Models#PhysicsCollisionAssetInformation}#Set(System.Object,Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.CollisionShapesAssetAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Models#PhysicsCollisionAssetInformation}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.CollisionShapesAssetAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Models#PhysicsCollisionAssetInformation}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.CollisionShapesAssetAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Models#PhysicsCollisionAssetInformation}#Set(System.Byte@,Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.CollisionShapesAssetAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.CollisionShapesAssetAccessor.Set(Keen.VRage.ContentPipeline.Models.ModelAssetData@,Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetData.TypeInfoHolder.CollisionShapesAssetAccessor.Get(Keen.VRage.ContentPipeline.Models.ModelAssetData@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Models.ModelAssetInformation">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Models.ModelAssetInformation.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetInformation.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetInformation.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.ContentPipeline.Models.ModelAssetInformation@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetInformation.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetInformation.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.ContentPipeline.Models.ModelAssetInformation@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetInformation.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetInformation.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.ContentPipeline.Models.ModelAssetInformation@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetInformation.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetInformation.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetInformation.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetInformation.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetInformation.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.ContentPipeline.Models.ModelAssetInformation@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetInformation.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetInformation.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.ContentPipeline.Models.ModelAssetInformation@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetInformation.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetInformation.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.ContentPipeline.Models.ModelAssetInformation@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetInformation.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetInformation.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.ContentPipeline.Models.ModelAssetInformation@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetInformation.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.ContentPipeline.Models.ModelAssetInformation.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetInformation.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetInformation.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetInformation.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#ContentPipeline#Models#ModelAssetInformation}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetInformation.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Models.ModelAssetInformation.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.ContentPipeline.Models.ModelAssetInformation.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.ContentPipeline.Models.ModelAssetInformation.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetInformation.TypeInfoHolder.AssetReferenceAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetInformation.TypeInfoHolder.AssetReferenceAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetInformation.TypeInfoHolder.AssetReferenceAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetInformation.TypeInfoHolder.AssetReferenceAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetInformation.TypeInfoHolder.AssetReferenceAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetInformation.TypeInfoHolder.AssetReferenceAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetInformation.TypeInfoHolder.AssetReferenceAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetInformation.TypeInfoHolder.AssetReferenceAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetInformation.TypeInfoHolder.AssetReferenceAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetInformation.TypeInfoHolder.AssetReferenceAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetInformation.TypeInfoHolder.AssetReferenceAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetInformation.TypeInfoHolder.AssetReferenceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetInformation.TypeInfoHolder.AssetReferenceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetInformation.TypeInfoHolder.AssetReferenceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetInformation.TypeInfoHolder.AssetReferenceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#EditorResourceHandle{Keen#VRage#ContentPipeline#ModelsBase#FBXAsset}}#Set(System.Object,Keen.VRage.ContentPipeline.EditorResourceHandle{Keen.VRage.ContentPipeline.ModelsBase.FBXAsset}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetInformation.TypeInfoHolder.AssetReferenceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#EditorResourceHandle{Keen#VRage#ContentPipeline#ModelsBase#FBXAsset}}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetInformation.TypeInfoHolder.AssetReferenceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#EditorResourceHandle{Keen#VRage#ContentPipeline#ModelsBase#FBXAsset}}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetInformation.TypeInfoHolder.AssetReferenceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#EditorResourceHandle{Keen#VRage#ContentPipeline#ModelsBase#FBXAsset}}#Set(System.Byte@,Keen.VRage.ContentPipeline.EditorResourceHandle{Keen.VRage.ContentPipeline.ModelsBase.FBXAsset}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetInformation.TypeInfoHolder.AssetReferenceAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetInformation.TypeInfoHolder.AssetReferenceAccessor.Set(Keen.VRage.ContentPipeline.Models.ModelAssetInformation@,Keen.VRage.ContentPipeline.EditorResourceHandle{Keen.VRage.ContentPipeline.ModelsBase.FBXAsset}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetInformation.TypeInfoHolder.AssetReferenceAccessor.Get(Keen.VRage.ContentPipeline.Models.ModelAssetInformation@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetInformation.TypeInfoHolder.UsedMaterialsAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetInformation.TypeInfoHolder.UsedMaterialsAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetInformation.TypeInfoHolder.UsedMaterialsAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetInformation.TypeInfoHolder.UsedMaterialsAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetInformation.TypeInfoHolder.UsedMaterialsAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetInformation.TypeInfoHolder.UsedMaterialsAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetInformation.TypeInfoHolder.UsedMaterialsAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetInformation.TypeInfoHolder.UsedMaterialsAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetInformation.TypeInfoHolder.UsedMaterialsAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetInformation.TypeInfoHolder.UsedMaterialsAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetInformation.TypeInfoHolder.UsedMaterialsAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetInformation.TypeInfoHolder.UsedMaterialsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetInformation.TypeInfoHolder.UsedMaterialsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetInformation.TypeInfoHolder.UsedMaterialsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetInformation.TypeInfoHolder.UsedMaterialsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{System#String}}#Set(System.Object,System.Collections.Generic.List{System.String}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetInformation.TypeInfoHolder.UsedMaterialsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{System#String}}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetInformation.TypeInfoHolder.UsedMaterialsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{System#String}}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetInformation.TypeInfoHolder.UsedMaterialsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{System#String}}#Set(System.Byte@,System.Collections.Generic.List{System.String}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetInformation.TypeInfoHolder.UsedMaterialsAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetInformation.TypeInfoHolder.UsedMaterialsAccessor.Set(Keen.VRage.ContentPipeline.Models.ModelAssetInformation@,System.Collections.Generic.List{System.String}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetInformation.TypeInfoHolder.UsedMaterialsAccessor.Get(Keen.VRage.ContentPipeline.Models.ModelAssetInformation@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetInformation.TypeInfoHolder.TransformationsAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetInformation.TypeInfoHolder.TransformationsAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetInformation.TypeInfoHolder.TransformationsAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetInformation.TypeInfoHolder.TransformationsAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetInformation.TypeInfoHolder.TransformationsAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetInformation.TypeInfoHolder.TransformationsAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetInformation.TypeInfoHolder.TransformationsAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetInformation.TypeInfoHolder.TransformationsAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetInformation.TypeInfoHolder.TransformationsAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetInformation.TypeInfoHolder.TransformationsAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetInformation.TypeInfoHolder.TransformationsAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetInformation.TypeInfoHolder.TransformationsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetInformation.TypeInfoHolder.TransformationsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetInformation.TypeInfoHolder.TransformationsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetInformation.TypeInfoHolder.TransformationsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Models#ModelGeometryTransformations}#Set(System.Object,Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetInformation.TypeInfoHolder.TransformationsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Models#ModelGeometryTransformations}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetInformation.TypeInfoHolder.TransformationsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Models#ModelGeometryTransformations}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetInformation.TypeInfoHolder.TransformationsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#Models#ModelGeometryTransformations}#Set(System.Byte@,Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetInformation.TypeInfoHolder.TransformationsAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetInformation.TypeInfoHolder.TransformationsAccessor.Set(Keen.VRage.ContentPipeline.Models.ModelAssetInformation@,Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetInformation.TypeInfoHolder.TransformationsAccessor.Get(Keen.VRage.ContentPipeline.Models.ModelAssetInformation@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation">
            <summary>
            </summary>
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.GroupsByFracture">
            <summary>
            Describes a collection of model groups that represent each breakable collider fracture.
            </summary>
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.FractureModelGroups">
            <summary>
            Describes a collection of model groups that can be bound to a breakable collider fracture.
            </summary>
        </member>
        <member name="F:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.FractureModelGroups.FractureId">
            <summary>
            The fracture id, taken from its name.
            </summary>
        </member>
        <member name="F:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.FractureModelGroups.ModelGroups">
            <summary>
            A collection of model groups that form the fracture. 
            </summary>
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.FractureModelGroups.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.FractureModelGroups.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.FractureModelGroups.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.FractureModelGroups@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.FractureModelGroups.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.FractureModelGroups.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.FractureModelGroups@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.FractureModelGroups.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.FractureModelGroups.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.FractureModelGroups@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.FractureModelGroups.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.FractureModelGroups.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.FractureModelGroups.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.FractureModelGroups.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.FractureModelGroups.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.FractureModelGroups@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.FractureModelGroups.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.FractureModelGroups.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.FractureModelGroups@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.FractureModelGroups.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.FractureModelGroups.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.FractureModelGroups@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.FractureModelGroups.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.FractureModelGroups.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.FractureModelGroups@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.FractureModelGroups.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.FractureModelGroups.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.FractureModelGroups.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.FractureModelGroups.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.FractureModelGroups.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#ContentPipeline#Models#PhysicsCollisionAssetInformation#FractureModelGroups}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.FractureModelGroups.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.FractureModelGroups.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.FractureModelGroups.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.FractureModelGroups.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.FractureModelGroups.TypeInfoHolder.FractureIdAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.FractureModelGroups.TypeInfoHolder.FractureIdAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.FractureModelGroups.TypeInfoHolder.FractureIdAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.FractureModelGroups.TypeInfoHolder.FractureIdAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.FractureModelGroups.TypeInfoHolder.FractureIdAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.FractureModelGroups.TypeInfoHolder.FractureIdAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.FractureModelGroups.TypeInfoHolder.FractureIdAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.FractureModelGroups.TypeInfoHolder.FractureIdAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.FractureModelGroups.TypeInfoHolder.FractureIdAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.FractureModelGroups.TypeInfoHolder.FractureIdAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.FractureModelGroups.TypeInfoHolder.FractureIdAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.FractureModelGroups.TypeInfoHolder.FractureIdAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.FractureModelGroups.TypeInfoHolder.FractureIdAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.FractureModelGroups.TypeInfoHolder.FractureIdAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.FractureModelGroups.TypeInfoHolder.FractureIdAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Utils#StringId}#Set(System.Object,Keen.VRage.Library.Utils.StringId@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.FractureModelGroups.TypeInfoHolder.FractureIdAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Utils#StringId}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.FractureModelGroups.TypeInfoHolder.FractureIdAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Utils#StringId}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.FractureModelGroups.TypeInfoHolder.FractureIdAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Utils#StringId}#Set(System.Byte@,Keen.VRage.Library.Utils.StringId@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.FractureModelGroups.TypeInfoHolder.FractureIdAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.FractureModelGroups.TypeInfoHolder.FractureIdAccessor.Set(Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.FractureModelGroups@,Keen.VRage.Library.Utils.StringId@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.FractureModelGroups.TypeInfoHolder.FractureIdAccessor.Get(Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.FractureModelGroups@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.FractureModelGroups.TypeInfoHolder.ModelGroupsAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.FractureModelGroups.TypeInfoHolder.ModelGroupsAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.FractureModelGroups.TypeInfoHolder.ModelGroupsAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.FractureModelGroups.TypeInfoHolder.ModelGroupsAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.FractureModelGroups.TypeInfoHolder.ModelGroupsAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.FractureModelGroups.TypeInfoHolder.ModelGroupsAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.FractureModelGroups.TypeInfoHolder.ModelGroupsAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.FractureModelGroups.TypeInfoHolder.ModelGroupsAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.FractureModelGroups.TypeInfoHolder.ModelGroupsAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.FractureModelGroups.TypeInfoHolder.ModelGroupsAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.FractureModelGroups.TypeInfoHolder.ModelGroupsAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.FractureModelGroups.TypeInfoHolder.ModelGroupsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.FractureModelGroups.TypeInfoHolder.ModelGroupsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.FractureModelGroups.TypeInfoHolder.ModelGroupsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.FractureModelGroups.TypeInfoHolder.ModelGroupsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{Keen#VRage#Library#Utils#StringId}}#Set(System.Object,System.Collections.Generic.List{Keen.VRage.Library.Utils.StringId}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.FractureModelGroups.TypeInfoHolder.ModelGroupsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{Keen#VRage#Library#Utils#StringId}}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.FractureModelGroups.TypeInfoHolder.ModelGroupsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{Keen#VRage#Library#Utils#StringId}}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.FractureModelGroups.TypeInfoHolder.ModelGroupsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{Keen#VRage#Library#Utils#StringId}}#Set(System.Byte@,System.Collections.Generic.List{Keen.VRage.Library.Utils.StringId}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.FractureModelGroups.TypeInfoHolder.ModelGroupsAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.FractureModelGroups.TypeInfoHolder.ModelGroupsAccessor.Set(Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.FractureModelGroups@,System.Collections.Generic.List{Keen.VRage.Library.Utils.StringId}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.FractureModelGroups.TypeInfoHolder.ModelGroupsAccessor.Get(Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.FractureModelGroups@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#ContentPipeline#Models#PhysicsCollisionAssetInformation}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.TypeInfoHolder.AssetReferenceAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.TypeInfoHolder.AssetReferenceAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.TypeInfoHolder.AssetReferenceAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.TypeInfoHolder.AssetReferenceAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.TypeInfoHolder.AssetReferenceAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.TypeInfoHolder.AssetReferenceAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.TypeInfoHolder.AssetReferenceAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.TypeInfoHolder.AssetReferenceAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.TypeInfoHolder.AssetReferenceAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.TypeInfoHolder.AssetReferenceAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.TypeInfoHolder.AssetReferenceAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.TypeInfoHolder.AssetReferenceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.TypeInfoHolder.AssetReferenceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.TypeInfoHolder.AssetReferenceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.TypeInfoHolder.AssetReferenceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#EditorResourceHandle{Keen#VRage#ContentPipeline#Models#ColliderAsset}?}#Set(System.Object,System.Nullable{Keen.VRage.ContentPipeline.EditorResourceHandle{Keen.VRage.ContentPipeline.Models.ColliderAsset}}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.TypeInfoHolder.AssetReferenceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#EditorResourceHandle{Keen#VRage#ContentPipeline#Models#ColliderAsset}?}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.TypeInfoHolder.AssetReferenceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#EditorResourceHandle{Keen#VRage#ContentPipeline#Models#ColliderAsset}?}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.TypeInfoHolder.AssetReferenceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#ContentPipeline#EditorResourceHandle{Keen#VRage#ContentPipeline#Models#ColliderAsset}?}#Set(System.Byte@,System.Nullable{Keen.VRage.ContentPipeline.EditorResourceHandle{Keen.VRage.ContentPipeline.Models.ColliderAsset}}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.TypeInfoHolder.AssetReferenceAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.TypeInfoHolder.AssetReferenceAccessor.Set(Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation@,System.Nullable{Keen.VRage.ContentPipeline.EditorResourceHandle{Keen.VRage.ContentPipeline.Models.ColliderAsset}}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.TypeInfoHolder.AssetReferenceAccessor.Get(Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.TypeInfoHolder.GroupsByFractureAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.TypeInfoHolder.GroupsByFractureAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.TypeInfoHolder.GroupsByFractureAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.TypeInfoHolder.GroupsByFractureAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.TypeInfoHolder.GroupsByFractureAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.TypeInfoHolder.GroupsByFractureAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.TypeInfoHolder.GroupsByFractureAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.TypeInfoHolder.GroupsByFractureAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.TypeInfoHolder.GroupsByFractureAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.TypeInfoHolder.GroupsByFractureAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.TypeInfoHolder.GroupsByFractureAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.TypeInfoHolder.GroupsByFractureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.TypeInfoHolder.GroupsByFractureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.TypeInfoHolder.GroupsByFractureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.TypeInfoHolder.GroupsByFractureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{Keen#VRage#ContentPipeline#Models#PhysicsCollisionAssetInformation#FractureModelGroups}}#Set(System.Object,System.Collections.Generic.List{Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.FractureModelGroups}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.TypeInfoHolder.GroupsByFractureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{Keen#VRage#ContentPipeline#Models#PhysicsCollisionAssetInformation#FractureModelGroups}}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.TypeInfoHolder.GroupsByFractureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{Keen#VRage#ContentPipeline#Models#PhysicsCollisionAssetInformation#FractureModelGroups}}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.TypeInfoHolder.GroupsByFractureAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{Keen#VRage#ContentPipeline#Models#PhysicsCollisionAssetInformation#FractureModelGroups}}#Set(System.Byte@,System.Collections.Generic.List{Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.FractureModelGroups}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.TypeInfoHolder.GroupsByFractureAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.TypeInfoHolder.GroupsByFractureAccessor.Set(Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation@,System.Collections.Generic.List{Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.FractureModelGroups}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation.TypeInfoHolder.GroupsByFractureAccessor.Get(Keen.VRage.ContentPipeline.Models.PhysicsCollisionAssetInformation@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations">
            <summary>
            </summary>
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.Translation">
            <summary>
            The translation of the Model
            </summary>
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.Rotation">
            <summary>
            The rotation of the model in degrees
            </summary>
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.Scale">
            <summary>
            The scale of the Model
            </summary>
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#ContentPipeline#Models#ModelGeometryTransformations}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.TypeInfoHolder.TranslationAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.TypeInfoHolder.TranslationAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.TypeInfoHolder.TranslationAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.TypeInfoHolder.TranslationAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.TypeInfoHolder.TranslationAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.TypeInfoHolder.TranslationAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.TypeInfoHolder.TranslationAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.TypeInfoHolder.TranslationAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.TypeInfoHolder.TranslationAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.TypeInfoHolder.TranslationAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.TypeInfoHolder.TranslationAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.TypeInfoHolder.TranslationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.TypeInfoHolder.TranslationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.TypeInfoHolder.TranslationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.TypeInfoHolder.TranslationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3}#Set(System.Object,Keen.VRage.Library.Mathematics.Vector3@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.TypeInfoHolder.TranslationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.TypeInfoHolder.TranslationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.TypeInfoHolder.TranslationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3}#Set(System.Byte@,Keen.VRage.Library.Mathematics.Vector3@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.TypeInfoHolder.TranslationAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.TypeInfoHolder.TranslationAccessor.Set(Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations@,Keen.VRage.Library.Mathematics.Vector3@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.TypeInfoHolder.TranslationAccessor.Get(Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.TypeInfoHolder.RotationAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.TypeInfoHolder.RotationAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.TypeInfoHolder.RotationAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.TypeInfoHolder.RotationAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.TypeInfoHolder.RotationAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.TypeInfoHolder.RotationAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.TypeInfoHolder.RotationAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.TypeInfoHolder.RotationAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.TypeInfoHolder.RotationAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.TypeInfoHolder.RotationAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.TypeInfoHolder.RotationAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.TypeInfoHolder.RotationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.TypeInfoHolder.RotationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.TypeInfoHolder.RotationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.TypeInfoHolder.RotationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3}#Set(System.Object,Keen.VRage.Library.Mathematics.Vector3@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.TypeInfoHolder.RotationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.TypeInfoHolder.RotationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.TypeInfoHolder.RotationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3}#Set(System.Byte@,Keen.VRage.Library.Mathematics.Vector3@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.TypeInfoHolder.RotationAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.TypeInfoHolder.RotationAccessor.Set(Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations@,Keen.VRage.Library.Mathematics.Vector3@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.TypeInfoHolder.RotationAccessor.Get(Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.TypeInfoHolder._scaleAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.TypeInfoHolder._scaleAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.TypeInfoHolder._scaleAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.TypeInfoHolder._scaleAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.TypeInfoHolder._scaleAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.TypeInfoHolder._scaleAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.TypeInfoHolder._scaleAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.TypeInfoHolder._scaleAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.TypeInfoHolder._scaleAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.TypeInfoHolder._scaleAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.TypeInfoHolder._scaleAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.TypeInfoHolder._scaleAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.TypeInfoHolder._scaleAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.TypeInfoHolder._scaleAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.TypeInfoHolder._scaleAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Object,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.TypeInfoHolder._scaleAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.TypeInfoHolder._scaleAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.TypeInfoHolder._scaleAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Byte@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.TypeInfoHolder._scaleAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.TypeInfoHolder._scaleAccessor.Set(Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.TypeInfoHolder._scaleAccessor.Get(Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.TypeInfoHolder.ScaleAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.TypeInfoHolder.ScaleAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.TypeInfoHolder.ScaleAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.TypeInfoHolder.ScaleAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.TypeInfoHolder.ScaleAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.TypeInfoHolder.ScaleAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.TypeInfoHolder.ScaleAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.TypeInfoHolder.ScaleAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.TypeInfoHolder.ScaleAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.TypeInfoHolder.ScaleAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.TypeInfoHolder.ScaleAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.TypeInfoHolder.ScaleAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.TypeInfoHolder.ScaleAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.TypeInfoHolder.ScaleAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.TypeInfoHolder.ScaleAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Object,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.TypeInfoHolder.ScaleAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.TypeInfoHolder.ScaleAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.TypeInfoHolder.ScaleAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Byte@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.TypeInfoHolder.ScaleAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.TypeInfoHolder.ScaleAccessor.Set(Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations.TypeInfoHolder.ScaleAccessor.Get(Keen.VRage.ContentPipeline.Models.ModelGeometryTransformations@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Models.MaterialAssignment">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Models.MaterialAssignment.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.MaterialAssignment.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.MaterialAssignment.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.ContentPipeline.Models.MaterialAssignment@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.MaterialAssignment.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.MaterialAssignment.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.ContentPipeline.Models.MaterialAssignment@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.MaterialAssignment.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.MaterialAssignment.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.ContentPipeline.Models.MaterialAssignment@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.MaterialAssignment.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.MaterialAssignment.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.MaterialAssignment.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.MaterialAssignment.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.MaterialAssignment.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.ContentPipeline.Models.MaterialAssignment@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.MaterialAssignment.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.MaterialAssignment.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.ContentPipeline.Models.MaterialAssignment@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.MaterialAssignment.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.MaterialAssignment.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.ContentPipeline.Models.MaterialAssignment@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.MaterialAssignment.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.MaterialAssignment.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.ContentPipeline.Models.MaterialAssignment@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.MaterialAssignment.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.ContentPipeline.Models.MaterialAssignment.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.MaterialAssignment.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.MaterialAssignment.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.MaterialAssignment.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#ContentPipeline#Models#MaterialAssignment}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.MaterialAssignment.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Models.MaterialAssignment.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.ContentPipeline.Models.MaterialAssignment.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.ContentPipeline.Models.MaterialAssignment.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.MaterialAssignment.TypeInfoHolder.MaterialNameAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.MaterialAssignment.TypeInfoHolder.MaterialNameAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.MaterialAssignment.TypeInfoHolder.MaterialNameAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.MaterialAssignment.TypeInfoHolder.MaterialNameAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.MaterialAssignment.TypeInfoHolder.MaterialNameAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.MaterialAssignment.TypeInfoHolder.MaterialNameAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.MaterialAssignment.TypeInfoHolder.MaterialNameAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.MaterialAssignment.TypeInfoHolder.MaterialNameAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.MaterialAssignment.TypeInfoHolder.MaterialNameAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.MaterialAssignment.TypeInfoHolder.MaterialNameAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.MaterialAssignment.TypeInfoHolder.MaterialNameAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.MaterialAssignment.TypeInfoHolder.MaterialNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.MaterialAssignment.TypeInfoHolder.MaterialNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.MaterialAssignment.TypeInfoHolder.MaterialNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.MaterialAssignment.TypeInfoHolder.MaterialNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Object,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.MaterialAssignment.TypeInfoHolder.MaterialNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.MaterialAssignment.TypeInfoHolder.MaterialNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.MaterialAssignment.TypeInfoHolder.MaterialNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Byte@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.MaterialAssignment.TypeInfoHolder.MaterialNameAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.MaterialAssignment.TypeInfoHolder.MaterialNameAccessor.Set(Keen.VRage.ContentPipeline.Models.MaterialAssignment@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.MaterialAssignment.TypeInfoHolder.MaterialNameAccessor.Get(Keen.VRage.ContentPipeline.Models.MaterialAssignment@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.MaterialAssignment.TypeInfoHolder.MaterialReferenceAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.MaterialAssignment.TypeInfoHolder.MaterialReferenceAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.MaterialAssignment.TypeInfoHolder.MaterialReferenceAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.MaterialAssignment.TypeInfoHolder.MaterialReferenceAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.MaterialAssignment.TypeInfoHolder.MaterialReferenceAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.MaterialAssignment.TypeInfoHolder.MaterialReferenceAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.MaterialAssignment.TypeInfoHolder.MaterialReferenceAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.MaterialAssignment.TypeInfoHolder.MaterialReferenceAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.MaterialAssignment.TypeInfoHolder.MaterialReferenceAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.MaterialAssignment.TypeInfoHolder.MaterialReferenceAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.MaterialAssignment.TypeInfoHolder.MaterialReferenceAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.MaterialAssignment.TypeInfoHolder.MaterialReferenceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.MaterialAssignment.TypeInfoHolder.MaterialReferenceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.MaterialAssignment.TypeInfoHolder.MaterialReferenceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.MaterialAssignment.TypeInfoHolder.MaterialReferenceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Render#Materials#MaterialBaseDefinition}#Set(System.Object,Keen.VRage.Render.Materials.MaterialBaseDefinition@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.MaterialAssignment.TypeInfoHolder.MaterialReferenceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Render#Materials#MaterialBaseDefinition}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.MaterialAssignment.TypeInfoHolder.MaterialReferenceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Render#Materials#MaterialBaseDefinition}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.MaterialAssignment.TypeInfoHolder.MaterialReferenceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Render#Materials#MaterialBaseDefinition}#Set(System.Byte@,Keen.VRage.Render.Materials.MaterialBaseDefinition@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.MaterialAssignment.TypeInfoHolder.MaterialReferenceAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.MaterialAssignment.TypeInfoHolder.MaterialReferenceAccessor.Set(Keen.VRage.ContentPipeline.Models.MaterialAssignment@,Keen.VRage.Render.Materials.MaterialBaseDefinition@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.MaterialAssignment.TypeInfoHolder.MaterialReferenceAccessor.Get(Keen.VRage.ContentPipeline.Models.MaterialAssignment@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Models.MaterialStateOverride">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Models.MaterialStateOverride.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.MaterialStateOverride.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.MaterialStateOverride.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.ContentPipeline.Models.MaterialStateOverride@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.MaterialStateOverride.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.MaterialStateOverride.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.ContentPipeline.Models.MaterialStateOverride@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.MaterialStateOverride.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.MaterialStateOverride.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.ContentPipeline.Models.MaterialStateOverride@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.MaterialStateOverride.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.MaterialStateOverride.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.MaterialStateOverride.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.MaterialStateOverride.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.MaterialStateOverride.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.ContentPipeline.Models.MaterialStateOverride@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.MaterialStateOverride.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.MaterialStateOverride.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.ContentPipeline.Models.MaterialStateOverride@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.MaterialStateOverride.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.MaterialStateOverride.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.ContentPipeline.Models.MaterialStateOverride@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.MaterialStateOverride.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.MaterialStateOverride.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.ContentPipeline.Models.MaterialStateOverride@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.MaterialStateOverride.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.ContentPipeline.Models.MaterialStateOverride.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.MaterialStateOverride.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.MaterialStateOverride.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.MaterialStateOverride.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#ContentPipeline#Models#MaterialStateOverride}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.MaterialStateOverride.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Models.MaterialStateOverride.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.ContentPipeline.Models.MaterialStateOverride.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.ContentPipeline.Models.MaterialStateOverride.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.MaterialStateOverride.TypeInfoHolder.StateFromAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.MaterialStateOverride.TypeInfoHolder.StateFromAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.MaterialStateOverride.TypeInfoHolder.StateFromAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.MaterialStateOverride.TypeInfoHolder.StateFromAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.MaterialStateOverride.TypeInfoHolder.StateFromAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.MaterialStateOverride.TypeInfoHolder.StateFromAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.MaterialStateOverride.TypeInfoHolder.StateFromAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.MaterialStateOverride.TypeInfoHolder.StateFromAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.MaterialStateOverride.TypeInfoHolder.StateFromAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.MaterialStateOverride.TypeInfoHolder.StateFromAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.MaterialStateOverride.TypeInfoHolder.StateFromAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.MaterialStateOverride.TypeInfoHolder.StateFromAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.MaterialStateOverride.TypeInfoHolder.StateFromAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.MaterialStateOverride.TypeInfoHolder.StateFromAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.MaterialStateOverride.TypeInfoHolder.StateFromAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Render#Materials#MaterialStateDefinition}#Set(System.Object,Keen.VRage.Render.Materials.MaterialStateDefinition@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.MaterialStateOverride.TypeInfoHolder.StateFromAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Render#Materials#MaterialStateDefinition}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.MaterialStateOverride.TypeInfoHolder.StateFromAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Render#Materials#MaterialStateDefinition}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.MaterialStateOverride.TypeInfoHolder.StateFromAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Render#Materials#MaterialStateDefinition}#Set(System.Byte@,Keen.VRage.Render.Materials.MaterialStateDefinition@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.MaterialStateOverride.TypeInfoHolder.StateFromAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.MaterialStateOverride.TypeInfoHolder.StateFromAccessor.Set(Keen.VRage.ContentPipeline.Models.MaterialStateOverride@,Keen.VRage.Render.Materials.MaterialStateDefinition@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.MaterialStateOverride.TypeInfoHolder.StateFromAccessor.Get(Keen.VRage.ContentPipeline.Models.MaterialStateOverride@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.MaterialStateOverride.TypeInfoHolder.StateToAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.MaterialStateOverride.TypeInfoHolder.StateToAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.MaterialStateOverride.TypeInfoHolder.StateToAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.MaterialStateOverride.TypeInfoHolder.StateToAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.MaterialStateOverride.TypeInfoHolder.StateToAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.MaterialStateOverride.TypeInfoHolder.StateToAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.MaterialStateOverride.TypeInfoHolder.StateToAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.MaterialStateOverride.TypeInfoHolder.StateToAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.MaterialStateOverride.TypeInfoHolder.StateToAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.MaterialStateOverride.TypeInfoHolder.StateToAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.MaterialStateOverride.TypeInfoHolder.StateToAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.MaterialStateOverride.TypeInfoHolder.StateToAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.MaterialStateOverride.TypeInfoHolder.StateToAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.MaterialStateOverride.TypeInfoHolder.StateToAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.MaterialStateOverride.TypeInfoHolder.StateToAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Render#Materials#MaterialStateDefinition}#Set(System.Object,Keen.VRage.Render.Materials.MaterialStateDefinition@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.MaterialStateOverride.TypeInfoHolder.StateToAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Render#Materials#MaterialStateDefinition}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.MaterialStateOverride.TypeInfoHolder.StateToAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Render#Materials#MaterialStateDefinition}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.MaterialStateOverride.TypeInfoHolder.StateToAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Render#Materials#MaterialStateDefinition}#Set(System.Byte@,Keen.VRage.Render.Materials.MaterialStateDefinition@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.MaterialStateOverride.TypeInfoHolder.StateToAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.MaterialStateOverride.TypeInfoHolder.StateToAccessor.Set(Keen.VRage.ContentPipeline.Models.MaterialStateOverride@,Keen.VRage.Render.Materials.MaterialStateDefinition@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.MaterialStateOverride.TypeInfoHolder.StateToAccessor.Get(Keen.VRage.ContentPipeline.Models.MaterialStateOverride@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Models.Migrations.Versions">
            <summary>
            </summary>
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Models.ModelAssetProcessor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetProcessor.ValidateDeserializedModelAssetData(Keen.VRage.ContentPipeline.Models.ModelAssetData)">
            <summary>
            Validates that the deserialized object has expected data in it (lists not null).
            The semantics of data is not checked (references being assigned to existing FBXs,
            material assignments paired with used materials etc.)
            </summary>
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetProcessor.GetMaterialAssignments(Keen.VRage.ContentPipeline.Models.ModelAssetData,System.Collections.Generic.List{Keen.VRage.ContentPipeline.Project.Features.AssetProcessing.ProcessingProblem}@)">
            <summary>
            This method can only produce problems, but error in this method should not cause the processing to fail.
            </summary>
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Models.ModelFileProcessingResult">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetProcessorValidator.ValidateModelAssetsData(System.String,System.Collections.Generic.List{System.ValueTuple{System.String,Keen.VRage.ContentPipeline.Models.ModelAssetProcessorValidator.ModelValidationData}},System.Collections.Generic.List{System.ValueTuple{System.String,System.Guid}},System.Collections.Generic.List{System.ValueTuple{System.Guid,System.Guid}},System.Nullable{Keen.VRage.Library.Mathematics.Vector3},Keen.VRage.Core.Model.LODDescriptor[],Keen.VRage.ContentPipeline.ModelsBase.ModelPhysicsData,Keen.VRage.ContentPipeline.Models.ModelAssetSettings)">
            <summary>
            </summary>
            <param name="modelAssetPath"></param>
            <param name="geometryLodAssets">The list of ordered LODs of the model asset.
                First item must be LOD0, second LOD1 etc.</param>
            <param name="materialAssignments"></param>
            <param name="materialStateOverridesList"></param>
            <param name="suggestedModelSize">User-specified model size suggestion that should be used during triangle and LOD count calculations.
            Should not be too much different from actual model size.</param>
            <param name="lodDescriptors"></param>
            <param name="physicsData"></param>
            <param name="settings"></param>
            <returns></returns>
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetProcessorValidator.TestNumberOfLODs(System.Int32,Keen.VRage.Core.Model.ModelInfo,Keen.VRage.Library.Mathematics.Vector3,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Check whether the number of LODs is valid
            </summary>
            <returns><see langword="true"/> if the validation passed, <see langword="false"/> if not</returns>
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetProcessorValidator.TestNumberOfTriangles(System.Int32,Keen.VRage.Core.Model.ModelInfo,Keen.VRage.Library.Mathematics.Vector3,System.Int32,System.Boolean,System.Int32@)">
            <summary>
            Check whether the number of triangles for the specified lod is valid
            </summary>
            <returns><see langword="true"/> if the validation passed, <see langword="false"/> if not</returns>
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetProcessorValidator.TestNumberOfTrianglesSkinned(System.Int32,System.Int32,Keen.VRage.Core.Model.ModelInfo,System.Int32@)">
            <summary>
            Check whether the number of triangles for the specified lod is valid
            </summary>
            <returns><see langword="true"/> if the validation passed, <see langword="false"/> if not</returns>
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Models.ModelAssetSettings">
            <summary>
            Settings for <see cref="T:Keen.VRage.ContentPipeline.Models.ModelAssetProcessor"/>
            </summary>
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.UnlockLOD0TriangleLimits">
            <summary>
            Processor model validation will not complain if LOD0 has too many triangles.
            </summary>
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.UnlockHigherLODMaterialLimits">
            <summary>
            Unlocks the material limits for the LOD0 and LOD1 of the model - allows to use more materials than the default limit.
            Must be used with caution as it can cause performance issues. Use only when approved by the Production.
            </summary>
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.UnlockMaterialLimits">
            <summary>
            Unlocks the material limits for ALL LODs of the model - allows to use more materials than the default limit.
            Meant to be used only for prototype blocks, as it can cause severe performance issues.
            </summary>
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.ContentPipeline.Models.ModelAssetSettings@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.ContentPipeline.Models.ModelAssetSettings@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.ContentPipeline.Models.ModelAssetSettings@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.ContentPipeline.Models.ModelAssetSettings@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.ContentPipeline.Models.ModelAssetSettings@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.ContentPipeline.Models.ModelAssetSettings@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.ContentPipeline.Models.ModelAssetSettings@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#ContentPipeline#Models#ModelAssetSettings}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.TypeInfoHolder.UnlockLOD0TriangleLimitsAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.TypeInfoHolder.UnlockLOD0TriangleLimitsAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.TypeInfoHolder.UnlockLOD0TriangleLimitsAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.TypeInfoHolder.UnlockLOD0TriangleLimitsAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.TypeInfoHolder.UnlockLOD0TriangleLimitsAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.TypeInfoHolder.UnlockLOD0TriangleLimitsAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.TypeInfoHolder.UnlockLOD0TriangleLimitsAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.TypeInfoHolder.UnlockLOD0TriangleLimitsAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.TypeInfoHolder.UnlockLOD0TriangleLimitsAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.TypeInfoHolder.UnlockLOD0TriangleLimitsAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.TypeInfoHolder.UnlockLOD0TriangleLimitsAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.TypeInfoHolder.UnlockLOD0TriangleLimitsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.TypeInfoHolder.UnlockLOD0TriangleLimitsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.TypeInfoHolder.UnlockLOD0TriangleLimitsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.TypeInfoHolder.UnlockLOD0TriangleLimitsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.TypeInfoHolder.UnlockLOD0TriangleLimitsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.TypeInfoHolder.UnlockLOD0TriangleLimitsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.TypeInfoHolder.UnlockLOD0TriangleLimitsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.TypeInfoHolder.UnlockLOD0TriangleLimitsAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.TypeInfoHolder.UnlockLOD0TriangleLimitsAccessor.Set(Keen.VRage.ContentPipeline.Models.ModelAssetSettings@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.TypeInfoHolder.UnlockLOD0TriangleLimitsAccessor.Get(Keen.VRage.ContentPipeline.Models.ModelAssetSettings@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.TypeInfoHolder.UnlockHigherLODMaterialLimitsAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.TypeInfoHolder.UnlockHigherLODMaterialLimitsAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.TypeInfoHolder.UnlockHigherLODMaterialLimitsAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.TypeInfoHolder.UnlockHigherLODMaterialLimitsAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.TypeInfoHolder.UnlockHigherLODMaterialLimitsAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.TypeInfoHolder.UnlockHigherLODMaterialLimitsAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.TypeInfoHolder.UnlockHigherLODMaterialLimitsAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.TypeInfoHolder.UnlockHigherLODMaterialLimitsAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.TypeInfoHolder.UnlockHigherLODMaterialLimitsAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.TypeInfoHolder.UnlockHigherLODMaterialLimitsAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.TypeInfoHolder.UnlockHigherLODMaterialLimitsAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.TypeInfoHolder.UnlockHigherLODMaterialLimitsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.TypeInfoHolder.UnlockHigherLODMaterialLimitsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.TypeInfoHolder.UnlockHigherLODMaterialLimitsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.TypeInfoHolder.UnlockHigherLODMaterialLimitsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.TypeInfoHolder.UnlockHigherLODMaterialLimitsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.TypeInfoHolder.UnlockHigherLODMaterialLimitsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.TypeInfoHolder.UnlockHigherLODMaterialLimitsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.TypeInfoHolder.UnlockHigherLODMaterialLimitsAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.TypeInfoHolder.UnlockHigherLODMaterialLimitsAccessor.Set(Keen.VRage.ContentPipeline.Models.ModelAssetSettings@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.TypeInfoHolder.UnlockHigherLODMaterialLimitsAccessor.Get(Keen.VRage.ContentPipeline.Models.ModelAssetSettings@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.TypeInfoHolder.UnlockMaterialLimitsAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.TypeInfoHolder.UnlockMaterialLimitsAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.TypeInfoHolder.UnlockMaterialLimitsAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.TypeInfoHolder.UnlockMaterialLimitsAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.TypeInfoHolder.UnlockMaterialLimitsAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.TypeInfoHolder.UnlockMaterialLimitsAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.TypeInfoHolder.UnlockMaterialLimitsAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.TypeInfoHolder.UnlockMaterialLimitsAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.TypeInfoHolder.UnlockMaterialLimitsAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.TypeInfoHolder.UnlockMaterialLimitsAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.TypeInfoHolder.UnlockMaterialLimitsAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.TypeInfoHolder.UnlockMaterialLimitsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.TypeInfoHolder.UnlockMaterialLimitsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.TypeInfoHolder.UnlockMaterialLimitsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.TypeInfoHolder.UnlockMaterialLimitsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.TypeInfoHolder.UnlockMaterialLimitsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.TypeInfoHolder.UnlockMaterialLimitsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.TypeInfoHolder.UnlockMaterialLimitsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.TypeInfoHolder.UnlockMaterialLimitsAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.TypeInfoHolder.UnlockMaterialLimitsAccessor.Set(Keen.VRage.ContentPipeline.Models.ModelAssetSettings@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.ModelAssetSettings.TypeInfoHolder.UnlockMaterialLimitsAccessor.Get(Keen.VRage.ContentPipeline.Models.ModelAssetSettings@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Models.ModelAssetType">
            <summary>
            Editor-specific model asset type, complements <see cref="T:Keen.VRage.Core.Model.ModelAsset"/>
            </summary>
        </member>
        <member name="T:Keen.VRage.ContentPipeline.Models.Utils">
            <summary>
            </summary>
        </member>
        <member name="M:Keen.VRage.ContentPipeline.Models.Utils.GetLodIndex(System.String)">
            <summary>
            Extracts the LOD index from the given FBX file that is named in format "somename_LOD#.fbx". If not valid LOD index is found, 0 is returned.
            </summary>
            <param name="assetPath"></param>
            <returns>LOD index contained in the file name, 0 if no LOD suffix with valid index is found.</returns>
        </member>
    </members>
</doc>
