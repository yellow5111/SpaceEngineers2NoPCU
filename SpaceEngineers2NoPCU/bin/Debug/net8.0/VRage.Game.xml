<?xml version="1.0"?>
<doc>
    <assembly>
        <name>VRage.Game</name>
    </assembly>
    <members>
        <member name="T:Keen.VRage.Game.Armor.ArmorBlockLoader">
            <summary>
            Caches the ArmorBlocks Models and Sides.
            </summary>
        </member>
        <member name="T:Keen.VRage.Game.Armor.Components.ArmorMesherSessionComponent">
             <summary>
             Server session component for composing armor sector meshes and colliders.
             Armor meshing is the state-less 2-step process.  The first step takes a set of the armor block data and the reconstruction region.
             It returns intermediate data usable both for render and physics representation. The invisible sides are optionally removed at this step.
             Second step is different for render and physics.
             Server allows to create sector colliders <see cref="M:Keen.VRage.Game.Armor.Components.ArmorMesherSessionComponent.ComposeSectorColliders(Keen.VRage.Game.Armor.Data.ArmorSectorGeometryData,Keen.VRage.Library.Mathematics.BoundingBoxI,System.Span{Keen.VRage.Library.Mathematics.Vector3B})"/> using  convex shapes representation.
            
             The class is considered internally synchronized. Apart from init and dispose its usage is thread-safe.
             </summary>
        </member>
        <member name="P:Keen.VRage.Game.Armor.Components.ArmorMesherSessionComponent.AllowsPhysicsSectorOverlaps">
            <summary>
            If true the physical representation is cut to exact bounds of the sector
            </summary>
        </member>
        <member name="M:Keen.VRage.Game.Armor.Components.ArmorMesherSessionComponent.IsBlockCenterInsideRegion(Keen.VRage.Library.Mathematics.BoundingBoxI,Keen.VRage.Library.Mathematics.BoundingBoxI)">
            <summary>
            Check if the center of the block AABB is inside the given region (bounds in HALF CELL, MAX EXCLUSIVE!)
            </summary>
            <param name="blockBoundsInHalfCell">Block bounds, max exclusive, provide in HALF CELL space (double of normal block AABB)</param>
            <param name="regionInHalfCell">Bounding box of the region, max exclusive, provided in HALF CELL space</param>
        </member>
        <member name="T:Keen.VRage.Game.Armor.Components.ArmorMesherSessionComponent.BlockNodeInfo">
            <summary>
            Holds information of the armor block node instance necessary for further processing by <see cref="M:Keen.VRage.Game.Armor.Components.ArmorMesherSessionComponent.ComposeSectorColliders(Keen.VRage.Game.Armor.Data.ArmorSectorGeometryData,Keen.VRage.Library.Mathematics.BoundingBoxI,System.Span{Keen.VRage.Library.Mathematics.Vector3B})"/>
            </summary>
        </member>
        <member name="T:Keen.VRage.Game.Armor.Components.ConvexPrecutArmorColliderBuilder">
             <summary>
             Sector collider builder which uses 2 different strategies - one for deformed sectors and one for non-deformed.
             For non-deformed sectors the armor block shapes are added whole - without changes. For deformed sectors the armor blokc shapes are split in a way
             that each convex sub shape falls into one bone cell exactly. The builder uses offline prepared cuts.
            
             The class is considered internally synchronized. Apart from init and dispose its usage is thread-safe.
             </summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Components.ConvexPrecutArmorColliderBuilder._occupancyLock">
            <summary>
            Lock to be used to read/write on <see cref="F:Keen.VRage.Game.Armor.Components.ConvexPrecutArmorColliderBuilder._occupancy3DCache"/>.
            </summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Components.ConvexPrecutArmorColliderBuilder._allCollidersLock">
            <summary>
            Lock to be used to read/write on <see cref="F:Keen.VRage.Game.Armor.Components.ConvexPrecutArmorColliderBuilder._allColliders"/>.
            </summary>
        </member>
        <member name="M:Keen.VRage.Game.Armor.Components.ConvexPrecutArmorColliderBuilder.EditDeformedColliders(Keen.VRage.Game.Armor.Data.ArmorSectorGeometryData,Keen.VRage.Library.Mathematics.BoundingBoxI,System.Span{Keen.VRage.Library.Mathematics.Vector3B},System.Span{System.Int32},Keen.VRage.Game.Armor.Data.SectorColliders@)">
            <summary>
            Changes the specified SectorColliders when only bone changes happen in the sector. The number and order of sector colliders remains unchanged.
            </summary>
        </member>
        <member name="M:Keen.VRage.Game.Armor.Components.ConvexPrecutArmorColliderBuilder.RemoveCollidersDeformed(Keen.VRage.Game.Armor.Data.ArmorSectorGeometryData,Keen.VRage.Library.Mathematics.BoundingBoxI,Keen.VRage.Library.Mathematics.Vector3B[],Keen.VRage.Library.Memory.BufferReference{System.ValueTuple{Keen.VRage.DCS.Accessors.DEntity,System.Boolean}},System.Int32,Keen.VRage.Game.Armor.Data.SectorColliders@)">
            <summary>
            Removes all colliders related to the specified blocks.
            Note: Works for deformed sectors only!
            </summary>
        </member>
        <member name="M:Keen.VRage.Game.Armor.Components.ConvexPrecutArmorColliderBuilder.UpdateColliderInfos(Keen.VRage.Library.Memory.BufferReference{System.ValueTuple{System.UInt16,System.UInt16}},Keen.VRage.Library.Memory.Set{System.UInt16}@,Keen.VRage.Library.Memory.Set{System.UInt16}@,Keen.VRage.Library.Memory.MapReference{System.UInt16,System.UInt16},Keen.VRage.Library.Memory.MapReference{System.UInt16,System.UInt16})">
            <summary>
            Updates the specified array of collider infos, according to moved and removed colliders.
            </summary>
            <returns>Bool indicating whether all collider infos are removed (array is empty)</returns>
        </member>
        <member name="M:Keen.VRage.Game.Armor.Components.ConvexPrecutArmorColliderBuilder.ComposeColliderBoneCells(Keen.VRage.Game.Armor.Data.ArmorSectorGeometryData,Keen.VRage.Library.Mathematics.BoundingBoxI,System.Span{Keen.VRage.Library.Mathematics.Vector3B})">
            <summary>
            Creates colliders for all armor blocks in the specified sector by cutting each block into bone-cell-sized parts are deforming the ones affected by bone deformations.
            </summary>
        </member>
        <member name="T:Keen.VRage.Game.Armor.Components.IArmorMesherSessionComponent">
            <summary>
            Interface of the server session component for composing armor sector meshes and colliders.
            
            The API is considered internally synchronized. Can be accessed from multiple threads.
            </summary>
        </member>
        <member name="M:Keen.VRage.Game.Armor.Components.IArmorMesherSessionComponent.ComposeGeometryData(System.Span{Keen.VRage.Game.Armor.Data.ArmorBlockInfo},Keen.VRage.Library.Mathematics.BoundingBoxI,Keen.VRage.Library.Mathematics.BoundingBoxI)">
            <summary>
            Reconstructs a geometry data for given sector.
            Geometry data serves as source for further processing by the <see cref="M:Keen.VRage.Game.Armor.Components.IArmorMesherSessionComponent.ComposeSectorColliders(Keen.VRage.Game.Armor.Data.ArmorSectorGeometryData,Keen.VRage.Library.Mathematics.BoundingBoxI,System.Span{Keen.VRage.Library.Mathematics.Vector3B})"/>.
            Note: The center of cell [0,0,0] is aligned with grid relative world position [0,0,0]. 
            </summary>
            <param name="armorBlocks">Collection of armor blocks affecting the armor sector.
            Position of the armor blocks is expressed as lowest cell coordinates in the block, relative to the grid origin.</param>
            <param name="regionCellRange">Region of the sector expressed as max exclusive range of cell coordinates.
            Resulting data might include blocks overlapping this region.</param>
            <param name="safetyRegionCellRange">Expanded region. Blocks intersecting or contained within this region can be sampled during processing
            but will not generate instances.</param>
        </member>
        <member name="M:Keen.VRage.Game.Armor.Components.IArmorMesherSessionComponent.ComposeSectorColliders(Keen.VRage.Game.Armor.Data.ArmorSectorGeometryData,Keen.VRage.Library.Mathematics.BoundingBoxI,System.Span{Keen.VRage.Library.Mathematics.Vector3B})">
            <summary>
            Composes the sector colliders. 
            </summary>
            <param name="geometryData">Preprocessed geometry data composed by <see cref="M:Keen.VRage.Game.Armor.Components.IArmorMesherSessionComponent.ComposeGeometryData(System.Span{Keen.VRage.Game.Armor.Data.ArmorBlockInfo},Keen.VRage.Library.Mathematics.BoundingBoxI,Keen.VRage.Library.Mathematics.BoundingBoxI)"/></param>
            <param name="boneRegionRange">Region of the bones expressed as max exclusive range of bones coordinates.
            BoneRegionRange [0,0,0] - [8,8,8] needs 8*8*8 bones data array. Bones should cover whole area of the sector including the overlapping blocks.
            </param>
            <param name="bones">Data of the bones. Length of the data must either 0 or boneRegion.Size().Volume().
            The data must be stored in major order X then Y then Z.</param>
            <returns>Sector colliders with the colliders positioned in sector relative space</returns>
        </member>
        <member name="M:Keen.VRage.Game.Armor.Components.IArmorMesherSessionComponent.RemoveCollidersDeformedSector(Keen.VRage.Game.Armor.Data.ArmorSectorGeometryData,Keen.VRage.Library.Mathematics.BoundingBoxI,Keen.VRage.Library.Mathematics.Vector3B[],Keen.VRage.Library.Memory.BufferReference{System.ValueTuple{Keen.VRage.DCS.Accessors.DEntity,System.Boolean}},System.Int32,Keen.VRage.Game.Armor.Data.SectorColliders@)">
            <summary>
            Removes colliders for specified blocks in the deformed sector.
            </summary>
            <param name="geometryData">Preprocessed geometry data composed by <see cref="M:Keen.VRage.Game.Armor.Components.IArmorMesherSessionComponent.ComposeGeometryData(System.Span{Keen.VRage.Game.Armor.Data.ArmorBlockInfo},Keen.VRage.Library.Mathematics.BoundingBoxI,Keen.VRage.Library.Mathematics.BoundingBoxI)"/></param>
            <param name="boneRegionRange">Region of the bones expressed as max exclusive range of bones coordinates.
            BoneRegionRange [0,0,0] - [8,8,8] needs 8*8*8 bones data array. Bones should cover whole area of the sector including the overlapping blocks.
            </param>
            <param name="bones">Data of the bones. Length of the data must either 0 or boneRegion.Size().Volume().
            The data must be stored in major order X then Y then Z.</param>
            <param name="addedRemovedBlocks">Buffer of blockIds for all blocks that need to be removed or added (adds are ignored).</param>
            <param name="removedCount">Number of block that are being removed.</param>
            <param name="sectorColliders">Sector colliders to change</param>
        </member>
        <member name="M:Keen.VRage.Game.Armor.Components.IArmorMesherSessionComponent.EditSectorColliders(Keen.VRage.Game.Armor.Data.ArmorSectorGeometryData,Keen.VRage.Library.Mathematics.BoundingBoxI,System.Span{Keen.VRage.Library.Mathematics.Vector3B},System.Span{System.Int32},Keen.VRage.Game.Armor.Data.SectorColliders@)">
            <summary>
            Changes the sector colliders to reflect the new state.
            </summary>
            <param name="geometryData">Preprocessed geometry data composed by <see cref="M:Keen.VRage.Game.Armor.Components.IArmorMesherSessionComponent.ComposeGeometryData(System.Span{Keen.VRage.Game.Armor.Data.ArmorBlockInfo},Keen.VRage.Library.Mathematics.BoundingBoxI,Keen.VRage.Library.Mathematics.BoundingBoxI)"/></param>
            <param name="boneRegionRange">Region of the bones expressed as max exclusive range of bones coordinates.
            BoneRegionRange [0,0,0] - [8,8,8] needs 8*8*8 bones data array. Bones should cover whole area of the sector including the overlapping blocks.
            </param>
            <param name="bones">Data of the bones. Length of the data must either 0 or boneRegion.Size().Volume().
            The data must be stored in major order X then Y then Z.</param>
            <param name="bonesChanged">Indices of bones that were changed since last processing. Indices must be stored in major order X then Y then Z.</param>
            <param name="sectorColliders">Sector colliders to change</param>
        </member>
        <member name="M:Keen.VRage.Game.Armor.Components.IArmorMesherSessionComponent.GetMassProperties(Keen.VRage.Library.Utils.ResourceHandle)">
            <summary>
            Get mass properties for a given armor <see cref="T:Keen.VRage.Library.Utils.ResourceHandle"/>.
            </summary>
        </member>
        <member name="M:Keen.VRage.Game.Armor.Components.IArmorMesherSessionComponent.GetMaxBoneDeformation">
            <summary>
            Returns the maximum deformation (in meters) of a single bone.
            </summary>
        </member>
        <member name="T:Keen.VRage.Game.Armor.Data.ArmorBlockInfo">
            <summary>
            Defines specific instance of the block. Used as input for <see cref="T:Keen.VRage.Game.Armor.Components.ArmorMesherSessionComponent"/>
            </summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ArmorBlockInfo.Model">
            <summary>
            Block definition
            </summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ArmorBlockInfo.Position">
            <summary>
            Position of the lowest corner cell of the block relative to the grid origin
            </summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ArmorBlockInfo.Rotation">
            <summary>
            Rotation in 90 degrees steps
            </summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ArmorBlockInfo.Coloring">
            <summary>
            Coloring of the block
            </summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ArmorBlockInfo.Skin">
            <summary>
            Defines the set of materials to be used with the armor block
            </summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ArmorBlockInfo.BlockDEntity">
            <summary>
            DEntity from the GridBlockComponent
            </summary>
        </member>
        <member name="T:Keen.VRage.Game.Armor.Data.ArmorBlockModel">
            <summary>
            ArmorBlockModel defines geometric properties of whole block and its subdivisions. 
            </summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ArmorBlockModel.Root">
            <summary>
            Hierarchical representation of the block -
            in majority of the cases only top level is accessed.
            Lower levels are accessed only if block split is necessary
            (e.g. due to edges processing)
            </summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ArmorBlockModel.BoundingBox">
            <summary>
            Bounding box of occupied space defined in centered half cells space (unit = <see cref="F:Keen.VRage.Game.Armor.Data.ArmorConstants.HALF_CELL_SIZE"/>)
            Size of bounding box is guarantied to be in multiples of 2 => whole cell.
            </summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ArmorBlockModel.CoveringSurfaces">
            <summary>
            List of surfaces entirely covered by a block - used to hide neighbor armor block sides.
            Covering surfaces are defined in centered half cells space (unit = <see cref="F:Keen.VRage.Game.Armor.Data.ArmorConstants.HALF_CELL_SIZE"/>)
            </summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ArmorBlockModel.MassProperties">
            <summary>
            Properties describing the physical behaviour of the armor block model's mass. Center of mass is calculated in space with
            origin in the center of the cell closest to the center of the shape and with the lowest coordinates.   
            </summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ArmorBlockModel.Shape">
            <summary>
            Shape identifier of the physics shape of the whole armor block model. The shape description is located in <see cref="F:Keen.VRage.Game.Armor.Data.ArmorBlockModel.ShapeCatalog"/> 
            </summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ArmorBlockModel.ConvexCuts">
            <summary>
            Shape identifiers of the precut sections of the main <see cref="F:Keen.VRage.Game.Armor.Data.ArmorBlockModel.Shape"/>. The precut shapes are prepared for each possible block relative
            position to the bone grid. If the bone grid size changes, all armor block have to be recomputed. 
            </summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ArmorBlockModel.ShapeCatalog">
            <summary>
            Contains all the shapes used by the armor block.
            </summary>
        </member>
        <member name="T:Keen.VRage.Game.Armor.Data.ArmorBlockModel.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Game.Armor.Data.ArmorBlockModel@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Game.Armor.Data.ArmorBlockModel@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Game.Armor.Data.ArmorBlockModel@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Game.Armor.Data.ArmorBlockModel@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Game.Armor.Data.ArmorBlockModel@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Game.Armor.Data.ArmorBlockModel@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Game.Armor.Data.ArmorBlockModel@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ArmorBlockModel.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockModel.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockModel.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Game#Armor#Data#ArmorBlockModel}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.RootAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.RootAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.RootAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.RootAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.RootAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.RootAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.RootAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.RootAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.RootAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.RootAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.RootAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.RootAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.RootAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.RootAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.RootAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Game#Armor#Data#ArmorBlockNode}#Set(System.Object,Keen.VRage.Game.Armor.Data.ArmorBlockNode@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.RootAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Game#Armor#Data#ArmorBlockNode}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.RootAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Game#Armor#Data#ArmorBlockNode}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.RootAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Game#Armor#Data#ArmorBlockNode}#Set(System.Byte@,Keen.VRage.Game.Armor.Data.ArmorBlockNode@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.RootAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.RootAccessor.Set(Keen.VRage.Game.Armor.Data.ArmorBlockModel@,Keen.VRage.Game.Armor.Data.ArmorBlockNode@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.RootAccessor.Get(Keen.VRage.Game.Armor.Data.ArmorBlockModel@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.BoundingBoxAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.BoundingBoxAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.BoundingBoxAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.BoundingBoxAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.BoundingBoxAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.BoundingBoxAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.BoundingBoxAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.BoundingBoxAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.BoundingBoxAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.BoundingBoxAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.BoundingBoxAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.BoundingBoxAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.BoundingBoxAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.BoundingBoxAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.BoundingBoxAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#BoundingBoxI}#Set(System.Object,Keen.VRage.Library.Mathematics.BoundingBoxI@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.BoundingBoxAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#BoundingBoxI}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.BoundingBoxAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#BoundingBoxI}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.BoundingBoxAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#BoundingBoxI}#Set(System.Byte@,Keen.VRage.Library.Mathematics.BoundingBoxI@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.BoundingBoxAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.BoundingBoxAccessor.Set(Keen.VRage.Game.Armor.Data.ArmorBlockModel@,Keen.VRage.Library.Mathematics.BoundingBoxI@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.BoundingBoxAccessor.Get(Keen.VRage.Game.Armor.Data.ArmorBlockModel@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.CoveringSurfacesAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.CoveringSurfacesAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.CoveringSurfacesAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.CoveringSurfacesAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.CoveringSurfacesAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.CoveringSurfacesAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.CoveringSurfacesAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.CoveringSurfacesAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.CoveringSurfacesAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.CoveringSurfacesAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.CoveringSurfacesAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.CoveringSurfacesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.CoveringSurfacesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.CoveringSurfacesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.CoveringSurfacesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Immutable#ImmutableArray{Keen#VRage#Game#Armor#Data#IntegerPlaneArea}}#Set(System.Object,System.Collections.Immutable.ImmutableArray{Keen.VRage.Game.Armor.Data.IntegerPlaneArea}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.CoveringSurfacesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Immutable#ImmutableArray{Keen#VRage#Game#Armor#Data#IntegerPlaneArea}}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.CoveringSurfacesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Immutable#ImmutableArray{Keen#VRage#Game#Armor#Data#IntegerPlaneArea}}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.CoveringSurfacesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Immutable#ImmutableArray{Keen#VRage#Game#Armor#Data#IntegerPlaneArea}}#Set(System.Byte@,System.Collections.Immutable.ImmutableArray{Keen.VRage.Game.Armor.Data.IntegerPlaneArea}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.CoveringSurfacesAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.CoveringSurfacesAccessor.Set(Keen.VRage.Game.Armor.Data.ArmorBlockModel@,System.Collections.Immutable.ImmutableArray{Keen.VRage.Game.Armor.Data.IntegerPlaneArea}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.CoveringSurfacesAccessor.Get(Keen.VRage.Game.Armor.Data.ArmorBlockModel@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.MassPropertiesAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.MassPropertiesAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.MassPropertiesAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.MassPropertiesAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.MassPropertiesAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.MassPropertiesAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.MassPropertiesAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.MassPropertiesAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.MassPropertiesAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.MassPropertiesAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.MassPropertiesAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.MassPropertiesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.MassPropertiesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.MassPropertiesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.MassPropertiesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Physics#Data#RigidBodyMassProperties}#Set(System.Object,Keen.VRage.Physics.Data.RigidBodyMassProperties@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.MassPropertiesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Physics#Data#RigidBodyMassProperties}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.MassPropertiesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Physics#Data#RigidBodyMassProperties}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.MassPropertiesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Physics#Data#RigidBodyMassProperties}#Set(System.Byte@,Keen.VRage.Physics.Data.RigidBodyMassProperties@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.MassPropertiesAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.MassPropertiesAccessor.Set(Keen.VRage.Game.Armor.Data.ArmorBlockModel@,Keen.VRage.Physics.Data.RigidBodyMassProperties@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.MassPropertiesAccessor.Get(Keen.VRage.Game.Armor.Data.ArmorBlockModel@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.ShapeAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.ShapeAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.ShapeAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.ShapeAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.ShapeAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.ShapeAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.ShapeAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.ShapeAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.ShapeAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.ShapeAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.ShapeAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.ShapeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.ShapeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.ShapeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.ShapeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Game#Armor#Data#ShapeHash}#Set(System.Object,Keen.VRage.Game.Armor.Data.ShapeHash@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.ShapeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Game#Armor#Data#ShapeHash}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.ShapeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Game#Armor#Data#ShapeHash}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.ShapeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Game#Armor#Data#ShapeHash}#Set(System.Byte@,Keen.VRage.Game.Armor.Data.ShapeHash@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.ShapeAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.ShapeAccessor.Set(Keen.VRage.Game.Armor.Data.ArmorBlockModel@,Keen.VRage.Game.Armor.Data.ShapeHash@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.ShapeAccessor.Get(Keen.VRage.Game.Armor.Data.ArmorBlockModel@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.ConvexCutsAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.ConvexCutsAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.ConvexCutsAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.ConvexCutsAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.ConvexCutsAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.ConvexCutsAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.ConvexCutsAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.ConvexCutsAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.ConvexCutsAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.ConvexCutsAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.ConvexCutsAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.ConvexCutsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.ConvexCutsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.ConvexCutsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.ConvexCutsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#Dictionary{Keen#VRage#Game#Armor#Data#BoneCellCutKey,Keen#VRage#Game#Armor#Data#ShapeHash}}#Set(System.Object,System.Collections.Generic.Dictionary{Keen.VRage.Game.Armor.Data.BoneCellCutKey,Keen.VRage.Game.Armor.Data.ShapeHash}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.ConvexCutsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#Dictionary{Keen#VRage#Game#Armor#Data#BoneCellCutKey,Keen#VRage#Game#Armor#Data#ShapeHash}}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.ConvexCutsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#Dictionary{Keen#VRage#Game#Armor#Data#BoneCellCutKey,Keen#VRage#Game#Armor#Data#ShapeHash}}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.ConvexCutsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#Dictionary{Keen#VRage#Game#Armor#Data#BoneCellCutKey,Keen#VRage#Game#Armor#Data#ShapeHash}}#Set(System.Byte@,System.Collections.Generic.Dictionary{Keen.VRage.Game.Armor.Data.BoneCellCutKey,Keen.VRage.Game.Armor.Data.ShapeHash}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.ConvexCutsAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.ConvexCutsAccessor.Set(Keen.VRage.Game.Armor.Data.ArmorBlockModel@,System.Collections.Generic.Dictionary{Keen.VRage.Game.Armor.Data.BoneCellCutKey,Keen.VRage.Game.Armor.Data.ShapeHash}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.ConvexCutsAccessor.Get(Keen.VRage.Game.Armor.Data.ArmorBlockModel@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.ShapeCatalogAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.ShapeCatalogAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.ShapeCatalogAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.ShapeCatalogAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.ShapeCatalogAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.ShapeCatalogAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.ShapeCatalogAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.ShapeCatalogAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.ShapeCatalogAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.ShapeCatalogAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.ShapeCatalogAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.ShapeCatalogAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.ShapeCatalogAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.ShapeCatalogAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.ShapeCatalogAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#Dictionary{Keen#VRage#Game#Armor#Data#ShapeHash,Keen#VRage#Game#Armor#Data#ArmorBlockShape}}#Set(System.Object,System.Collections.Generic.Dictionary{Keen.VRage.Game.Armor.Data.ShapeHash,Keen.VRage.Game.Armor.Data.ArmorBlockShape}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.ShapeCatalogAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#Dictionary{Keen#VRage#Game#Armor#Data#ShapeHash,Keen#VRage#Game#Armor#Data#ArmorBlockShape}}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.ShapeCatalogAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#Dictionary{Keen#VRage#Game#Armor#Data#ShapeHash,Keen#VRage#Game#Armor#Data#ArmorBlockShape}}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.ShapeCatalogAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#Dictionary{Keen#VRage#Game#Armor#Data#ShapeHash,Keen#VRage#Game#Armor#Data#ArmorBlockShape}}#Set(System.Byte@,System.Collections.Generic.Dictionary{Keen.VRage.Game.Armor.Data.ShapeHash,Keen.VRage.Game.Armor.Data.ArmorBlockShape}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.ShapeCatalogAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.ShapeCatalogAccessor.Set(Keen.VRage.Game.Armor.Data.ArmorBlockModel@,System.Collections.Generic.Dictionary{Keen.VRage.Game.Armor.Data.ShapeHash,Keen.VRage.Game.Armor.Data.ArmorBlockShape}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModel.TypeInfoHolder.ShapeCatalogAccessor.Get(Keen.VRage.Game.Armor.Data.ArmorBlockModel@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Game.Armor.Data.ArmorBlockModelInfo">
            <summary>
            Armor block model info to cache in ContentCache
            </summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ArmorBlockModelInfo.ColliderBounds">
            <summary>
            The collider bounds generated from <see cref="M:Keen.VRage.Game.Armor.Utils.ArmorCollidersHelper.ComposeColliders(Keen.VRage.Physics.IPhysicsColliders,Keen.VRage.Game.Armor.Data.ArmorBlockShape)"/>
            </summary>
        </member>
        <member name="T:Keen.VRage.Game.Armor.Data.ArmorBlockModelInfo.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModelInfo.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModelInfo.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Game.Armor.Data.ArmorBlockModelInfo@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModelInfo.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModelInfo.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Game.Armor.Data.ArmorBlockModelInfo@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModelInfo.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModelInfo.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Game.Armor.Data.ArmorBlockModelInfo@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModelInfo.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModelInfo.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModelInfo.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModelInfo.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModelInfo.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Game.Armor.Data.ArmorBlockModelInfo@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModelInfo.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModelInfo.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Game.Armor.Data.ArmorBlockModelInfo@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModelInfo.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModelInfo.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModelInfo.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Game.Armor.Data.ArmorBlockModelInfo@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModelInfo.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ArmorBlockModelInfo.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockModelInfo.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModelInfo.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockModelInfo.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Game#Armor#Data#ArmorBlockModelInfo}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModelInfo.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Game.Armor.Data.ArmorBlockModelInfo.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ArmorBlockModelInfo.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ArmorBlockModelInfo.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockModelInfo.TypeInfoHolder.ColliderBoundsAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockModelInfo.TypeInfoHolder.ColliderBoundsAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockModelInfo.TypeInfoHolder.ColliderBoundsAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockModelInfo.TypeInfoHolder.ColliderBoundsAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockModelInfo.TypeInfoHolder.ColliderBoundsAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockModelInfo.TypeInfoHolder.ColliderBoundsAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockModelInfo.TypeInfoHolder.ColliderBoundsAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockModelInfo.TypeInfoHolder.ColliderBoundsAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockModelInfo.TypeInfoHolder.ColliderBoundsAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModelInfo.TypeInfoHolder.ColliderBoundsAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModelInfo.TypeInfoHolder.ColliderBoundsAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModelInfo.TypeInfoHolder.ColliderBoundsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModelInfo.TypeInfoHolder.ColliderBoundsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModelInfo.TypeInfoHolder.ColliderBoundsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModelInfo.TypeInfoHolder.ColliderBoundsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#BoundingBox}#Set(System.Object,Keen.VRage.Library.Mathematics.BoundingBox@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModelInfo.TypeInfoHolder.ColliderBoundsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#BoundingBox}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModelInfo.TypeInfoHolder.ColliderBoundsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#BoundingBox}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModelInfo.TypeInfoHolder.ColliderBoundsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#BoundingBox}#Set(System.Byte@,Keen.VRage.Library.Mathematics.BoundingBox@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModelInfo.TypeInfoHolder.ColliderBoundsAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModelInfo.TypeInfoHolder.ColliderBoundsAccessor.Set(Keen.VRage.Game.Armor.Data.ArmorBlockModelInfo@,Keen.VRage.Library.Mathematics.BoundingBox@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockModelInfo.TypeInfoHolder.ColliderBoundsAccessor.Get(Keen.VRage.Game.Armor.Data.ArmorBlockModelInfo@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Game.Armor.Data.ArmorBlockNode">
            <summary>
            Node of the ArmorBlock octree
            </summary>
        </member>
        <member name="T:Keen.VRage.Game.Armor.Data.ArmorBlockNode.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNode.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNode.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Game.Armor.Data.ArmorBlockNode@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNode.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNode.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Game.Armor.Data.ArmorBlockNode@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNode.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNode.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Game.Armor.Data.ArmorBlockNode@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNode.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNode.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNode.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNode.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNode.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Game.Armor.Data.ArmorBlockNode@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNode.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNode.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Game.Armor.Data.ArmorBlockNode@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNode.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNode.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Game.Armor.Data.ArmorBlockNode@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNode.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNode.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Game.Armor.Data.ArmorBlockNode@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNode.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ArmorBlockNode.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNode.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNode.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNode.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Game#Armor#Data#ArmorBlockNode}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNode.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Game.Armor.Data.ArmorBlockNode.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ArmorBlockNode.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ArmorBlockNode.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNode.TypeInfoHolder.SidesAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNode.TypeInfoHolder.SidesAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNode.TypeInfoHolder.SidesAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNode.TypeInfoHolder.SidesAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNode.TypeInfoHolder.SidesAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNode.TypeInfoHolder.SidesAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNode.TypeInfoHolder.SidesAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNode.TypeInfoHolder.SidesAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNode.TypeInfoHolder.SidesAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNode.TypeInfoHolder.SidesAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNode.TypeInfoHolder.SidesAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNode.TypeInfoHolder.SidesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNode.TypeInfoHolder.SidesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNode.TypeInfoHolder.SidesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNode.TypeInfoHolder.SidesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Immutable#ImmutableArray{Keen#VRage#Game#Armor#Data#ArmorBlockNodeSideRef}}#Set(System.Object,System.Collections.Immutable.ImmutableArray{Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNode.TypeInfoHolder.SidesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Immutable#ImmutableArray{Keen#VRage#Game#Armor#Data#ArmorBlockNodeSideRef}}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNode.TypeInfoHolder.SidesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Immutable#ImmutableArray{Keen#VRage#Game#Armor#Data#ArmorBlockNodeSideRef}}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNode.TypeInfoHolder.SidesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Immutable#ImmutableArray{Keen#VRage#Game#Armor#Data#ArmorBlockNodeSideRef}}#Set(System.Byte@,System.Collections.Immutable.ImmutableArray{Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNode.TypeInfoHolder.SidesAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNode.TypeInfoHolder.SidesAccessor.Set(Keen.VRage.Game.Armor.Data.ArmorBlockNode@,System.Collections.Immutable.ImmutableArray{Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNode.TypeInfoHolder.SidesAccessor.Get(Keen.VRage.Game.Armor.Data.ArmorBlockNode@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNode.TypeInfoHolder.ChildrenAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNode.TypeInfoHolder.ChildrenAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNode.TypeInfoHolder.ChildrenAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNode.TypeInfoHolder.ChildrenAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNode.TypeInfoHolder.ChildrenAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNode.TypeInfoHolder.ChildrenAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNode.TypeInfoHolder.ChildrenAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNode.TypeInfoHolder.ChildrenAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNode.TypeInfoHolder.ChildrenAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNode.TypeInfoHolder.ChildrenAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNode.TypeInfoHolder.ChildrenAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNode.TypeInfoHolder.ChildrenAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNode.TypeInfoHolder.ChildrenAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNode.TypeInfoHolder.ChildrenAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNode.TypeInfoHolder.ChildrenAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Immutable#ImmutableArray{Keen#VRage#Game#Armor#Data#ArmorBlockNode}}#Set(System.Object,System.Collections.Immutable.ImmutableArray{Keen.VRage.Game.Armor.Data.ArmorBlockNode}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNode.TypeInfoHolder.ChildrenAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Immutable#ImmutableArray{Keen#VRage#Game#Armor#Data#ArmorBlockNode}}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNode.TypeInfoHolder.ChildrenAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Immutable#ImmutableArray{Keen#VRage#Game#Armor#Data#ArmorBlockNode}}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNode.TypeInfoHolder.ChildrenAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Immutable#ImmutableArray{Keen#VRage#Game#Armor#Data#ArmorBlockNode}}#Set(System.Byte@,System.Collections.Immutable.ImmutableArray{Keen.VRage.Game.Armor.Data.ArmorBlockNode}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNode.TypeInfoHolder.ChildrenAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNode.TypeInfoHolder.ChildrenAccessor.Set(Keen.VRage.Game.Armor.Data.ArmorBlockNode@,System.Collections.Immutable.ImmutableArray{Keen.VRage.Game.Armor.Data.ArmorBlockNode}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNode.TypeInfoHolder.ChildrenAccessor.Get(Keen.VRage.Game.Armor.Data.ArmorBlockNode@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef">
            <summary>
            Mapping between armor block node and node of armor block side
            </summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.Offset">
            <summary>
            Translates the SrcSide's mesh at given SrcPlace to its position relative to block center.
            Offset is defined in centered half cells space (unit = <see cref="F:Keen.VRage.Game.Armor.Data.ArmorConstants.HALF_CELL_SIZE"/>)
            </summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.PlanarExtents">
            <summary>
            PlaneQuad has value if the mesh triangles lie in a plane. If planar extents are entirely covered by
            a <see cref="F:Keen.VRage.Game.Armor.Data.ArmorBlockModel.CoveringSurfaces"/> of other blocks the side is invisible and can be excluded from generation.
            PlaneQuad is defined in centered half cells space (unit = <see cref="F:Keen.VRage.Game.Armor.Data.ArmorConstants.HALF_CELL_SIZE"/>)
            </summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.CoversWholeExtents">
            <summary>
            If true the quad is whole covered by the armor side mesh. TODO: Merge this value and PlanarExtents into PlaneQuad
            </summary>
        </member>
        <member name="T:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.Conversions">
            <summary>
            Conversions
            </summary>
        </member>
        <member name="T:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Game#Armor#Data#ArmorBlockNodeSideRef}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.SrcSideAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.SrcSideAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.SrcSideAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.SrcSideAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.SrcSideAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.SrcSideAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.SrcSideAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.SrcSideAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.SrcSideAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.SrcSideAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.SrcSideAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.SrcSideAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.SrcSideAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.SrcSideAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.SrcSideAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Utils#ResourceHandle}#Set(System.Object,Keen.VRage.Library.Utils.ResourceHandle@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.SrcSideAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Utils#ResourceHandle}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.SrcSideAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Utils#ResourceHandle}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.SrcSideAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Utils#ResourceHandle}#Set(System.Byte@,Keen.VRage.Library.Utils.ResourceHandle@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.SrcSideAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.SrcSideAccessor.Set(Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef@,Keen.VRage.Library.Utils.ResourceHandle@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.SrcSideAccessor.Get(Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.SrcPlaceAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.SrcPlaceAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.SrcPlaceAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.SrcPlaceAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.SrcPlaceAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.SrcPlaceAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.SrcPlaceAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.SrcPlaceAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.SrcPlaceAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.SrcPlaceAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.SrcPlaceAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.SrcPlaceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.SrcPlaceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.SrcPlaceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.SrcPlaceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Game#Armor#Data#NodePlace}#Set(System.Object,Keen.VRage.Game.Armor.Data.NodePlace@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.SrcPlaceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Game#Armor#Data#NodePlace}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.SrcPlaceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Game#Armor#Data#NodePlace}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.SrcPlaceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Game#Armor#Data#NodePlace}#Set(System.Byte@,Keen.VRage.Game.Armor.Data.NodePlace@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.SrcPlaceAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.SrcPlaceAccessor.Set(Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef@,Keen.VRage.Game.Armor.Data.NodePlace@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.SrcPlaceAccessor.Get(Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.RotationAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.RotationAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.RotationAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.RotationAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.RotationAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.RotationAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.RotationAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.RotationAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.RotationAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.RotationAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.RotationAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.RotationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.RotationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.RotationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.RotationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#IntegerOrientation}#Set(System.Object,Keen.VRage.Library.Mathematics.IntegerOrientation@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.RotationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#IntegerOrientation}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.RotationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#IntegerOrientation}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.RotationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#IntegerOrientation}#Set(System.Byte@,Keen.VRage.Library.Mathematics.IntegerOrientation@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.RotationAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.RotationAccessor.Set(Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef@,Keen.VRage.Library.Mathematics.IntegerOrientation@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.RotationAccessor.Get(Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.LockedUVsAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.LockedUVsAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.LockedUVsAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.LockedUVsAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.LockedUVsAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.LockedUVsAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.LockedUVsAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.LockedUVsAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.LockedUVsAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.LockedUVsAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.LockedUVsAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.LockedUVsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.LockedUVsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.LockedUVsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.LockedUVsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Render#Data#TextureCoordinateLock}#Set(System.Object,Keen.VRage.Render.Data.TextureCoordinateLock@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.LockedUVsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Render#Data#TextureCoordinateLock}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.LockedUVsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Render#Data#TextureCoordinateLock}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.LockedUVsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Render#Data#TextureCoordinateLock}#Set(System.Byte@,Keen.VRage.Render.Data.TextureCoordinateLock@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.LockedUVsAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.LockedUVsAccessor.Set(Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef@,Keen.VRage.Render.Data.TextureCoordinateLock@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.LockedUVsAccessor.Get(Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.OffsetAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.OffsetAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.OffsetAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.OffsetAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.OffsetAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.OffsetAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.OffsetAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.OffsetAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.OffsetAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.OffsetAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.OffsetAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.OffsetAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.OffsetAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.OffsetAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.OffsetAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3I}#Set(System.Object,Keen.VRage.Library.Mathematics.Vector3I@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.OffsetAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3I}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.OffsetAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3I}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.OffsetAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3I}#Set(System.Byte@,Keen.VRage.Library.Mathematics.Vector3I@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.OffsetAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.OffsetAccessor.Set(Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef@,Keen.VRage.Library.Mathematics.Vector3I@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.OffsetAccessor.Get(Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.PlanarExtentsAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.PlanarExtentsAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.PlanarExtentsAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.PlanarExtentsAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.PlanarExtentsAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.PlanarExtentsAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.PlanarExtentsAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.PlanarExtentsAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.PlanarExtentsAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.PlanarExtentsAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.PlanarExtentsAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.PlanarExtentsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.PlanarExtentsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.PlanarExtentsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.PlanarExtentsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Game#Armor#Data#IntegerPlaneArea?}#Set(System.Object,System.Nullable{Keen.VRage.Game.Armor.Data.IntegerPlaneArea}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.PlanarExtentsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Game#Armor#Data#IntegerPlaneArea?}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.PlanarExtentsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Game#Armor#Data#IntegerPlaneArea?}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.PlanarExtentsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Game#Armor#Data#IntegerPlaneArea?}#Set(System.Byte@,System.Nullable{Keen.VRage.Game.Armor.Data.IntegerPlaneArea}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.PlanarExtentsAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.PlanarExtentsAccessor.Set(Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef@,System.Nullable{Keen.VRage.Game.Armor.Data.IntegerPlaneArea}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.PlanarExtentsAccessor.Get(Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.CoversWholeExtentsAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.CoversWholeExtentsAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.CoversWholeExtentsAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.CoversWholeExtentsAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.CoversWholeExtentsAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.CoversWholeExtentsAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.CoversWholeExtentsAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.CoversWholeExtentsAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.CoversWholeExtentsAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.CoversWholeExtentsAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.CoversWholeExtentsAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.CoversWholeExtentsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.CoversWholeExtentsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.CoversWholeExtentsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.CoversWholeExtentsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.CoversWholeExtentsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.CoversWholeExtentsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.CoversWholeExtentsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.CoversWholeExtentsAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.CoversWholeExtentsAccessor.Set(Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.CoversWholeExtentsAccessor.Get(Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.TransformedEdgesAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.TransformedEdgesAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.TransformedEdgesAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.TransformedEdgesAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.TransformedEdgesAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.TransformedEdgesAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.TransformedEdgesAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.TransformedEdgesAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.TransformedEdgesAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.TransformedEdgesAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.TransformedEdgesAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.TransformedEdgesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.TransformedEdgesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.TransformedEdgesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.TransformedEdgesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Immutable#ImmutableArray{Keen#VRage#Game#Armor#Data#ArmorEdgeMesherData}}#Set(System.Object,System.Collections.Immutable.ImmutableArray{Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.TransformedEdgesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Immutable#ImmutableArray{Keen#VRage#Game#Armor#Data#ArmorEdgeMesherData}}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.TransformedEdgesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Immutable#ImmutableArray{Keen#VRage#Game#Armor#Data#ArmorEdgeMesherData}}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.TransformedEdgesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Immutable#ImmutableArray{Keen#VRage#Game#Armor#Data#ArmorEdgeMesherData}}#Set(System.Byte@,System.Collections.Immutable.ImmutableArray{Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.TransformedEdgesAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.TransformedEdgesAccessor.Set(Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef@,System.Collections.Immutable.ImmutableArray{Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef.TypeInfoHolder.TransformedEdgesAccessor.Get(Keen.VRage.Game.Armor.Data.ArmorBlockNodeSideRef@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Game.Armor.Data.ArmorBlockShape">
            <summary>
            Description of the physics shape of the block or its cut
            </summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ArmorBlockShape.Topology">
            <summary>
            Type of the shape.
            </summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ArmorBlockShape.BoundingBox">
            <summary>
            Bounding box of the shape
            </summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ArmorBlockShape.CustomConvexShapes">
            <summary>
            Contains the collections of the custom convex shapes. It null if the <see cref="F:Keen.VRage.Game.Armor.Data.ArmorBlockShape.Topology"/> is not <see cref="F:Keen.VRage.Game.Armor.Data.BlockTopology.Custom"/>.
            </summary>
        </member>
        <member name="T:Keen.VRage.Game.Armor.Data.ArmorBlockShape.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockShape.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockShape.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Game.Armor.Data.ArmorBlockShape@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockShape.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockShape.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Game.Armor.Data.ArmorBlockShape@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockShape.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockShape.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Game.Armor.Data.ArmorBlockShape@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockShape.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockShape.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockShape.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockShape.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockShape.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Game.Armor.Data.ArmorBlockShape@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockShape.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockShape.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Game.Armor.Data.ArmorBlockShape@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockShape.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockShape.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Game.Armor.Data.ArmorBlockShape@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockShape.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockShape.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Game.Armor.Data.ArmorBlockShape@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockShape.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ArmorBlockShape.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockShape.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockShape.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockShape.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Game#Armor#Data#ArmorBlockShape}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockShape.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Game.Armor.Data.ArmorBlockShape.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ArmorBlockShape.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ArmorBlockShape.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockShape.TypeInfoHolder.TopologyAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockShape.TypeInfoHolder.TopologyAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockShape.TypeInfoHolder.TopologyAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockShape.TypeInfoHolder.TopologyAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockShape.TypeInfoHolder.TopologyAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockShape.TypeInfoHolder.TopologyAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockShape.TypeInfoHolder.TopologyAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockShape.TypeInfoHolder.TopologyAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockShape.TypeInfoHolder.TopologyAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockShape.TypeInfoHolder.TopologyAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockShape.TypeInfoHolder.TopologyAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockShape.TypeInfoHolder.TopologyAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockShape.TypeInfoHolder.TopologyAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockShape.TypeInfoHolder.TopologyAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockShape.TypeInfoHolder.TopologyAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Game#Armor#Data#BlockTopology}#Set(System.Object,Keen.VRage.Game.Armor.Data.BlockTopology@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockShape.TypeInfoHolder.TopologyAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Game#Armor#Data#BlockTopology}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockShape.TypeInfoHolder.TopologyAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Game#Armor#Data#BlockTopology}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockShape.TypeInfoHolder.TopologyAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Game#Armor#Data#BlockTopology}#Set(System.Byte@,Keen.VRage.Game.Armor.Data.BlockTopology@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockShape.TypeInfoHolder.TopologyAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockShape.TypeInfoHolder.TopologyAccessor.Set(Keen.VRage.Game.Armor.Data.ArmorBlockShape@,Keen.VRage.Game.Armor.Data.BlockTopology@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockShape.TypeInfoHolder.TopologyAccessor.Get(Keen.VRage.Game.Armor.Data.ArmorBlockShape@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockShape.TypeInfoHolder.BoundingBoxAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockShape.TypeInfoHolder.BoundingBoxAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockShape.TypeInfoHolder.BoundingBoxAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockShape.TypeInfoHolder.BoundingBoxAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockShape.TypeInfoHolder.BoundingBoxAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockShape.TypeInfoHolder.BoundingBoxAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockShape.TypeInfoHolder.BoundingBoxAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockShape.TypeInfoHolder.BoundingBoxAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockShape.TypeInfoHolder.BoundingBoxAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockShape.TypeInfoHolder.BoundingBoxAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockShape.TypeInfoHolder.BoundingBoxAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockShape.TypeInfoHolder.BoundingBoxAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockShape.TypeInfoHolder.BoundingBoxAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockShape.TypeInfoHolder.BoundingBoxAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockShape.TypeInfoHolder.BoundingBoxAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#BoundingBoxI}#Set(System.Object,Keen.VRage.Library.Mathematics.BoundingBoxI@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockShape.TypeInfoHolder.BoundingBoxAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#BoundingBoxI}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockShape.TypeInfoHolder.BoundingBoxAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#BoundingBoxI}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockShape.TypeInfoHolder.BoundingBoxAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#BoundingBoxI}#Set(System.Byte@,Keen.VRage.Library.Mathematics.BoundingBoxI@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockShape.TypeInfoHolder.BoundingBoxAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockShape.TypeInfoHolder.BoundingBoxAccessor.Set(Keen.VRage.Game.Armor.Data.ArmorBlockShape@,Keen.VRage.Library.Mathematics.BoundingBoxI@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockShape.TypeInfoHolder.BoundingBoxAccessor.Get(Keen.VRage.Game.Armor.Data.ArmorBlockShape@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockShape.TypeInfoHolder.CustomConvexShapesAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockShape.TypeInfoHolder.CustomConvexShapesAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockShape.TypeInfoHolder.CustomConvexShapesAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockShape.TypeInfoHolder.CustomConvexShapesAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockShape.TypeInfoHolder.CustomConvexShapesAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockShape.TypeInfoHolder.CustomConvexShapesAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockShape.TypeInfoHolder.CustomConvexShapesAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockShape.TypeInfoHolder.CustomConvexShapesAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockShape.TypeInfoHolder.CustomConvexShapesAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockShape.TypeInfoHolder.CustomConvexShapesAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockShape.TypeInfoHolder.CustomConvexShapesAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockShape.TypeInfoHolder.CustomConvexShapesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockShape.TypeInfoHolder.CustomConvexShapesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockShape.TypeInfoHolder.CustomConvexShapesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockShape.TypeInfoHolder.CustomConvexShapesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Game#Armor#Data#ConvexShapes?}#Set(System.Object,System.Nullable{Keen.VRage.Game.Armor.Data.ConvexShapes}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockShape.TypeInfoHolder.CustomConvexShapesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Game#Armor#Data#ConvexShapes?}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockShape.TypeInfoHolder.CustomConvexShapesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Game#Armor#Data#ConvexShapes?}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockShape.TypeInfoHolder.CustomConvexShapesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Game#Armor#Data#ConvexShapes?}#Set(System.Byte@,System.Nullable{Keen.VRage.Game.Armor.Data.ConvexShapes}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockShape.TypeInfoHolder.CustomConvexShapesAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockShape.TypeInfoHolder.CustomConvexShapesAccessor.Set(Keen.VRage.Game.Armor.Data.ArmorBlockShape@,System.Nullable{Keen.VRage.Game.Armor.Data.ConvexShapes}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockShape.TypeInfoHolder.CustomConvexShapesAccessor.Get(Keen.VRage.Game.Armor.Data.ArmorBlockShape@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Game.Armor.Data.ArmorBlockSide">
            <summary>
            ArmorBlockSide is a definition that contains geometry information for all LODS x all subdivisions of the armor block side,
            including the information for edge bevel generation.
            </summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ArmorBlockSide.Nodes">
            <summary>
            All the armor block side octree nodes, stored in non-hierarchical fashion
            </summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ArmorBlockSide.PlanarDirection">
            <summary>
            If not null all the ArmorBlockSide's triangles lie in a plane oriented towards one of 6 cube directions
            </summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ArmorBlockSide.SideMaterialVariant">
            <summary>
            If null the default material of the skin is used. Otherwise the skin definitions will be search for this particular side material variant.
            </summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ArmorBlockSide.LockedUVs">
            <summary>
            Specifies locked texture coordinates to disable procedural texture mapping.
            </summary>
        </member>
        <member name="T:Keen.VRage.Game.Armor.Data.ArmorBlockSide.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSide.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSide.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Game.Armor.Data.ArmorBlockSide@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSide.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSide.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Game.Armor.Data.ArmorBlockSide@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSide.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSide.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Game.Armor.Data.ArmorBlockSide@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSide.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSide.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSide.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSide.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSide.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Game.Armor.Data.ArmorBlockSide@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSide.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSide.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Game.Armor.Data.ArmorBlockSide@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSide.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSide.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Game.Armor.Data.ArmorBlockSide@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSide.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSide.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Game.Armor.Data.ArmorBlockSide@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSide.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ArmorBlockSide.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockSide.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSide.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockSide.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Game#Armor#Data#ArmorBlockSide}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSide.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Game.Armor.Data.ArmorBlockSide.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ArmorBlockSide.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ArmorBlockSide.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockSide.TypeInfoHolder.NodesAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockSide.TypeInfoHolder.NodesAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockSide.TypeInfoHolder.NodesAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockSide.TypeInfoHolder.NodesAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockSide.TypeInfoHolder.NodesAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockSide.TypeInfoHolder.NodesAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockSide.TypeInfoHolder.NodesAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockSide.TypeInfoHolder.NodesAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockSide.TypeInfoHolder.NodesAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSide.TypeInfoHolder.NodesAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSide.TypeInfoHolder.NodesAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSide.TypeInfoHolder.NodesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSide.TypeInfoHolder.NodesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSide.TypeInfoHolder.NodesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSide.TypeInfoHolder.NodesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#Dictionary{Keen#VRage#Game#Armor#Data#NodePlace,Keen#VRage#Game#Armor#Data#ArmorBlockSideNode}}#Set(System.Object,System.Collections.Generic.Dictionary{Keen.VRage.Game.Armor.Data.NodePlace,Keen.VRage.Game.Armor.Data.ArmorBlockSideNode}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSide.TypeInfoHolder.NodesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#Dictionary{Keen#VRage#Game#Armor#Data#NodePlace,Keen#VRage#Game#Armor#Data#ArmorBlockSideNode}}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSide.TypeInfoHolder.NodesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#Dictionary{Keen#VRage#Game#Armor#Data#NodePlace,Keen#VRage#Game#Armor#Data#ArmorBlockSideNode}}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSide.TypeInfoHolder.NodesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#Dictionary{Keen#VRage#Game#Armor#Data#NodePlace,Keen#VRage#Game#Armor#Data#ArmorBlockSideNode}}#Set(System.Byte@,System.Collections.Generic.Dictionary{Keen.VRage.Game.Armor.Data.NodePlace,Keen.VRage.Game.Armor.Data.ArmorBlockSideNode}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSide.TypeInfoHolder.NodesAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSide.TypeInfoHolder.NodesAccessor.Set(Keen.VRage.Game.Armor.Data.ArmorBlockSide@,System.Collections.Generic.Dictionary{Keen.VRage.Game.Armor.Data.NodePlace,Keen.VRage.Game.Armor.Data.ArmorBlockSideNode}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSide.TypeInfoHolder.NodesAccessor.Get(Keen.VRage.Game.Armor.Data.ArmorBlockSide@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockSide.TypeInfoHolder.PlanarDirectionAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockSide.TypeInfoHolder.PlanarDirectionAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockSide.TypeInfoHolder.PlanarDirectionAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockSide.TypeInfoHolder.PlanarDirectionAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockSide.TypeInfoHolder.PlanarDirectionAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockSide.TypeInfoHolder.PlanarDirectionAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockSide.TypeInfoHolder.PlanarDirectionAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockSide.TypeInfoHolder.PlanarDirectionAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockSide.TypeInfoHolder.PlanarDirectionAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSide.TypeInfoHolder.PlanarDirectionAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSide.TypeInfoHolder.PlanarDirectionAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSide.TypeInfoHolder.PlanarDirectionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSide.TypeInfoHolder.PlanarDirectionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSide.TypeInfoHolder.PlanarDirectionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSide.TypeInfoHolder.PlanarDirectionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Base6Directions#Direction?}#Set(System.Object,System.Nullable{Keen.VRage.Library.Mathematics.Base6Directions.Direction}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSide.TypeInfoHolder.PlanarDirectionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Base6Directions#Direction?}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSide.TypeInfoHolder.PlanarDirectionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Base6Directions#Direction?}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSide.TypeInfoHolder.PlanarDirectionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Base6Directions#Direction?}#Set(System.Byte@,System.Nullable{Keen.VRage.Library.Mathematics.Base6Directions.Direction}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSide.TypeInfoHolder.PlanarDirectionAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSide.TypeInfoHolder.PlanarDirectionAccessor.Set(Keen.VRage.Game.Armor.Data.ArmorBlockSide@,System.Nullable{Keen.VRage.Library.Mathematics.Base6Directions.Direction}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSide.TypeInfoHolder.PlanarDirectionAccessor.Get(Keen.VRage.Game.Armor.Data.ArmorBlockSide@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockSide.TypeInfoHolder.SideMaterialVariantAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockSide.TypeInfoHolder.SideMaterialVariantAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockSide.TypeInfoHolder.SideMaterialVariantAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockSide.TypeInfoHolder.SideMaterialVariantAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockSide.TypeInfoHolder.SideMaterialVariantAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockSide.TypeInfoHolder.SideMaterialVariantAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockSide.TypeInfoHolder.SideMaterialVariantAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockSide.TypeInfoHolder.SideMaterialVariantAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockSide.TypeInfoHolder.SideMaterialVariantAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSide.TypeInfoHolder.SideMaterialVariantAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSide.TypeInfoHolder.SideMaterialVariantAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSide.TypeInfoHolder.SideMaterialVariantAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSide.TypeInfoHolder.SideMaterialVariantAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSide.TypeInfoHolder.SideMaterialVariantAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSide.TypeInfoHolder.SideMaterialVariantAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Object,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSide.TypeInfoHolder.SideMaterialVariantAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSide.TypeInfoHolder.SideMaterialVariantAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSide.TypeInfoHolder.SideMaterialVariantAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Byte@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSide.TypeInfoHolder.SideMaterialVariantAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSide.TypeInfoHolder.SideMaterialVariantAccessor.Set(Keen.VRage.Game.Armor.Data.ArmorBlockSide@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSide.TypeInfoHolder.SideMaterialVariantAccessor.Get(Keen.VRage.Game.Armor.Data.ArmorBlockSide@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockSide.TypeInfoHolder.LockedUVsAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockSide.TypeInfoHolder.LockedUVsAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockSide.TypeInfoHolder.LockedUVsAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockSide.TypeInfoHolder.LockedUVsAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockSide.TypeInfoHolder.LockedUVsAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockSide.TypeInfoHolder.LockedUVsAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockSide.TypeInfoHolder.LockedUVsAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockSide.TypeInfoHolder.LockedUVsAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockSide.TypeInfoHolder.LockedUVsAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSide.TypeInfoHolder.LockedUVsAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSide.TypeInfoHolder.LockedUVsAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSide.TypeInfoHolder.LockedUVsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSide.TypeInfoHolder.LockedUVsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSide.TypeInfoHolder.LockedUVsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSide.TypeInfoHolder.LockedUVsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Render#Data#TextureCoordinateLock}#Set(System.Object,Keen.VRage.Render.Data.TextureCoordinateLock@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSide.TypeInfoHolder.LockedUVsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Render#Data#TextureCoordinateLock}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSide.TypeInfoHolder.LockedUVsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Render#Data#TextureCoordinateLock}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSide.TypeInfoHolder.LockedUVsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Render#Data#TextureCoordinateLock}#Set(System.Byte@,Keen.VRage.Render.Data.TextureCoordinateLock@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSide.TypeInfoHolder.LockedUVsAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSide.TypeInfoHolder.LockedUVsAccessor.Set(Keen.VRage.Game.Armor.Data.ArmorBlockSide@,Keen.VRage.Render.Data.TextureCoordinateLock@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSide.TypeInfoHolder.LockedUVsAccessor.Get(Keen.VRage.Game.Armor.Data.ArmorBlockSide@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Game.Armor.Data.ArmorBlockSideMesh">
            <summary>
            Geometry data of armor block side mesh
            </summary>
        </member>
        <member name="T:Keen.VRage.Game.Armor.Data.ArmorBlockSideMesh.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSideMesh.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSideMesh.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Game.Armor.Data.ArmorBlockSideMesh@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSideMesh.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSideMesh.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Game.Armor.Data.ArmorBlockSideMesh@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSideMesh.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSideMesh.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Game.Armor.Data.ArmorBlockSideMesh@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSideMesh.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSideMesh.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSideMesh.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSideMesh.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSideMesh.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Game.Armor.Data.ArmorBlockSideMesh@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSideMesh.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSideMesh.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Game.Armor.Data.ArmorBlockSideMesh@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSideMesh.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSideMesh.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Game.Armor.Data.ArmorBlockSideMesh@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSideMesh.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSideMesh.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Game.Armor.Data.ArmorBlockSideMesh@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSideMesh.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ArmorBlockSideMesh.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockSideMesh.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSideMesh.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockSideMesh.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Game#Armor#Data#ArmorBlockSideMesh}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSideMesh.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Game.Armor.Data.ArmorBlockSideMesh.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ArmorBlockSideMesh.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ArmorBlockSideMesh.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockSideMesh.TypeInfoHolder.VerticesAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockSideMesh.TypeInfoHolder.VerticesAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockSideMesh.TypeInfoHolder.VerticesAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockSideMesh.TypeInfoHolder.VerticesAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockSideMesh.TypeInfoHolder.VerticesAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockSideMesh.TypeInfoHolder.VerticesAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockSideMesh.TypeInfoHolder.VerticesAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockSideMesh.TypeInfoHolder.VerticesAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockSideMesh.TypeInfoHolder.VerticesAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSideMesh.TypeInfoHolder.VerticesAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSideMesh.TypeInfoHolder.VerticesAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSideMesh.TypeInfoHolder.VerticesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSideMesh.TypeInfoHolder.VerticesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSideMesh.TypeInfoHolder.VerticesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSideMesh.TypeInfoHolder.VerticesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Immutable#ImmutableArray{Keen#VRage#Game#Armor#Data#VertexFormatArmor}}#Set(System.Object,System.Collections.Immutable.ImmutableArray{Keen.VRage.Game.Armor.Data.VertexFormatArmor}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSideMesh.TypeInfoHolder.VerticesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Immutable#ImmutableArray{Keen#VRage#Game#Armor#Data#VertexFormatArmor}}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSideMesh.TypeInfoHolder.VerticesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Immutable#ImmutableArray{Keen#VRage#Game#Armor#Data#VertexFormatArmor}}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSideMesh.TypeInfoHolder.VerticesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Immutable#ImmutableArray{Keen#VRage#Game#Armor#Data#VertexFormatArmor}}#Set(System.Byte@,System.Collections.Immutable.ImmutableArray{Keen.VRage.Game.Armor.Data.VertexFormatArmor}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSideMesh.TypeInfoHolder.VerticesAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSideMesh.TypeInfoHolder.VerticesAccessor.Set(Keen.VRage.Game.Armor.Data.ArmorBlockSideMesh@,System.Collections.Immutable.ImmutableArray{Keen.VRage.Game.Armor.Data.VertexFormatArmor}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSideMesh.TypeInfoHolder.VerticesAccessor.Get(Keen.VRage.Game.Armor.Data.ArmorBlockSideMesh@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockSideMesh.TypeInfoHolder.IndicesAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockSideMesh.TypeInfoHolder.IndicesAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockSideMesh.TypeInfoHolder.IndicesAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockSideMesh.TypeInfoHolder.IndicesAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockSideMesh.TypeInfoHolder.IndicesAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockSideMesh.TypeInfoHolder.IndicesAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockSideMesh.TypeInfoHolder.IndicesAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockSideMesh.TypeInfoHolder.IndicesAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockSideMesh.TypeInfoHolder.IndicesAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSideMesh.TypeInfoHolder.IndicesAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSideMesh.TypeInfoHolder.IndicesAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSideMesh.TypeInfoHolder.IndicesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSideMesh.TypeInfoHolder.IndicesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSideMesh.TypeInfoHolder.IndicesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSideMesh.TypeInfoHolder.IndicesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Immutable#ImmutableArray{System#Int32}}#Set(System.Object,System.Collections.Immutable.ImmutableArray{System.Int32}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSideMesh.TypeInfoHolder.IndicesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Immutable#ImmutableArray{System#Int32}}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSideMesh.TypeInfoHolder.IndicesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Immutable#ImmutableArray{System#Int32}}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSideMesh.TypeInfoHolder.IndicesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Immutable#ImmutableArray{System#Int32}}#Set(System.Byte@,System.Collections.Immutable.ImmutableArray{System.Int32}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSideMesh.TypeInfoHolder.IndicesAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSideMesh.TypeInfoHolder.IndicesAccessor.Set(Keen.VRage.Game.Armor.Data.ArmorBlockSideMesh@,System.Collections.Immutable.ImmutableArray{System.Int32}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSideMesh.TypeInfoHolder.IndicesAccessor.Get(Keen.VRage.Game.Armor.Data.ArmorBlockSideMesh@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Game.Armor.Data.ArmorBlockSideNode">
            <summary>
            ArmorBlockSideCell defines the armor mesh side section.
            </summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ArmorBlockSideNode.LODs">
            <summary>
            LOD0 mesh with vertex distance 0.25, LOD[n-1] mesh with no divisions
            </summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ArmorBlockSideNode.Edges">
            <summary>
            Up to 8 edges per block side - it corresponds with the possible connections, not geometric edges
            </summary>
        </member>
        <member name="T:Keen.VRage.Game.Armor.Data.ArmorBlockSideNode.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSideNode.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSideNode.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Game.Armor.Data.ArmorBlockSideNode@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSideNode.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSideNode.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Game.Armor.Data.ArmorBlockSideNode@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSideNode.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSideNode.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Game.Armor.Data.ArmorBlockSideNode@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSideNode.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSideNode.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSideNode.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSideNode.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSideNode.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Game.Armor.Data.ArmorBlockSideNode@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSideNode.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSideNode.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Game.Armor.Data.ArmorBlockSideNode@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSideNode.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSideNode.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Game.Armor.Data.ArmorBlockSideNode@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSideNode.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSideNode.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Game.Armor.Data.ArmorBlockSideNode@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSideNode.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ArmorBlockSideNode.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockSideNode.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSideNode.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockSideNode.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Game#Armor#Data#ArmorBlockSideNode}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSideNode.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Game.Armor.Data.ArmorBlockSideNode.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ArmorBlockSideNode.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ArmorBlockSideNode.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockSideNode.TypeInfoHolder.LODsAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockSideNode.TypeInfoHolder.LODsAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockSideNode.TypeInfoHolder.LODsAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockSideNode.TypeInfoHolder.LODsAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockSideNode.TypeInfoHolder.LODsAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockSideNode.TypeInfoHolder.LODsAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockSideNode.TypeInfoHolder.LODsAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockSideNode.TypeInfoHolder.LODsAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockSideNode.TypeInfoHolder.LODsAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSideNode.TypeInfoHolder.LODsAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSideNode.TypeInfoHolder.LODsAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSideNode.TypeInfoHolder.LODsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSideNode.TypeInfoHolder.LODsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSideNode.TypeInfoHolder.LODsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSideNode.TypeInfoHolder.LODsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Immutable#ImmutableArray{Keen#VRage#Game#Armor#Data#ArmorBlockSideMesh}}#Set(System.Object,System.Collections.Immutable.ImmutableArray{Keen.VRage.Game.Armor.Data.ArmorBlockSideMesh}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSideNode.TypeInfoHolder.LODsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Immutable#ImmutableArray{Keen#VRage#Game#Armor#Data#ArmorBlockSideMesh}}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSideNode.TypeInfoHolder.LODsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Immutable#ImmutableArray{Keen#VRage#Game#Armor#Data#ArmorBlockSideMesh}}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSideNode.TypeInfoHolder.LODsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Immutable#ImmutableArray{Keen#VRage#Game#Armor#Data#ArmorBlockSideMesh}}#Set(System.Byte@,System.Collections.Immutable.ImmutableArray{Keen.VRage.Game.Armor.Data.ArmorBlockSideMesh}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSideNode.TypeInfoHolder.LODsAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSideNode.TypeInfoHolder.LODsAccessor.Set(Keen.VRage.Game.Armor.Data.ArmorBlockSideNode@,System.Collections.Immutable.ImmutableArray{Keen.VRage.Game.Armor.Data.ArmorBlockSideMesh}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSideNode.TypeInfoHolder.LODsAccessor.Get(Keen.VRage.Game.Armor.Data.ArmorBlockSideNode@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockSideNode.TypeInfoHolder.EdgesAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockSideNode.TypeInfoHolder.EdgesAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockSideNode.TypeInfoHolder.EdgesAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockSideNode.TypeInfoHolder.EdgesAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockSideNode.TypeInfoHolder.EdgesAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockSideNode.TypeInfoHolder.EdgesAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockSideNode.TypeInfoHolder.EdgesAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockSideNode.TypeInfoHolder.EdgesAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorBlockSideNode.TypeInfoHolder.EdgesAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSideNode.TypeInfoHolder.EdgesAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSideNode.TypeInfoHolder.EdgesAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSideNode.TypeInfoHolder.EdgesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSideNode.TypeInfoHolder.EdgesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSideNode.TypeInfoHolder.EdgesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSideNode.TypeInfoHolder.EdgesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Immutable#ImmutableArray{Keen#VRage#Game#Armor#Data#ArmorEdge}}#Set(System.Object,System.Collections.Immutable.ImmutableArray{Keen.VRage.Game.Armor.Data.ArmorEdge}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSideNode.TypeInfoHolder.EdgesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Immutable#ImmutableArray{Keen#VRage#Game#Armor#Data#ArmorEdge}}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSideNode.TypeInfoHolder.EdgesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Immutable#ImmutableArray{Keen#VRage#Game#Armor#Data#ArmorEdge}}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSideNode.TypeInfoHolder.EdgesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Immutable#ImmutableArray{Keen#VRage#Game#Armor#Data#ArmorEdge}}#Set(System.Byte@,System.Collections.Immutable.ImmutableArray{Keen.VRage.Game.Armor.Data.ArmorEdge}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSideNode.TypeInfoHolder.EdgesAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSideNode.TypeInfoHolder.EdgesAccessor.Set(Keen.VRage.Game.Armor.Data.ArmorBlockSideNode@,System.Collections.Immutable.ImmutableArray{Keen.VRage.Game.Armor.Data.ArmorEdge}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorBlockSideNode.TypeInfoHolder.EdgesAccessor.Get(Keen.VRage.Game.Armor.Data.ArmorBlockSideNode@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Game.Armor.Data.ArmorConstants">
            <summary>
            Game constants related to Armor blocks
            </summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ArmorConstants.CELL_SIZE">
            <summary>
            Smallest possible block size in meters
            </summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ArmorConstants.HALF_CELL_SIZE">
            <summary>
            Half size of the smallest possible block expressed in meters
            </summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ArmorConstants.ARMOR_PART_NAME">
            <summary>
            Name of the default armor mesh part, to be used with <see cref="M:Keen.VRage.Render.Contracts.InstancedModelEntity.SetMaterial(Keen.VRage.Library.Utils.StringId,Keen.VRage.Render.Materials.MaterialBaseDefinition)"/>
            </summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ArmorConstants.BONE_DISTANCE_CELLS">
            <summary>
            The distance between two neighbour nodes expressed as the number of cells 
            </summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ArmorConstants.BONE_HALF_DISTANCE_CELLS">
            <summary>
            The half of distance between two neighbour nodes expressed as the number of cells 
            </summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ArmorConstants.BONE_DISTANCE">
            <summary>
            The distance between two neighbour nodes expressed in meters
            </summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ArmorConstants.BONE_HALF_DISTANCE">
            <summary>
            The half of distance between two neighbour nodes expressed in meters
            </summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ArmorConstants.MAX_ARMOR_EDGES_PER_SIDE">
            <summary>
            CORRESPONDS TO RENDER / DATA STORAGE - DON'T CHANGE THIS WITHOUT REDESIGN
            </summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ArmorConstants.MAX_ARMOR_CORNERS_PER_SIDE">
            <summary>
            CORRESPONDS TO RENDER / DATA STORAGE - DON'T CHANGE THIS WITHOUT REDESIGN
            </summary>
        </member>
        <member name="T:Keen.VRage.Game.Armor.Data.ArmorEdge">
            <summary>
            Defines armor edge, used for edge bevels. Stored on armor sides. Values are in the side's local space
            </summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ArmorEdge.Vertex0">
            <summary>
            The starting vertex of the edge. Direction indicates winding order.
            </summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ArmorEdge.Vertex1">
            <summary>
            The end vertex of the edge. Direction indicates winding order.
            </summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ArmorEdge.Normal">
            <summary>
            The normal of the face the edge is attached to, in the side's local space
            </summary>
        </member>
        <member name="T:Keen.VRage.Game.Armor.Data.ArmorEdge.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdge.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdge.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Game.Armor.Data.ArmorEdge@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdge.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdge.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Game.Armor.Data.ArmorEdge@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdge.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdge.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Game.Armor.Data.ArmorEdge@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdge.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdge.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdge.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdge.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdge.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Game.Armor.Data.ArmorEdge@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdge.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdge.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Game.Armor.Data.ArmorEdge@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdge.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdge.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdge.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Game.Armor.Data.ArmorEdge@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdge.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ArmorEdge.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorEdge.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdge.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorEdge.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Game#Armor#Data#ArmorEdge}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdge.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Game.Armor.Data.ArmorEdge.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ArmorEdge.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ArmorEdge.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorEdge.TypeInfoHolder.Vertex0Accessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorEdge.TypeInfoHolder.Vertex0Accessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorEdge.TypeInfoHolder.Vertex0Accessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorEdge.TypeInfoHolder.Vertex0Accessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorEdge.TypeInfoHolder.Vertex0Accessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorEdge.TypeInfoHolder.Vertex0Accessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorEdge.TypeInfoHolder.Vertex0Accessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorEdge.TypeInfoHolder.Vertex0Accessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorEdge.TypeInfoHolder.Vertex0Accessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdge.TypeInfoHolder.Vertex0Accessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdge.TypeInfoHolder.Vertex0Accessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdge.TypeInfoHolder.Vertex0Accessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdge.TypeInfoHolder.Vertex0Accessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdge.TypeInfoHolder.Vertex0Accessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdge.TypeInfoHolder.Vertex0Accessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3}#Set(System.Object,Keen.VRage.Library.Mathematics.Vector3@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdge.TypeInfoHolder.Vertex0Accessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdge.TypeInfoHolder.Vertex0Accessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdge.TypeInfoHolder.Vertex0Accessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3}#Set(System.Byte@,Keen.VRage.Library.Mathematics.Vector3@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdge.TypeInfoHolder.Vertex0Accessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdge.TypeInfoHolder.Vertex0Accessor.Set(Keen.VRage.Game.Armor.Data.ArmorEdge@,Keen.VRage.Library.Mathematics.Vector3@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdge.TypeInfoHolder.Vertex0Accessor.Get(Keen.VRage.Game.Armor.Data.ArmorEdge@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorEdge.TypeInfoHolder.Vertex1Accessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorEdge.TypeInfoHolder.Vertex1Accessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorEdge.TypeInfoHolder.Vertex1Accessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorEdge.TypeInfoHolder.Vertex1Accessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorEdge.TypeInfoHolder.Vertex1Accessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorEdge.TypeInfoHolder.Vertex1Accessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorEdge.TypeInfoHolder.Vertex1Accessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorEdge.TypeInfoHolder.Vertex1Accessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorEdge.TypeInfoHolder.Vertex1Accessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdge.TypeInfoHolder.Vertex1Accessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdge.TypeInfoHolder.Vertex1Accessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdge.TypeInfoHolder.Vertex1Accessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdge.TypeInfoHolder.Vertex1Accessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdge.TypeInfoHolder.Vertex1Accessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdge.TypeInfoHolder.Vertex1Accessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3}#Set(System.Object,Keen.VRage.Library.Mathematics.Vector3@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdge.TypeInfoHolder.Vertex1Accessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdge.TypeInfoHolder.Vertex1Accessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdge.TypeInfoHolder.Vertex1Accessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3}#Set(System.Byte@,Keen.VRage.Library.Mathematics.Vector3@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdge.TypeInfoHolder.Vertex1Accessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdge.TypeInfoHolder.Vertex1Accessor.Set(Keen.VRage.Game.Armor.Data.ArmorEdge@,Keen.VRage.Library.Mathematics.Vector3@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdge.TypeInfoHolder.Vertex1Accessor.Get(Keen.VRage.Game.Armor.Data.ArmorEdge@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorEdge.TypeInfoHolder.NormalAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorEdge.TypeInfoHolder.NormalAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorEdge.TypeInfoHolder.NormalAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorEdge.TypeInfoHolder.NormalAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorEdge.TypeInfoHolder.NormalAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorEdge.TypeInfoHolder.NormalAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorEdge.TypeInfoHolder.NormalAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorEdge.TypeInfoHolder.NormalAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorEdge.TypeInfoHolder.NormalAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdge.TypeInfoHolder.NormalAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdge.TypeInfoHolder.NormalAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdge.TypeInfoHolder.NormalAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdge.TypeInfoHolder.NormalAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdge.TypeInfoHolder.NormalAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdge.TypeInfoHolder.NormalAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3}#Set(System.Object,Keen.VRage.Library.Mathematics.Vector3@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdge.TypeInfoHolder.NormalAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdge.TypeInfoHolder.NormalAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdge.TypeInfoHolder.NormalAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3}#Set(System.Byte@,Keen.VRage.Library.Mathematics.Vector3@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdge.TypeInfoHolder.NormalAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdge.TypeInfoHolder.NormalAccessor.Set(Keen.VRage.Game.Armor.Data.ArmorEdge@,Keen.VRage.Library.Mathematics.Vector3@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdge.TypeInfoHolder.NormalAccessor.Get(Keen.VRage.Game.Armor.Data.ArmorEdge@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Game.Armor.Data.ArmorEdgeCornerData">
            <summary>
            Armor Edge Corner Data generated by mesher to pass to render. Corresponds to the intersection point between two edges on a specific armor side.
            </summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ArmorEdgeCornerData.Position">
            <summary>
            The position of the corner, in grid space
            </summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ArmorEdgeCornerData.Normal">
            <summary>
            The normal of the armor side the corner is on
            </summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ArmorEdgeCornerData.PlaneNormal0">
            <summary>
            Plane normals for the armor sides attached to each edge
            </summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ArmorEdgeCornerData.EdgeTypes0">
            <summary>
            Types indicating whether the edges are inner, outer, invalid or flat
            </summary>
        </member>
        <member name="T:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData">
            <summary>
            Data regarding side edges, stored on the block. Values are in the block's local space
            </summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.Edge">
            <summary>
            A line segment of Vector3Is that indicate where the edge is. Direction indicates winding order.
            </summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.DirToEdge">
            <summary>
            The direction to the edge from the center of the triangle
            </summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.Normal">
            <summary>
            The normal of the face the edge is attached to
            </summary>
        </member>
        <member name="T:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Game#Armor#Data#ArmorEdgeMesherData}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.TypeInfoHolder.EdgeAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.TypeInfoHolder.EdgeAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.TypeInfoHolder.EdgeAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.TypeInfoHolder.EdgeAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.TypeInfoHolder.EdgeAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.TypeInfoHolder.EdgeAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.TypeInfoHolder.EdgeAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.TypeInfoHolder.EdgeAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.TypeInfoHolder.EdgeAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.TypeInfoHolder.EdgeAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.TypeInfoHolder.EdgeAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.TypeInfoHolder.EdgeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.TypeInfoHolder.EdgeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.TypeInfoHolder.EdgeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.TypeInfoHolder.EdgeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Game#Armor#Data#IntegerLineSegment}#Set(System.Object,Keen.VRage.Game.Armor.Data.IntegerLineSegment@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.TypeInfoHolder.EdgeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Game#Armor#Data#IntegerLineSegment}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.TypeInfoHolder.EdgeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Game#Armor#Data#IntegerLineSegment}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.TypeInfoHolder.EdgeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Game#Armor#Data#IntegerLineSegment}#Set(System.Byte@,Keen.VRage.Game.Armor.Data.IntegerLineSegment@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.TypeInfoHolder.EdgeAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.TypeInfoHolder.EdgeAccessor.Set(Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData@,Keen.VRage.Game.Armor.Data.IntegerLineSegment@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.TypeInfoHolder.EdgeAccessor.Get(Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.TypeInfoHolder.DirToEdgeAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.TypeInfoHolder.DirToEdgeAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.TypeInfoHolder.DirToEdgeAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.TypeInfoHolder.DirToEdgeAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.TypeInfoHolder.DirToEdgeAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.TypeInfoHolder.DirToEdgeAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.TypeInfoHolder.DirToEdgeAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.TypeInfoHolder.DirToEdgeAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.TypeInfoHolder.DirToEdgeAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.TypeInfoHolder.DirToEdgeAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.TypeInfoHolder.DirToEdgeAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.TypeInfoHolder.DirToEdgeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.TypeInfoHolder.DirToEdgeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.TypeInfoHolder.DirToEdgeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.TypeInfoHolder.DirToEdgeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3}#Set(System.Object,Keen.VRage.Library.Mathematics.Vector3@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.TypeInfoHolder.DirToEdgeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.TypeInfoHolder.DirToEdgeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.TypeInfoHolder.DirToEdgeAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3}#Set(System.Byte@,Keen.VRage.Library.Mathematics.Vector3@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.TypeInfoHolder.DirToEdgeAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.TypeInfoHolder.DirToEdgeAccessor.Set(Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData@,Keen.VRage.Library.Mathematics.Vector3@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.TypeInfoHolder.DirToEdgeAccessor.Get(Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.TypeInfoHolder.NormalAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.TypeInfoHolder.NormalAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.TypeInfoHolder.NormalAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.TypeInfoHolder.NormalAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.TypeInfoHolder.NormalAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.TypeInfoHolder.NormalAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.TypeInfoHolder.NormalAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.TypeInfoHolder.NormalAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.TypeInfoHolder.NormalAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.TypeInfoHolder.NormalAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.TypeInfoHolder.NormalAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.TypeInfoHolder.NormalAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.TypeInfoHolder.NormalAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.TypeInfoHolder.NormalAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.TypeInfoHolder.NormalAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3}#Set(System.Object,Keen.VRage.Library.Mathematics.Vector3@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.TypeInfoHolder.NormalAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.TypeInfoHolder.NormalAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.TypeInfoHolder.NormalAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3}#Set(System.Byte@,Keen.VRage.Library.Mathematics.Vector3@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.TypeInfoHolder.NormalAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.TypeInfoHolder.NormalAccessor.Set(Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData@,Keen.VRage.Library.Mathematics.Vector3@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData.TypeInfoHolder.NormalAccessor.Get(Keen.VRage.Game.Armor.Data.ArmorEdgeMesherData@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Game.Armor.Data.ArmorEdgeRingNode">
            <summary>
            Data for edge rings for corner data
            </summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ArmorEdgeRingNode.Normal">
            <summary>
            The normal of the side the edge is attached to
            </summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ArmorEdgeRingNode.LeadingEdge">
            <summary>
            The leading edge of the side in the ring, leading to the previous link
            </summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ArmorEdgeRingNode.NextEdge">
            <summary>
            The next edge of the side in the ring, leading to the next link
            </summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ArmorEdgeRingNode.Color">
            <summary>
            The color of the block, used to create grooves between materials. Retrieved after converting from HSV to SRGB.
            </summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ArmorEdgeRingNode.Skin">
            <summary>
            The skin of the block, used to create grooves between materials
            </summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ArmorEdgeRingNode.TwoSided">
            <summary>
            An indicator of whether the block is in its construction stage, which should isolate it from being grouped to other blocks
            </summary>
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdgeRingNode.DirToNextEdge">
            <summary>
            Get the direction to the next edge from the face center, perpendicular to the next edge
            </summary>
            <returns>A direction vector (non-normalized for performance)</returns>
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorEdgeRingNode.DirToLeadingEdge">
            <summary>
            Get the direction to the leading edge from the face center, perpendicular to the leading edge
            </summary>
            <returns>A direction vector (non-normalized for performance)</returns>
        </member>
        <member name="T:Keen.VRage.Game.Armor.Data.ArmorEdgeType">
            <summary>
            The type of bevel on an armor edge
            </summary>
        </member>
        <member name="T:Keen.VRage.Game.Armor.Data.ArmorSectorDiff">
            <summary>
            Detailed information about what's changed in the armor sector
            </summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ArmorSectorDiff.AddedRemovedBlocks">
            <summary>
            Blocks were added/removed to the sector
            </summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ArmorSectorDiff.HasVisualChanges">
            <summary>
            Sector contains some visual-only changes
            </summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ArmorSectorDiff.IsOverlappingWithChangedSector">
            <summary>
            Sector overlaps with a changed sector.
            </summary>
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorSectorDiff.#ctor">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ArmorSectorDiff.Dispose">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Game.Armor.Data.ArmorSectorGeometryData">
            <summary>
            ArmorSectorGeometryData holds geometry data of armor sector intended as input for both creating of render instances and meshing physics mesh
            </summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ArmorSectorGeometryData.Nodes">
            <summary>
            The nodes for the blocks that are rendered
            </summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ArmorSectorGeometryData.OuterNodes">
            <summary>
            The nodes for blocks that are not rendered, but whose data may be used to affect the rendering of the rendered blocks
            </summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ArmorSectorGeometryData.GeometryBounds">
            <summary>
            Bounding box of the generated instances geometry including overlapped geometry. 
            </summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ArmorSectorGeometryData.CellBounds">
            <summary>
            Bounds of the cells in pixel registration including overlapped geometry. 
            </summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ArmorSectorGeometryData.RegionCellRange">
            <summary>
            Region of the sector expressed as s max exclusive range of cell coordinates.
            </summary>
        </member>
        <member name="T:Keen.VRage.Game.Armor.Data.BlockTopology">
            <summary>
            Expresses the shape type of the block
            </summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.BlockTopology.Cuboid">
            <summary>
            Block is pure cuboid aligned with cell corners
            </summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.BlockTopology.Custom">
            <summary>
            Block is represented as collection of arbitrary convex shapes
            </summary>
        </member>
        <member name="T:Keen.VRage.Game.Armor.Data.BoneCellCutKey">
            <summary>
            Identifier of the section of the armor block physical representation. The armor blocks are precut for every possible block offset into
            chunks of the bone cell size.
            </summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.BoneCellCutKey.BlockOffset">
            <summary>
            Offset of the block relative to the bone cell corner. [0,0,0] - [3,3,3]
            </summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.BoneCellCutKey.BoneCellCoords">
            <summary>
            Identifies the section or chunk of the armor block cut 
            </summary>
        </member>
        <member name="T:Keen.VRage.Game.Armor.Data.BoneCellCutKey.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.BoneCellCutKey.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.BoneCellCutKey.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Game.Armor.Data.BoneCellCutKey@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.BoneCellCutKey.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.BoneCellCutKey.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Game.Armor.Data.BoneCellCutKey@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.BoneCellCutKey.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.BoneCellCutKey.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Game.Armor.Data.BoneCellCutKey@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.BoneCellCutKey.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.BoneCellCutKey.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.BoneCellCutKey.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.BoneCellCutKey.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.BoneCellCutKey.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Game.Armor.Data.BoneCellCutKey@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.BoneCellCutKey.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.BoneCellCutKey.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Game.Armor.Data.BoneCellCutKey@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.BoneCellCutKey.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.BoneCellCutKey.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.BoneCellCutKey.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Game.Armor.Data.BoneCellCutKey@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.BoneCellCutKey.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.BoneCellCutKey.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.BoneCellCutKey.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.BoneCellCutKey.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.BoneCellCutKey.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Game#Armor#Data#BoneCellCutKey}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.BoneCellCutKey.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Game.Armor.Data.BoneCellCutKey.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.BoneCellCutKey.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.BoneCellCutKey.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.BoneCellCutKey.TypeInfoHolder.BlockOffsetAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.BoneCellCutKey.TypeInfoHolder.BlockOffsetAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.BoneCellCutKey.TypeInfoHolder.BlockOffsetAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.BoneCellCutKey.TypeInfoHolder.BlockOffsetAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.BoneCellCutKey.TypeInfoHolder.BlockOffsetAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.BoneCellCutKey.TypeInfoHolder.BlockOffsetAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.BoneCellCutKey.TypeInfoHolder.BlockOffsetAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.BoneCellCutKey.TypeInfoHolder.BlockOffsetAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.BoneCellCutKey.TypeInfoHolder.BlockOffsetAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.BoneCellCutKey.TypeInfoHolder.BlockOffsetAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.BoneCellCutKey.TypeInfoHolder.BlockOffsetAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.BoneCellCutKey.TypeInfoHolder.BlockOffsetAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.BoneCellCutKey.TypeInfoHolder.BlockOffsetAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.BoneCellCutKey.TypeInfoHolder.BlockOffsetAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.BoneCellCutKey.TypeInfoHolder.BlockOffsetAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3I}#Set(System.Object,Keen.VRage.Library.Mathematics.Vector3I@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.BoneCellCutKey.TypeInfoHolder.BlockOffsetAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3I}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.BoneCellCutKey.TypeInfoHolder.BlockOffsetAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3I}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.BoneCellCutKey.TypeInfoHolder.BlockOffsetAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3I}#Set(System.Byte@,Keen.VRage.Library.Mathematics.Vector3I@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.BoneCellCutKey.TypeInfoHolder.BlockOffsetAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.BoneCellCutKey.TypeInfoHolder.BlockOffsetAccessor.Set(Keen.VRage.Game.Armor.Data.BoneCellCutKey@,Keen.VRage.Library.Mathematics.Vector3I@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.BoneCellCutKey.TypeInfoHolder.BlockOffsetAccessor.Get(Keen.VRage.Game.Armor.Data.BoneCellCutKey@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.BoneCellCutKey.TypeInfoHolder.BoneCellCoordsAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.BoneCellCutKey.TypeInfoHolder.BoneCellCoordsAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.BoneCellCutKey.TypeInfoHolder.BoneCellCoordsAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.BoneCellCutKey.TypeInfoHolder.BoneCellCoordsAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.BoneCellCutKey.TypeInfoHolder.BoneCellCoordsAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.BoneCellCutKey.TypeInfoHolder.BoneCellCoordsAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.BoneCellCutKey.TypeInfoHolder.BoneCellCoordsAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.BoneCellCutKey.TypeInfoHolder.BoneCellCoordsAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.BoneCellCutKey.TypeInfoHolder.BoneCellCoordsAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.BoneCellCutKey.TypeInfoHolder.BoneCellCoordsAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.BoneCellCutKey.TypeInfoHolder.BoneCellCoordsAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.BoneCellCutKey.TypeInfoHolder.BoneCellCoordsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.BoneCellCutKey.TypeInfoHolder.BoneCellCoordsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.BoneCellCutKey.TypeInfoHolder.BoneCellCoordsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.BoneCellCutKey.TypeInfoHolder.BoneCellCoordsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3I}#Set(System.Object,Keen.VRage.Library.Mathematics.Vector3I@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.BoneCellCutKey.TypeInfoHolder.BoneCellCoordsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3I}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.BoneCellCutKey.TypeInfoHolder.BoneCellCoordsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3I}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.BoneCellCutKey.TypeInfoHolder.BoneCellCoordsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3I}#Set(System.Byte@,Keen.VRage.Library.Mathematics.Vector3I@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.BoneCellCutKey.TypeInfoHolder.BoneCellCoordsAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.BoneCellCutKey.TypeInfoHolder.BoneCellCoordsAccessor.Set(Keen.VRage.Game.Armor.Data.BoneCellCutKey@,Keen.VRage.Library.Mathematics.Vector3I@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.BoneCellCutKey.TypeInfoHolder.BoneCellCoordsAccessor.Get(Keen.VRage.Game.Armor.Data.BoneCellCutKey@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Game.Armor.Data.ConvexShapes">
            <summary>
            Representation of the convex shape collection 
            </summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ConvexShapes.Vertices">
            <summary>
            Vertices of the all convex shapes in the collection.
            </summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ConvexShapes.VertexCounts">
            <summary>
            The vertex count for each convex shape. Vertices of one convex shape are stored together in the <see cref="F:Keen.VRage.Game.Armor.Data.ConvexShapes.Vertices"/> array. 
            </summary>
        </member>
        <member name="T:Keen.VRage.Game.Armor.Data.ConvexShapes.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ConvexShapes.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ConvexShapes.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Game.Armor.Data.ConvexShapes@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ConvexShapes.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ConvexShapes.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Game.Armor.Data.ConvexShapes@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ConvexShapes.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ConvexShapes.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Game.Armor.Data.ConvexShapes@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ConvexShapes.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ConvexShapes.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ConvexShapes.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ConvexShapes.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ConvexShapes.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Game.Armor.Data.ConvexShapes@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ConvexShapes.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ConvexShapes.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Game.Armor.Data.ConvexShapes@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ConvexShapes.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ConvexShapes.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Game.Armor.Data.ConvexShapes@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ConvexShapes.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ConvexShapes.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Game.Armor.Data.ConvexShapes@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ConvexShapes.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ConvexShapes.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ConvexShapes.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ConvexShapes.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ConvexShapes.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Game#Armor#Data#ConvexShapes}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ConvexShapes.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Game.Armor.Data.ConvexShapes.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ConvexShapes.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ConvexShapes.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ConvexShapes.TypeInfoHolder.VerticesAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ConvexShapes.TypeInfoHolder.VerticesAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ConvexShapes.TypeInfoHolder.VerticesAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ConvexShapes.TypeInfoHolder.VerticesAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ConvexShapes.TypeInfoHolder.VerticesAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ConvexShapes.TypeInfoHolder.VerticesAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ConvexShapes.TypeInfoHolder.VerticesAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ConvexShapes.TypeInfoHolder.VerticesAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ConvexShapes.TypeInfoHolder.VerticesAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ConvexShapes.TypeInfoHolder.VerticesAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ConvexShapes.TypeInfoHolder.VerticesAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ConvexShapes.TypeInfoHolder.VerticesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ConvexShapes.TypeInfoHolder.VerticesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ConvexShapes.TypeInfoHolder.VerticesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ConvexShapes.TypeInfoHolder.VerticesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Immutable#ImmutableArray{Keen#VRage#Library#Mathematics#Vector3}}#Set(System.Object,System.Collections.Immutable.ImmutableArray{Keen.VRage.Library.Mathematics.Vector3}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ConvexShapes.TypeInfoHolder.VerticesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Immutable#ImmutableArray{Keen#VRage#Library#Mathematics#Vector3}}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ConvexShapes.TypeInfoHolder.VerticesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Immutable#ImmutableArray{Keen#VRage#Library#Mathematics#Vector3}}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ConvexShapes.TypeInfoHolder.VerticesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Immutable#ImmutableArray{Keen#VRage#Library#Mathematics#Vector3}}#Set(System.Byte@,System.Collections.Immutable.ImmutableArray{Keen.VRage.Library.Mathematics.Vector3}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ConvexShapes.TypeInfoHolder.VerticesAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ConvexShapes.TypeInfoHolder.VerticesAccessor.Set(Keen.VRage.Game.Armor.Data.ConvexShapes@,System.Collections.Immutable.ImmutableArray{Keen.VRage.Library.Mathematics.Vector3}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ConvexShapes.TypeInfoHolder.VerticesAccessor.Get(Keen.VRage.Game.Armor.Data.ConvexShapes@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ConvexShapes.TypeInfoHolder.VertexCountsAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ConvexShapes.TypeInfoHolder.VertexCountsAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ConvexShapes.TypeInfoHolder.VertexCountsAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ConvexShapes.TypeInfoHolder.VertexCountsAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ConvexShapes.TypeInfoHolder.VertexCountsAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ConvexShapes.TypeInfoHolder.VertexCountsAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ConvexShapes.TypeInfoHolder.VertexCountsAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ConvexShapes.TypeInfoHolder.VertexCountsAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ConvexShapes.TypeInfoHolder.VertexCountsAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ConvexShapes.TypeInfoHolder.VertexCountsAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ConvexShapes.TypeInfoHolder.VertexCountsAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ConvexShapes.TypeInfoHolder.VertexCountsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ConvexShapes.TypeInfoHolder.VertexCountsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ConvexShapes.TypeInfoHolder.VertexCountsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ConvexShapes.TypeInfoHolder.VertexCountsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Immutable#ImmutableArray{System#Int32}}#Set(System.Object,System.Collections.Immutable.ImmutableArray{System.Int32}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ConvexShapes.TypeInfoHolder.VertexCountsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Immutable#ImmutableArray{System#Int32}}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ConvexShapes.TypeInfoHolder.VertexCountsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Immutable#ImmutableArray{System#Int32}}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ConvexShapes.TypeInfoHolder.VertexCountsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Immutable#ImmutableArray{System#Int32}}#Set(System.Byte@,System.Collections.Immutable.ImmutableArray{System.Int32}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ConvexShapes.TypeInfoHolder.VertexCountsAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ConvexShapes.TypeInfoHolder.VertexCountsAccessor.Set(Keen.VRage.Game.Armor.Data.ConvexShapes@,System.Collections.Immutable.ImmutableArray{System.Int32}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ConvexShapes.TypeInfoHolder.VertexCountsAccessor.Get(Keen.VRage.Game.Armor.Data.ConvexShapes@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Game.Armor.Data.IntegerLineSegment">
            <summary>
            A line segment composed of two Vector3I vertices.
            </summary>
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerLineSegment.GetHashCode">
            <inheritdoc />
            <autogeneratedoc />
        </member>
        <member name="T:Keen.VRage.Game.Armor.Data.IntegerLineSegment.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerLineSegment.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerLineSegment.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Game.Armor.Data.IntegerLineSegment@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerLineSegment.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerLineSegment.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Game.Armor.Data.IntegerLineSegment@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerLineSegment.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerLineSegment.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Game.Armor.Data.IntegerLineSegment@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerLineSegment.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerLineSegment.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerLineSegment.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerLineSegment.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerLineSegment.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Game.Armor.Data.IntegerLineSegment@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerLineSegment.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerLineSegment.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Game.Armor.Data.IntegerLineSegment@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerLineSegment.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerLineSegment.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerLineSegment.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Game.Armor.Data.IntegerLineSegment@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerLineSegment.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.IntegerLineSegment.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.IntegerLineSegment.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerLineSegment.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.IntegerLineSegment.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Game#Armor#Data#IntegerLineSegment}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerLineSegment.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Game.Armor.Data.IntegerLineSegment.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.IntegerLineSegment.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.IntegerLineSegment.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.IntegerLineSegment.TypeInfoHolder.Vertex0Accessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.IntegerLineSegment.TypeInfoHolder.Vertex0Accessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.IntegerLineSegment.TypeInfoHolder.Vertex0Accessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.IntegerLineSegment.TypeInfoHolder.Vertex0Accessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.IntegerLineSegment.TypeInfoHolder.Vertex0Accessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.IntegerLineSegment.TypeInfoHolder.Vertex0Accessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.IntegerLineSegment.TypeInfoHolder.Vertex0Accessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.IntegerLineSegment.TypeInfoHolder.Vertex0Accessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.IntegerLineSegment.TypeInfoHolder.Vertex0Accessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerLineSegment.TypeInfoHolder.Vertex0Accessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerLineSegment.TypeInfoHolder.Vertex0Accessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerLineSegment.TypeInfoHolder.Vertex0Accessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerLineSegment.TypeInfoHolder.Vertex0Accessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerLineSegment.TypeInfoHolder.Vertex0Accessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerLineSegment.TypeInfoHolder.Vertex0Accessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3I}#Set(System.Object,Keen.VRage.Library.Mathematics.Vector3I@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerLineSegment.TypeInfoHolder.Vertex0Accessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3I}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerLineSegment.TypeInfoHolder.Vertex0Accessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3I}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerLineSegment.TypeInfoHolder.Vertex0Accessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3I}#Set(System.Byte@,Keen.VRage.Library.Mathematics.Vector3I@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerLineSegment.TypeInfoHolder.Vertex0Accessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerLineSegment.TypeInfoHolder.Vertex0Accessor.Set(Keen.VRage.Game.Armor.Data.IntegerLineSegment@,Keen.VRage.Library.Mathematics.Vector3I@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerLineSegment.TypeInfoHolder.Vertex0Accessor.Get(Keen.VRage.Game.Armor.Data.IntegerLineSegment@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.IntegerLineSegment.TypeInfoHolder.Vertex1Accessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.IntegerLineSegment.TypeInfoHolder.Vertex1Accessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.IntegerLineSegment.TypeInfoHolder.Vertex1Accessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.IntegerLineSegment.TypeInfoHolder.Vertex1Accessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.IntegerLineSegment.TypeInfoHolder.Vertex1Accessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.IntegerLineSegment.TypeInfoHolder.Vertex1Accessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.IntegerLineSegment.TypeInfoHolder.Vertex1Accessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.IntegerLineSegment.TypeInfoHolder.Vertex1Accessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.IntegerLineSegment.TypeInfoHolder.Vertex1Accessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerLineSegment.TypeInfoHolder.Vertex1Accessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerLineSegment.TypeInfoHolder.Vertex1Accessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerLineSegment.TypeInfoHolder.Vertex1Accessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerLineSegment.TypeInfoHolder.Vertex1Accessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerLineSegment.TypeInfoHolder.Vertex1Accessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerLineSegment.TypeInfoHolder.Vertex1Accessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3I}#Set(System.Object,Keen.VRage.Library.Mathematics.Vector3I@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerLineSegment.TypeInfoHolder.Vertex1Accessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3I}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerLineSegment.TypeInfoHolder.Vertex1Accessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3I}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerLineSegment.TypeInfoHolder.Vertex1Accessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3I}#Set(System.Byte@,Keen.VRage.Library.Mathematics.Vector3I@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerLineSegment.TypeInfoHolder.Vertex1Accessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerLineSegment.TypeInfoHolder.Vertex1Accessor.Set(Keen.VRage.Game.Armor.Data.IntegerLineSegment@,Keen.VRage.Library.Mathematics.Vector3I@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerLineSegment.TypeInfoHolder.Vertex1Accessor.Get(Keen.VRage.Game.Armor.Data.IntegerLineSegment@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Game.Armor.Data.IntegerPlane">
            <summary>
            IntegerPlane is representation of the slope in integer space.  
            </summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.IntegerPlane.Normal">
            <summary>
            Non-normalized normal of the plane
            </summary>
        </member>
        <member name="T:Keen.VRage.Game.Armor.Data.IntegerPlane.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlane.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlane.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Game.Armor.Data.IntegerPlane@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlane.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlane.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Game.Armor.Data.IntegerPlane@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlane.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlane.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Game.Armor.Data.IntegerPlane@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlane.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlane.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlane.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlane.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlane.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Game.Armor.Data.IntegerPlane@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlane.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlane.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Game.Armor.Data.IntegerPlane@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlane.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlane.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlane.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Game.Armor.Data.IntegerPlane@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlane.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.IntegerPlane.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.IntegerPlane.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlane.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.IntegerPlane.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Game#Armor#Data#IntegerPlane}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlane.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Game.Armor.Data.IntegerPlane.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.IntegerPlane.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.IntegerPlane.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.IntegerPlane.TypeInfoHolder.NormalAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.IntegerPlane.TypeInfoHolder.NormalAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.IntegerPlane.TypeInfoHolder.NormalAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.IntegerPlane.TypeInfoHolder.NormalAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.IntegerPlane.TypeInfoHolder.NormalAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.IntegerPlane.TypeInfoHolder.NormalAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.IntegerPlane.TypeInfoHolder.NormalAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.IntegerPlane.TypeInfoHolder.NormalAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.IntegerPlane.TypeInfoHolder.NormalAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlane.TypeInfoHolder.NormalAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlane.TypeInfoHolder.NormalAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlane.TypeInfoHolder.NormalAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlane.TypeInfoHolder.NormalAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlane.TypeInfoHolder.NormalAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlane.TypeInfoHolder.NormalAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3I}#Set(System.Object,Keen.VRage.Library.Mathematics.Vector3I@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlane.TypeInfoHolder.NormalAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3I}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlane.TypeInfoHolder.NormalAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3I}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlane.TypeInfoHolder.NormalAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3I}#Set(System.Byte@,Keen.VRage.Library.Mathematics.Vector3I@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlane.TypeInfoHolder.NormalAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlane.TypeInfoHolder.NormalAccessor.Set(Keen.VRage.Game.Armor.Data.IntegerPlane@,Keen.VRage.Library.Mathematics.Vector3I@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlane.TypeInfoHolder.NormalAccessor.Get(Keen.VRage.Game.Armor.Data.IntegerPlane@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.IntegerPlane.TypeInfoHolder.DAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.IntegerPlane.TypeInfoHolder.DAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.IntegerPlane.TypeInfoHolder.DAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.IntegerPlane.TypeInfoHolder.DAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.IntegerPlane.TypeInfoHolder.DAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.IntegerPlane.TypeInfoHolder.DAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.IntegerPlane.TypeInfoHolder.DAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.IntegerPlane.TypeInfoHolder.DAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.IntegerPlane.TypeInfoHolder.DAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlane.TypeInfoHolder.DAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlane.TypeInfoHolder.DAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlane.TypeInfoHolder.DAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlane.TypeInfoHolder.DAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlane.TypeInfoHolder.DAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlane.TypeInfoHolder.DAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Set(System.Object,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlane.TypeInfoHolder.DAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlane.TypeInfoHolder.DAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlane.TypeInfoHolder.DAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Set(System.Byte@,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlane.TypeInfoHolder.DAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlane.TypeInfoHolder.DAccessor.Set(Keen.VRage.Game.Armor.Data.IntegerPlane@,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlane.TypeInfoHolder.DAccessor.Get(Keen.VRage.Game.Armor.Data.IntegerPlane@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.IntegerPlane.TypeInfoHolder.IsValidAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.IntegerPlane.TypeInfoHolder.IsValidAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.IntegerPlane.TypeInfoHolder.IsValidAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.IntegerPlane.TypeInfoHolder.IsValidAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.IntegerPlane.TypeInfoHolder.IsValidAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.IntegerPlane.TypeInfoHolder.IsValidAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.IntegerPlane.TypeInfoHolder.IsValidAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.IntegerPlane.TypeInfoHolder.IsValidAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.IntegerPlane.TypeInfoHolder.IsValidAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlane.TypeInfoHolder.IsValidAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlane.TypeInfoHolder.IsValidAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlane.TypeInfoHolder.IsValidAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlane.TypeInfoHolder.IsValidAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlane.TypeInfoHolder.IsValidAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlane.TypeInfoHolder.IsValidAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlane.TypeInfoHolder.IsValidAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlane.TypeInfoHolder.IsValidAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlane.TypeInfoHolder.IsValidAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlane.TypeInfoHolder.IsValidAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlane.TypeInfoHolder.IsValidAccessor.Set(Keen.VRage.Game.Armor.Data.IntegerPlane@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlane.TypeInfoHolder.IsValidAccessor.Get(Keen.VRage.Game.Armor.Data.IntegerPlane@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.IntegerPlane.TypeInfoHolder.NearestBase6DirectionAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.IntegerPlane.TypeInfoHolder.NearestBase6DirectionAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.IntegerPlane.TypeInfoHolder.NearestBase6DirectionAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.IntegerPlane.TypeInfoHolder.NearestBase6DirectionAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.IntegerPlane.TypeInfoHolder.NearestBase6DirectionAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.IntegerPlane.TypeInfoHolder.NearestBase6DirectionAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.IntegerPlane.TypeInfoHolder.NearestBase6DirectionAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.IntegerPlane.TypeInfoHolder.NearestBase6DirectionAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.IntegerPlane.TypeInfoHolder.NearestBase6DirectionAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlane.TypeInfoHolder.NearestBase6DirectionAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlane.TypeInfoHolder.NearestBase6DirectionAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlane.TypeInfoHolder.NearestBase6DirectionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlane.TypeInfoHolder.NearestBase6DirectionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlane.TypeInfoHolder.NearestBase6DirectionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlane.TypeInfoHolder.NearestBase6DirectionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Base6Directions#Direction}#Set(System.Object,Keen.VRage.Library.Mathematics.Base6Directions.Direction@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlane.TypeInfoHolder.NearestBase6DirectionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Base6Directions#Direction}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlane.TypeInfoHolder.NearestBase6DirectionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Base6Directions#Direction}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlane.TypeInfoHolder.NearestBase6DirectionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Base6Directions#Direction}#Set(System.Byte@,Keen.VRage.Library.Mathematics.Base6Directions.Direction@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlane.TypeInfoHolder.NearestBase6DirectionAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlane.TypeInfoHolder.NearestBase6DirectionAccessor.Set(Keen.VRage.Game.Armor.Data.IntegerPlane@,Keen.VRage.Library.Mathematics.Base6Directions.Direction@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlane.TypeInfoHolder.NearestBase6DirectionAccessor.Get(Keen.VRage.Game.Armor.Data.IntegerPlane@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Game.Armor.Data.IntegerPlaneArea">
            <summary>
            Represents a 2D section on a discrete 3D plane.
            </summary>
        </member>
        <member name="T:Keen.VRage.Game.Armor.Data.IntegerPlaneArea.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlaneArea.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlaneArea.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Game.Armor.Data.IntegerPlaneArea@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlaneArea.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlaneArea.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Game.Armor.Data.IntegerPlaneArea@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlaneArea.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlaneArea.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Game.Armor.Data.IntegerPlaneArea@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlaneArea.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlaneArea.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlaneArea.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlaneArea.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlaneArea.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Game.Armor.Data.IntegerPlaneArea@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlaneArea.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlaneArea.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Game.Armor.Data.IntegerPlaneArea@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlaneArea.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlaneArea.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlaneArea.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Game.Armor.Data.IntegerPlaneArea@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlaneArea.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.IntegerPlaneArea.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.IntegerPlaneArea.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlaneArea.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.IntegerPlaneArea.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Game#Armor#Data#IntegerPlaneArea}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlaneArea.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Game.Armor.Data.IntegerPlaneArea.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.IntegerPlaneArea.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.IntegerPlaneArea.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.IntegerPlaneArea.TypeInfoHolder.PlaneAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.IntegerPlaneArea.TypeInfoHolder.PlaneAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.IntegerPlaneArea.TypeInfoHolder.PlaneAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.IntegerPlaneArea.TypeInfoHolder.PlaneAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.IntegerPlaneArea.TypeInfoHolder.PlaneAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.IntegerPlaneArea.TypeInfoHolder.PlaneAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.IntegerPlaneArea.TypeInfoHolder.PlaneAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.IntegerPlaneArea.TypeInfoHolder.PlaneAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.IntegerPlaneArea.TypeInfoHolder.PlaneAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlaneArea.TypeInfoHolder.PlaneAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlaneArea.TypeInfoHolder.PlaneAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlaneArea.TypeInfoHolder.PlaneAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlaneArea.TypeInfoHolder.PlaneAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlaneArea.TypeInfoHolder.PlaneAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlaneArea.TypeInfoHolder.PlaneAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Game#Armor#Data#IntegerPlane}#Set(System.Object,Keen.VRage.Game.Armor.Data.IntegerPlane@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlaneArea.TypeInfoHolder.PlaneAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Game#Armor#Data#IntegerPlane}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlaneArea.TypeInfoHolder.PlaneAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Game#Armor#Data#IntegerPlane}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlaneArea.TypeInfoHolder.PlaneAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Game#Armor#Data#IntegerPlane}#Set(System.Byte@,Keen.VRage.Game.Armor.Data.IntegerPlane@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlaneArea.TypeInfoHolder.PlaneAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlaneArea.TypeInfoHolder.PlaneAccessor.Set(Keen.VRage.Game.Armor.Data.IntegerPlaneArea@,Keen.VRage.Game.Armor.Data.IntegerPlane@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlaneArea.TypeInfoHolder.PlaneAccessor.Get(Keen.VRage.Game.Armor.Data.IntegerPlaneArea@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.IntegerPlaneArea.TypeInfoHolder.AreaAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.IntegerPlaneArea.TypeInfoHolder.AreaAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.IntegerPlaneArea.TypeInfoHolder.AreaAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.IntegerPlaneArea.TypeInfoHolder.AreaAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.IntegerPlaneArea.TypeInfoHolder.AreaAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.IntegerPlaneArea.TypeInfoHolder.AreaAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.IntegerPlaneArea.TypeInfoHolder.AreaAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.IntegerPlaneArea.TypeInfoHolder.AreaAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.IntegerPlaneArea.TypeInfoHolder.AreaAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlaneArea.TypeInfoHolder.AreaAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlaneArea.TypeInfoHolder.AreaAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlaneArea.TypeInfoHolder.AreaAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlaneArea.TypeInfoHolder.AreaAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlaneArea.TypeInfoHolder.AreaAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlaneArea.TypeInfoHolder.AreaAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#BoundingBox2I}#Set(System.Object,Keen.VRage.Library.Mathematics.BoundingBox2I@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlaneArea.TypeInfoHolder.AreaAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#BoundingBox2I}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlaneArea.TypeInfoHolder.AreaAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#BoundingBox2I}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlaneArea.TypeInfoHolder.AreaAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#BoundingBox2I}#Set(System.Byte@,Keen.VRage.Library.Mathematics.BoundingBox2I@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlaneArea.TypeInfoHolder.AreaAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlaneArea.TypeInfoHolder.AreaAccessor.Set(Keen.VRage.Game.Armor.Data.IntegerPlaneArea@,Keen.VRage.Library.Mathematics.BoundingBox2I@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.IntegerPlaneArea.TypeInfoHolder.AreaAccessor.Get(Keen.VRage.Game.Armor.Data.IntegerPlaneArea@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Game.Armor.Data.IntegerPlaneAreaMigrations">
            <summary>
            Migration of serialized IntegerPlaneArea versions
            </summary>
        </member>
        <member name="T:Keen.VRage.Game.Armor.Data.NodePlace">
            <summary>
            Defines position of the cell in the grid of smallest block size <see cref="F:Keen.VRage.Game.Armor.Data.ArmorConstants.CELL_SIZE"/>
            </summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.NodePlace.Position">
            <summary>
            Grid position (multiples of <see cref="F:Keen.VRage.Game.Armor.Data.ArmorConstants.CELL_SIZE"/>) of the NodePlace, its the min coordinate of node's aabb.
            </summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.NodePlace.SizeMultiplier">
            <summary>
            Multiples of grid cell <see cref="F:Keen.VRage.Game.Armor.Data.ArmorConstants.CELL_SIZE"/>. 
            </summary>
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.NodePlace.ToString">
            <summary>
            Retrieves a string representation of the current object.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Keen.VRage.Game.Armor.Data.NodePlace.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.NodePlace.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.NodePlace.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Game.Armor.Data.NodePlace@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.NodePlace.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.NodePlace.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Game.Armor.Data.NodePlace@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.NodePlace.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.NodePlace.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Game.Armor.Data.NodePlace@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.NodePlace.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.NodePlace.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.NodePlace.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.NodePlace.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.NodePlace.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Game.Armor.Data.NodePlace@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.NodePlace.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.NodePlace.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Game.Armor.Data.NodePlace@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.NodePlace.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.NodePlace.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.NodePlace.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Game.Armor.Data.NodePlace@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.NodePlace.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.NodePlace.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.NodePlace.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.NodePlace.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.NodePlace.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Game#Armor#Data#NodePlace}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.NodePlace.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Game.Armor.Data.NodePlace.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.NodePlace.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.NodePlace.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.NodePlace.TypeInfoHolder.PositionAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.NodePlace.TypeInfoHolder.PositionAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.NodePlace.TypeInfoHolder.PositionAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.NodePlace.TypeInfoHolder.PositionAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.NodePlace.TypeInfoHolder.PositionAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.NodePlace.TypeInfoHolder.PositionAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.NodePlace.TypeInfoHolder.PositionAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.NodePlace.TypeInfoHolder.PositionAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.NodePlace.TypeInfoHolder.PositionAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.NodePlace.TypeInfoHolder.PositionAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.NodePlace.TypeInfoHolder.PositionAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.NodePlace.TypeInfoHolder.PositionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.NodePlace.TypeInfoHolder.PositionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.NodePlace.TypeInfoHolder.PositionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.NodePlace.TypeInfoHolder.PositionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3I}#Set(System.Object,Keen.VRage.Library.Mathematics.Vector3I@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.NodePlace.TypeInfoHolder.PositionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3I}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.NodePlace.TypeInfoHolder.PositionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3I}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.NodePlace.TypeInfoHolder.PositionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Mathematics#Vector3I}#Set(System.Byte@,Keen.VRage.Library.Mathematics.Vector3I@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.NodePlace.TypeInfoHolder.PositionAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.NodePlace.TypeInfoHolder.PositionAccessor.Set(Keen.VRage.Game.Armor.Data.NodePlace@,Keen.VRage.Library.Mathematics.Vector3I@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.NodePlace.TypeInfoHolder.PositionAccessor.Get(Keen.VRage.Game.Armor.Data.NodePlace@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.NodePlace.TypeInfoHolder.SizeMultiplierAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.NodePlace.TypeInfoHolder.SizeMultiplierAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.NodePlace.TypeInfoHolder.SizeMultiplierAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.NodePlace.TypeInfoHolder.SizeMultiplierAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.NodePlace.TypeInfoHolder.SizeMultiplierAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.NodePlace.TypeInfoHolder.SizeMultiplierAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.NodePlace.TypeInfoHolder.SizeMultiplierAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.NodePlace.TypeInfoHolder.SizeMultiplierAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.NodePlace.TypeInfoHolder.SizeMultiplierAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.NodePlace.TypeInfoHolder.SizeMultiplierAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.NodePlace.TypeInfoHolder.SizeMultiplierAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.NodePlace.TypeInfoHolder.SizeMultiplierAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.NodePlace.TypeInfoHolder.SizeMultiplierAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.NodePlace.TypeInfoHolder.SizeMultiplierAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.NodePlace.TypeInfoHolder.SizeMultiplierAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Set(System.Object,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.NodePlace.TypeInfoHolder.SizeMultiplierAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.NodePlace.TypeInfoHolder.SizeMultiplierAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.NodePlace.TypeInfoHolder.SizeMultiplierAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Set(System.Byte@,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.NodePlace.TypeInfoHolder.SizeMultiplierAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.NodePlace.TypeInfoHolder.SizeMultiplierAccessor.Set(Keen.VRage.Game.Armor.Data.NodePlace@,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.NodePlace.TypeInfoHolder.SizeMultiplierAccessor.Get(Keen.VRage.Game.Armor.Data.NodePlace@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Game.Armor.Data.PlaneQuad">
            <summary>
            Quad representation of the armor side
            </summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.PlaneQuad.CoversWholeExtents">
            <summary>
            If true the quad is whole covered by the armor side mesh.
            </summary>
        </member>
        <member name="T:Keen.VRage.Game.Armor.Data.PlaneQuad.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.PlaneQuad.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.PlaneQuad.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Game.Armor.Data.PlaneQuad@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.PlaneQuad.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.PlaneQuad.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Game.Armor.Data.PlaneQuad@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.PlaneQuad.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.PlaneQuad.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Game.Armor.Data.PlaneQuad@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.PlaneQuad.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.PlaneQuad.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.PlaneQuad.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.PlaneQuad.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.PlaneQuad.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Game.Armor.Data.PlaneQuad@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.PlaneQuad.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.PlaneQuad.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Game.Armor.Data.PlaneQuad@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.PlaneQuad.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.PlaneQuad.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.PlaneQuad.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Game.Armor.Data.PlaneQuad@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.PlaneQuad.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.PlaneQuad.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.PlaneQuad.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.PlaneQuad.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.PlaneQuad.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Game#Armor#Data#PlaneQuad}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.PlaneQuad.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Game.Armor.Data.PlaneQuad.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.PlaneQuad.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.PlaneQuad.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.PlaneQuad.TypeInfoHolder.PlaneAreaAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.PlaneQuad.TypeInfoHolder.PlaneAreaAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.PlaneQuad.TypeInfoHolder.PlaneAreaAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.PlaneQuad.TypeInfoHolder.PlaneAreaAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.PlaneQuad.TypeInfoHolder.PlaneAreaAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.PlaneQuad.TypeInfoHolder.PlaneAreaAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.PlaneQuad.TypeInfoHolder.PlaneAreaAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.PlaneQuad.TypeInfoHolder.PlaneAreaAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.PlaneQuad.TypeInfoHolder.PlaneAreaAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.PlaneQuad.TypeInfoHolder.PlaneAreaAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.PlaneQuad.TypeInfoHolder.PlaneAreaAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.PlaneQuad.TypeInfoHolder.PlaneAreaAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.PlaneQuad.TypeInfoHolder.PlaneAreaAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.PlaneQuad.TypeInfoHolder.PlaneAreaAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.PlaneQuad.TypeInfoHolder.PlaneAreaAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Game#Armor#Data#IntegerPlaneArea}#Set(System.Object,Keen.VRage.Game.Armor.Data.IntegerPlaneArea@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.PlaneQuad.TypeInfoHolder.PlaneAreaAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Game#Armor#Data#IntegerPlaneArea}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.PlaneQuad.TypeInfoHolder.PlaneAreaAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Game#Armor#Data#IntegerPlaneArea}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.PlaneQuad.TypeInfoHolder.PlaneAreaAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Game#Armor#Data#IntegerPlaneArea}#Set(System.Byte@,Keen.VRage.Game.Armor.Data.IntegerPlaneArea@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.PlaneQuad.TypeInfoHolder.PlaneAreaAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.PlaneQuad.TypeInfoHolder.PlaneAreaAccessor.Set(Keen.VRage.Game.Armor.Data.PlaneQuad@,Keen.VRage.Game.Armor.Data.IntegerPlaneArea@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.PlaneQuad.TypeInfoHolder.PlaneAreaAccessor.Get(Keen.VRage.Game.Armor.Data.PlaneQuad@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.PlaneQuad.TypeInfoHolder.CoversWholeExtentsAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.PlaneQuad.TypeInfoHolder.CoversWholeExtentsAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.PlaneQuad.TypeInfoHolder.CoversWholeExtentsAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.PlaneQuad.TypeInfoHolder.CoversWholeExtentsAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.PlaneQuad.TypeInfoHolder.CoversWholeExtentsAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.PlaneQuad.TypeInfoHolder.CoversWholeExtentsAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.PlaneQuad.TypeInfoHolder.CoversWholeExtentsAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.PlaneQuad.TypeInfoHolder.CoversWholeExtentsAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.PlaneQuad.TypeInfoHolder.CoversWholeExtentsAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.PlaneQuad.TypeInfoHolder.CoversWholeExtentsAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.PlaneQuad.TypeInfoHolder.CoversWholeExtentsAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.PlaneQuad.TypeInfoHolder.CoversWholeExtentsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.PlaneQuad.TypeInfoHolder.CoversWholeExtentsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.PlaneQuad.TypeInfoHolder.CoversWholeExtentsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.PlaneQuad.TypeInfoHolder.CoversWholeExtentsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.PlaneQuad.TypeInfoHolder.CoversWholeExtentsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.PlaneQuad.TypeInfoHolder.CoversWholeExtentsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.PlaneQuad.TypeInfoHolder.CoversWholeExtentsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.PlaneQuad.TypeInfoHolder.CoversWholeExtentsAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.PlaneQuad.TypeInfoHolder.CoversWholeExtentsAccessor.Set(Keen.VRage.Game.Armor.Data.PlaneQuad@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.PlaneQuad.TypeInfoHolder.CoversWholeExtentsAccessor.Get(Keen.VRage.Game.Armor.Data.PlaneQuad@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Game.Armor.Data.SectorColliders">
            <summary>
            Handle of the sector collider.
            </summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.SectorColliders._originalBoneRegionBounds">
            <summary>
            Used to determine if the bounds for the sector changed.
            If they did, the sector needs a full reconstruction due to the physics mapping is very sensitive
            to bound changes, it uses these to find sub-collider indices and to interpolate deformed vertices.
            </summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.SectorColliders.BoneCellToCollider">
            <summary>
            Mapping of sector-relative bone cell index to (instanceIndexInCompound, indexInDisposableColliders).
            indexInDisposableColliders is ushort.MaxValue for pre-created (reused, non-disposable) colliders.
            </summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.SectorColliders.BlockIds">
            <summary>
            Holds a collection of blocks that were originally placed as armor blocks.
            Can be shared across multiple colliders.
            </summary>
            TODO SE2-10554: Move to a non-allocating Free-List
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.SectorColliders.ColliderIndexToBlockIds">
            <summary>
            Mapping between a collider index in compound and an index to <see cref="F:Keen.VRage.Game.Armor.Data.SectorColliders.BlockIds"/>, meaning all blocks it was made from
            (1 collider can be made of cuboid cuts from many blocks).
            Note: when 1 or more blocks are represented by multiple cuboid colliders in a bone cell, they share the same index. Not guaranteed for convex colliders.
            </summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.SectorColliders.BlockIdToNonCuboidColliders">
            <summary>
            BlockId to non-cuboid colliders (includes whole shapes and deformed and non-deformed convex cuts)
            </summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.SectorColliders.BoneCellToCuboidCut">
            <summary>
            Bone cell index to cuboid cut value
            </summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.SectorColliders.BlockIdToCuboidCuts">
            <summary>
            BlockId to cuboid cuts infos (bone cell index, cut value)
            </summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.SectorColliders.RuntimeCollidersAdditionalInfo">
            <summary>
            Original collider and rotation for each runtime (disposable) collider.
            </summary>
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.SectorColliders.OriginalBoneRegionBounds">
            <summary>
            Original region bounds that were used when creating the sector. 
            </summary>
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.SectorColliders.Colliders">
            <summary>
            List of top level colliders for a sector.
            </summary>
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.SectorColliders.CanPerformIncrementalChange(Keen.VRage.Library.Mathematics.BoundingBoxI@)">
            <summary>
            If the sector can receive an incremental change for these bone region bounds.
            </summary>
            <param name="boneRegionBounds">The sector bone region bounds to check if incremental changes can be made</param>
            <returns>True if incremental changes can be made to this sector, false otherwise (meaning it needs to be re-constructed)</returns>
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.SectorColliders.GetBlocksForColliderIndex(System.UInt16)">
            <summary>
            Gets a collection of possible block DEntities for the given collider index,
            associated to an armor sector.
            </summary>
            <param name="colliderIndex">The collider index on the container of the armor sector</param>
            <returns>A collection of possible blocks that influenced the creation of the sub-collider</returns>
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.SectorColliders.ContainsDeformationMappings">
            <summary>
            Returns a bool denoting whether the mappings for fast deformation are built.
            If not, IArmorMesherSessionComponent.ComposeSectorColliders should be called to build them.
            </summary>
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.SectorColliders.IsEmpty">
            <summary>
            Returns a bool denoting whether this sector collider data is empty
            </summary>
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.SectorColliders.IsSubdivided(Keen.VRage.DCS.Accessors.DEntity)">
            <summary>
            Tells if the given block has a subdivided collider representation on physics.
            </summary>
            <param name="block">The block to know if it is subdivided</param>
            <returns>True if it is subdivided, false otherwise</returns>
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.SectorColliders.ReplaceCompoundColliderSameInstanceOrder(Keen.VRage.Physics.IPhysics@,Keen.VRage.Library.Memory.Buffer{System.ValueTuple{Keen.VRage.Physics.Colliders.IPhysicsCollider,Keen.VRage.Library.Mathematics.Vector3,Keen.VRage.Library.Mathematics.Quaternion}}@)">
            <summary>
            Disposes the current compound collider and creates a new one, with specified instance colliders, translations and rotations (in colliderPlacements).
            Important note: The order of armor blocks represented by specified instances must not be changed!
            Instances just contain new data for colliders representing the same sequence of blocks!
            </summary>
            <param name="physics">Physics interface to use for compound creation.</param>
            <param name="colliderPlacements">Data for compound instances (representing the same sequence of armor blocks as before).</param>
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.SectorColliders.ReplaceCompoundCollider(Keen.VRage.Physics.IPhysics@,Keen.VRage.Library.Memory.Buffer{System.ValueTuple{Keen.VRage.Physics.Colliders.IPhysicsCollider,Keen.VRage.Library.Mathematics.Vector3,Keen.VRage.Library.Mathematics.Quaternion}}@)">
            <summary>
            Disposes the current compound collider and creates a new one, with specified instance colliders, translations and rotations (in colliderPlacements).
            Note: All mappings and disposable colliders should be adjusted beforehand.
            </summary>
            <param name="physics">Physics interface to use for compound creation.</param>
            <param name="colliderPlacements">Data for compound instances (representing the same sequence of armor blocks as before).</param>
        </member>
        <member name="T:Keen.VRage.Game.Armor.Data.ShapeHash">
            <summary>
            Unique shape identification
            </summary>
        </member>
        <member name="T:Keen.VRage.Game.Armor.Data.ShapeHash.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ShapeHash.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ShapeHash.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Game.Armor.Data.ShapeHash@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ShapeHash.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ShapeHash.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Game.Armor.Data.ShapeHash@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ShapeHash.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ShapeHash.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Game.Armor.Data.ShapeHash@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ShapeHash.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ShapeHash.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ShapeHash.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ShapeHash.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ShapeHash.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Game.Armor.Data.ShapeHash@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ShapeHash.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ShapeHash.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Game.Armor.Data.ShapeHash@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ShapeHash.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ShapeHash.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ShapeHash.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Game.Armor.Data.ShapeHash@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ShapeHash.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ShapeHash.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ShapeHash.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ShapeHash.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ShapeHash.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Game#Armor#Data#ShapeHash}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ShapeHash.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Game.Armor.Data.ShapeHash.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ShapeHash.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.ShapeHash.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ShapeHash.TypeInfoHolder.Value1Accessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ShapeHash.TypeInfoHolder.Value1Accessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ShapeHash.TypeInfoHolder.Value1Accessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ShapeHash.TypeInfoHolder.Value1Accessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ShapeHash.TypeInfoHolder.Value1Accessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ShapeHash.TypeInfoHolder.Value1Accessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ShapeHash.TypeInfoHolder.Value1Accessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ShapeHash.TypeInfoHolder.Value1Accessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ShapeHash.TypeInfoHolder.Value1Accessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ShapeHash.TypeInfoHolder.Value1Accessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ShapeHash.TypeInfoHolder.Value1Accessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ShapeHash.TypeInfoHolder.Value1Accessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ShapeHash.TypeInfoHolder.Value1Accessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ShapeHash.TypeInfoHolder.Value1Accessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ShapeHash.TypeInfoHolder.Value1Accessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#UInt64}#Set(System.Object,System.UInt64@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ShapeHash.TypeInfoHolder.Value1Accessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#UInt64}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ShapeHash.TypeInfoHolder.Value1Accessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#UInt64}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ShapeHash.TypeInfoHolder.Value1Accessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#UInt64}#Set(System.Byte@,System.UInt64@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ShapeHash.TypeInfoHolder.Value1Accessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ShapeHash.TypeInfoHolder.Value1Accessor.Set(Keen.VRage.Game.Armor.Data.ShapeHash@,System.UInt64@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ShapeHash.TypeInfoHolder.Value1Accessor.Get(Keen.VRage.Game.Armor.Data.ShapeHash@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ShapeHash.TypeInfoHolder.Value2Accessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ShapeHash.TypeInfoHolder.Value2Accessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ShapeHash.TypeInfoHolder.Value2Accessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ShapeHash.TypeInfoHolder.Value2Accessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ShapeHash.TypeInfoHolder.Value2Accessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ShapeHash.TypeInfoHolder.Value2Accessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ShapeHash.TypeInfoHolder.Value2Accessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ShapeHash.TypeInfoHolder.Value2Accessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.ShapeHash.TypeInfoHolder.Value2Accessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ShapeHash.TypeInfoHolder.Value2Accessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ShapeHash.TypeInfoHolder.Value2Accessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ShapeHash.TypeInfoHolder.Value2Accessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ShapeHash.TypeInfoHolder.Value2Accessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ShapeHash.TypeInfoHolder.Value2Accessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ShapeHash.TypeInfoHolder.Value2Accessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#UInt64}#Set(System.Object,System.UInt64@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ShapeHash.TypeInfoHolder.Value2Accessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#UInt64}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ShapeHash.TypeInfoHolder.Value2Accessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#UInt64}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ShapeHash.TypeInfoHolder.Value2Accessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#UInt64}#Set(System.Byte@,System.UInt64@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ShapeHash.TypeInfoHolder.Value2Accessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ShapeHash.TypeInfoHolder.Value2Accessor.Set(Keen.VRage.Game.Armor.Data.ShapeHash@,System.UInt64@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.ShapeHash.TypeInfoHolder.Value2Accessor.Get(Keen.VRage.Game.Armor.Data.ShapeHash@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Game.Armor.Data.SideNodeId">
            <summary>
            References particular armor side node
            </summary>
        </member>
        <member name="T:Keen.VRage.Game.Armor.Data.VertexFormatArmor">
            <summary>
            Custom vertex format used by the armor meshes
            </summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.VertexFormatArmor.Position">
            <summary>
            Packed value of the position
            </summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.VertexFormatArmor.Normal">
            <summary>
            Normal vector of the vertex - used for shading
            </summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.VertexFormatArmor.TexCoord">
            <summary>
            Packed value of the texture coordinate
            </summary>
        </member>
        <member name="T:Keen.VRage.Game.Armor.Data.VertexFormatArmor.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.VertexFormatArmor.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.VertexFormatArmor.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Game.Armor.Data.VertexFormatArmor@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.VertexFormatArmor.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.VertexFormatArmor.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Game.Armor.Data.VertexFormatArmor@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.VertexFormatArmor.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.VertexFormatArmor.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Game.Armor.Data.VertexFormatArmor@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.VertexFormatArmor.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.VertexFormatArmor.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.VertexFormatArmor.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.VertexFormatArmor.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.VertexFormatArmor.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Game.Armor.Data.VertexFormatArmor@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.VertexFormatArmor.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.VertexFormatArmor.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Game.Armor.Data.VertexFormatArmor@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.VertexFormatArmor.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.VertexFormatArmor.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.VertexFormatArmor.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Game.Armor.Data.VertexFormatArmor@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.VertexFormatArmor.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.VertexFormatArmor.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.VertexFormatArmor.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.VertexFormatArmor.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.VertexFormatArmor.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Game#Armor#Data#VertexFormatArmor}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.VertexFormatArmor.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Game.Armor.Data.VertexFormatArmor.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.VertexFormatArmor.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Data.VertexFormatArmor.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.VertexFormatArmor.TypeInfoHolder.PositionAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.VertexFormatArmor.TypeInfoHolder.PositionAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.VertexFormatArmor.TypeInfoHolder.PositionAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.VertexFormatArmor.TypeInfoHolder.PositionAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.VertexFormatArmor.TypeInfoHolder.PositionAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.VertexFormatArmor.TypeInfoHolder.PositionAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.VertexFormatArmor.TypeInfoHolder.PositionAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.VertexFormatArmor.TypeInfoHolder.PositionAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.VertexFormatArmor.TypeInfoHolder.PositionAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.VertexFormatArmor.TypeInfoHolder.PositionAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.VertexFormatArmor.TypeInfoHolder.PositionAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.VertexFormatArmor.TypeInfoHolder.PositionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.VertexFormatArmor.TypeInfoHolder.PositionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.VertexFormatArmor.TypeInfoHolder.PositionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.VertexFormatArmor.TypeInfoHolder.PositionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Utils#HalfVector4}#Set(System.Object,Keen.VRage.Library.Utils.HalfVector4@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.VertexFormatArmor.TypeInfoHolder.PositionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Utils#HalfVector4}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.VertexFormatArmor.TypeInfoHolder.PositionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Utils#HalfVector4}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.VertexFormatArmor.TypeInfoHolder.PositionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Utils#HalfVector4}#Set(System.Byte@,Keen.VRage.Library.Utils.HalfVector4@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.VertexFormatArmor.TypeInfoHolder.PositionAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.VertexFormatArmor.TypeInfoHolder.PositionAccessor.Set(Keen.VRage.Game.Armor.Data.VertexFormatArmor@,Keen.VRage.Library.Utils.HalfVector4@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.VertexFormatArmor.TypeInfoHolder.PositionAccessor.Get(Keen.VRage.Game.Armor.Data.VertexFormatArmor@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.VertexFormatArmor.TypeInfoHolder.NormalAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.VertexFormatArmor.TypeInfoHolder.NormalAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.VertexFormatArmor.TypeInfoHolder.NormalAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.VertexFormatArmor.TypeInfoHolder.NormalAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.VertexFormatArmor.TypeInfoHolder.NormalAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.VertexFormatArmor.TypeInfoHolder.NormalAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.VertexFormatArmor.TypeInfoHolder.NormalAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.VertexFormatArmor.TypeInfoHolder.NormalAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.VertexFormatArmor.TypeInfoHolder.NormalAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.VertexFormatArmor.TypeInfoHolder.NormalAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.VertexFormatArmor.TypeInfoHolder.NormalAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.VertexFormatArmor.TypeInfoHolder.NormalAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.VertexFormatArmor.TypeInfoHolder.NormalAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.VertexFormatArmor.TypeInfoHolder.NormalAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.VertexFormatArmor.TypeInfoHolder.NormalAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Utils#Byte4}#Set(System.Object,Keen.VRage.Library.Utils.Byte4@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.VertexFormatArmor.TypeInfoHolder.NormalAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Utils#Byte4}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.VertexFormatArmor.TypeInfoHolder.NormalAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Utils#Byte4}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.VertexFormatArmor.TypeInfoHolder.NormalAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Utils#Byte4}#Set(System.Byte@,Keen.VRage.Library.Utils.Byte4@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.VertexFormatArmor.TypeInfoHolder.NormalAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.VertexFormatArmor.TypeInfoHolder.NormalAccessor.Set(Keen.VRage.Game.Armor.Data.VertexFormatArmor@,Keen.VRage.Library.Utils.Byte4@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.VertexFormatArmor.TypeInfoHolder.NormalAccessor.Get(Keen.VRage.Game.Armor.Data.VertexFormatArmor@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.VertexFormatArmor.TypeInfoHolder.TexCoordAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.VertexFormatArmor.TypeInfoHolder.TexCoordAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.VertexFormatArmor.TypeInfoHolder.TexCoordAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.VertexFormatArmor.TypeInfoHolder.TexCoordAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.VertexFormatArmor.TypeInfoHolder.TexCoordAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.VertexFormatArmor.TypeInfoHolder.TexCoordAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.VertexFormatArmor.TypeInfoHolder.TexCoordAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.VertexFormatArmor.TypeInfoHolder.TexCoordAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Data.VertexFormatArmor.TypeInfoHolder.TexCoordAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.VertexFormatArmor.TypeInfoHolder.TexCoordAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.VertexFormatArmor.TypeInfoHolder.TexCoordAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.VertexFormatArmor.TypeInfoHolder.TexCoordAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.VertexFormatArmor.TypeInfoHolder.TexCoordAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.VertexFormatArmor.TypeInfoHolder.TexCoordAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.VertexFormatArmor.TypeInfoHolder.TexCoordAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Utils#HalfVector2}#Set(System.Object,Keen.VRage.Library.Utils.HalfVector2@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.VertexFormatArmor.TypeInfoHolder.TexCoordAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Utils#HalfVector2}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.VertexFormatArmor.TypeInfoHolder.TexCoordAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Utils#HalfVector2}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.VertexFormatArmor.TypeInfoHolder.TexCoordAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Utils#HalfVector2}#Set(System.Byte@,Keen.VRage.Library.Utils.HalfVector2@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.VertexFormatArmor.TypeInfoHolder.TexCoordAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.VertexFormatArmor.TypeInfoHolder.TexCoordAccessor.Set(Keen.VRage.Game.Armor.Data.VertexFormatArmor@,Keen.VRage.Library.Utils.HalfVector2@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Data.VertexFormatArmor.TypeInfoHolder.TexCoordAccessor.Get(Keen.VRage.Game.Armor.Data.VertexFormatArmor@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinitionObjectBuilder">
            <summary>
            </summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinitionObjectBuilder.DefaultMaterial">
            <summary>
            Default material is used whenever the armor block side doesn't specify special armor side material variant
            <see cref="F:Keen.VRage.Game.Armor.Data.ArmorBlockSide.SideMaterialVariant"/> or it is not found in <see cref="P:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinition.SideMaterials"/>
            </summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinitionObjectBuilder.SideMaterials">
            <summary>
            Side specific material variants  
            </summary>
        </member>
        <member name="T:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinitionObjectBuilder.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinitionObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinitionObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinitionObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinitionObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinitionObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinitionObjectBuilder.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinitionObjectBuilder.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinitionObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinitionObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinitionObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinitionObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinitionObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinitionObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinitionObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinitionObjectBuilder.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinitionObjectBuilder.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinitionObjectBuilder.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinitionObjectBuilder.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Game#Armor#Definitions#ArmorSkinDefinitionObjectBuilder}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinitionObjectBuilder.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinitionObjectBuilder.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinitionObjectBuilder.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinitionObjectBuilder.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinitionObjectBuilder.TypeInfoHolder.DefaultMaterialAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinitionObjectBuilder.TypeInfoHolder.DefaultMaterialAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinitionObjectBuilder.TypeInfoHolder.DefaultMaterialAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinitionObjectBuilder.TypeInfoHolder.DefaultMaterialAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinitionObjectBuilder.TypeInfoHolder.DefaultMaterialAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinitionObjectBuilder.TypeInfoHolder.DefaultMaterialAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinitionObjectBuilder.TypeInfoHolder.DefaultMaterialAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinitionObjectBuilder.TypeInfoHolder.DefaultMaterialAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinitionObjectBuilder.TypeInfoHolder.DefaultMaterialAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinitionObjectBuilder.TypeInfoHolder.DefaultMaterialAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinitionObjectBuilder.TypeInfoHolder.DefaultMaterialAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinitionObjectBuilder.TypeInfoHolder.DefaultMaterialAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinitionObjectBuilder.TypeInfoHolder.DefaultMaterialAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinitionObjectBuilder.TypeInfoHolder.DefaultMaterialAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinitionObjectBuilder.TypeInfoHolder.DefaultMaterialAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Render#Materials#Templates#TilingArmorMaterialDefinition}#Set(System.Object,Keen.VRage.Render.Materials.Templates.TilingArmorMaterialDefinition@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinitionObjectBuilder.TypeInfoHolder.DefaultMaterialAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Render#Materials#Templates#TilingArmorMaterialDefinition}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinitionObjectBuilder.TypeInfoHolder.DefaultMaterialAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Render#Materials#Templates#TilingArmorMaterialDefinition}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinitionObjectBuilder.TypeInfoHolder.DefaultMaterialAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Render#Materials#Templates#TilingArmorMaterialDefinition}#Set(System.Byte@,Keen.VRage.Render.Materials.Templates.TilingArmorMaterialDefinition@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinitionObjectBuilder.TypeInfoHolder.DefaultMaterialAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinitionObjectBuilder.TypeInfoHolder.DefaultMaterialAccessor.Set(Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinitionObjectBuilder@,Keen.VRage.Render.Materials.Templates.TilingArmorMaterialDefinition@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinitionObjectBuilder.TypeInfoHolder.DefaultMaterialAccessor.Get(Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinitionObjectBuilder@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinitionObjectBuilder.TypeInfoHolder.SideMaterialsAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinitionObjectBuilder.TypeInfoHolder.SideMaterialsAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinitionObjectBuilder.TypeInfoHolder.SideMaterialsAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinitionObjectBuilder.TypeInfoHolder.SideMaterialsAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinitionObjectBuilder.TypeInfoHolder.SideMaterialsAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinitionObjectBuilder.TypeInfoHolder.SideMaterialsAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinitionObjectBuilder.TypeInfoHolder.SideMaterialsAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinitionObjectBuilder.TypeInfoHolder.SideMaterialsAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinitionObjectBuilder.TypeInfoHolder.SideMaterialsAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinitionObjectBuilder.TypeInfoHolder.SideMaterialsAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinitionObjectBuilder.TypeInfoHolder.SideMaterialsAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinitionObjectBuilder.TypeInfoHolder.SideMaterialsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinitionObjectBuilder.TypeInfoHolder.SideMaterialsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinitionObjectBuilder.TypeInfoHolder.SideMaterialsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinitionObjectBuilder.TypeInfoHolder.SideMaterialsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#Dictionary{System#String,Keen#VRage#Render#Materials#Templates#TilingArmorMaterialDefinition}}#Set(System.Object,System.Collections.Generic.Dictionary{System.String,Keen.VRage.Render.Materials.Templates.TilingArmorMaterialDefinition}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinitionObjectBuilder.TypeInfoHolder.SideMaterialsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#Dictionary{System#String,Keen#VRage#Render#Materials#Templates#TilingArmorMaterialDefinition}}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinitionObjectBuilder.TypeInfoHolder.SideMaterialsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#Dictionary{System#String,Keen#VRage#Render#Materials#Templates#TilingArmorMaterialDefinition}}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinitionObjectBuilder.TypeInfoHolder.SideMaterialsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#Dictionary{System#String,Keen#VRage#Render#Materials#Templates#TilingArmorMaterialDefinition}}#Set(System.Byte@,System.Collections.Generic.Dictionary{System.String,Keen.VRage.Render.Materials.Templates.TilingArmorMaterialDefinition}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinitionObjectBuilder.TypeInfoHolder.SideMaterialsAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinitionObjectBuilder.TypeInfoHolder.SideMaterialsAccessor.Set(Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinitionObjectBuilder@,System.Collections.Generic.Dictionary{System.String,Keen.VRage.Render.Materials.Templates.TilingArmorMaterialDefinition}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinitionObjectBuilder.TypeInfoHolder.SideMaterialsAccessor.Get(Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinitionObjectBuilder@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinition">
            <summary>
            Defines the set of Tiling armor materials to be used with the armors block sides
            </summary>
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinition.DefaultMaterial">
            <summary>
            Default material is used whenever the armor block side doesn't specify special armor side material variant
            <see cref="F:Keen.VRage.Game.Armor.Data.ArmorBlockSide.SideMaterialVariant"/> or it is not found in <see cref="P:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinition.SideMaterials"/>
            </summary>
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinition.SideMaterials">
            <summary>
            Side specific material variants  
            </summary>
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinition.IsTwoSided">
            <summary>
            True if any of the materials in the skin is two-sided
            </summary>
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinition.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer{Keen#VRage#Game#Armor#Definitions#ArmorSkinDefinition}#NameSerializer">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinition.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#NameSerializer">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinition.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#NameType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinition.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer{Keen#VRage#Game#Armor#Definitions#ArmorSkinDefinition}#ShouldSerializeAsName(Keen.VRage.Library.Serialization.SerializationContext,Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinition@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinition.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#ShouldSerializeAsName(Keen.VRage.Library.Serialization.SerializationContext,System.Object@)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinition.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinition.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Game#Armor#Definitions#ArmorSkinDefinition}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinition.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinition.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinition.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinition.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinition.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinition.TypeInfoHolder.DefaultMaterialAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinition.TypeInfoHolder.DefaultMaterialAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinition.TypeInfoHolder.DefaultMaterialAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinition.TypeInfoHolder.DefaultMaterialAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinition.TypeInfoHolder.DefaultMaterialAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinition.TypeInfoHolder.DefaultMaterialAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinition.TypeInfoHolder.DefaultMaterialAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinition.TypeInfoHolder.DefaultMaterialAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinition.TypeInfoHolder.DefaultMaterialAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinition.TypeInfoHolder.DefaultMaterialAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinition.TypeInfoHolder.DefaultMaterialAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinition.TypeInfoHolder.DefaultMaterialAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinition.TypeInfoHolder.DefaultMaterialAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinition.TypeInfoHolder.DefaultMaterialAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinition.TypeInfoHolder.DefaultMaterialAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Render#Materials#Templates#TilingArmorMaterialDefinition}#Set(System.Object,Keen.VRage.Render.Materials.Templates.TilingArmorMaterialDefinition@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinition.TypeInfoHolder.DefaultMaterialAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Render#Materials#Templates#TilingArmorMaterialDefinition}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinition.TypeInfoHolder.DefaultMaterialAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Render#Materials#Templates#TilingArmorMaterialDefinition}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinition.TypeInfoHolder.DefaultMaterialAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Render#Materials#Templates#TilingArmorMaterialDefinition}#Set(System.Byte@,Keen.VRage.Render.Materials.Templates.TilingArmorMaterialDefinition@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinition.TypeInfoHolder.DefaultMaterialAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinition.TypeInfoHolder.DefaultMaterialAccessor.Set(Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinition@,Keen.VRage.Render.Materials.Templates.TilingArmorMaterialDefinition@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinition.TypeInfoHolder.DefaultMaterialAccessor.Get(Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinition@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinition.TypeInfoHolder.SideMaterialsAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinition.TypeInfoHolder.SideMaterialsAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinition.TypeInfoHolder.SideMaterialsAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinition.TypeInfoHolder.SideMaterialsAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinition.TypeInfoHolder.SideMaterialsAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinition.TypeInfoHolder.SideMaterialsAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinition.TypeInfoHolder.SideMaterialsAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinition.TypeInfoHolder.SideMaterialsAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinition.TypeInfoHolder.SideMaterialsAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinition.TypeInfoHolder.SideMaterialsAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinition.TypeInfoHolder.SideMaterialsAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinition.TypeInfoHolder.SideMaterialsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinition.TypeInfoHolder.SideMaterialsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinition.TypeInfoHolder.SideMaterialsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinition.TypeInfoHolder.SideMaterialsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Collections#Readers#DictionaryReader{System#String,Keen#VRage#Render#Materials#Templates#TilingArmorMaterialDefinition}}#Set(System.Object,Keen.VRage.Library.Collections.Readers.DictionaryReader{System.String,Keen.VRage.Render.Materials.Templates.TilingArmorMaterialDefinition}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinition.TypeInfoHolder.SideMaterialsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Collections#Readers#DictionaryReader{System#String,Keen#VRage#Render#Materials#Templates#TilingArmorMaterialDefinition}}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinition.TypeInfoHolder.SideMaterialsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Collections#Readers#DictionaryReader{System#String,Keen#VRage#Render#Materials#Templates#TilingArmorMaterialDefinition}}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinition.TypeInfoHolder.SideMaterialsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Library#Collections#Readers#DictionaryReader{System#String,Keen#VRage#Render#Materials#Templates#TilingArmorMaterialDefinition}}#Set(System.Byte@,Keen.VRage.Library.Collections.Readers.DictionaryReader{System.String,Keen.VRage.Render.Materials.Templates.TilingArmorMaterialDefinition}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinition.TypeInfoHolder.SideMaterialsAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinition.TypeInfoHolder.SideMaterialsAccessor.Set(Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinition@,Keen.VRage.Library.Collections.Readers.DictionaryReader{System.String,Keen.VRage.Render.Materials.Templates.TilingArmorMaterialDefinition}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinition.TypeInfoHolder.SideMaterialsAccessor.Get(Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinition@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinition.TypeInfoHolder.IsTwoSidedAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinition.TypeInfoHolder.IsTwoSidedAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinition.TypeInfoHolder.IsTwoSidedAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinition.TypeInfoHolder.IsTwoSidedAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinition.TypeInfoHolder.IsTwoSidedAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinition.TypeInfoHolder.IsTwoSidedAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinition.TypeInfoHolder.IsTwoSidedAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinition.TypeInfoHolder.IsTwoSidedAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinition.TypeInfoHolder.IsTwoSidedAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinition.TypeInfoHolder.IsTwoSidedAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinition.TypeInfoHolder.IsTwoSidedAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinition.TypeInfoHolder.IsTwoSidedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinition.TypeInfoHolder.IsTwoSidedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinition.TypeInfoHolder.IsTwoSidedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinition.TypeInfoHolder.IsTwoSidedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinition.TypeInfoHolder.IsTwoSidedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinition.TypeInfoHolder.IsTwoSidedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinition.TypeInfoHolder.IsTwoSidedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinition.TypeInfoHolder.IsTwoSidedAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinition.TypeInfoHolder.IsTwoSidedAccessor.Set(Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinition@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinition.TypeInfoHolder.IsTwoSidedAccessor.Get(Keen.VRage.Game.Armor.Definitions.ArmorSkinDefinition@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder">
            <summary>
            </summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.BoneCellDistance">
            <summary>
            Distance between the two neighboring bones in the bone grid. Distance is expressed in multiples of the grid cells.
            </summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.MaxBoneOffset">
            <summary>
            The maximum displacement per axis for deformed vertices. Displacement is expressed in meters.
            </summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.MaxBlockDeformationRatio">
            <summary>
            Limits how much can block be deformed, depending on block size. 
            Limit of 1 means 1m big armor block can be displaced at most 1m. 
            Limit of 2 means 1m block can be displaced at most 2 meters in each direction, but 0.25m block can be displaced 0.5m.
            </summary>
        </member>
        <member name="T:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Game#Armor#Definitions#BoneDeformationConfigurationObjectBuilder}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.TypeInfoHolder.BoneCellDistanceAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.TypeInfoHolder.BoneCellDistanceAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.TypeInfoHolder.BoneCellDistanceAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.TypeInfoHolder.BoneCellDistanceAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.TypeInfoHolder.BoneCellDistanceAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.TypeInfoHolder.BoneCellDistanceAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.TypeInfoHolder.BoneCellDistanceAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.TypeInfoHolder.BoneCellDistanceAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.TypeInfoHolder.BoneCellDistanceAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.TypeInfoHolder.BoneCellDistanceAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.TypeInfoHolder.BoneCellDistanceAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.TypeInfoHolder.BoneCellDistanceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.TypeInfoHolder.BoneCellDistanceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.TypeInfoHolder.BoneCellDistanceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.TypeInfoHolder.BoneCellDistanceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Set(System.Object,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.TypeInfoHolder.BoneCellDistanceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.TypeInfoHolder.BoneCellDistanceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.TypeInfoHolder.BoneCellDistanceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Set(System.Byte@,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.TypeInfoHolder.BoneCellDistanceAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.TypeInfoHolder.BoneCellDistanceAccessor.Set(Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder@,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.TypeInfoHolder.BoneCellDistanceAccessor.Get(Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.TypeInfoHolder.MaxBoneOffsetAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.TypeInfoHolder.MaxBoneOffsetAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.TypeInfoHolder.MaxBoneOffsetAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.TypeInfoHolder.MaxBoneOffsetAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.TypeInfoHolder.MaxBoneOffsetAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.TypeInfoHolder.MaxBoneOffsetAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.TypeInfoHolder.MaxBoneOffsetAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.TypeInfoHolder.MaxBoneOffsetAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.TypeInfoHolder.MaxBoneOffsetAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.TypeInfoHolder.MaxBoneOffsetAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.TypeInfoHolder.MaxBoneOffsetAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.TypeInfoHolder.MaxBoneOffsetAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.TypeInfoHolder.MaxBoneOffsetAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.TypeInfoHolder.MaxBoneOffsetAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.TypeInfoHolder.MaxBoneOffsetAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Object,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.TypeInfoHolder.MaxBoneOffsetAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.TypeInfoHolder.MaxBoneOffsetAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.TypeInfoHolder.MaxBoneOffsetAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Byte@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.TypeInfoHolder.MaxBoneOffsetAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.TypeInfoHolder.MaxBoneOffsetAccessor.Set(Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.TypeInfoHolder.MaxBoneOffsetAccessor.Get(Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.TypeInfoHolder.MaxBlockDeformationRatioAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.TypeInfoHolder.MaxBlockDeformationRatioAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.TypeInfoHolder.MaxBlockDeformationRatioAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.TypeInfoHolder.MaxBlockDeformationRatioAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.TypeInfoHolder.MaxBlockDeformationRatioAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.TypeInfoHolder.MaxBlockDeformationRatioAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.TypeInfoHolder.MaxBlockDeformationRatioAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.TypeInfoHolder.MaxBlockDeformationRatioAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.TypeInfoHolder.MaxBlockDeformationRatioAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.TypeInfoHolder.MaxBlockDeformationRatioAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.TypeInfoHolder.MaxBlockDeformationRatioAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.TypeInfoHolder.MaxBlockDeformationRatioAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.TypeInfoHolder.MaxBlockDeformationRatioAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.TypeInfoHolder.MaxBlockDeformationRatioAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.TypeInfoHolder.MaxBlockDeformationRatioAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Object,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.TypeInfoHolder.MaxBlockDeformationRatioAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.TypeInfoHolder.MaxBlockDeformationRatioAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.TypeInfoHolder.MaxBlockDeformationRatioAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Byte@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.TypeInfoHolder.MaxBlockDeformationRatioAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.TypeInfoHolder.MaxBlockDeformationRatioAccessor.Set(Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder.TypeInfoHolder.MaxBlockDeformationRatioAccessor.Get(Keen.VRage.Game.Armor.Definitions.BoneDeformationConfigurationObjectBuilder@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfiguration">
            <summary>
            BoneDeformationConfiguration defines the default settings for armor bone deformations
            </summary>
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfiguration.BoneCellDistance">
            <summary>
            Distance between the two neighboring bones in the bone grid. Distance is expressed in multiples of the grid cells.
            </summary>
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfiguration.MaxBoneOffset">
            <summary>
            The maximum displacement per axis for deformed vertices. Displacement is expressed in meters.
            </summary>
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfiguration.MaxBlockDeformationRatio">
            <summary>
            Limits how much can block be deformed, depending on block size. 
            Limit of 1 means 1m big armor block can be displaced at most 1m. 
            Limit of 2 means 1m block can be displaced at most 2 meters in each direction, but 0.25m block can be displaced 0.5m.
            </summary>
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfiguration.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer{Keen#VRage#Game#Armor#Definitions#BoneDeformationConfiguration}#NameSerializer">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfiguration.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#NameSerializer">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfiguration.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#NameType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfiguration.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer{Keen#VRage#Game#Armor#Definitions#BoneDeformationConfiguration}#ShouldSerializeAsName(Keen.VRage.Library.Serialization.SerializationContext,Keen.VRage.Game.Armor.Definitions.BoneDeformationConfiguration@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfiguration.Serializer.Keen#VRage#Library#Serialization#INamedObjectSerializer#ShouldSerializeAsName(Keen.VRage.Library.Serialization.SerializationContext,System.Object@)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfiguration.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfiguration.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Game#Armor#Definitions#BoneDeformationConfiguration}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfiguration.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfiguration.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfiguration.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfiguration.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfiguration.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfiguration.TypeInfoHolder.BoneCellDistanceAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfiguration.TypeInfoHolder.BoneCellDistanceAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfiguration.TypeInfoHolder.BoneCellDistanceAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfiguration.TypeInfoHolder.BoneCellDistanceAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfiguration.TypeInfoHolder.BoneCellDistanceAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfiguration.TypeInfoHolder.BoneCellDistanceAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfiguration.TypeInfoHolder.BoneCellDistanceAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfiguration.TypeInfoHolder.BoneCellDistanceAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfiguration.TypeInfoHolder.BoneCellDistanceAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfiguration.TypeInfoHolder.BoneCellDistanceAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfiguration.TypeInfoHolder.BoneCellDistanceAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfiguration.TypeInfoHolder.BoneCellDistanceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfiguration.TypeInfoHolder.BoneCellDistanceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfiguration.TypeInfoHolder.BoneCellDistanceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfiguration.TypeInfoHolder.BoneCellDistanceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Set(System.Object,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfiguration.TypeInfoHolder.BoneCellDistanceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfiguration.TypeInfoHolder.BoneCellDistanceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfiguration.TypeInfoHolder.BoneCellDistanceAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Set(System.Byte@,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfiguration.TypeInfoHolder.BoneCellDistanceAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfiguration.TypeInfoHolder.BoneCellDistanceAccessor.Set(Keen.VRage.Game.Armor.Definitions.BoneDeformationConfiguration@,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfiguration.TypeInfoHolder.BoneCellDistanceAccessor.Get(Keen.VRage.Game.Armor.Definitions.BoneDeformationConfiguration@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfiguration.TypeInfoHolder.MaxBoneOffsetAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfiguration.TypeInfoHolder.MaxBoneOffsetAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfiguration.TypeInfoHolder.MaxBoneOffsetAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfiguration.TypeInfoHolder.MaxBoneOffsetAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfiguration.TypeInfoHolder.MaxBoneOffsetAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfiguration.TypeInfoHolder.MaxBoneOffsetAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfiguration.TypeInfoHolder.MaxBoneOffsetAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfiguration.TypeInfoHolder.MaxBoneOffsetAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfiguration.TypeInfoHolder.MaxBoneOffsetAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfiguration.TypeInfoHolder.MaxBoneOffsetAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfiguration.TypeInfoHolder.MaxBoneOffsetAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfiguration.TypeInfoHolder.MaxBoneOffsetAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfiguration.TypeInfoHolder.MaxBoneOffsetAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfiguration.TypeInfoHolder.MaxBoneOffsetAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfiguration.TypeInfoHolder.MaxBoneOffsetAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Object,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfiguration.TypeInfoHolder.MaxBoneOffsetAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfiguration.TypeInfoHolder.MaxBoneOffsetAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfiguration.TypeInfoHolder.MaxBoneOffsetAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Byte@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfiguration.TypeInfoHolder.MaxBoneOffsetAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfiguration.TypeInfoHolder.MaxBoneOffsetAccessor.Set(Keen.VRage.Game.Armor.Definitions.BoneDeformationConfiguration@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfiguration.TypeInfoHolder.MaxBoneOffsetAccessor.Get(Keen.VRage.Game.Armor.Definitions.BoneDeformationConfiguration@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfiguration.TypeInfoHolder.MaxBlockDeformationRatioAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfiguration.TypeInfoHolder.MaxBlockDeformationRatioAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfiguration.TypeInfoHolder.MaxBlockDeformationRatioAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfiguration.TypeInfoHolder.MaxBlockDeformationRatioAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfiguration.TypeInfoHolder.MaxBlockDeformationRatioAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfiguration.TypeInfoHolder.MaxBlockDeformationRatioAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfiguration.TypeInfoHolder.MaxBlockDeformationRatioAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfiguration.TypeInfoHolder.MaxBlockDeformationRatioAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfiguration.TypeInfoHolder.MaxBlockDeformationRatioAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfiguration.TypeInfoHolder.MaxBlockDeformationRatioAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfiguration.TypeInfoHolder.MaxBlockDeformationRatioAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfiguration.TypeInfoHolder.MaxBlockDeformationRatioAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfiguration.TypeInfoHolder.MaxBlockDeformationRatioAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfiguration.TypeInfoHolder.MaxBlockDeformationRatioAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfiguration.TypeInfoHolder.MaxBlockDeformationRatioAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Object,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfiguration.TypeInfoHolder.MaxBlockDeformationRatioAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfiguration.TypeInfoHolder.MaxBlockDeformationRatioAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfiguration.TypeInfoHolder.MaxBlockDeformationRatioAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Single}#Set(System.Byte@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfiguration.TypeInfoHolder.MaxBlockDeformationRatioAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfiguration.TypeInfoHolder.MaxBlockDeformationRatioAccessor.Set(Keen.VRage.Game.Armor.Definitions.BoneDeformationConfiguration@,System.Single@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.Armor.Definitions.BoneDeformationConfiguration.TypeInfoHolder.MaxBlockDeformationRatioAccessor.Get(Keen.VRage.Game.Armor.Definitions.BoneDeformationConfiguration@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Game.Armor.Systems.IArmorBlockChangeListener">
            <summary>
            Allows to listen for changes of the armor block. Listener must register itself using <see cref="M:Keen.VRage.Game.Armor.Systems.IArmorBlockProvider.RegisterChangeListener(Keen.VRage.Game.Armor.Systems.IArmorBlockChangeListener)"/>
            </summary>
        </member>
        <member name="M:Keen.VRage.Game.Armor.Systems.IArmorBlockChangeListener.OnArmorBlockModelChanged(Keen.VRage.Library.Utils.ResourceHandle)">
            <summary>
            Callback called when <see cref="T:Keen.VRage.Game.Armor.Data.ArmorBlockModel"/> is changed
            </summary>
        </member>
        <member name="M:Keen.VRage.Game.Armor.Systems.IArmorBlockChangeListener.OnArmorBlockSideChanged(Keen.VRage.Library.Utils.ResourceHandle)">
            <summary>
            Callback called when <see cref="T:Keen.VRage.Game.Armor.Data.ArmorBlockSide"/> is changed
            </summary>
        </member>
        <member name="T:Keen.VRage.Game.Armor.Systems.IArmorBlockProvider">
            <summary>
            ArmorBlockProvider serves to access cached armor block models and armor block sides 
            </summary>
        </member>
        <member name="M:Keen.VRage.Game.Armor.Systems.IArmorBlockProvider.RegisterChangeListener(Keen.VRage.Game.Armor.Systems.IArmorBlockChangeListener)">
            <summary>
            Listener will be notified everytime the armor block model or armor block side is changed
            </summary>
        </member>
        <member name="M:Keen.VRage.Game.Armor.Systems.IArmorBlockProvider.UnregisterChangeListener(Keen.VRage.Game.Armor.Systems.IArmorBlockChangeListener)">
            <summary>
            Specified change listener is not being called again
            </summary>
        </member>
        <member name="M:Keen.VRage.Game.Armor.Systems.IArmorBlockProvider.LoadArmorBlockModelAndDependencies(Keen.VRage.Library.Utils.ResourceHandle,Keen.VRage.Library.Definitions.IDesignTimeResourceLocator)">
            <summary>
            Synchronous preloading of all the armor block model resources
            </summary>
        </member>
        <member name="M:Keen.VRage.Game.Armor.Systems.IArmorBlockProvider.GetArmorBlockModel(Keen.VRage.Library.Utils.ResourceHandle)">
            <summary>
            Returns preloaded ArmorBlockModel. Results in fail if the ArmorBlockModel is not preloaded using <see cref="M:Keen.VRage.Game.Armor.Systems.IArmorBlockProvider.LoadArmorBlockModelAndDependencies(Keen.VRage.Library.Utils.ResourceHandle,Keen.VRage.Library.Definitions.IDesignTimeResourceLocator)"/>
            </summary>
        </member>
        <member name="M:Keen.VRage.Game.Armor.Systems.IArmorBlockProvider.GetArmorBlockSide(Keen.VRage.Library.Utils.ResourceHandle)">
            <summary>
            Returns preloaded ArmorBlockSide. Results in fail if the ArmorBlockSide is not preloaded using <see cref="M:Keen.VRage.Game.Armor.Systems.IArmorBlockProvider.LoadArmorBlockModelAndDependencies(Keen.VRage.Library.Utils.ResourceHandle,Keen.VRage.Library.Definitions.IDesignTimeResourceLocator)"/>
            </summary>
        </member>
        <member name="M:Keen.VRage.Game.Armor.Systems.IArmorBlockProvider.GetArmorBlockSideNode(Keen.VRage.Game.Armor.Data.SideNodeId)">
            <summary>
            Returns node of preloaded ArmorBlockSide. Results in fail if the ArmorBlockSide is not preloaded using <see cref="M:Keen.VRage.Game.Armor.Systems.IArmorBlockProvider.LoadArmorBlockModelAndDependencies(Keen.VRage.Library.Utils.ResourceHandle,Keen.VRage.Library.Definitions.IDesignTimeResourceLocator)"/>
            </summary>
        </member>
        <member name="M:Keen.VRage.Game.Armor.Systems.IArmorBlockProvider.GetPreloadedArmorBlockModels">
            <summary>
            Returns all preloaded armor block models
            </summary>
        </member>
        <member name="M:Keen.VRage.Game.Armor.Systems.IArmorBlockProvider.GetPreloadedArmorBlockSides">
            <summary>
            Returns all preloaded armor block sides
            </summary>
        </member>
        <member name="T:Keen.VRage.Game.Armor.Utils.ArmorCollidersHelper">
            <summary>
            Set of functions for work with ArmorBlockModels' physics representations
            </summary>
        </member>
        <member name="M:Keen.VRage.Game.Armor.Utils.ArmorCollidersHelper.LoadColliders(Keen.VRage.Physics.IPhysicsColliders,Keen.VRage.Library.Filesystem.FileHandle)">
            <summary>
            Loads armor block colliders from given model filehandle
            </summary>
        </member>
        <member name="T:Keen.VRage.Game.Armor.Utils.BitPattern2D">
            <summary>
            Set of functions to simplify representation and merging of the integer rectangles in small square area
            </summary>
        </member>
        <member name="T:Keen.VRage.Game.Armor.Utils.BitPattern3D">
            <summary>
            Set of functions to simplify representation and merging of the integer cuboids in 4x4 cube area
            </summary>
        </member>
        <member name="T:Keen.VRage.Game.Armor.Utils.BoneCellPlaneOptimizer">
            <summary>
            Slim structure wrapping the logic of optimizing planes withing the bone cells
            </summary>
        </member>
        <member name="T:Keen.VRage.Game.Armor.Utils.BoneGridInterpolator">
            <summary>
            BoneGridInterpolator serves to as interpolation sampler of the bone offset values.
            Bones are expected to lie on regular grid defined in integer space. 
            </summary>
        </member>
        <member name="M:Keen.VRage.Game.Armor.Utils.BoneGridInterpolator.#ctor(Keen.VRage.Library.Mathematics.BoundingBoxI,System.Single,System.Single)">
            <summary>
            Constructs new interpolator
            </summary>
            <param name="bonesRegion">Area to be covered by bone grid. Area is defined in cells with grid line registration.
            The area [0,0,0] - [2,2,2] covers area of 2x2x2 cells from lower corner to upper corner</param>
            <param name="boneDistance">Distance of the bones in real world units (meters).</param>
            <param name="maxBoneOffset">Maximal bone offset in real world units (meters).</param>
        </member>
        <member name="M:Keen.VRage.Game.Armor.Utils.BoneGridInterpolator.GetInterpolatedOffset(Keen.VRage.Library.Mathematics.Vector3,System.Span{Keen.VRage.Library.Mathematics.Vector3B})">
            <summary>
            Return interpolated offset in range [-1, 1] 
            </summary>
            <param name="position">Position in real world units relative to the bone position [0,0,0]</param>
            <param name="data">Bone data</param>
            <returns></returns>
        </member>
        <member name="M:Keen.VRage.Game.Armor.Utils.BoneGridInterpolator.InterpolateColliderVertices(System.ReadOnlySpan{Keen.VRage.Library.Mathematics.Vector3},Keen.VRage.Library.Mathematics.Vector3I@,Keen.VRage.Library.Mathematics.Quaternion@,Keen.VRage.Library.Mathematics.Vector3@,System.Span{Keen.VRage.Library.Mathematics.Vector3B},Keen.VRage.Library.Memory.BufferReference{Keen.VRage.Library.Mathematics.Vector4})">
            <summary>
            Calculates the new positions of specified shape vertices (per bone cell deformation) and adds them to the specified buffer of interpolated vertices.
            </summary>
            <param name="originalVertices">Input vertices (in bone cell local space)</param>
            <param name="localBoneCoords">Bone cell position (position of the bone with coordinates closest to zero) in sector-relative space</param>
            <param name="additionalRotation">Rotation to apply to each vertex to get absolute position</param>
            <param name="offset">Translation to apply to each vertex to get absolute position</param>
            <param name="data">Bone deformation values</param>
            <param name="interpolatedVertices">Output vertices (in bone cell local space, no additional transforms needed)</param>
        </member>
        <member name="M:Keen.VRage.Game.Armor.Utils.BoneGridInterpolator.InterpolateColliderVertices(System.Collections.Immutable.ImmutableArray{Keen.VRage.Library.Mathematics.Vector4},Keen.VRage.Library.Mathematics.Vector3I@,Keen.VRage.Library.Mathematics.Vector3@,System.Span{Keen.VRage.Library.Mathematics.Vector3B},Keen.VRage.Library.Memory.BufferReference{Keen.VRage.Library.Mathematics.Vector4})">
            <summary>
            Calculates the new positions of specified shape vertices (per bone cell deformation) and adds them to the specified buffer of interpolated vertices.
            </summary>
            <param name="originalVertices">Input vertices (in bone cell local space)</param>
            <param name="localBoneCoords">Bone cell position (position of the bone with coordinates closest to zero) in sector-relative space</param>
            <param name="offset">Translation to apply to each vertex to get absolute position</param>
            <param name="data">Bone deformation values</param>
            <param name="interpolatedVertices">Output vertices (in bone cell local space, no additional transforms needed)</param>
        </member>
        <member name="M:Keen.VRage.Game.Armor.Utils.BoneGridInterpolator.HasNonZeroOffset(Keen.VRage.Library.Mathematics.Vector3I,System.Span{Keen.VRage.Library.Mathematics.Vector3B})">
            <summary>
            Return true if the bone cell is affected by any offset
            </summary>
        </member>
        <member name="M:Keen.VRage.Game.Armor.Utils.BoneGridInterpolator.HasNonZeroOffsetLocal(Keen.VRage.Library.Mathematics.Vector3I,System.Span{Keen.VRage.Library.Mathematics.Vector3B})">
            <summary>
            Return true if the bone cell expressed in coordinates relative to Bone Region min corner is affected by any bone offset
            </summary>
        </member>
        <member name="T:Keen.VRage.Game.Armor.Utils.IntegerPlaneMeshing">
            <summary>
            Set of functions and structs for creating a mesh from integer planes
            </summary>
        </member>
        <member name="T:Keen.VRage.Game.Armor.Utils.MesherUtils">
            <summary>
            Utility geometric functions shared for Armor meshing and block composition
            </summary>
        </member>
        <member name="M:Keen.VRage.Game.Armor.Utils.MesherUtils.ConvertToUnitRatioSlope(Keen.VRage.Library.Mathematics.Vector3D,System.Double)">
            <summary>
            Tries to convert normal into a integer slope with ratio +-1/x or x/+-1.
            </summary>
        </member>
        <member name="M:Keen.VRage.Game.Armor.Utils.MesherUtils.AreaProjectionAxes(Keen.VRage.Library.Mathematics.Vector3I)">
            <summary>
            Returns Base6Direction representation of the axes of the 2D projection for given normal
            </summary>
        </member>
        <member name="M:Keen.VRage.Game.Armor.Utils.MesherUtils.AreaProjectionAxes(Keen.VRage.Library.Mathematics.Base6Directions.Direction)">
            <summary>
            Returns Base6Direction representation of the axes of the 2D projection for given normal
            </summary>
        </member>
        <member name="M:Keen.VRage.Game.Armor.Utils.MesherUtils.TransformProjectedArea(Keen.VRage.Game.Armor.Data.IntegerPlaneArea@,Keen.VRage.Library.Mathematics.MatrixI@)">
            <summary>
            Rotates and translates the planar projection of the mesh
            </summary>
        </member>
        <member name="M:Keen.VRage.Game.Armor.Utils.MesherUtils.ProjectBBox(Keen.VRage.Library.Mathematics.BoundingBoxI@,Keen.VRage.Library.Mathematics.Base6Directions.Direction@)">
            <summary>
            Returns bounds of the projected bounding box onto 2D plane
            </summary>
        </member>
        <member name="M:Keen.VRage.Game.Armor.Utils.MesherUtils.ProjectBBox(Keen.VRage.Library.Mathematics.BoundingBoxI@,Keen.VRage.Library.Mathematics.IntegerOrientation@)">
            <summary>
            Returns bounds of the projected bounding box onto 2D plane
            </summary>
        </member>
        <member name="M:Keen.VRage.Game.Armor.Utils.MesherUtils.ReconstructBBox(Keen.VRage.Game.Armor.Data.IntegerPlaneArea@)">
            <summary>
            Returns a bounding box of a plane segment
            </summary>
        </member>
        <member name="M:Keen.VRage.Game.Armor.Utils.MesherUtils.CellRegionToWorldRegion(Keen.VRage.Library.Mathematics.BoundingBoxI)">
            <summary>
            Returns a world space bounding box of the cell region. Cell [0,0] has center on world space position [0,0,0]. World space bbox of cell [0,0] is
            [-HalfCellSize : HalfCellSize] 
            </summary>
        </member>
        <member name="M:Keen.VRage.Game.Armor.Utils.MesherUtils.ComputeBoneRegionRange(Keen.VRage.Library.Mathematics.BoundingBoxI,System.Int32)">
            <summary>
            Computes range of the bones needed to cover the cell region
            </summary>
        </member>
        <member name="M:Keen.VRage.Game.Armor.Utils.MesherUtils.ChildrenOffset(System.Int32)">
            <summary>
            Converts child index into unit direction from the center of the parent.
            </summary>
        </member>
        <member name="M:Keen.VRage.Game.Armor.Utils.MesherUtils.PhysicsMeshAlignment(Keen.VRage.Game.Armor.Data.ArmorSectorGeometryData)">
            <summary>
            Returns the translation of the mesh from sector space (origin in sector min corner) to relative world space
            </summary>
        </member>
        <member name="T:Keen.VRage.Game.Armor.Utils.QuadTree`1">
            <summary>
            Quad tree is simple 2D tree structure providing spatial area queries.
            </summary>
        </member>
        <member name="M:Keen.VRage.Game.Armor.Utils.QuadTree`1.#ctor(Keen.VRage.Library.Mathematics.BoundingBox2I,`0)">
            <summary>
            Creates a new instance of QuadTree
            </summary>
            <param name="initialArea">Maximal area covered by a QuadTree</param>
            <param name="defaultValue">Value to written inside the root area space</param>
        </member>
        <member name="M:Keen.VRage.Game.Armor.Utils.QuadTree`1.HasValue(Keen.VRage.Library.Mathematics.BoundingBox2I,`0)">
            <summary>
            Returns true if whole queried area is covered with given value. The query area must fall within QuadTree root bounds.
            </summary>
        </member>
        <member name="M:Keen.VRage.Game.Armor.Utils.QuadTree`1.SetValue(Keen.VRage.Library.Mathematics.BoundingBox2I,`0)">
            <summary>
            Sets whole given area with a value. The area are must fall within QuadTree root bounds.
            </summary>
        </member>
        <member name="M:Keen.VRage.Game.Armor.Utils.QuadTree`1.WithValue(`0)">
            <summary>
            Computes optimized set of rectangles with given value.
            </summary>
        </member>
        <member name="T:Keen.VRage.Game.Armor.Utils.SectorPlaneOptimizer">
            <summary>
            Slim structure wrapping the logic of optimizing planes withing the armor sector. It uses plane Quadtrees to merge small and large plane sections.
            </summary>
        </member>
        <member name="T:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu">
            <summary>
            Debug menu for setting up procedural generator.
            </summary>
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._generatorAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._generatorAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._generatorAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._generatorAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._generatorAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._generatorAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._generatorAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._generatorAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._generatorAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._generatorAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._generatorAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._generatorAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._generatorAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._generatorAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._generatorAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#GameSystems#ProceduralGeneration#ProceduralGeneratorSessionComponent}#Set(System.Object,Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponent@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._generatorAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#GameSystems#ProceduralGeneration#ProceduralGeneratorSessionComponent}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._generatorAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#GameSystems#ProceduralGeneration#ProceduralGeneratorSessionComponent}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._generatorAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#GameSystems#ProceduralGeneration#ProceduralGeneratorSessionComponent}#Set(System.Byte@,Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponent@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._generatorAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._generatorAccessor.Set(Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu@,Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.ProceduralGeneratorSessionComponent@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._generatorAccessor.Get(Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._sessionAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._sessionAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._sessionAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._sessionAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._sessionAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._sessionAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._sessionAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._sessionAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._sessionAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._sessionAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._sessionAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._sessionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._sessionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._sessionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._sessionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#Systems#Session}#Set(System.Object,Keen.VRage.Core.Game.Systems.Session@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._sessionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#Systems#Session}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._sessionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#Systems#Session}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._sessionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#Systems#Session}#Set(System.Byte@,Keen.VRage.Core.Game.Systems.Session@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._sessionAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._sessionAccessor.Set(Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu@,Keen.VRage.Core.Game.Systems.Session@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._sessionAccessor.Get(Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._spawnerAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._spawnerAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._spawnerAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._spawnerAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._spawnerAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._spawnerAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._spawnerAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._spawnerAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._spawnerAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._spawnerAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._spawnerAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._spawnerAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._spawnerAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._spawnerAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._spawnerAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#Systems#IEntitySpawner}#Set(System.Object,Keen.VRage.Core.Game.Systems.IEntitySpawner@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._spawnerAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#Systems#IEntitySpawner}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._spawnerAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#Systems#IEntitySpawner}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._spawnerAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#Systems#IEntitySpawner}#Set(System.Byte@,Keen.VRage.Core.Game.Systems.IEntitySpawner@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._spawnerAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._spawnerAccessor.Set(Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu@,Keen.VRage.Core.Game.Systems.IEntitySpawner@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._spawnerAccessor.Get(Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._spawnPreventionEntitiesAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._spawnPreventionEntitiesAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._spawnPreventionEntitiesAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._spawnPreventionEntitiesAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._spawnPreventionEntitiesAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._spawnPreventionEntitiesAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._spawnPreventionEntitiesAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._spawnPreventionEntitiesAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._spawnPreventionEntitiesAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._spawnPreventionEntitiesAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._spawnPreventionEntitiesAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._spawnPreventionEntitiesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._spawnPreventionEntitiesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._spawnPreventionEntitiesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._spawnPreventionEntitiesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{Keen#VRage#DCS#Components#Entity}}#Set(System.Object,System.Collections.Generic.List{Keen.VRage.DCS.Components.Entity}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._spawnPreventionEntitiesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{Keen#VRage#DCS#Components#Entity}}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._spawnPreventionEntitiesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{Keen#VRage#DCS#Components#Entity}}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._spawnPreventionEntitiesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{Keen#VRage#DCS#Components#Entity}}#Set(System.Byte@,System.Collections.Generic.List{Keen.VRage.DCS.Components.Entity}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._spawnPreventionEntitiesAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._spawnPreventionEntitiesAccessor.Set(Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu@,System.Collections.Generic.List{Keen.VRage.DCS.Components.Entity}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._spawnPreventionEntitiesAccessor.Get(Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder.SeedAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder.SeedAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder.SeedAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder.SeedAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder.SeedAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder.SeedAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder.SeedAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder.SeedAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder.SeedAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder.SeedAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder.SeedAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder.SeedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder.SeedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder.SeedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder.SeedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Set(System.Object,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder.SeedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder.SeedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder.SeedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Set(System.Byte@,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder.SeedAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder.SeedAccessor.Set(Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu@,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder.SeedAccessor.Get(Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._proceduralGenerationEnabledAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._proceduralGenerationEnabledAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._proceduralGenerationEnabledAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._proceduralGenerationEnabledAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._proceduralGenerationEnabledAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._proceduralGenerationEnabledAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._proceduralGenerationEnabledAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._proceduralGenerationEnabledAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._proceduralGenerationEnabledAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._proceduralGenerationEnabledAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._proceduralGenerationEnabledAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._proceduralGenerationEnabledAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._proceduralGenerationEnabledAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._proceduralGenerationEnabledAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._proceduralGenerationEnabledAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._proceduralGenerationEnabledAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._proceduralGenerationEnabledAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._proceduralGenerationEnabledAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._proceduralGenerationEnabledAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._proceduralGenerationEnabledAccessor.Set(Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._proceduralGenerationEnabledAccessor.Get(Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder.ToggleProceduralGenerationAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder.ToggleProceduralGenerationAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder.ToggleProceduralGenerationAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder.ToggleProceduralGenerationAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder.ToggleProceduralGenerationAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder.ToggleProceduralGenerationAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder.ToggleProceduralGenerationAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder.ToggleProceduralGenerationAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder.ToggleProceduralGenerationAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder.ToggleProceduralGenerationAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder.ToggleProceduralGenerationAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder.ToggleProceduralGenerationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder.ToggleProceduralGenerationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder.ToggleProceduralGenerationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder.ToggleProceduralGenerationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder.ToggleProceduralGenerationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder.ToggleProceduralGenerationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder.ToggleProceduralGenerationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder.ToggleProceduralGenerationAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder.ToggleProceduralGenerationAccessor.Set(Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder.ToggleProceduralGenerationAccessor.Get(Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._showSpawnPreventionZonesAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._showSpawnPreventionZonesAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._showSpawnPreventionZonesAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._showSpawnPreventionZonesAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._showSpawnPreventionZonesAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._showSpawnPreventionZonesAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._showSpawnPreventionZonesAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._showSpawnPreventionZonesAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._showSpawnPreventionZonesAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._showSpawnPreventionZonesAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._showSpawnPreventionZonesAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._showSpawnPreventionZonesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._showSpawnPreventionZonesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._showSpawnPreventionZonesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._showSpawnPreventionZonesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._showSpawnPreventionZonesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._showSpawnPreventionZonesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._showSpawnPreventionZonesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._showSpawnPreventionZonesAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._showSpawnPreventionZonesAccessor.Set(Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder._showSpawnPreventionZonesAccessor.Get(Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder.ToggleZonesDebugDrawAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder.ToggleZonesDebugDrawAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder.ToggleZonesDebugDrawAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder.ToggleZonesDebugDrawAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder.ToggleZonesDebugDrawAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder.ToggleZonesDebugDrawAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder.ToggleZonesDebugDrawAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder.ToggleZonesDebugDrawAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder.ToggleZonesDebugDrawAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder.ToggleZonesDebugDrawAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder.ToggleZonesDebugDrawAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder.ToggleZonesDebugDrawAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder.ToggleZonesDebugDrawAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder.ToggleZonesDebugDrawAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder.ToggleZonesDebugDrawAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder.ToggleZonesDebugDrawAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder.ToggleZonesDebugDrawAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder.ToggleZonesDebugDrawAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder.ToggleZonesDebugDrawAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder.ToggleZonesDebugDrawAccessor.Set(Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu.TypeInfoHolder.ToggleZonesDebugDrawAccessor.Get(Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorDebugMenu@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorServerSessionComponentObjectBuilder">
            <summary>
            <inheritdoc cref="T:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorServerSessionComponent"/>
            </summary>
        </member>
        <member name="T:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorServerSessionComponentObjectBuilder.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorServerSessionComponentObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorServerSessionComponentObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorServerSessionComponentObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorServerSessionComponentObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorServerSessionComponentObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorServerSessionComponentObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorServerSessionComponentObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorServerSessionComponentObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorServerSessionComponentObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorServerSessionComponentObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorServerSessionComponentObjectBuilder.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorServerSessionComponentObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorServerSessionComponentObjectBuilder.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorServerSessionComponentObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorServerSessionComponentObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorServerSessionComponentObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorServerSessionComponentObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorServerSessionComponentObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorServerSessionComponentObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorServerSessionComponentObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorServerSessionComponentObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorServerSessionComponentObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorServerSessionComponentObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorServerSessionComponentObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorServerSessionComponentObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorServerSessionComponentObjectBuilder.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorServerSessionComponentObjectBuilder.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorServerSessionComponentObjectBuilder.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorServerSessionComponentObjectBuilder.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Game#ProceduralGeneration#ProceduralGeneratorServerSessionComponentObjectBuilder}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorServerSessionComponentObjectBuilder.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorServerSessionComponentObjectBuilder.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorServerSessionComponentObjectBuilder.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorServerSessionComponentObjectBuilder.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorServerSessionComponentObjectBuilder.TypeInfoHolder.SkipProceduralGenerationAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorServerSessionComponentObjectBuilder.TypeInfoHolder.SkipProceduralGenerationAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorServerSessionComponentObjectBuilder.TypeInfoHolder.SkipProceduralGenerationAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorServerSessionComponentObjectBuilder.TypeInfoHolder.SkipProceduralGenerationAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorServerSessionComponentObjectBuilder.TypeInfoHolder.SkipProceduralGenerationAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorServerSessionComponentObjectBuilder.TypeInfoHolder.SkipProceduralGenerationAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorServerSessionComponentObjectBuilder.TypeInfoHolder.SkipProceduralGenerationAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorServerSessionComponentObjectBuilder.TypeInfoHolder.SkipProceduralGenerationAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorServerSessionComponentObjectBuilder.TypeInfoHolder.SkipProceduralGenerationAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorServerSessionComponentObjectBuilder.TypeInfoHolder.SkipProceduralGenerationAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorServerSessionComponentObjectBuilder.TypeInfoHolder.SkipProceduralGenerationAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorServerSessionComponentObjectBuilder.TypeInfoHolder.SkipProceduralGenerationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorServerSessionComponentObjectBuilder.TypeInfoHolder.SkipProceduralGenerationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorServerSessionComponentObjectBuilder.TypeInfoHolder.SkipProceduralGenerationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorServerSessionComponentObjectBuilder.TypeInfoHolder.SkipProceduralGenerationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#HashSet{Keen#VRage#Core#Game#GameSystems#ProceduralGeneration#SpaceEntityId}}#Set(System.Object,System.Collections.Generic.HashSet{Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceEntityId}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorServerSessionComponentObjectBuilder.TypeInfoHolder.SkipProceduralGenerationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#HashSet{Keen#VRage#Core#Game#GameSystems#ProceduralGeneration#SpaceEntityId}}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorServerSessionComponentObjectBuilder.TypeInfoHolder.SkipProceduralGenerationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#HashSet{Keen#VRage#Core#Game#GameSystems#ProceduralGeneration#SpaceEntityId}}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorServerSessionComponentObjectBuilder.TypeInfoHolder.SkipProceduralGenerationAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#HashSet{Keen#VRage#Core#Game#GameSystems#ProceduralGeneration#SpaceEntityId}}#Set(System.Byte@,System.Collections.Generic.HashSet{Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceEntityId}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorServerSessionComponentObjectBuilder.TypeInfoHolder.SkipProceduralGenerationAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorServerSessionComponentObjectBuilder.TypeInfoHolder.SkipProceduralGenerationAccessor.Set(Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorServerSessionComponentObjectBuilder@,System.Collections.Generic.HashSet{Keen.VRage.Core.Game.GameSystems.ProceduralGeneration.SpaceEntityId}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorServerSessionComponentObjectBuilder.TypeInfoHolder.SkipProceduralGenerationAccessor.Get(Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorServerSessionComponentObjectBuilder@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorServerSessionComponent">
            <summary>
            <inheritdoc/>
            Server only.
            </summary>
        </member>
        <member name="T:Keen.VRage.Game.ProceduralGeneration.ProceduralGeneratorServerSessionComponent.HandleClientsSyncRequestSignal">
            <summary>
            Signal that helps client sync up with the current entity state on server.
            </summary>
        </member>
        <member name="T:Keen.VRage.Game.ReplayTool.EntityRecording">
            <summary>
            Represents a collection of recordings for a single entity.
            </summary>
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.EntityRecording.TryGetFrameRecording(System.Int32)">
            <summary>
            Returns the command buffer for the current frame if it exists.
            </summary>
        </member>
        <member name="T:Keen.VRage.Game.ReplayTool.EntityRecording.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.EntityRecording.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.EntityRecording.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Game.ReplayTool.EntityRecording@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.EntityRecording.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.EntityRecording.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Game.ReplayTool.EntityRecording@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.EntityRecording.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.EntityRecording.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Game.ReplayTool.EntityRecording@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.EntityRecording.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.EntityRecording.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.EntityRecording.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.EntityRecording.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.EntityRecording.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Game.ReplayTool.EntityRecording@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.EntityRecording.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.EntityRecording.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Game.ReplayTool.EntityRecording@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.EntityRecording.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.EntityRecording.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Game.ReplayTool.EntityRecording@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.EntityRecording.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.EntityRecording.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Game.ReplayTool.EntityRecording@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.EntityRecording.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Game.ReplayTool.EntityRecording.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.EntityRecording.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.EntityRecording.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.EntityRecording.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Game#ReplayTool#EntityRecording}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.EntityRecording.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Game.ReplayTool.EntityRecording.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Game.ReplayTool.EntityRecording.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Game.ReplayTool.EntityRecording.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.EntityRecording.TypeInfoHolder._recordedFramesAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.EntityRecording.TypeInfoHolder._recordedFramesAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.EntityRecording.TypeInfoHolder._recordedFramesAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.EntityRecording.TypeInfoHolder._recordedFramesAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.EntityRecording.TypeInfoHolder._recordedFramesAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.EntityRecording.TypeInfoHolder._recordedFramesAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.EntityRecording.TypeInfoHolder._recordedFramesAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.EntityRecording.TypeInfoHolder._recordedFramesAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.EntityRecording.TypeInfoHolder._recordedFramesAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.EntityRecording.TypeInfoHolder._recordedFramesAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.EntityRecording.TypeInfoHolder._recordedFramesAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.EntityRecording.TypeInfoHolder._recordedFramesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.EntityRecording.TypeInfoHolder._recordedFramesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.EntityRecording.TypeInfoHolder._recordedFramesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.EntityRecording.TypeInfoHolder._recordedFramesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{Keen#VRage#Game#ReplayTool#FrameRecording}}#Set(System.Object,System.Collections.Generic.List{Keen.VRage.Game.ReplayTool.FrameRecording}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.EntityRecording.TypeInfoHolder._recordedFramesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{Keen#VRage#Game#ReplayTool#FrameRecording}}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.EntityRecording.TypeInfoHolder._recordedFramesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{Keen#VRage#Game#ReplayTool#FrameRecording}}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.EntityRecording.TypeInfoHolder._recordedFramesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{Keen#VRage#Game#ReplayTool#FrameRecording}}#Set(System.Byte@,System.Collections.Generic.List{Keen.VRage.Game.ReplayTool.FrameRecording}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.EntityRecording.TypeInfoHolder._recordedFramesAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.EntityRecording.TypeInfoHolder._recordedFramesAccessor.Set(Keen.VRage.Game.ReplayTool.EntityRecording@,System.Collections.Generic.List{Keen.VRage.Game.ReplayTool.FrameRecording}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.EntityRecording.TypeInfoHolder._recordedFramesAccessor.Get(Keen.VRage.Game.ReplayTool.EntityRecording@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.EntityRecording.TypeInfoHolder.TotalFramesAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.EntityRecording.TypeInfoHolder.TotalFramesAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.EntityRecording.TypeInfoHolder.TotalFramesAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.EntityRecording.TypeInfoHolder.TotalFramesAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.EntityRecording.TypeInfoHolder.TotalFramesAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.EntityRecording.TypeInfoHolder.TotalFramesAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.EntityRecording.TypeInfoHolder.TotalFramesAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.EntityRecording.TypeInfoHolder.TotalFramesAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.EntityRecording.TypeInfoHolder.TotalFramesAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.EntityRecording.TypeInfoHolder.TotalFramesAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.EntityRecording.TypeInfoHolder.TotalFramesAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.EntityRecording.TypeInfoHolder.TotalFramesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.EntityRecording.TypeInfoHolder.TotalFramesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.EntityRecording.TypeInfoHolder.TotalFramesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.EntityRecording.TypeInfoHolder.TotalFramesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Set(System.Object,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.EntityRecording.TypeInfoHolder.TotalFramesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.EntityRecording.TypeInfoHolder.TotalFramesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.EntityRecording.TypeInfoHolder.TotalFramesAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Int32}#Set(System.Byte@,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.EntityRecording.TypeInfoHolder.TotalFramesAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.EntityRecording.TypeInfoHolder.TotalFramesAccessor.Set(Keen.VRage.Game.ReplayTool.EntityRecording@,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.EntityRecording.TypeInfoHolder.TotalFramesAccessor.Get(Keen.VRage.Game.ReplayTool.EntityRecording@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.EntityRecording.TypeInfoHolder._sessionAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.EntityRecording.TypeInfoHolder._sessionAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.EntityRecording.TypeInfoHolder._sessionAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.EntityRecording.TypeInfoHolder._sessionAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.EntityRecording.TypeInfoHolder._sessionAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.EntityRecording.TypeInfoHolder._sessionAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.EntityRecording.TypeInfoHolder._sessionAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.EntityRecording.TypeInfoHolder._sessionAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.EntityRecording.TypeInfoHolder._sessionAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.EntityRecording.TypeInfoHolder._sessionAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.EntityRecording.TypeInfoHolder._sessionAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.EntityRecording.TypeInfoHolder._sessionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.EntityRecording.TypeInfoHolder._sessionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.EntityRecording.TypeInfoHolder._sessionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.EntityRecording.TypeInfoHolder._sessionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#Systems#Session}#Set(System.Object,Keen.VRage.Core.Game.Systems.Session@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.EntityRecording.TypeInfoHolder._sessionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#Systems#Session}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.EntityRecording.TypeInfoHolder._sessionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#Systems#Session}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.EntityRecording.TypeInfoHolder._sessionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#Systems#Session}#Set(System.Byte@,Keen.VRage.Core.Game.Systems.Session@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.EntityRecording.TypeInfoHolder._sessionAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.EntityRecording.TypeInfoHolder._sessionAccessor.Set(Keen.VRage.Game.ReplayTool.EntityRecording@,Keen.VRage.Core.Game.Systems.Session@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.EntityRecording.TypeInfoHolder._sessionAccessor.Get(Keen.VRage.Game.ReplayTool.EntityRecording@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Game.ReplayTool.FrameRecording">
            <summary>
            Command buffer that holds the recordings for each frame.
            </summary>
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.FrameRecording.ReadReplicationBuffer(Keen.VRage.Multiplayer.Replay.IFrameSerializer,Keen.VRage.Multiplayer.Sessions.ReplicationCommandBuffer,Keen.VRage.Multiplayer.Sessions.ReplicationCommandBuffer.ReplayTable)">
            <summary>
            Reads the provided replication command buffer into this one while applying filtering.
            Only the signals recording is interested in will be copied.
            </summary>
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.FrameRecording.DeserializeIntoReplicationBuffer(Keen.VRage.Multiplayer.Replay.IFrameSerializer,Keen.VRage.Multiplayer.Sessions.ReplicationCommandBuffer)">
            <summary>
            Deserializes the replication data into the current frame command buffer.
            </summary>
        </member>
        <member name="T:Keen.VRage.Game.ReplayTool.FrameRecording.RecordedSignal.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.FrameRecording.RecordedSignal.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.FrameRecording.RecordedSignal.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Game.ReplayTool.FrameRecording.RecordedSignal@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.FrameRecording.RecordedSignal.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.FrameRecording.RecordedSignal.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Game.ReplayTool.FrameRecording.RecordedSignal@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.FrameRecording.RecordedSignal.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.FrameRecording.RecordedSignal.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Game.ReplayTool.FrameRecording.RecordedSignal@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.FrameRecording.RecordedSignal.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.FrameRecording.RecordedSignal.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.FrameRecording.RecordedSignal.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.FrameRecording.RecordedSignal.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.FrameRecording.RecordedSignal.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Game.ReplayTool.FrameRecording.RecordedSignal@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.FrameRecording.RecordedSignal.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.FrameRecording.RecordedSignal.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Game.ReplayTool.FrameRecording.RecordedSignal@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.FrameRecording.RecordedSignal.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.FrameRecording.RecordedSignal.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Game.ReplayTool.FrameRecording.RecordedSignal@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.FrameRecording.RecordedSignal.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.FrameRecording.RecordedSignal.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Game.ReplayTool.FrameRecording.RecordedSignal@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.FrameRecording.RecordedSignal.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Game.ReplayTool.FrameRecording.RecordedSignal.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.FrameRecording.RecordedSignal.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.FrameRecording.RecordedSignal.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.FrameRecording.RecordedSignal.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Game#ReplayTool#FrameRecording#RecordedSignal}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.FrameRecording.RecordedSignal.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Game.ReplayTool.FrameRecording.RecordedSignal.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Game.ReplayTool.FrameRecording.RecordedSignal.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Game.ReplayTool.FrameRecording.RecordedSignal.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.FrameRecording.RecordedSignal.TypeInfoHolder.SignalNameAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.FrameRecording.RecordedSignal.TypeInfoHolder.SignalNameAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.FrameRecording.RecordedSignal.TypeInfoHolder.SignalNameAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.FrameRecording.RecordedSignal.TypeInfoHolder.SignalNameAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.FrameRecording.RecordedSignal.TypeInfoHolder.SignalNameAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.FrameRecording.RecordedSignal.TypeInfoHolder.SignalNameAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.FrameRecording.RecordedSignal.TypeInfoHolder.SignalNameAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.FrameRecording.RecordedSignal.TypeInfoHolder.SignalNameAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.FrameRecording.RecordedSignal.TypeInfoHolder.SignalNameAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.FrameRecording.RecordedSignal.TypeInfoHolder.SignalNameAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.FrameRecording.RecordedSignal.TypeInfoHolder.SignalNameAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.FrameRecording.RecordedSignal.TypeInfoHolder.SignalNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.FrameRecording.RecordedSignal.TypeInfoHolder.SignalNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.FrameRecording.RecordedSignal.TypeInfoHolder.SignalNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.FrameRecording.RecordedSignal.TypeInfoHolder.SignalNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Object,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.FrameRecording.RecordedSignal.TypeInfoHolder.SignalNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.FrameRecording.RecordedSignal.TypeInfoHolder.SignalNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.FrameRecording.RecordedSignal.TypeInfoHolder.SignalNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Byte@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.FrameRecording.RecordedSignal.TypeInfoHolder.SignalNameAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.FrameRecording.RecordedSignal.TypeInfoHolder.SignalNameAccessor.Set(Keen.VRage.Game.ReplayTool.FrameRecording.RecordedSignal@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.FrameRecording.RecordedSignal.TypeInfoHolder.SignalNameAccessor.Get(Keen.VRage.Game.ReplayTool.FrameRecording.RecordedSignal@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.FrameRecording.RecordedSignal.TypeInfoHolder.ArgumentsAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.FrameRecording.RecordedSignal.TypeInfoHolder.ArgumentsAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.FrameRecording.RecordedSignal.TypeInfoHolder.ArgumentsAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.FrameRecording.RecordedSignal.TypeInfoHolder.ArgumentsAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.FrameRecording.RecordedSignal.TypeInfoHolder.ArgumentsAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.FrameRecording.RecordedSignal.TypeInfoHolder.ArgumentsAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.FrameRecording.RecordedSignal.TypeInfoHolder.ArgumentsAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.FrameRecording.RecordedSignal.TypeInfoHolder.ArgumentsAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.FrameRecording.RecordedSignal.TypeInfoHolder.ArgumentsAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.FrameRecording.RecordedSignal.TypeInfoHolder.ArgumentsAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.FrameRecording.RecordedSignal.TypeInfoHolder.ArgumentsAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.FrameRecording.RecordedSignal.TypeInfoHolder.ArgumentsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.FrameRecording.RecordedSignal.TypeInfoHolder.ArgumentsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.FrameRecording.RecordedSignal.TypeInfoHolder.ArgumentsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.FrameRecording.RecordedSignal.TypeInfoHolder.ArgumentsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{System#Object}}#Set(System.Object,System.Collections.Generic.List{System.Object}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.FrameRecording.RecordedSignal.TypeInfoHolder.ArgumentsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{System#Object}}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.FrameRecording.RecordedSignal.TypeInfoHolder.ArgumentsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{System#Object}}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.FrameRecording.RecordedSignal.TypeInfoHolder.ArgumentsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{System#Object}}#Set(System.Byte@,System.Collections.Generic.List{System.Object}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.FrameRecording.RecordedSignal.TypeInfoHolder.ArgumentsAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.FrameRecording.RecordedSignal.TypeInfoHolder.ArgumentsAccessor.Set(Keen.VRage.Game.ReplayTool.FrameRecording.RecordedSignal@,System.Collections.Generic.List{System.Object}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.FrameRecording.RecordedSignal.TypeInfoHolder.ArgumentsAccessor.Get(Keen.VRage.Game.ReplayTool.FrameRecording.RecordedSignal@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Game.ReplayTool.FrameRecording.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.FrameRecording.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.FrameRecording.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Game.ReplayTool.FrameRecording@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.FrameRecording.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.FrameRecording.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Game.ReplayTool.FrameRecording@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.FrameRecording.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.FrameRecording.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Game.ReplayTool.FrameRecording@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.FrameRecording.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.FrameRecording.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.FrameRecording.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.FrameRecording.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.FrameRecording.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Game.ReplayTool.FrameRecording@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.FrameRecording.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.FrameRecording.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Game.ReplayTool.FrameRecording@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.FrameRecording.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.FrameRecording.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Game.ReplayTool.FrameRecording@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.FrameRecording.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.FrameRecording.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Game.ReplayTool.FrameRecording@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.FrameRecording.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Game.ReplayTool.FrameRecording.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.FrameRecording.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.FrameRecording.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.FrameRecording.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Game#ReplayTool#FrameRecording}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.FrameRecording.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Game.ReplayTool.FrameRecording.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Game.ReplayTool.FrameRecording.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Game.ReplayTool.FrameRecording.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.FrameRecording.TypeInfoHolder._recordingsAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.FrameRecording.TypeInfoHolder._recordingsAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.FrameRecording.TypeInfoHolder._recordingsAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.FrameRecording.TypeInfoHolder._recordingsAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.FrameRecording.TypeInfoHolder._recordingsAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.FrameRecording.TypeInfoHolder._recordingsAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.FrameRecording.TypeInfoHolder._recordingsAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.FrameRecording.TypeInfoHolder._recordingsAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.FrameRecording.TypeInfoHolder._recordingsAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.FrameRecording.TypeInfoHolder._recordingsAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.FrameRecording.TypeInfoHolder._recordingsAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.FrameRecording.TypeInfoHolder._recordingsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.FrameRecording.TypeInfoHolder._recordingsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.FrameRecording.TypeInfoHolder._recordingsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.FrameRecording.TypeInfoHolder._recordingsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{System#String}}#Set(System.Object,System.Collections.Generic.List{System.String}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.FrameRecording.TypeInfoHolder._recordingsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{System#String}}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.FrameRecording.TypeInfoHolder._recordingsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{System#String}}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.FrameRecording.TypeInfoHolder._recordingsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#List{System#String}}#Set(System.Byte@,System.Collections.Generic.List{System.String}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.FrameRecording.TypeInfoHolder._recordingsAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.FrameRecording.TypeInfoHolder._recordingsAccessor.Set(Keen.VRage.Game.ReplayTool.FrameRecording@,System.Collections.Generic.List{System.String}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.FrameRecording.TypeInfoHolder._recordingsAccessor.Get(Keen.VRage.Game.ReplayTool.FrameRecording@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.FrameRecording.TypeInfoHolder._sessionAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.FrameRecording.TypeInfoHolder._sessionAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.FrameRecording.TypeInfoHolder._sessionAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.FrameRecording.TypeInfoHolder._sessionAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.FrameRecording.TypeInfoHolder._sessionAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.FrameRecording.TypeInfoHolder._sessionAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.FrameRecording.TypeInfoHolder._sessionAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.FrameRecording.TypeInfoHolder._sessionAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.FrameRecording.TypeInfoHolder._sessionAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.FrameRecording.TypeInfoHolder._sessionAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.FrameRecording.TypeInfoHolder._sessionAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.FrameRecording.TypeInfoHolder._sessionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.FrameRecording.TypeInfoHolder._sessionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.FrameRecording.TypeInfoHolder._sessionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.FrameRecording.TypeInfoHolder._sessionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#Systems#Session}#Set(System.Object,Keen.VRage.Core.Game.Systems.Session@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.FrameRecording.TypeInfoHolder._sessionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#Systems#Session}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.FrameRecording.TypeInfoHolder._sessionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#Systems#Session}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.FrameRecording.TypeInfoHolder._sessionAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Core#Game#Systems#Session}#Set(System.Byte@,Keen.VRage.Core.Game.Systems.Session@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.FrameRecording.TypeInfoHolder._sessionAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.FrameRecording.TypeInfoHolder._sessionAccessor.Set(Keen.VRage.Game.ReplayTool.FrameRecording@,Keen.VRage.Core.Game.Systems.Session@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.FrameRecording.TypeInfoHolder._sessionAccessor.Get(Keen.VRage.Game.ReplayTool.FrameRecording@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Game.ReplayTool.RecorderProviderComponentObjectBuilder">
            <summary>
            Object builder for the recorder provider.
            </summary>
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.RecorderProviderComponentObjectBuilder.#ctor">
            <summary>
            Object builder for the recorder provider.
            </summary>
        </member>
        <member name="T:Keen.VRage.Game.ReplayTool.RecorderProviderComponent">
            <summary>
            Configures the session to add the session components required for the replay tool.
            </summary>
        </member>
        <member name="T:Keen.VRage.Game.ReplayTool.ReplayRecorderStartupState">
            <summary>
            Describes how the replay tool will be added to the session.
            </summary>
        </member>
        <member name="F:Keen.VRage.Game.ReplayTool.ReplayRecorderStartupState.Disabled">
            <summary>
            The replay tool will not function in the session that disables it.
            </summary>
        </member>
        <member name="F:Keen.VRage.Game.ReplayTool.ReplayRecorderStartupState.Enabled">
            <summary>
            The replay tool will be used for recording in the session that enables it.
            </summary>
        </member>
        <member name="F:Keen.VRage.Game.ReplayTool.ReplayRecorderStartupState.Automated">
            <summary>
            The replay tool will automatically play the recording when session is loaded.
            </summary>
        </member>
        <member name="T:Keen.VRage.Game.ReplayTool.RecorderProviderDebugMenu">
            <summary>
            Provides controls to enable replay recording for the next session.
            </summary>
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.RecorderProviderDebugMenu.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Game.ReplayTool.RecorderProviderDebugMenu.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Game.ReplayTool.RecorderProviderDebugMenu.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Game.ReplayTool.RecorderProviderDebugMenu.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.RecorderProviderDebugMenu.TypeInfoHolder.StartupStateAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.RecorderProviderDebugMenu.TypeInfoHolder.StartupStateAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.RecorderProviderDebugMenu.TypeInfoHolder.StartupStateAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.RecorderProviderDebugMenu.TypeInfoHolder.StartupStateAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.RecorderProviderDebugMenu.TypeInfoHolder.StartupStateAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.RecorderProviderDebugMenu.TypeInfoHolder.StartupStateAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.RecorderProviderDebugMenu.TypeInfoHolder.StartupStateAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.RecorderProviderDebugMenu.TypeInfoHolder.StartupStateAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.RecorderProviderDebugMenu.TypeInfoHolder.StartupStateAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.RecorderProviderDebugMenu.TypeInfoHolder.StartupStateAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.RecorderProviderDebugMenu.TypeInfoHolder.StartupStateAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.RecorderProviderDebugMenu.TypeInfoHolder.StartupStateAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.RecorderProviderDebugMenu.TypeInfoHolder.StartupStateAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.RecorderProviderDebugMenu.TypeInfoHolder.StartupStateAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.RecorderProviderDebugMenu.TypeInfoHolder.StartupStateAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Game#ReplayTool#ReplayRecorderStartupState}#Set(System.Object,Keen.VRage.Game.ReplayTool.ReplayRecorderStartupState@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.RecorderProviderDebugMenu.TypeInfoHolder.StartupStateAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Game#ReplayTool#ReplayRecorderStartupState}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.RecorderProviderDebugMenu.TypeInfoHolder.StartupStateAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Game#ReplayTool#ReplayRecorderStartupState}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.RecorderProviderDebugMenu.TypeInfoHolder.StartupStateAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Game#ReplayTool#ReplayRecorderStartupState}#Set(System.Byte@,Keen.VRage.Game.ReplayTool.ReplayRecorderStartupState@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.RecorderProviderDebugMenu.TypeInfoHolder.StartupStateAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.RecorderProviderDebugMenu.TypeInfoHolder.StartupStateAccessor.Set(Keen.VRage.Game.ReplayTool.RecorderProviderDebugMenu@,Keen.VRage.Game.ReplayTool.ReplayRecorderStartupState@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.RecorderProviderDebugMenu.TypeInfoHolder.StartupStateAccessor.Get(Keen.VRage.Game.ReplayTool.RecorderProviderDebugMenu@)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.RecorderProviderDebugMenu.TypeInfoHolder._recorderProviderAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.RecorderProviderDebugMenu.TypeInfoHolder._recorderProviderAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.RecorderProviderDebugMenu.TypeInfoHolder._recorderProviderAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.RecorderProviderDebugMenu.TypeInfoHolder._recorderProviderAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.RecorderProviderDebugMenu.TypeInfoHolder._recorderProviderAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.RecorderProviderDebugMenu.TypeInfoHolder._recorderProviderAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.RecorderProviderDebugMenu.TypeInfoHolder._recorderProviderAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.RecorderProviderDebugMenu.TypeInfoHolder._recorderProviderAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.RecorderProviderDebugMenu.TypeInfoHolder._recorderProviderAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.RecorderProviderDebugMenu.TypeInfoHolder._recorderProviderAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.RecorderProviderDebugMenu.TypeInfoHolder._recorderProviderAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.RecorderProviderDebugMenu.TypeInfoHolder._recorderProviderAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.RecorderProviderDebugMenu.TypeInfoHolder._recorderProviderAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.RecorderProviderDebugMenu.TypeInfoHolder._recorderProviderAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.RecorderProviderDebugMenu.TypeInfoHolder._recorderProviderAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Game#ReplayTool#RecorderProviderComponent}#Set(System.Object,Keen.VRage.Game.ReplayTool.RecorderProviderComponent@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.RecorderProviderDebugMenu.TypeInfoHolder._recorderProviderAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Game#ReplayTool#RecorderProviderComponent}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.RecorderProviderDebugMenu.TypeInfoHolder._recorderProviderAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Game#ReplayTool#RecorderProviderComponent}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.RecorderProviderDebugMenu.TypeInfoHolder._recorderProviderAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{Keen#VRage#Game#ReplayTool#RecorderProviderComponent}#Set(System.Byte@,Keen.VRage.Game.ReplayTool.RecorderProviderComponent@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.RecorderProviderDebugMenu.TypeInfoHolder._recorderProviderAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.RecorderProviderDebugMenu.TypeInfoHolder._recorderProviderAccessor.Set(Keen.VRage.Game.ReplayTool.RecorderProviderDebugMenu@,Keen.VRage.Game.ReplayTool.RecorderProviderComponent@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.RecorderProviderDebugMenu.TypeInfoHolder._recorderProviderAccessor.Get(Keen.VRage.Game.ReplayTool.RecorderProviderDebugMenu@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Game.ReplayTool.RecordingStorage.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.RecordingStorage.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.RecordingStorage.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Game.ReplayTool.RecordingStorage@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.RecordingStorage.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.RecordingStorage.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Game.ReplayTool.RecordingStorage@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.RecordingStorage.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.RecordingStorage.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Game.ReplayTool.RecordingStorage@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.RecordingStorage.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.RecordingStorage.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.RecordingStorage.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.RecordingStorage.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.RecordingStorage.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Game.ReplayTool.RecordingStorage@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.RecordingStorage.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.RecordingStorage.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Game.ReplayTool.RecordingStorage@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.RecordingStorage.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.RecordingStorage.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Game.ReplayTool.RecordingStorage@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.RecordingStorage.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.RecordingStorage.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Game.ReplayTool.RecordingStorage@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.RecordingStorage.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Game.ReplayTool.RecordingStorage.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.RecordingStorage.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.RecordingStorage.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.RecordingStorage.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Game#ReplayTool#RecordingStorage}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.RecordingStorage.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Game.ReplayTool.RecordingStorage.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Game.ReplayTool.RecordingStorage.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Game.ReplayTool.RecordingStorage.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.RecordingStorage.TypeInfoHolder.RecordingsAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.RecordingStorage.TypeInfoHolder.RecordingsAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.RecordingStorage.TypeInfoHolder.RecordingsAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.RecordingStorage.TypeInfoHolder.RecordingsAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.RecordingStorage.TypeInfoHolder.RecordingsAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.RecordingStorage.TypeInfoHolder.RecordingsAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.RecordingStorage.TypeInfoHolder.RecordingsAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.RecordingStorage.TypeInfoHolder.RecordingsAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.RecordingStorage.TypeInfoHolder.RecordingsAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.RecordingStorage.TypeInfoHolder.RecordingsAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.RecordingStorage.TypeInfoHolder.RecordingsAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.RecordingStorage.TypeInfoHolder.RecordingsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.RecordingStorage.TypeInfoHolder.RecordingsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.RecordingStorage.TypeInfoHolder.RecordingsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.RecordingStorage.TypeInfoHolder.RecordingsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#Dictionary{Keen#VRage#Multiplayer#Replay#StoredEntity,Keen#VRage#Game#ReplayTool#EntityRecording}}#Set(System.Object,System.Collections.Generic.Dictionary{Keen.VRage.Multiplayer.Replay.StoredEntity,Keen.VRage.Game.ReplayTool.EntityRecording}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.RecordingStorage.TypeInfoHolder.RecordingsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#Dictionary{Keen#VRage#Multiplayer#Replay#StoredEntity,Keen#VRage#Game#ReplayTool#EntityRecording}}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.RecordingStorage.TypeInfoHolder.RecordingsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#Dictionary{Keen#VRage#Multiplayer#Replay#StoredEntity,Keen#VRage#Game#ReplayTool#EntityRecording}}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.RecordingStorage.TypeInfoHolder.RecordingsAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Collections#Generic#Dictionary{Keen#VRage#Multiplayer#Replay#StoredEntity,Keen#VRage#Game#ReplayTool#EntityRecording}}#Set(System.Byte@,System.Collections.Generic.Dictionary{Keen.VRage.Multiplayer.Replay.StoredEntity,Keen.VRage.Game.ReplayTool.EntityRecording}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.RecordingStorage.TypeInfoHolder.RecordingsAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.RecordingStorage.TypeInfoHolder.RecordingsAccessor.Set(Keen.VRage.Game.ReplayTool.RecordingStorage@,System.Collections.Generic.Dictionary{Keen.VRage.Multiplayer.Replay.StoredEntity,Keen.VRage.Game.ReplayTool.EntityRecording}@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.RecordingStorage.TypeInfoHolder.RecordingsAccessor.Get(Keen.VRage.Game.ReplayTool.RecordingStorage@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Game.ReplayTool.ReplayNetworkStoryNarrator">
            <summary>
            Network story narrator for the replay tool
            </summary>
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.ReplayNetworkStoryNarrator.#ctor(Keen.VRage.Game.ReplayTool.ReplayRecorderSessionComponent)">
            <summary>
            Network story narrator for the replay tool
            </summary>
        </member>
        <member name="T:Keen.VRage.Game.ReplayTool.ReplayRecorderSessionComponentObjectBuilder">
            <summary>
            Object builder for the replay recorder.
            </summary>
        </member>
        <member name="T:Keen.VRage.Game.ReplayTool.ReplayRecorderSessionComponentObjectBuilder.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.ReplayRecorderSessionComponentObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.ReplayRecorderSessionComponentObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Game.ReplayTool.ReplayRecorderSessionComponentObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.ReplayRecorderSessionComponentObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.ReplayRecorderSessionComponentObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Game.ReplayTool.ReplayRecorderSessionComponentObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.ReplayRecorderSessionComponentObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.ReplayRecorderSessionComponentObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Game.ReplayTool.ReplayRecorderSessionComponentObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.ReplayRecorderSessionComponentObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.ReplayRecorderSessionComponentObjectBuilder.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.ReplayRecorderSessionComponentObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.ReplayRecorderSessionComponentObjectBuilder.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.ReplayRecorderSessionComponentObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Game.ReplayTool.ReplayRecorderSessionComponentObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.ReplayRecorderSessionComponentObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.ReplayRecorderSessionComponentObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Game.ReplayTool.ReplayRecorderSessionComponentObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.ReplayRecorderSessionComponentObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.ReplayRecorderSessionComponentObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Game.ReplayTool.ReplayRecorderSessionComponentObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.ReplayRecorderSessionComponentObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.ReplayRecorderSessionComponentObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Game.ReplayTool.ReplayRecorderSessionComponentObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.ReplayRecorderSessionComponentObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Game.ReplayTool.ReplayRecorderSessionComponentObjectBuilder.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.ReplayRecorderSessionComponentObjectBuilder.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.ReplayRecorderSessionComponentObjectBuilder.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.ReplayRecorderSessionComponentObjectBuilder.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Game#ReplayTool#ReplayRecorderSessionComponentObjectBuilder}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.ReplayRecorderSessionComponentObjectBuilder.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Game.ReplayTool.ReplayRecorderSessionComponentObjectBuilder.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Game.ReplayTool.ReplayRecorderSessionComponentObjectBuilder.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Game.ReplayTool.ReplayRecorderSessionComponentObjectBuilder.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.ReplayRecorderSessionComponentObjectBuilder.TypeInfoHolder.AutomatedAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.ReplayRecorderSessionComponentObjectBuilder.TypeInfoHolder.AutomatedAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.ReplayRecorderSessionComponentObjectBuilder.TypeInfoHolder.AutomatedAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.ReplayRecorderSessionComponentObjectBuilder.TypeInfoHolder.AutomatedAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.ReplayRecorderSessionComponentObjectBuilder.TypeInfoHolder.AutomatedAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.ReplayRecorderSessionComponentObjectBuilder.TypeInfoHolder.AutomatedAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.ReplayRecorderSessionComponentObjectBuilder.TypeInfoHolder.AutomatedAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.ReplayRecorderSessionComponentObjectBuilder.TypeInfoHolder.AutomatedAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.ReplayRecorderSessionComponentObjectBuilder.TypeInfoHolder.AutomatedAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.ReplayRecorderSessionComponentObjectBuilder.TypeInfoHolder.AutomatedAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.ReplayRecorderSessionComponentObjectBuilder.TypeInfoHolder.AutomatedAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.ReplayRecorderSessionComponentObjectBuilder.TypeInfoHolder.AutomatedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.ReplayRecorderSessionComponentObjectBuilder.TypeInfoHolder.AutomatedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.ReplayRecorderSessionComponentObjectBuilder.TypeInfoHolder.AutomatedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.ReplayRecorderSessionComponentObjectBuilder.TypeInfoHolder.AutomatedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.ReplayRecorderSessionComponentObjectBuilder.TypeInfoHolder.AutomatedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.ReplayRecorderSessionComponentObjectBuilder.TypeInfoHolder.AutomatedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.ReplayRecorderSessionComponentObjectBuilder.TypeInfoHolder.AutomatedAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#Boolean}#Set(System.Byte@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.ReplayRecorderSessionComponentObjectBuilder.TypeInfoHolder.AutomatedAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.ReplayRecorderSessionComponentObjectBuilder.TypeInfoHolder.AutomatedAccessor.Set(Keen.VRage.Game.ReplayTool.ReplayRecorderSessionComponentObjectBuilder@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.ReplayRecorderSessionComponentObjectBuilder.TypeInfoHolder.AutomatedAccessor.Get(Keen.VRage.Game.ReplayTool.ReplayRecorderSessionComponentObjectBuilder@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Game.ReplayTool.ReplayRecorderSessionComponent">
            <summary>
            Session component responsible for recording and replaying controlled entity movement.
            </summary>
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.ReplayRecorderSessionComponent.EndRecording(Keen.VRage.Library.Filesystem.IFileSystem)">
            <summary>
            Ends the recording and returns the recording document.
            </summary>
        </member>
        <member name="T:Keen.VRage.Game.ReplayTool.ReplayRecordingSerializerSessionComponentObjectBuilder">
            <summary>
            Object builder for the recorder serializer.
            </summary>
        </member>
        <member name="F:Keen.VRage.Game.ReplayTool.ReplayRecordingSerializerSessionComponentObjectBuilder.RecordingName">
            <summary>
            Name of the used recording.
            </summary>
        </member>
        <member name="T:Keen.VRage.Game.ReplayTool.ReplayRecordingSerializerSessionComponentObjectBuilder.Serializer">
            <inheritdoc />
            <inheritdoc />
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.ReplayRecordingSerializerSessionComponentObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.ReplayRecordingSerializerSessionComponentObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Game.ReplayTool.ReplayRecordingSerializerSessionComponentObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.ReplayRecordingSerializerSessionComponentObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.ReplayRecordingSerializerSessionComponentObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Game.ReplayTool.ReplayRecordingSerializerSessionComponentObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.ReplayRecordingSerializerSessionComponentObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.ReplayRecordingSerializerSessionComponentObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,Keen.VRage.Game.ReplayTool.ReplayRecordingSerializerSessionComponentObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.ReplayRecordingSerializerSessionComponentObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Json.JsonSerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.ReplayRecordingSerializerSessionComponentObjectBuilder.Serializer.DeserializeMembers(Keen.VRage.Library.Serialization.Json.JsonDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.ReplayRecordingSerializerSessionComponentObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.ReplayRecordingSerializerSessionComponentObjectBuilder.Serializer.DeserializeIntoSlow(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.ReplayRecordingSerializerSessionComponentObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Game.ReplayTool.ReplayRecordingSerializerSessionComponentObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.ReplayRecordingSerializerSessionComponentObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Binary.BinaryDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.ReplayRecordingSerializerSessionComponentObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Game.ReplayTool.ReplayRecordingSerializerSessionComponentObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.ReplayRecordingSerializerSessionComponentObjectBuilder.Serializer.Serialize(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,System.Object,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.ReplayRecordingSerializerSessionComponentObjectBuilder.Serializer.SerializeMembers(Keen.VRage.Library.Serialization.Binary.BinarySerializationContext@,Keen.VRage.Game.ReplayTool.ReplayRecordingSerializerSessionComponentObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.ReplayRecordingSerializerSessionComponentObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,System.Object@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.ReplayRecordingSerializerSessionComponentObjectBuilder.Serializer.DeserializeInto(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Game.ReplayTool.ReplayRecordingSerializerSessionComponentObjectBuilder@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.ReplayRecordingSerializerSessionComponentObjectBuilder.Serializer.Deserialize(Keen.VRage.Library.Serialization.Generic.GenericObjectDeserializationContext@,Keen.VRage.Library.Serialization.SerializerFlags)">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Game.ReplayTool.ReplayRecordingSerializerSessionComponentObjectBuilder.Serializer.Instance">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.ReplayRecordingSerializerSessionComponentObjectBuilder.Serializer.Bundles">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.ReplayRecordingSerializerSessionComponentObjectBuilder.GetStreamSerializer(Keen.VRage.Library.Serialization.SerializerFormat)">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.ReplayRecordingSerializerSessionComponentObjectBuilder.Keen#VRage#Library#Serialization#ISerializable{Keen#VRage#Game#ReplayTool#ReplayRecordingSerializerSessionComponentObjectBuilder}#Serializer">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.ReplayRecordingSerializerSessionComponentObjectBuilder.GetTypeInfo">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Game.ReplayTool.ReplayRecordingSerializerSessionComponentObjectBuilder.TypeInfoHolder">
            <inheritdoc />
        </member>
        <member name="F:Keen.VRage.Game.ReplayTool.ReplayRecordingSerializerSessionComponentObjectBuilder.TypeInfoHolder.Value">
            <summary>Singleton instance</summary>
        </member>
        <member name="F:Keen.VRage.Game.ReplayTool.ReplayRecordingSerializerSessionComponentObjectBuilder.TypeInfoHolder.RawAccessors">
            <summary>Accessors for this instance and parent types.</summary>
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.ReplayRecordingSerializerSessionComponentObjectBuilder.TypeInfoHolder.RecordingNameAccessor.Name">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.ReplayRecordingSerializerSessionComponentObjectBuilder.TypeInfoHolder.RecordingNameAccessor.SerializedName">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.ReplayRecordingSerializerSessionComponentObjectBuilder.TypeInfoHolder.RecordingNameAccessor.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.ReplayRecordingSerializerSessionComponentObjectBuilder.TypeInfoHolder.RecordingNameAccessor.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.ReplayRecordingSerializerSessionComponentObjectBuilder.TypeInfoHolder.RecordingNameAccessor.CanAccessByRef">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.ReplayRecordingSerializerSessionComponentObjectBuilder.TypeInfoHolder.RecordingNameAccessor.AccessibleTypeInfo">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.ReplayRecordingSerializerSessionComponentObjectBuilder.TypeInfoHolder.RecordingNameAccessor.Serializers">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.ReplayRecordingSerializerSessionComponentObjectBuilder.TypeInfoHolder.RecordingNameAccessor.Member">
            <inheritdoc />
        </member>
        <member name="P:Keen.VRage.Game.ReplayTool.ReplayRecordingSerializerSessionComponentObjectBuilder.TypeInfoHolder.RecordingNameAccessor.MemberType">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.ReplayRecordingSerializerSessionComponentObjectBuilder.TypeInfoHolder.RecordingNameAccessor.Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.ReplayRecordingSerializerSessionComponentObjectBuilder.TypeInfoHolder.RecordingNameAccessor.Set(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.ReplayRecordingSerializerSessionComponentObjectBuilder.TypeInfoHolder.RecordingNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.ReplayRecordingSerializerSessionComponentObjectBuilder.TypeInfoHolder.RecordingNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#Set(System.Byte@,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.ReplayRecordingSerializerSessionComponentObjectBuilder.TypeInfoHolder.RecordingNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor#GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.ReplayRecordingSerializerSessionComponentObjectBuilder.TypeInfoHolder.RecordingNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Object,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.ReplayRecordingSerializerSessionComponentObjectBuilder.TypeInfoHolder.RecordingNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.ReplayRecordingSerializerSessionComponentObjectBuilder.TypeInfoHolder.RecordingNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Get(System.Byte@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.ReplayRecordingSerializerSessionComponentObjectBuilder.TypeInfoHolder.RecordingNameAccessor.Keen#VRage#Library#Serialization#IMemberAccessor{System#String}#Set(System.Byte@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.ReplayRecordingSerializerSessionComponentObjectBuilder.TypeInfoHolder.RecordingNameAccessor.GetReference(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.ReplayRecordingSerializerSessionComponentObjectBuilder.TypeInfoHolder.RecordingNameAccessor.Set(Keen.VRage.Game.ReplayTool.ReplayRecordingSerializerSessionComponentObjectBuilder@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Keen.VRage.Game.ReplayTool.ReplayRecordingSerializerSessionComponentObjectBuilder.TypeInfoHolder.RecordingNameAccessor.Get(Keen.VRage.Game.ReplayTool.ReplayRecordingSerializerSessionComponentObjectBuilder@)">
            <inheritdoc />
        </member>
        <member name="T:Keen.VRage.Game.ReplayTool.ReplayRecordingSerializerSessionComponent">
            <summary>
            Server side session component that holds the data about the recording storage.
            </summary>
        </member>
        <member name="T:Keen.VRage.Game.ReplayTool.ReplayToolUpdates">
            <summary>
            Jobs for the replay tool system.
            </summary>
        </member>
        <member name="T:Keen.VRage.Game.ReplayTool.ReplayToolUpdates.OnRecord">
            <summary>
            Job for recording the replay data.
            </summary>
        </member>
        <member name="T:Keen.VRage.Game.ReplayTool.ReplayToolUpdates.OnReplay">
            <summary>
            Job for replaying the data.
            </summary>
        </member>
        <member name="T:Keen.VRage.Game.Systems.ContactCollectorComponent">
            <summary>
            A component that used to bulk synchronize the requested data between client and server.
            </summary>
        </member>
        <member name="T:Keen.VRage.Game.Systems.ContactCollectorComponent.ContactReplication">
            <summary>
            Job Group that runs after contacts have been processed,
            but before entities can be destroyed (because of spatial trigger system).
            </summary>
        </member>
        <member name="T:Keen.VRage.Game.Systems.ContactCollectorComponent.RawContactImpulseData">
            <summary>
            Raw impulse data used by effects.
            </summary>
        </member>
        <member name="T:Keen.VRage.Game.Systems.EffectsUpdates">
            <summary>
            Job system for processing audio / visual effects.
            </summary>
        </member>
        <member name="T:Keen.VRage.Game.Systems.EffectsUpdates.SubmitToProcessors">
            <summary>
            Job group that submits data to middlewares and other systems.
            </summary>
        </member>
        <member name="T:Keen.VRage.Game.Systems.EffectSubmissions">
            <summary>
            Job system for collection and submission of effect data.
            </summary>
        </member>
        <member name="T:Keen.VRage.Game.Systems.EffectSubmissions.DataCollected">
            <summary>
            Job group that runs after all data is collected.
            </summary>
        </member>
        <member name="T:Keen.VRage.Game.Utilities.CoreValidators">
            <summary>
            Validators for Client Server communications.
            </summary>
        </member>
        <member name="T:System.Runtime.CompilerServices.AsyncVoidMethodBuilder">
            <summary>
            Method builder for AsyncVoid methods.
            </summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.AsyncVoidMethodBuilder.Create">
            <summary>
            Create the method builder.
            </summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.AsyncVoidMethodBuilder.Start``1(``0@)">
            <summary>
            Start the state machine.
            </summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.AsyncVoidMethodBuilder.SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine)">
            <summary>
            Set the boxed state machine, unused.
            </summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.AsyncVoidMethodBuilder.SetException(System.Exception)">
            <summary>
            Notify about an exception while executing the state machine.
            </summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.AsyncVoidMethodBuilder.SetResult">
            <summary>
            Signal that the state machine has completed.
            </summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.AsyncVoidMethodBuilder.AwaitOnCompleted``2(``0@,``1@)">
            <summary>
            Await on another task.
            </summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.AsyncVoidMethodBuilder.AwaitUnsafeOnCompleted``2(``0@,``1@)">
            <summary>
            Await on another task.
            </summary>
        </member>
    </members>
</doc>
